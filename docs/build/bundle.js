
(function(l, r) { if (l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (window.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(window.document);
var app = (function () {
    'use strict';

    function noop() { }
    function assign(tar, src) {
        // @ts-ignore
        for (const k in src)
            tar[k] = src[k];
        return tar;
    }
    function add_location(element, file, line, column, char) {
        element.__svelte_meta = {
            loc: { file, line, column, char }
        };
    }
    function run(fn) {
        return fn();
    }
    function blank_object() {
        return Object.create(null);
    }
    function run_all(fns) {
        fns.forEach(run);
    }
    function is_function(thing) {
        return typeof thing === 'function';
    }
    function safe_not_equal(a, b) {
        return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');
    }
    function is_empty(obj) {
        return Object.keys(obj).length === 0;
    }
    function create_slot(definition, ctx, $$scope, fn) {
        if (definition) {
            const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);
            return definition[0](slot_ctx);
        }
    }
    function get_slot_context(definition, ctx, $$scope, fn) {
        return definition[1] && fn
            ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))
            : $$scope.ctx;
    }
    function get_slot_changes(definition, $$scope, dirty, fn) {
        if (definition[2] && fn) {
            const lets = definition[2](fn(dirty));
            if ($$scope.dirty === undefined) {
                return lets;
            }
            if (typeof lets === 'object') {
                const merged = [];
                const len = Math.max($$scope.dirty.length, lets.length);
                for (let i = 0; i < len; i += 1) {
                    merged[i] = $$scope.dirty[i] | lets[i];
                }
                return merged;
            }
            return $$scope.dirty | lets;
        }
        return $$scope.dirty;
    }
    function update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {
        const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);
        if (slot_changes) {
            const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);
            slot.p(slot_context, slot_changes);
        }
    }
    function exclude_internal_props(props) {
        const result = {};
        for (const k in props)
            if (k[0] !== '$')
                result[k] = props[k];
        return result;
    }
    function action_destroyer(action_result) {
        return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;
    }

    function append(target, node) {
        target.appendChild(node);
    }
    function insert(target, node, anchor) {
        target.insertBefore(node, anchor || null);
    }
    function detach(node) {
        node.parentNode.removeChild(node);
    }
    function destroy_each(iterations, detaching) {
        for (let i = 0; i < iterations.length; i += 1) {
            if (iterations[i])
                iterations[i].d(detaching);
        }
    }
    function element(name) {
        return document.createElement(name);
    }
    function text(data) {
        return document.createTextNode(data);
    }
    function space() {
        return text(' ');
    }
    function empty() {
        return text('');
    }
    function listen(node, event, handler, options) {
        node.addEventListener(event, handler, options);
        return () => node.removeEventListener(event, handler, options);
    }
    function attr(node, attribute, value) {
        if (value == null)
            node.removeAttribute(attribute);
        else if (node.getAttribute(attribute) !== value)
            node.setAttribute(attribute, value);
    }
    function set_attributes(node, attributes) {
        // @ts-ignore
        const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);
        for (const key in attributes) {
            if (attributes[key] == null) {
                node.removeAttribute(key);
            }
            else if (key === 'style') {
                node.style.cssText = attributes[key];
            }
            else if (key === '__value') {
                node.value = node[key] = attributes[key];
            }
            else if (descriptors[key] && descriptors[key].set) {
                node[key] = attributes[key];
            }
            else {
                attr(node, key, attributes[key]);
            }
        }
    }
    function children(element) {
        return Array.from(element.childNodes);
    }
    function set_input_value(input, value) {
        input.value = value == null ? '' : value;
    }
    function custom_event(type, detail) {
        const e = document.createEvent('CustomEvent');
        e.initCustomEvent(type, false, false, detail);
        return e;
    }

    let current_component;
    function set_current_component(component) {
        current_component = component;
    }
    function get_current_component() {
        if (!current_component)
            throw new Error('Function called outside component initialization');
        return current_component;
    }
    function onMount(fn) {
        get_current_component().$$.on_mount.push(fn);
    }
    function afterUpdate(fn) {
        get_current_component().$$.after_update.push(fn);
    }
    function onDestroy(fn) {
        get_current_component().$$.on_destroy.push(fn);
    }
    function createEventDispatcher() {
        const component = get_current_component();
        return (type, detail) => {
            const callbacks = component.$$.callbacks[type];
            if (callbacks) {
                // TODO are there situations where events could be dispatched
                // in a server (non-DOM) environment?
                const event = custom_event(type, detail);
                callbacks.slice().forEach(fn => {
                    fn.call(component, event);
                });
            }
        };
    }
    function setContext(key, context) {
        get_current_component().$$.context.set(key, context);
    }
    function getContext(key) {
        return get_current_component().$$.context.get(key);
    }
    // TODO figure out if we still want to support
    // shorthand events, or if we want to implement
    // a real bubbling mechanism
    function bubble(component, event) {
        const callbacks = component.$$.callbacks[event.type];
        if (callbacks) {
            callbacks.slice().forEach(fn => fn(event));
        }
    }

    const dirty_components = [];
    const binding_callbacks = [];
    const render_callbacks = [];
    const flush_callbacks = [];
    const resolved_promise = Promise.resolve();
    let update_scheduled = false;
    function schedule_update() {
        if (!update_scheduled) {
            update_scheduled = true;
            resolved_promise.then(flush);
        }
    }
    function add_render_callback(fn) {
        render_callbacks.push(fn);
    }
    function add_flush_callback(fn) {
        flush_callbacks.push(fn);
    }
    let flushing = false;
    const seen_callbacks = new Set();
    function flush() {
        if (flushing)
            return;
        flushing = true;
        do {
            // first, call beforeUpdate functions
            // and update components
            for (let i = 0; i < dirty_components.length; i += 1) {
                const component = dirty_components[i];
                set_current_component(component);
                update(component.$$);
            }
            set_current_component(null);
            dirty_components.length = 0;
            while (binding_callbacks.length)
                binding_callbacks.pop()();
            // then, once components are updated, call
            // afterUpdate functions. This may cause
            // subsequent updates...
            for (let i = 0; i < render_callbacks.length; i += 1) {
                const callback = render_callbacks[i];
                if (!seen_callbacks.has(callback)) {
                    // ...so guard against infinite loops
                    seen_callbacks.add(callback);
                    callback();
                }
            }
            render_callbacks.length = 0;
        } while (dirty_components.length);
        while (flush_callbacks.length) {
            flush_callbacks.pop()();
        }
        update_scheduled = false;
        flushing = false;
        seen_callbacks.clear();
    }
    function update($$) {
        if ($$.fragment !== null) {
            $$.update();
            run_all($$.before_update);
            const dirty = $$.dirty;
            $$.dirty = [-1];
            $$.fragment && $$.fragment.p($$.ctx, dirty);
            $$.after_update.forEach(add_render_callback);
        }
    }
    const outroing = new Set();
    let outros;
    function group_outros() {
        outros = {
            r: 0,
            c: [],
            p: outros // parent group
        };
    }
    function check_outros() {
        if (!outros.r) {
            run_all(outros.c);
        }
        outros = outros.p;
    }
    function transition_in(block, local) {
        if (block && block.i) {
            outroing.delete(block);
            block.i(local);
        }
    }
    function transition_out(block, local, detach, callback) {
        if (block && block.o) {
            if (outroing.has(block))
                return;
            outroing.add(block);
            outros.c.push(() => {
                outroing.delete(block);
                if (callback) {
                    if (detach)
                        block.d(1);
                    callback();
                }
            });
            block.o(local);
        }
    }

    const globals = (typeof window !== 'undefined'
        ? window
        : typeof globalThis !== 'undefined'
            ? globalThis
            : global);

    function get_spread_update(levels, updates) {
        const update = {};
        const to_null_out = {};
        const accounted_for = { $$scope: 1 };
        let i = levels.length;
        while (i--) {
            const o = levels[i];
            const n = updates[i];
            if (n) {
                for (const key in o) {
                    if (!(key in n))
                        to_null_out[key] = 1;
                }
                for (const key in n) {
                    if (!accounted_for[key]) {
                        update[key] = n[key];
                        accounted_for[key] = 1;
                    }
                }
                levels[i] = n;
            }
            else {
                for (const key in o) {
                    accounted_for[key] = 1;
                }
            }
        }
        for (const key in to_null_out) {
            if (!(key in update))
                update[key] = undefined;
        }
        return update;
    }
    function get_spread_object(spread_props) {
        return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};
    }

    function bind(component, name, callback) {
        const index = component.$$.props[name];
        if (index !== undefined) {
            component.$$.bound[index] = callback;
            callback(component.$$.ctx[index]);
        }
    }
    function create_component(block) {
        block && block.c();
    }
    function mount_component(component, target, anchor) {
        const { fragment, on_mount, on_destroy, after_update } = component.$$;
        fragment && fragment.m(target, anchor);
        // onMount happens before the initial afterUpdate
        add_render_callback(() => {
            const new_on_destroy = on_mount.map(run).filter(is_function);
            if (on_destroy) {
                on_destroy.push(...new_on_destroy);
            }
            else {
                // Edge case - component was destroyed immediately,
                // most likely as a result of a binding initialising
                run_all(new_on_destroy);
            }
            component.$$.on_mount = [];
        });
        after_update.forEach(add_render_callback);
    }
    function destroy_component(component, detaching) {
        const $$ = component.$$;
        if ($$.fragment !== null) {
            run_all($$.on_destroy);
            $$.fragment && $$.fragment.d(detaching);
            // TODO null out other refs, including component.$$ (but need to
            // preserve final state?)
            $$.on_destroy = $$.fragment = null;
            $$.ctx = [];
        }
    }
    function make_dirty(component, i) {
        if (component.$$.dirty[0] === -1) {
            dirty_components.push(component);
            schedule_update();
            component.$$.dirty.fill(0);
        }
        component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));
    }
    function init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {
        const parent_component = current_component;
        set_current_component(component);
        const $$ = component.$$ = {
            fragment: null,
            ctx: null,
            // state
            props,
            update: noop,
            not_equal,
            bound: blank_object(),
            // lifecycle
            on_mount: [],
            on_destroy: [],
            before_update: [],
            after_update: [],
            context: new Map(parent_component ? parent_component.$$.context : []),
            // everything else
            callbacks: blank_object(),
            dirty,
            skip_bound: false
        };
        let ready = false;
        $$.ctx = instance
            ? instance(component, options.props || {}, (i, ret, ...rest) => {
                const value = rest.length ? rest[0] : ret;
                if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {
                    if (!$$.skip_bound && $$.bound[i])
                        $$.bound[i](value);
                    if (ready)
                        make_dirty(component, i);
                }
                return ret;
            })
            : [];
        $$.update();
        ready = true;
        run_all($$.before_update);
        // `false` as a special case of no DOM component
        $$.fragment = create_fragment ? create_fragment($$.ctx) : false;
        if (options.target) {
            if (options.hydrate) {
                const nodes = children(options.target);
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment && $$.fragment.l(nodes);
                nodes.forEach(detach);
            }
            else {
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment && $$.fragment.c();
            }
            if (options.intro)
                transition_in(component.$$.fragment);
            mount_component(component, options.target, options.anchor);
            flush();
        }
        set_current_component(parent_component);
    }
    /**
     * Base class for Svelte components. Used when dev=false.
     */
    class SvelteComponent {
        $destroy() {
            destroy_component(this, 1);
            this.$destroy = noop;
        }
        $on(type, callback) {
            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));
            callbacks.push(callback);
            return () => {
                const index = callbacks.indexOf(callback);
                if (index !== -1)
                    callbacks.splice(index, 1);
            };
        }
        $set($$props) {
            if (this.$$set && !is_empty($$props)) {
                this.$$.skip_bound = true;
                this.$$set($$props);
                this.$$.skip_bound = false;
            }
        }
    }

    function dispatch_dev(type, detail) {
        document.dispatchEvent(custom_event(type, Object.assign({ version: '3.32.1' }, detail)));
    }
    function append_dev(target, node) {
        dispatch_dev('SvelteDOMInsert', { target, node });
        append(target, node);
    }
    function insert_dev(target, node, anchor) {
        dispatch_dev('SvelteDOMInsert', { target, node, anchor });
        insert(target, node, anchor);
    }
    function detach_dev(node) {
        dispatch_dev('SvelteDOMRemove', { node });
        detach(node);
    }
    function listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {
        const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];
        if (has_prevent_default)
            modifiers.push('preventDefault');
        if (has_stop_propagation)
            modifiers.push('stopPropagation');
        dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });
        const dispose = listen(node, event, handler, options);
        return () => {
            dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });
            dispose();
        };
    }
    function attr_dev(node, attribute, value) {
        attr(node, attribute, value);
        if (value == null)
            dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });
        else
            dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });
    }
    function set_data_dev(text, data) {
        data = '' + data;
        if (text.wholeText === data)
            return;
        dispatch_dev('SvelteDOMSetData', { node: text, data });
        text.data = data;
    }
    function validate_each_argument(arg) {
        if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {
            let msg = '{#each} only iterates over array-like objects.';
            if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {
                msg += ' You can use a spread to convert this iterable into an array.';
            }
            throw new Error(msg);
        }
    }
    function validate_slots(name, slot, keys) {
        for (const slot_key of Object.keys(slot)) {
            if (!~keys.indexOf(slot_key)) {
                console.warn(`<${name}> received an unexpected slot "${slot_key}".`);
            }
        }
    }
    /**
     * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.
     */
    class SvelteComponentDev extends SvelteComponent {
        constructor(options) {
            if (!options || (!options.target && !options.$$inline)) {
                throw new Error("'target' is a required option");
            }
            super();
        }
        $destroy() {
            super.$destroy();
            this.$destroy = () => {
                console.warn('Component was already destroyed'); // eslint-disable-line no-console
            };
        }
        $capture_state() { }
        $inject_state() { }
    }

    function forwardEventsBuilder(component, additionalEvents = []) {
      const events = [
        'focus', 'blur',
        'fullscreenchange', 'fullscreenerror', 'scroll',
        'cut', 'copy', 'paste',
        'keydown', 'keypress', 'keyup',
        'auxclick', 'click', 'contextmenu', 'dblclick', 'mousedown', 'mouseenter', 'mouseleave', 'mousemove', 'mouseover', 'mouseout', 'mouseup', 'pointerlockchange', 'pointerlockerror', 'select', 'wheel',
        'drag', 'dragend', 'dragenter', 'dragstart', 'dragleave', 'dragover', 'drop',
        'touchcancel', 'touchend', 'touchmove', 'touchstart',
        'pointerover', 'pointerenter', 'pointerdown', 'pointermove', 'pointerup', 'pointercancel', 'pointerout', 'pointerleave', 'gotpointercapture', 'lostpointercapture',
        ...additionalEvents
      ];

      function forward(e) {
        bubble(component, e);
      }

      return node => {
        const destructors = [];

        for (let i = 0; i < events.length; i++) {
          destructors.push(listen(node, events[i], forward));
        }

        return {
          destroy: () => {
            for (let i = 0; i < destructors.length; i++) {
              destructors[i]();
            }
          }
        }
      };
    }

    function exclude(obj, keys) {
      let names = Object.getOwnPropertyNames(obj);
      const newObj = {};

      for (let i = 0; i < names.length; i++) {
        const name = names[i];
        const cashIndex = name.indexOf('$');
        if (cashIndex !== -1 && keys.indexOf(name.substring(0, cashIndex + 1)) !== -1) {
          continue;
        }
        if (keys.indexOf(name) !== -1) {
          continue;
        }
        newObj[name] = obj[name];
      }

      return newObj;
    }

    function useActions(node, actions) {
      let objects = [];

      if (actions) {
        for (let i = 0; i < actions.length; i++) {
          const isArray = Array.isArray(actions[i]);
          const action = isArray ? actions[i][0] : actions[i];
          if (isArray && actions[i].length > 1) {
            objects.push(action(node, actions[i][1]));
          } else {
            objects.push(action(node));
          }
        }
      }

      return {
        update(actions) {
          if ((actions && actions.length || 0) != objects.length) {
            throw new Error('You must not change the length of an actions array.');
          }

          if (actions) {
            for (let i = 0; i < actions.length; i++) {
              if (objects[i] && 'update' in objects[i]) {
                const isArray = Array.isArray(actions[i]);
                if (isArray && actions[i].length > 1) {
                  objects[i].update(actions[i][1]);
                } else {
                  objects[i].update();
                }
              }
            }
          }
        },

        destroy() {
          for (let i = 0; i < objects.length; i++) {
            if (objects[i] && 'destroy' in objects[i]) {
              objects[i].destroy();
            }
          }
        }
      }
    }

    /* node_modules/@smui/paper/Paper.svelte generated by Svelte v3.32.1 */
    const file = "node_modules/@smui/paper/Paper.svelte";

    function create_fragment(ctx) {
    	let div;
    	let div_class_value;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[9].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[8], null);

    	let div_levels = [
    		{
    			class: div_class_value = "\n    smui-paper\n    " + /*className*/ ctx[1] + "\n    " + (/*elevation*/ ctx[4] !== 0
    			? "mdc-elevation--z" + /*elevation*/ ctx[4]
    			: "") + "\n    " + (!/*square*/ ctx[2] ? "smui-paper--rounded" : "") + "\n    " + (/*color*/ ctx[3] === "primary"
    			? "smui-paper--color-primary"
    			: "") + "\n    " + (/*color*/ ctx[3] === "secondary"
    			? "smui-paper--color-secondary"
    			: "") + "\n    " + (/*transition*/ ctx[5] ? "mdc-elevation-transition" : "") + "\n  "
    		},
    		exclude(/*$$props*/ ctx[7], ["use", "class", "square", "color", "transition"])
    	];

    	let div_data = {};

    	for (let i = 0; i < div_levels.length; i += 1) {
    		div_data = assign(div_data, div_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (default_slot) default_slot.c();
    			set_attributes(div, div_data);
    			add_location(div, file, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);

    			if (default_slot) {
    				default_slot.m(div, null);
    			}

    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, div, /*use*/ ctx[0])),
    					action_destroyer(/*forwardEvents*/ ctx[6].call(null, div))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 256) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[8], dirty, null, null);
    				}
    			}

    			set_attributes(div, div_data = get_spread_update(div_levels, [
    				(!current || dirty & /*className, elevation, square, color, transition*/ 62 && div_class_value !== (div_class_value = "\n    smui-paper\n    " + /*className*/ ctx[1] + "\n    " + (/*elevation*/ ctx[4] !== 0
    				? "mdc-elevation--z" + /*elevation*/ ctx[4]
    				: "") + "\n    " + (!/*square*/ ctx[2] ? "smui-paper--rounded" : "") + "\n    " + (/*color*/ ctx[3] === "primary"
    				? "smui-paper--color-primary"
    				: "") + "\n    " + (/*color*/ ctx[3] === "secondary"
    				? "smui-paper--color-secondary"
    				: "") + "\n    " + (/*transition*/ ctx[5] ? "mdc-elevation-transition" : "") + "\n  ")) && { class: div_class_value },
    				dirty & /*$$props*/ 128 && exclude(/*$$props*/ ctx[7], ["use", "class", "square", "color", "transition"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 1) useActions_action.update.call(null, /*use*/ ctx[0]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (default_slot) default_slot.d(detaching);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Paper", slots, ['default']);
    	const forwardEvents = forwardEventsBuilder(get_current_component());
    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	let { square = false } = $$props;
    	let { color = "default" } = $$props;
    	let { elevation = 1 } = $$props;
    	let { transition = false } = $$props;

    	$$self.$$set = $$new_props => {
    		$$invalidate(7, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(0, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(1, className = $$new_props.class);
    		if ("square" in $$new_props) $$invalidate(2, square = $$new_props.square);
    		if ("color" in $$new_props) $$invalidate(3, color = $$new_props.color);
    		if ("elevation" in $$new_props) $$invalidate(4, elevation = $$new_props.elevation);
    		if ("transition" in $$new_props) $$invalidate(5, transition = $$new_props.transition);
    		if ("$$scope" in $$new_props) $$invalidate(8, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		onMount,
    		onDestroy,
    		afterUpdate,
    		setContext,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		forwardEvents,
    		use,
    		className,
    		square,
    		color,
    		elevation,
    		transition
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(7, $$props = assign(assign({}, $$props), $$new_props));
    		if ("use" in $$props) $$invalidate(0, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(1, className = $$new_props.className);
    		if ("square" in $$props) $$invalidate(2, square = $$new_props.square);
    		if ("color" in $$props) $$invalidate(3, color = $$new_props.color);
    		if ("elevation" in $$props) $$invalidate(4, elevation = $$new_props.elevation);
    		if ("transition" in $$props) $$invalidate(5, transition = $$new_props.transition);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		use,
    		className,
    		square,
    		color,
    		elevation,
    		transition,
    		forwardEvents,
    		$$props,
    		$$scope,
    		slots
    	];
    }

    class Paper extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance, create_fragment, safe_not_equal, {
    			use: 0,
    			class: 1,
    			square: 2,
    			color: 3,
    			elevation: 4,
    			transition: 5
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Paper",
    			options,
    			id: create_fragment.name
    		});
    	}

    	get use() {
    		throw new Error("<Paper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<Paper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<Paper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<Paper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get square() {
    		throw new Error("<Paper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set square(value) {
    		throw new Error("<Paper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get color() {
    		throw new Error("<Paper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set color(value) {
    		throw new Error("<Paper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get elevation() {
    		throw new Error("<Paper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set elevation(value) {
    		throw new Error("<Paper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get transition() {
    		throw new Error("<Paper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set transition(value) {
    		throw new Error("<Paper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/@smui/common/ClassAdder.svelte generated by Svelte v3.32.1 */

    // (1:0) <svelte:component   this={component}   use={[forwardEvents, ...use]}   class="{smuiClass} {className}"   {...exclude($$props, ['use', 'class', 'component', 'forwardEvents'])} >
    function create_default_slot(ctx) {
    	let current;
    	const default_slot_template = /*#slots*/ ctx[7].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[8], null);

    	const block = {
    		c: function create() {
    			if (default_slot) default_slot.c();
    		},
    		m: function mount(target, anchor) {
    			if (default_slot) {
    				default_slot.m(target, anchor);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 256) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[8], dirty, null, null);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (default_slot) default_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot.name,
    		type: "slot",
    		source: "(1:0) <svelte:component   this={component}   use={[forwardEvents, ...use]}   class=\\\"{smuiClass} {className}\\\"   {...exclude($$props, ['use', 'class', 'component', 'forwardEvents'])} >",
    		ctx
    	});

    	return block;
    }

    function create_fragment$1(ctx) {
    	let switch_instance;
    	let switch_instance_anchor;
    	let current;

    	const switch_instance_spread_levels = [
    		{
    			use: [/*forwardEvents*/ ctx[4], .../*use*/ ctx[0]]
    		},
    		{
    			class: "" + (/*smuiClass*/ ctx[3] + " " + /*className*/ ctx[1])
    		},
    		exclude(/*$$props*/ ctx[5], ["use", "class", "component", "forwardEvents"])
    	];

    	var switch_value = /*component*/ ctx[2];

    	function switch_props(ctx) {
    		let switch_instance_props = {
    			$$slots: { default: [create_default_slot] },
    			$$scope: { ctx }
    		};

    		for (let i = 0; i < switch_instance_spread_levels.length; i += 1) {
    			switch_instance_props = assign(switch_instance_props, switch_instance_spread_levels[i]);
    		}

    		return {
    			props: switch_instance_props,
    			$$inline: true
    		};
    	}

    	if (switch_value) {
    		switch_instance = new switch_value(switch_props(ctx));
    	}

    	const block = {
    		c: function create() {
    			if (switch_instance) create_component(switch_instance.$$.fragment);
    			switch_instance_anchor = empty();
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			if (switch_instance) {
    				mount_component(switch_instance, target, anchor);
    			}

    			insert_dev(target, switch_instance_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			const switch_instance_changes = (dirty & /*forwardEvents, use, smuiClass, className, exclude, $$props*/ 59)
    			? get_spread_update(switch_instance_spread_levels, [
    					dirty & /*forwardEvents, use*/ 17 && {
    						use: [/*forwardEvents*/ ctx[4], .../*use*/ ctx[0]]
    					},
    					dirty & /*smuiClass, className*/ 10 && {
    						class: "" + (/*smuiClass*/ ctx[3] + " " + /*className*/ ctx[1])
    					},
    					dirty & /*exclude, $$props*/ 32 && get_spread_object(exclude(/*$$props*/ ctx[5], ["use", "class", "component", "forwardEvents"]))
    				])
    			: {};

    			if (dirty & /*$$scope*/ 256) {
    				switch_instance_changes.$$scope = { dirty, ctx };
    			}

    			if (switch_value !== (switch_value = /*component*/ ctx[2])) {
    				if (switch_instance) {
    					group_outros();
    					const old_component = switch_instance;

    					transition_out(old_component.$$.fragment, 1, 0, () => {
    						destroy_component(old_component, 1);
    					});

    					check_outros();
    				}

    				if (switch_value) {
    					switch_instance = new switch_value(switch_props(ctx));
    					create_component(switch_instance.$$.fragment);
    					transition_in(switch_instance.$$.fragment, 1);
    					mount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);
    				} else {
    					switch_instance = null;
    				}
    			} else if (switch_value) {
    				switch_instance.$set(switch_instance_changes);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			if (switch_instance) transition_in(switch_instance.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			if (switch_instance) transition_out(switch_instance.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(switch_instance_anchor);
    			if (switch_instance) destroy_component(switch_instance, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$1.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    const internals = {
    	component: null,
    	smuiClass: null,
    	contexts: {}
    };

    function instance$1($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("ClassAdder", slots, ['default']);
    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	let { component = internals.component } = $$props;
    	let { forwardEvents: forwardEventsAdditional = [] } = $$props;
    	const smuiClass = internals.class;
    	const contexts = internals.contexts;
    	const forwardEvents = forwardEventsBuilder(get_current_component(), forwardEventsAdditional);

    	for (let context in contexts) {
    		if (contexts.hasOwnProperty(context)) {
    			setContext(context, contexts[context]);
    		}
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(5, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(0, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(1, className = $$new_props.class);
    		if ("component" in $$new_props) $$invalidate(2, component = $$new_props.component);
    		if ("forwardEvents" in $$new_props) $$invalidate(6, forwardEventsAdditional = $$new_props.forwardEvents);
    		if ("$$scope" in $$new_props) $$invalidate(8, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		internals,
    		setContext,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		use,
    		className,
    		component,
    		forwardEventsAdditional,
    		smuiClass,
    		contexts,
    		forwardEvents
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(5, $$props = assign(assign({}, $$props), $$new_props));
    		if ("use" in $$props) $$invalidate(0, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(1, className = $$new_props.className);
    		if ("component" in $$props) $$invalidate(2, component = $$new_props.component);
    		if ("forwardEventsAdditional" in $$props) $$invalidate(6, forwardEventsAdditional = $$new_props.forwardEventsAdditional);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		use,
    		className,
    		component,
    		smuiClass,
    		forwardEvents,
    		$$props,
    		forwardEventsAdditional,
    		slots,
    		$$scope
    	];
    }

    class ClassAdder extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$1, create_fragment$1, safe_not_equal, {
    			use: 0,
    			class: 1,
    			component: 2,
    			forwardEvents: 6
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "ClassAdder",
    			options,
    			id: create_fragment$1.name
    		});
    	}

    	get use() {
    		throw new Error("<ClassAdder>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<ClassAdder>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<ClassAdder>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<ClassAdder>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get component() {
    		throw new Error("<ClassAdder>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set component(value) {
    		throw new Error("<ClassAdder>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get forwardEvents() {
    		throw new Error("<ClassAdder>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set forwardEvents(value) {
    		throw new Error("<ClassAdder>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    function classAdderBuilder(props) {
      function Component(...args) {
        Object.assign(internals, props);
        return new ClassAdder(...args);
      }

      Component.prototype = ClassAdder;

      // SSR support
      if (ClassAdder.$$render) {
        Component.$$render = (...args) => Object.assign(internals, props) && ClassAdder.$$render(...args);
      }
      if (ClassAdder.render) {
        Component.render = (...args) => Object.assign(internals, props) && ClassAdder.render(...args);
      }

      return Component;
    }

    /* node_modules/@smui/common/Div.svelte generated by Svelte v3.32.1 */
    const file$1 = "node_modules/@smui/common/Div.svelte";

    function create_fragment$2(ctx) {
    	let div;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[6].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[5], null);
    	let div_levels = [exclude(/*$$props*/ ctx[3], ["element", "use", "forwardEvents"])];
    	let div_data = {};

    	for (let i = 0; i < div_levels.length; i += 1) {
    		div_data = assign(div_data, div_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (default_slot) default_slot.c();
    			set_attributes(div, div_data);
    			add_location(div, file$1, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);

    			if (default_slot) {
    				default_slot.m(div, null);
    			}

    			/*div_binding*/ ctx[7](div);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, div, /*use*/ ctx[1])),
    					action_destroyer(/*forwardEvents*/ ctx[2].call(null, div))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 32) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[5], dirty, null, null);
    				}
    			}

    			set_attributes(div, div_data = get_spread_update(div_levels, [
    				dirty & /*$$props*/ 8 && exclude(/*$$props*/ ctx[3], ["element", "use", "forwardEvents"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 2) useActions_action.update.call(null, /*use*/ ctx[1]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (default_slot) default_slot.d(detaching);
    			/*div_binding*/ ctx[7](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$2.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$2($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Div", slots, ['default']);
    	let { element = null } = $$props;
    	let { use = [] } = $$props;
    	let { forwardEvents: forwardEventsAdditional = [] } = $$props;
    	const forwardEvents = forwardEventsBuilder(get_current_component(), forwardEventsAdditional);

    	function div_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(0, element);
    		});
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("element" in $$new_props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$new_props) $$invalidate(1, use = $$new_props.use);
    		if ("forwardEvents" in $$new_props) $$invalidate(4, forwardEventsAdditional = $$new_props.forwardEvents);
    		if ("$$scope" in $$new_props) $$invalidate(5, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		element,
    		use,
    		forwardEventsAdditional,
    		forwardEvents
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), $$new_props));
    		if ("element" in $$props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$props) $$invalidate(1, use = $$new_props.use);
    		if ("forwardEventsAdditional" in $$props) $$invalidate(4, forwardEventsAdditional = $$new_props.forwardEventsAdditional);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		element,
    		use,
    		forwardEvents,
    		$$props,
    		forwardEventsAdditional,
    		$$scope,
    		slots,
    		div_binding
    	];
    }

    class Div extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$2, create_fragment$2, safe_not_equal, { element: 0, use: 1, forwardEvents: 4 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Div",
    			options,
    			id: create_fragment$2.name
    		});
    	}

    	get element() {
    		throw new Error("<Div>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set element(value) {
    		throw new Error("<Div>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get use() {
    		throw new Error("<Div>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<Div>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get forwardEvents() {
    		throw new Error("<Div>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set forwardEvents(value) {
    		throw new Error("<Div>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    var Content = classAdderBuilder({
      class: 'smui-paper__content',
      component: Div,
      contexts: {}
    });

    /* node_modules/@smui/common/H5.svelte generated by Svelte v3.32.1 */
    const file$2 = "node_modules/@smui/common/H5.svelte";

    function create_fragment$3(ctx) {
    	let h5;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[6].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[5], null);
    	let h5_levels = [exclude(/*$$props*/ ctx[3], ["element", "use", "forwardEvents"])];
    	let h5_data = {};

    	for (let i = 0; i < h5_levels.length; i += 1) {
    		h5_data = assign(h5_data, h5_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			h5 = element("h5");
    			if (default_slot) default_slot.c();
    			set_attributes(h5, h5_data);
    			add_location(h5, file$2, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, h5, anchor);

    			if (default_slot) {
    				default_slot.m(h5, null);
    			}

    			/*h5_binding*/ ctx[7](h5);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, h5, /*use*/ ctx[1])),
    					action_destroyer(/*forwardEvents*/ ctx[2].call(null, h5))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 32) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[5], dirty, null, null);
    				}
    			}

    			set_attributes(h5, h5_data = get_spread_update(h5_levels, [
    				dirty & /*$$props*/ 8 && exclude(/*$$props*/ ctx[3], ["element", "use", "forwardEvents"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 2) useActions_action.update.call(null, /*use*/ ctx[1]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(h5);
    			if (default_slot) default_slot.d(detaching);
    			/*h5_binding*/ ctx[7](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$3.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$3($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("H5", slots, ['default']);
    	let { element = null } = $$props;
    	let { use = [] } = $$props;
    	let { forwardEvents: forwardEventsAdditional = [] } = $$props;
    	const forwardEvents = forwardEventsBuilder(get_current_component(), forwardEventsAdditional);

    	function h5_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(0, element);
    		});
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("element" in $$new_props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$new_props) $$invalidate(1, use = $$new_props.use);
    		if ("forwardEvents" in $$new_props) $$invalidate(4, forwardEventsAdditional = $$new_props.forwardEvents);
    		if ("$$scope" in $$new_props) $$invalidate(5, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		element,
    		use,
    		forwardEventsAdditional,
    		forwardEvents
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), $$new_props));
    		if ("element" in $$props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$props) $$invalidate(1, use = $$new_props.use);
    		if ("forwardEventsAdditional" in $$props) $$invalidate(4, forwardEventsAdditional = $$new_props.forwardEventsAdditional);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		element,
    		use,
    		forwardEvents,
    		$$props,
    		forwardEventsAdditional,
    		$$scope,
    		slots,
    		h5_binding
    	];
    }

    class H5 extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$3, create_fragment$3, safe_not_equal, { element: 0, use: 1, forwardEvents: 4 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "H5",
    			options,
    			id: create_fragment$3.name
    		});
    	}

    	get element() {
    		throw new Error("<H5>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set element(value) {
    		throw new Error("<H5>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get use() {
    		throw new Error("<H5>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<H5>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get forwardEvents() {
    		throw new Error("<H5>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set forwardEvents(value) {
    		throw new Error("<H5>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    var Title = classAdderBuilder({
      class: 'smui-paper__title',
      component: H5,
      contexts: {}
    });

    /* node_modules/@smui/common/H6.svelte generated by Svelte v3.32.1 */
    const file$3 = "node_modules/@smui/common/H6.svelte";

    function create_fragment$4(ctx) {
    	let h6;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[6].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[5], null);
    	let h6_levels = [exclude(/*$$props*/ ctx[3], ["element", "use", "forwardEvents"])];
    	let h6_data = {};

    	for (let i = 0; i < h6_levels.length; i += 1) {
    		h6_data = assign(h6_data, h6_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			h6 = element("h6");
    			if (default_slot) default_slot.c();
    			set_attributes(h6, h6_data);
    			add_location(h6, file$3, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, h6, anchor);

    			if (default_slot) {
    				default_slot.m(h6, null);
    			}

    			/*h6_binding*/ ctx[7](h6);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, h6, /*use*/ ctx[1])),
    					action_destroyer(/*forwardEvents*/ ctx[2].call(null, h6))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 32) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[5], dirty, null, null);
    				}
    			}

    			set_attributes(h6, h6_data = get_spread_update(h6_levels, [
    				dirty & /*$$props*/ 8 && exclude(/*$$props*/ ctx[3], ["element", "use", "forwardEvents"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 2) useActions_action.update.call(null, /*use*/ ctx[1]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(h6);
    			if (default_slot) default_slot.d(detaching);
    			/*h6_binding*/ ctx[7](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$4.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$4($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("H6", slots, ['default']);
    	let { element = null } = $$props;
    	let { use = [] } = $$props;
    	let { forwardEvents: forwardEventsAdditional = [] } = $$props;
    	const forwardEvents = forwardEventsBuilder(get_current_component(), forwardEventsAdditional);

    	function h6_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(0, element);
    		});
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("element" in $$new_props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$new_props) $$invalidate(1, use = $$new_props.use);
    		if ("forwardEvents" in $$new_props) $$invalidate(4, forwardEventsAdditional = $$new_props.forwardEvents);
    		if ("$$scope" in $$new_props) $$invalidate(5, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		element,
    		use,
    		forwardEventsAdditional,
    		forwardEvents
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), $$new_props));
    		if ("element" in $$props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$props) $$invalidate(1, use = $$new_props.use);
    		if ("forwardEventsAdditional" in $$props) $$invalidate(4, forwardEventsAdditional = $$new_props.forwardEventsAdditional);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		element,
    		use,
    		forwardEvents,
    		$$props,
    		forwardEventsAdditional,
    		$$scope,
    		slots,
    		h6_binding
    	];
    }

    class H6 extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$4, create_fragment$4, safe_not_equal, { element: 0, use: 1, forwardEvents: 4 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "H6",
    			options,
    			id: create_fragment$4.name
    		});
    	}

    	get element() {
    		throw new Error("<H6>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set element(value) {
    		throw new Error("<H6>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get use() {
    		throw new Error("<H6>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<H6>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get forwardEvents() {
    		throw new Error("<H6>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set forwardEvents(value) {
    		throw new Error("<H6>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    var Subtitle = classAdderBuilder({
      class: 'smui-paper__subtitle',
      component: H6,
      contexts: {}
    });

    /* node_modules/@smui/common/A.svelte generated by Svelte v3.32.1 */
    const file$4 = "node_modules/@smui/common/A.svelte";

    function create_fragment$5(ctx) {
    	let a;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[7].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[6], null);

    	let a_levels = [
    		{ href: /*href*/ ctx[1] },
    		exclude(/*$$props*/ ctx[4], ["element", "use", "forwardEvents", "href"])
    	];

    	let a_data = {};

    	for (let i = 0; i < a_levels.length; i += 1) {
    		a_data = assign(a_data, a_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			a = element("a");
    			if (default_slot) default_slot.c();
    			set_attributes(a, a_data);
    			add_location(a, file$4, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, a, anchor);

    			if (default_slot) {
    				default_slot.m(a, null);
    			}

    			/*a_binding*/ ctx[8](a);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, a, /*use*/ ctx[2])),
    					action_destroyer(/*forwardEvents*/ ctx[3].call(null, a))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 64) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[6], dirty, null, null);
    				}
    			}

    			set_attributes(a, a_data = get_spread_update(a_levels, [
    				(!current || dirty & /*href*/ 2) && { href: /*href*/ ctx[1] },
    				dirty & /*$$props*/ 16 && exclude(/*$$props*/ ctx[4], ["element", "use", "forwardEvents", "href"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 4) useActions_action.update.call(null, /*use*/ ctx[2]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(a);
    			if (default_slot) default_slot.d(detaching);
    			/*a_binding*/ ctx[8](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$5.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$5($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("A", slots, ['default']);
    	let { href = "javascript:void(0);" } = $$props;
    	let { element = null } = $$props;
    	let { use = [] } = $$props;
    	let { forwardEvents: forwardEventsAdditional = [] } = $$props;
    	const forwardEvents = forwardEventsBuilder(get_current_component(), forwardEventsAdditional);

    	function a_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(0, element);
    		});
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(4, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("href" in $$new_props) $$invalidate(1, href = $$new_props.href);
    		if ("element" in $$new_props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$new_props) $$invalidate(2, use = $$new_props.use);
    		if ("forwardEvents" in $$new_props) $$invalidate(5, forwardEventsAdditional = $$new_props.forwardEvents);
    		if ("$$scope" in $$new_props) $$invalidate(6, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		href,
    		element,
    		use,
    		forwardEventsAdditional,
    		forwardEvents
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(4, $$props = assign(assign({}, $$props), $$new_props));
    		if ("href" in $$props) $$invalidate(1, href = $$new_props.href);
    		if ("element" in $$props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$props) $$invalidate(2, use = $$new_props.use);
    		if ("forwardEventsAdditional" in $$props) $$invalidate(5, forwardEventsAdditional = $$new_props.forwardEventsAdditional);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		element,
    		href,
    		use,
    		forwardEvents,
    		$$props,
    		forwardEventsAdditional,
    		$$scope,
    		slots,
    		a_binding
    	];
    }

    class A extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$5, create_fragment$5, safe_not_equal, {
    			href: 1,
    			element: 0,
    			use: 2,
    			forwardEvents: 5
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "A",
    			options,
    			id: create_fragment$5.name
    		});
    	}

    	get href() {
    		throw new Error("<A>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set href(value) {
    		throw new Error("<A>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get element() {
    		throw new Error("<A>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set element(value) {
    		throw new Error("<A>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get use() {
    		throw new Error("<A>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<A>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get forwardEvents() {
    		throw new Error("<A>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set forwardEvents(value) {
    		throw new Error("<A>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/@smui/common/Button.svelte generated by Svelte v3.32.1 */
    const file$5 = "node_modules/@smui/common/Button.svelte";

    function create_fragment$6(ctx) {
    	let button;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[6].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[5], null);
    	let button_levels = [exclude(/*$$props*/ ctx[3], ["element", "use", "forwardEvents"])];
    	let button_data = {};

    	for (let i = 0; i < button_levels.length; i += 1) {
    		button_data = assign(button_data, button_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			button = element("button");
    			if (default_slot) default_slot.c();
    			set_attributes(button, button_data);
    			add_location(button, file$5, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);

    			if (default_slot) {
    				default_slot.m(button, null);
    			}

    			/*button_binding*/ ctx[7](button);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, button, /*use*/ ctx[1])),
    					action_destroyer(/*forwardEvents*/ ctx[2].call(null, button))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 32) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[5], dirty, null, null);
    				}
    			}

    			set_attributes(button, button_data = get_spread_update(button_levels, [
    				dirty & /*$$props*/ 8 && exclude(/*$$props*/ ctx[3], ["element", "use", "forwardEvents"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 2) useActions_action.update.call(null, /*use*/ ctx[1]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			if (default_slot) default_slot.d(detaching);
    			/*button_binding*/ ctx[7](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$6.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$6($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Button", slots, ['default']);
    	let { element = null } = $$props;
    	let { use = [] } = $$props;
    	let { forwardEvents: forwardEventsAdditional = [] } = $$props;
    	const forwardEvents = forwardEventsBuilder(get_current_component(), forwardEventsAdditional);

    	function button_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(0, element);
    		});
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("element" in $$new_props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$new_props) $$invalidate(1, use = $$new_props.use);
    		if ("forwardEvents" in $$new_props) $$invalidate(4, forwardEventsAdditional = $$new_props.forwardEvents);
    		if ("$$scope" in $$new_props) $$invalidate(5, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		element,
    		use,
    		forwardEventsAdditional,
    		forwardEvents
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), $$new_props));
    		if ("element" in $$props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$props) $$invalidate(1, use = $$new_props.use);
    		if ("forwardEventsAdditional" in $$props) $$invalidate(4, forwardEventsAdditional = $$new_props.forwardEventsAdditional);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		element,
    		use,
    		forwardEvents,
    		$$props,
    		forwardEventsAdditional,
    		$$scope,
    		slots,
    		button_binding
    	];
    }

    class Button extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$6, create_fragment$6, safe_not_equal, { element: 0, use: 1, forwardEvents: 4 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Button",
    			options,
    			id: create_fragment$6.name
    		});
    	}

    	get element() {
    		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set element(value) {
    		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get use() {
    		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get forwardEvents() {
    		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set forwardEvents(value) {
    		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /**
     * Stores result from supportsCssVariables to avoid redundant processing to
     * detect CSS custom variable support.
     */
    var supportsCssVariables_;
    function detectEdgePseudoVarBug(windowObj) {
        // Detect versions of Edge with buggy var() support
        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
        var document = windowObj.document;
        var node = document.createElement('div');
        node.className = 'mdc-ripple-surface--test-edge-var-bug';
        // Append to head instead of body because this script might be invoked in the
        // head, in which case the body doesn't exist yet. The probe works either way.
        document.head.appendChild(node);
        // The bug exists if ::before style ends up propagating to the parent element.
        // Additionally, getComputedStyle returns null in iframes with display: "none" in Firefox,
        // but Firefox is known to support CSS custom properties correctly.
        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397
        var computedStyle = windowObj.getComputedStyle(node);
        var hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';
        if (node.parentNode) {
            node.parentNode.removeChild(node);
        }
        return hasPseudoVarBug;
    }
    function supportsCssVariables(windowObj, forceRefresh) {
        if (forceRefresh === void 0) { forceRefresh = false; }
        var CSS = windowObj.CSS;
        var supportsCssVars = supportsCssVariables_;
        if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {
            return supportsCssVariables_;
        }
        var supportsFunctionPresent = CSS && typeof CSS.supports === 'function';
        if (!supportsFunctionPresent) {
            return false;
        }
        var explicitlySupportsCssVars = CSS.supports('--css-vars', 'yes');
        // See: https://bugs.webkit.org/show_bug.cgi?id=154669
        // See: README section on Safari
        var weAreFeatureDetectingSafari10plus = (CSS.supports('(--css-vars: yes)') &&
            CSS.supports('color', '#00000000'));
        if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {
            supportsCssVars = !detectEdgePseudoVarBug(windowObj);
        }
        else {
            supportsCssVars = false;
        }
        if (!forceRefresh) {
            supportsCssVariables_ = supportsCssVars;
        }
        return supportsCssVars;
    }
    function getNormalizedEventCoords(evt, pageOffset, clientRect) {
        if (!evt) {
            return { x: 0, y: 0 };
        }
        var x = pageOffset.x, y = pageOffset.y;
        var documentX = x + clientRect.left;
        var documentY = y + clientRect.top;
        var normalizedX;
        var normalizedY;
        // Determine touch point relative to the ripple container.
        if (evt.type === 'touchstart') {
            var touchEvent = evt;
            normalizedX = touchEvent.changedTouches[0].pageX - documentX;
            normalizedY = touchEvent.changedTouches[0].pageY - documentY;
        }
        else {
            var mouseEvent = evt;
            normalizedX = mouseEvent.pageX - documentX;
            normalizedY = mouseEvent.pageY - documentY;
        }
        return { x: normalizedX, y: normalizedY };
    }
    //# sourceMappingURL=util.js.map

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCFoundation = /** @class */ (function () {
        function MDCFoundation(adapter) {
            if (adapter === void 0) { adapter = {}; }
            this.adapter_ = adapter;
        }
        Object.defineProperty(MDCFoundation, "cssClasses", {
            get: function () {
                // Classes extending MDCFoundation should implement this method to return an object which exports every
                // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
                return {};
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCFoundation, "strings", {
            get: function () {
                // Classes extending MDCFoundation should implement this method to return an object which exports all
                // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
                return {};
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCFoundation, "numbers", {
            get: function () {
                // Classes extending MDCFoundation should implement this method to return an object which exports all
                // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
                return {};
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCFoundation, "defaultAdapter", {
            get: function () {
                // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
                // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
                // validation.
                return {};
            },
            enumerable: true,
            configurable: true
        });
        MDCFoundation.prototype.init = function () {
            // Subclasses should override this method to perform initialization routines (registering events, etc.)
        };
        MDCFoundation.prototype.destroy = function () {
            // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
        };
        return MDCFoundation;
    }());

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCComponent = /** @class */ (function () {
        function MDCComponent(root, foundation) {
            var args = [];
            for (var _i = 2; _i < arguments.length; _i++) {
                args[_i - 2] = arguments[_i];
            }
            this.root_ = root;
            this.initialize.apply(this, __spread(args));
            // Note that we initialize foundation here and not within the constructor's default param so that
            // this.root_ is defined and can be used within the foundation class.
            this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
            this.foundation_.init();
            this.initialSyncWithDOM();
        }
        MDCComponent.attachTo = function (root) {
            // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
            // returns an instantiated component with its root set to that element. Also note that in the cases of
            // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
            // from getDefaultFoundation().
            return new MDCComponent(root, new MDCFoundation({}));
        };
        /* istanbul ignore next: method param only exists for typing purposes; it does not need to be unit tested */
        MDCComponent.prototype.initialize = function () {
            var _args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                _args[_i] = arguments[_i];
            }
            // Subclasses can override this to do any additional setup work that would be considered part of a
            // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
            // initialized. Any additional arguments besides root and foundation will be passed in here.
        };
        MDCComponent.prototype.getDefaultFoundation = function () {
            // Subclasses must override this method to return a properly configured foundation class for the
            // component.
            throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +
                'foundation class');
        };
        MDCComponent.prototype.initialSyncWithDOM = function () {
            // Subclasses should override this method if they need to perform work to synchronize with a host DOM
            // object. An example of this would be a form control wrapper that needs to synchronize its internal state
            // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
            // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
        };
        MDCComponent.prototype.destroy = function () {
            // Subclasses may implement this method to release any resources / deregister any listeners they have
            // attached. An example of this might be deregistering a resize event from the window object.
            this.foundation_.destroy();
        };
        MDCComponent.prototype.listen = function (evtType, handler, options) {
            this.root_.addEventListener(evtType, handler, options);
        };
        MDCComponent.prototype.unlisten = function (evtType, handler, options) {
            this.root_.removeEventListener(evtType, handler, options);
        };
        /**
         * Fires a cross-browser-compatible custom event from the component root of the given type, with the given data.
         */
        MDCComponent.prototype.emit = function (evtType, evtData, shouldBubble) {
            if (shouldBubble === void 0) { shouldBubble = false; }
            var evt;
            if (typeof CustomEvent === 'function') {
                evt = new CustomEvent(evtType, {
                    bubbles: shouldBubble,
                    detail: evtData,
                });
            }
            else {
                evt = document.createEvent('CustomEvent');
                evt.initCustomEvent(evtType, shouldBubble, false, evtData);
            }
            this.root_.dispatchEvent(evt);
        };
        return MDCComponent;
    }());

    /**
     * @license
     * Copyright 2019 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    /**
     * Stores result from applyPassive to avoid redundant processing to detect
     * passive event listener support.
     */
    var supportsPassive_;
    /**
     * Determine whether the current browser supports passive event listeners, and
     * if so, use them.
     */
    function applyPassive(globalObj, forceRefresh) {
        if (globalObj === void 0) { globalObj = window; }
        if (forceRefresh === void 0) { forceRefresh = false; }
        if (supportsPassive_ === undefined || forceRefresh) {
            var isSupported_1 = false;
            try {
                globalObj.document.addEventListener('test', function () { return undefined; }, {
                    get passive() {
                        isSupported_1 = true;
                        return isSupported_1;
                    },
                });
            }
            catch (e) {
            } // tslint:disable-line:no-empty cannot throw error due to tests. tslint also disables console.log.
            supportsPassive_ = isSupported_1;
        }
        return supportsPassive_ ? { passive: true } : false;
    }
    //# sourceMappingURL=events.js.map

    /**
     * @license
     * Copyright 2018 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    /**
     * @fileoverview A "ponyfill" is a polyfill that doesn't modify the global prototype chain.
     * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.
     */
    function closest(element, selector) {
        if (element.closest) {
            return element.closest(selector);
        }
        var el = element;
        while (el) {
            if (matches(el, selector)) {
                return el;
            }
            el = el.parentElement;
        }
        return null;
    }
    function matches(element, selector) {
        var nativeMatches = element.matches
            || element.webkitMatchesSelector
            || element.msMatchesSelector;
        return nativeMatches.call(element, selector);
    }
    //# sourceMappingURL=ponyfill.js.map

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var cssClasses = {
        // Ripple is a special case where the "root" component is really a "mixin" of sorts,
        // given that it's an 'upgrade' to an existing component. That being said it is the root
        // CSS class that all other CSS classes derive from.
        BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',
        FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',
        FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',
        ROOT: 'mdc-ripple-upgraded',
        UNBOUNDED: 'mdc-ripple-upgraded--unbounded',
    };
    var strings = {
        VAR_FG_SCALE: '--mdc-ripple-fg-scale',
        VAR_FG_SIZE: '--mdc-ripple-fg-size',
        VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',
        VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',
        VAR_LEFT: '--mdc-ripple-left',
        VAR_TOP: '--mdc-ripple-top',
    };
    var numbers = {
        DEACTIVATION_TIMEOUT_MS: 225,
        FG_DEACTIVATION_MS: 150,
        INITIAL_ORIGIN_SCALE: 0.6,
        PADDING: 10,
        TAP_DELAY_MS: 300,
    };

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    // Activation events registered on the root element of each instance for activation
    var ACTIVATION_EVENT_TYPES = [
        'touchstart', 'pointerdown', 'mousedown', 'keydown',
    ];
    // Deactivation events registered on documentElement when a pointer-related down event occurs
    var POINTER_DEACTIVATION_EVENT_TYPES = [
        'touchend', 'pointerup', 'mouseup', 'contextmenu',
    ];
    // simultaneous nested activations
    var activatedTargets = [];
    var MDCRippleFoundation = /** @class */ (function (_super) {
        __extends(MDCRippleFoundation, _super);
        function MDCRippleFoundation(adapter) {
            var _this = _super.call(this, __assign({}, MDCRippleFoundation.defaultAdapter, adapter)) || this;
            _this.activationAnimationHasEnded_ = false;
            _this.activationTimer_ = 0;
            _this.fgDeactivationRemovalTimer_ = 0;
            _this.fgScale_ = '0';
            _this.frame_ = { width: 0, height: 0 };
            _this.initialSize_ = 0;
            _this.layoutFrame_ = 0;
            _this.maxRadius_ = 0;
            _this.unboundedCoords_ = { left: 0, top: 0 };
            _this.activationState_ = _this.defaultActivationState_();
            _this.activationTimerCallback_ = function () {
                _this.activationAnimationHasEnded_ = true;
                _this.runDeactivationUXLogicIfReady_();
            };
            _this.activateHandler_ = function (e) { return _this.activate_(e); };
            _this.deactivateHandler_ = function () { return _this.deactivate_(); };
            _this.focusHandler_ = function () { return _this.handleFocus(); };
            _this.blurHandler_ = function () { return _this.handleBlur(); };
            _this.resizeHandler_ = function () { return _this.layout(); };
            return _this;
        }
        Object.defineProperty(MDCRippleFoundation, "cssClasses", {
            get: function () {
                return cssClasses;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCRippleFoundation, "strings", {
            get: function () {
                return strings;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCRippleFoundation, "numbers", {
            get: function () {
                return numbers;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCRippleFoundation, "defaultAdapter", {
            get: function () {
                return {
                    addClass: function () { return undefined; },
                    browserSupportsCssVars: function () { return true; },
                    computeBoundingRect: function () { return ({ top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 }); },
                    containsEventTarget: function () { return true; },
                    deregisterDocumentInteractionHandler: function () { return undefined; },
                    deregisterInteractionHandler: function () { return undefined; },
                    deregisterResizeHandler: function () { return undefined; },
                    getWindowPageOffset: function () { return ({ x: 0, y: 0 }); },
                    isSurfaceActive: function () { return true; },
                    isSurfaceDisabled: function () { return true; },
                    isUnbounded: function () { return true; },
                    registerDocumentInteractionHandler: function () { return undefined; },
                    registerInteractionHandler: function () { return undefined; },
                    registerResizeHandler: function () { return undefined; },
                    removeClass: function () { return undefined; },
                    updateCssVariable: function () { return undefined; },
                };
            },
            enumerable: true,
            configurable: true
        });
        MDCRippleFoundation.prototype.init = function () {
            var _this = this;
            var supportsPressRipple = this.supportsPressRipple_();
            this.registerRootHandlers_(supportsPressRipple);
            if (supportsPressRipple) {
                var _a = MDCRippleFoundation.cssClasses, ROOT_1 = _a.ROOT, UNBOUNDED_1 = _a.UNBOUNDED;
                requestAnimationFrame(function () {
                    _this.adapter_.addClass(ROOT_1);
                    if (_this.adapter_.isUnbounded()) {
                        _this.adapter_.addClass(UNBOUNDED_1);
                        // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple
                        _this.layoutInternal_();
                    }
                });
            }
        };
        MDCRippleFoundation.prototype.destroy = function () {
            var _this = this;
            if (this.supportsPressRipple_()) {
                if (this.activationTimer_) {
                    clearTimeout(this.activationTimer_);
                    this.activationTimer_ = 0;
                    this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);
                }
                if (this.fgDeactivationRemovalTimer_) {
                    clearTimeout(this.fgDeactivationRemovalTimer_);
                    this.fgDeactivationRemovalTimer_ = 0;
                    this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);
                }
                var _a = MDCRippleFoundation.cssClasses, ROOT_2 = _a.ROOT, UNBOUNDED_2 = _a.UNBOUNDED;
                requestAnimationFrame(function () {
                    _this.adapter_.removeClass(ROOT_2);
                    _this.adapter_.removeClass(UNBOUNDED_2);
                    _this.removeCssVars_();
                });
            }
            this.deregisterRootHandlers_();
            this.deregisterDeactivationHandlers_();
        };
        /**
         * @param evt Optional event containing position information.
         */
        MDCRippleFoundation.prototype.activate = function (evt) {
            this.activate_(evt);
        };
        MDCRippleFoundation.prototype.deactivate = function () {
            this.deactivate_();
        };
        MDCRippleFoundation.prototype.layout = function () {
            var _this = this;
            if (this.layoutFrame_) {
                cancelAnimationFrame(this.layoutFrame_);
            }
            this.layoutFrame_ = requestAnimationFrame(function () {
                _this.layoutInternal_();
                _this.layoutFrame_ = 0;
            });
        };
        MDCRippleFoundation.prototype.setUnbounded = function (unbounded) {
            var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;
            if (unbounded) {
                this.adapter_.addClass(UNBOUNDED);
            }
            else {
                this.adapter_.removeClass(UNBOUNDED);
            }
        };
        MDCRippleFoundation.prototype.handleFocus = function () {
            var _this = this;
            requestAnimationFrame(function () {
                return _this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
            });
        };
        MDCRippleFoundation.prototype.handleBlur = function () {
            var _this = this;
            requestAnimationFrame(function () {
                return _this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);
            });
        };
        /**
         * We compute this property so that we are not querying information about the client
         * until the point in time where the foundation requests it. This prevents scenarios where
         * client-side feature-detection may happen too early, such as when components are rendered on the server
         * and then initialized at mount time on the client.
         */
        MDCRippleFoundation.prototype.supportsPressRipple_ = function () {
            return this.adapter_.browserSupportsCssVars();
        };
        MDCRippleFoundation.prototype.defaultActivationState_ = function () {
            return {
                activationEvent: undefined,
                hasDeactivationUXRun: false,
                isActivated: false,
                isProgrammatic: false,
                wasActivatedByPointer: false,
                wasElementMadeActive: false,
            };
        };
        /**
         * supportsPressRipple Passed from init to save a redundant function call
         */
        MDCRippleFoundation.prototype.registerRootHandlers_ = function (supportsPressRipple) {
            var _this = this;
            if (supportsPressRipple) {
                ACTIVATION_EVENT_TYPES.forEach(function (evtType) {
                    _this.adapter_.registerInteractionHandler(evtType, _this.activateHandler_);
                });
                if (this.adapter_.isUnbounded()) {
                    this.adapter_.registerResizeHandler(this.resizeHandler_);
                }
            }
            this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
            this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
        };
        MDCRippleFoundation.prototype.registerDeactivationHandlers_ = function (evt) {
            var _this = this;
            if (evt.type === 'keydown') {
                this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);
            }
            else {
                POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (evtType) {
                    _this.adapter_.registerDocumentInteractionHandler(evtType, _this.deactivateHandler_);
                });
            }
        };
        MDCRippleFoundation.prototype.deregisterRootHandlers_ = function () {
            var _this = this;
            ACTIVATION_EVENT_TYPES.forEach(function (evtType) {
                _this.adapter_.deregisterInteractionHandler(evtType, _this.activateHandler_);
            });
            this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
            this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);
            if (this.adapter_.isUnbounded()) {
                this.adapter_.deregisterResizeHandler(this.resizeHandler_);
            }
        };
        MDCRippleFoundation.prototype.deregisterDeactivationHandlers_ = function () {
            var _this = this;
            this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);
            POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (evtType) {
                _this.adapter_.deregisterDocumentInteractionHandler(evtType, _this.deactivateHandler_);
            });
        };
        MDCRippleFoundation.prototype.removeCssVars_ = function () {
            var _this = this;
            var rippleStrings = MDCRippleFoundation.strings;
            var keys = Object.keys(rippleStrings);
            keys.forEach(function (key) {
                if (key.indexOf('VAR_') === 0) {
                    _this.adapter_.updateCssVariable(rippleStrings[key], null);
                }
            });
        };
        MDCRippleFoundation.prototype.activate_ = function (evt) {
            var _this = this;
            if (this.adapter_.isSurfaceDisabled()) {
                return;
            }
            var activationState = this.activationState_;
            if (activationState.isActivated) {
                return;
            }
            // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction
            var previousActivationEvent = this.previousActivationEvent_;
            var isSameInteraction = previousActivationEvent && evt !== undefined && previousActivationEvent.type !== evt.type;
            if (isSameInteraction) {
                return;
            }
            activationState.isActivated = true;
            activationState.isProgrammatic = evt === undefined;
            activationState.activationEvent = evt;
            activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : evt !== undefined && (evt.type === 'mousedown' || evt.type === 'touchstart' || evt.type === 'pointerdown');
            var hasActivatedChild = evt !== undefined && activatedTargets.length > 0 && activatedTargets.some(function (target) { return _this.adapter_.containsEventTarget(target); });
            if (hasActivatedChild) {
                // Immediately reset activation state, while preserving logic that prevents touch follow-on events
                this.resetActivationState_();
                return;
            }
            if (evt !== undefined) {
                activatedTargets.push(evt.target);
                this.registerDeactivationHandlers_(evt);
            }
            activationState.wasElementMadeActive = this.checkElementMadeActive_(evt);
            if (activationState.wasElementMadeActive) {
                this.animateActivation_();
            }
            requestAnimationFrame(function () {
                // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples
                activatedTargets = [];
                if (!activationState.wasElementMadeActive
                    && evt !== undefined
                    && (evt.key === ' ' || evt.keyCode === 32)) {
                    // If space was pressed, try again within an rAF call to detect :active, because different UAs report
                    // active states inconsistently when they're called within event handling code:
                    // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971
                    // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741
                    // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS
                    // variable is set within a rAF callback for a submit button interaction (#2241).
                    activationState.wasElementMadeActive = _this.checkElementMadeActive_(evt);
                    if (activationState.wasElementMadeActive) {
                        _this.animateActivation_();
                    }
                }
                if (!activationState.wasElementMadeActive) {
                    // Reset activation state immediately if element was not made active.
                    _this.activationState_ = _this.defaultActivationState_();
                }
            });
        };
        MDCRippleFoundation.prototype.checkElementMadeActive_ = function (evt) {
            return (evt !== undefined && evt.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;
        };
        MDCRippleFoundation.prototype.animateActivation_ = function () {
            var _this = this;
            var _a = MDCRippleFoundation.strings, VAR_FG_TRANSLATE_START = _a.VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END = _a.VAR_FG_TRANSLATE_END;
            var _b = MDCRippleFoundation.cssClasses, FG_DEACTIVATION = _b.FG_DEACTIVATION, FG_ACTIVATION = _b.FG_ACTIVATION;
            var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;
            this.layoutInternal_();
            var translateStart = '';
            var translateEnd = '';
            if (!this.adapter_.isUnbounded()) {
                var _c = this.getFgTranslationCoordinates_(), startPoint = _c.startPoint, endPoint = _c.endPoint;
                translateStart = startPoint.x + "px, " + startPoint.y + "px";
                translateEnd = endPoint.x + "px, " + endPoint.y + "px";
            }
            this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);
            this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);
            // Cancel any ongoing activation/deactivation animations
            clearTimeout(this.activationTimer_);
            clearTimeout(this.fgDeactivationRemovalTimer_);
            this.rmBoundedActivationClasses_();
            this.adapter_.removeClass(FG_DEACTIVATION);
            // Force layout in order to re-trigger the animation.
            this.adapter_.computeBoundingRect();
            this.adapter_.addClass(FG_ACTIVATION);
            this.activationTimer_ = setTimeout(function () { return _this.activationTimerCallback_(); }, DEACTIVATION_TIMEOUT_MS);
        };
        MDCRippleFoundation.prototype.getFgTranslationCoordinates_ = function () {
            var _a = this.activationState_, activationEvent = _a.activationEvent, wasActivatedByPointer = _a.wasActivatedByPointer;
            var startPoint;
            if (wasActivatedByPointer) {
                startPoint = getNormalizedEventCoords(activationEvent, this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect());
            }
            else {
                startPoint = {
                    x: this.frame_.width / 2,
                    y: this.frame_.height / 2,
                };
            }
            // Center the element around the start point.
            startPoint = {
                x: startPoint.x - (this.initialSize_ / 2),
                y: startPoint.y - (this.initialSize_ / 2),
            };
            var endPoint = {
                x: (this.frame_.width / 2) - (this.initialSize_ / 2),
                y: (this.frame_.height / 2) - (this.initialSize_ / 2),
            };
            return { startPoint: startPoint, endPoint: endPoint };
        };
        MDCRippleFoundation.prototype.runDeactivationUXLogicIfReady_ = function () {
            var _this = this;
            // This method is called both when a pointing device is released, and when the activation animation ends.
            // The deactivation animation should only run after both of those occur.
            var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;
            var _a = this.activationState_, hasDeactivationUXRun = _a.hasDeactivationUXRun, isActivated = _a.isActivated;
            var activationHasEnded = hasDeactivationUXRun || !isActivated;
            if (activationHasEnded && this.activationAnimationHasEnded_) {
                this.rmBoundedActivationClasses_();
                this.adapter_.addClass(FG_DEACTIVATION);
                this.fgDeactivationRemovalTimer_ = setTimeout(function () {
                    _this.adapter_.removeClass(FG_DEACTIVATION);
                }, numbers.FG_DEACTIVATION_MS);
            }
        };
        MDCRippleFoundation.prototype.rmBoundedActivationClasses_ = function () {
            var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;
            this.adapter_.removeClass(FG_ACTIVATION);
            this.activationAnimationHasEnded_ = false;
            this.adapter_.computeBoundingRect();
        };
        MDCRippleFoundation.prototype.resetActivationState_ = function () {
            var _this = this;
            this.previousActivationEvent_ = this.activationState_.activationEvent;
            this.activationState_ = this.defaultActivationState_();
            // Touch devices may fire additional events for the same interaction within a short time.
            // Store the previous event until it's safe to assume that subsequent events are for new interactions.
            setTimeout(function () { return _this.previousActivationEvent_ = undefined; }, MDCRippleFoundation.numbers.TAP_DELAY_MS);
        };
        MDCRippleFoundation.prototype.deactivate_ = function () {
            var _this = this;
            var activationState = this.activationState_;
            // This can happen in scenarios such as when you have a keyup event that blurs the element.
            if (!activationState.isActivated) {
                return;
            }
            var state = __assign({}, activationState);
            if (activationState.isProgrammatic) {
                requestAnimationFrame(function () { return _this.animateDeactivation_(state); });
                this.resetActivationState_();
            }
            else {
                this.deregisterDeactivationHandlers_();
                requestAnimationFrame(function () {
                    _this.activationState_.hasDeactivationUXRun = true;
                    _this.animateDeactivation_(state);
                    _this.resetActivationState_();
                });
            }
        };
        MDCRippleFoundation.prototype.animateDeactivation_ = function (_a) {
            var wasActivatedByPointer = _a.wasActivatedByPointer, wasElementMadeActive = _a.wasElementMadeActive;
            if (wasActivatedByPointer || wasElementMadeActive) {
                this.runDeactivationUXLogicIfReady_();
            }
        };
        MDCRippleFoundation.prototype.layoutInternal_ = function () {
            var _this = this;
            this.frame_ = this.adapter_.computeBoundingRect();
            var maxDim = Math.max(this.frame_.height, this.frame_.width);
            // Surface diameter is treated differently for unbounded vs. bounded ripples.
            // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately
            // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically
            // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter
            // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via
            // `overflow: hidden`.
            var getBoundedRadius = function () {
                var hypotenuse = Math.sqrt(Math.pow(_this.frame_.width, 2) + Math.pow(_this.frame_.height, 2));
                return hypotenuse + MDCRippleFoundation.numbers.PADDING;
            };
            this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();
            // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform
            var initialSize = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);
            // Unbounded ripple size should always be even number to equally center align.
            if (this.adapter_.isUnbounded() && initialSize % 2 !== 0) {
                this.initialSize_ = initialSize - 1;
            }
            else {
                this.initialSize_ = initialSize;
            }
            this.fgScale_ = "" + this.maxRadius_ / this.initialSize_;
            this.updateLayoutCssVars_();
        };
        MDCRippleFoundation.prototype.updateLayoutCssVars_ = function () {
            var _a = MDCRippleFoundation.strings, VAR_FG_SIZE = _a.VAR_FG_SIZE, VAR_LEFT = _a.VAR_LEFT, VAR_TOP = _a.VAR_TOP, VAR_FG_SCALE = _a.VAR_FG_SCALE;
            this.adapter_.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + "px");
            this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);
            if (this.adapter_.isUnbounded()) {
                this.unboundedCoords_ = {
                    left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),
                    top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),
                };
                this.adapter_.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + "px");
                this.adapter_.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + "px");
            }
        };
        return MDCRippleFoundation;
    }(MDCFoundation));
    //# sourceMappingURL=foundation.js.map

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCRipple = /** @class */ (function (_super) {
        __extends(MDCRipple, _super);
        function MDCRipple() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.disabled = false;
            return _this;
        }
        MDCRipple.attachTo = function (root, opts) {
            if (opts === void 0) { opts = { isUnbounded: undefined }; }
            var ripple = new MDCRipple(root);
            // Only override unbounded behavior if option is explicitly specified
            if (opts.isUnbounded !== undefined) {
                ripple.unbounded = opts.isUnbounded;
            }
            return ripple;
        };
        MDCRipple.createAdapter = function (instance) {
            return {
                addClass: function (className) { return instance.root_.classList.add(className); },
                browserSupportsCssVars: function () { return supportsCssVariables(window); },
                computeBoundingRect: function () { return instance.root_.getBoundingClientRect(); },
                containsEventTarget: function (target) { return instance.root_.contains(target); },
                deregisterDocumentInteractionHandler: function (evtType, handler) {
                    return document.documentElement.removeEventListener(evtType, handler, applyPassive());
                },
                deregisterInteractionHandler: function (evtType, handler) {
                    return instance.root_.removeEventListener(evtType, handler, applyPassive());
                },
                deregisterResizeHandler: function (handler) { return window.removeEventListener('resize', handler); },
                getWindowPageOffset: function () { return ({ x: window.pageXOffset, y: window.pageYOffset }); },
                isSurfaceActive: function () { return matches(instance.root_, ':active'); },
                isSurfaceDisabled: function () { return Boolean(instance.disabled); },
                isUnbounded: function () { return Boolean(instance.unbounded); },
                registerDocumentInteractionHandler: function (evtType, handler) {
                    return document.documentElement.addEventListener(evtType, handler, applyPassive());
                },
                registerInteractionHandler: function (evtType, handler) {
                    return instance.root_.addEventListener(evtType, handler, applyPassive());
                },
                registerResizeHandler: function (handler) { return window.addEventListener('resize', handler); },
                removeClass: function (className) { return instance.root_.classList.remove(className); },
                updateCssVariable: function (varName, value) { return instance.root_.style.setProperty(varName, value); },
            };
        };
        Object.defineProperty(MDCRipple.prototype, "unbounded", {
            get: function () {
                return Boolean(this.unbounded_);
            },
            set: function (unbounded) {
                this.unbounded_ = Boolean(unbounded);
                this.setUnbounded_();
            },
            enumerable: true,
            configurable: true
        });
        MDCRipple.prototype.activate = function () {
            this.foundation_.activate();
        };
        MDCRipple.prototype.deactivate = function () {
            this.foundation_.deactivate();
        };
        MDCRipple.prototype.layout = function () {
            this.foundation_.layout();
        };
        MDCRipple.prototype.getDefaultFoundation = function () {
            return new MDCRippleFoundation(MDCRipple.createAdapter(this));
        };
        MDCRipple.prototype.initialSyncWithDOM = function () {
            var root = this.root_;
            this.unbounded = 'mdcRippleIsUnbounded' in root.dataset;
        };
        /**
         * Closure Compiler throws an access control error when directly accessing a
         * protected or private property inside a getter/setter, like unbounded above.
         * By accessing the protected property inside a method, we solve that problem.
         * That's why this function exists.
         */
        MDCRipple.prototype.setUnbounded_ = function () {
            this.foundation_.setUnbounded(Boolean(this.unbounded_));
        };
        return MDCRipple;
    }(MDCComponent));

    function Ripple(node, props = {ripple: false, unbounded: false, disabled: false, color: null, classForward: () => {}}) {
      let instance = null;
      let addLayoutListener = getContext('SMUI:addLayoutListener');
      let removeLayoutListener;
      let classList = [];
      let rippleCapableSurface = {
        get root_() {
          return node;
        },

        get unbounded() {
          return props.unbounded;
        },

        set unbounded(value) {
          return props.unbounded = value;
        },

        get disabled() {
          return props.disabled;
        },

        set disabled(value) {
          return props.disabled = value;
        }
      };

      function addClass(className) {
        const idx = classList.indexOf(className);
        if (idx === -1) {
          node.classList.add(className);
          classList.push(className);
          if (props.classForward) {
            props.classForward(classList);
          }
        }
      }

      function removeClass(className) {
        const idx = classList.indexOf(className);
        if (idx !== -1) {
          node.classList.remove(className);
          classList.splice(idx, 1);
          if (props.classForward) {
            props.classForward(classList);
          }
        }
      }

      function handleProps() {
        if (props.ripple && !instance) {
          // Override the Ripple component's adapter, so that we can forward classes
          // to Svelte components that overwrite Ripple's classes.
          const foundation = new MDCRippleFoundation({
            ...MDCRipple.createAdapter(rippleCapableSurface),
            addClass: (className) => addClass(className),
            removeClass: (className) => removeClass(className)
          });
          instance = new MDCRipple(node, foundation);
        } else if (instance && !props.ripple) {
          instance.destroy();
          instance = null;
        }
        if (props.ripple) {
          instance.unbounded = !!props.unbounded;
          switch (props.color) {
            case 'surface':
              addClass('mdc-ripple-surface');
              removeClass('mdc-ripple-surface--primary');
              removeClass('mdc-ripple-surface--accent');
              return;
            case 'primary':
              addClass('mdc-ripple-surface');
              addClass('mdc-ripple-surface--primary');
              removeClass('mdc-ripple-surface--accent');
              return;
            case 'secondary':
              addClass('mdc-ripple-surface');
              removeClass('mdc-ripple-surface--primary');
              addClass('mdc-ripple-surface--accent');
              return;
          }
        }
        removeClass('mdc-ripple-surface');
        removeClass('mdc-ripple-surface--primary');
        removeClass('mdc-ripple-surface--accent');
      }

      handleProps();

      if (addLayoutListener) {
        removeLayoutListener = addLayoutListener(layout);
      }

      function layout() {
        if (instance) {
          instance.layout();
        }
      }

      return {
        update(newProps = {ripple: false, unbounded: false, color: null, classForward: []}) {
          props = newProps;
          handleProps();
        },

        destroy() {
          if (instance) {
            instance.destroy();
            instance = null;
            removeClass('mdc-ripple-surface');
            removeClass('mdc-ripple-surface--primary');
            removeClass('mdc-ripple-surface--accent');
          }

          if (removeLayoutListener) {
            removeLayoutListener();
          }
        }
      }
    }

    /* node_modules/@smui/button/Button.svelte generated by Svelte v3.32.1 */
    const file$6 = "node_modules/@smui/button/Button.svelte";

    // (23:1) {#if ripple}
    function create_if_block_1(ctx) {
    	let div;

    	const block = {
    		c: function create() {
    			div = element("div");
    			attr_dev(div, "class", "mdc-button__ripple");
    			add_location(div, file$6, 22, 13, 1114);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1.name,
    		type: "if",
    		source: "(23:1) {#if ripple}",
    		ctx
    	});

    	return block;
    }

    // (23:69) {#if touch}
    function create_if_block(ctx) {
    	let div;

    	const block = {
    		c: function create() {
    			div = element("div");
    			attr_dev(div, "class", "mdc-button__touch");
    			add_location(div, file$6, 22, 80, 1181);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block.name,
    		type: "if",
    		source: "(23:69) {#if touch}",
    		ctx
    	});

    	return block;
    }

    // (1:0) <svelte:component   this={component}   use={[[Ripple, {ripple, unbounded: false, disabled: !!$$props.disabled, classForward: classes => rippleClasses = classes}], forwardEvents, ...use]}   class="     mdc-button     {className}     {rippleClasses.join(' ')}     {variant === 'raised' ? 'mdc-button--raised' : ''}     {variant === 'unelevated' ? 'mdc-button--unelevated' : ''}     {variant === 'outlined' ? 'mdc-button--outlined' : ''}     {color === 'secondary' ? 'smui-button--color-secondary' : ''}     {touch ? 'mdc-button--touch' : ''}     {context === 'card:action' ? 'mdc-card__action' : ''}     {context === 'card:action' ? 'mdc-card__action--button' : ''}     {context === 'dialog:action' ? 'mdc-dialog__button' : ''}     {context === 'top-app-bar:navigation' ? 'mdc-top-app-bar__navigation-icon' : ''}     {context === 'top-app-bar:action' ? 'mdc-top-app-bar__action-item' : ''}     {context === 'snackbar' ? 'mdc-snackbar__action' : ''}   "   {...actionProp}   {...defaultProp}   {...exclude($$props, ['use', 'class', 'ripple', 'color', 'variant', 'touch', 'component', ...dialogExcludes])} >
    function create_default_slot$1(ctx) {
    	let if_block0_anchor;
    	let if_block1_anchor;
    	let current;
    	let if_block0 = /*ripple*/ ctx[2] && create_if_block_1(ctx);
    	const default_slot_template = /*#slots*/ ctx[17].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[19], null);
    	let if_block1 = /*touch*/ ctx[5] && create_if_block(ctx);

    	const block = {
    		c: function create() {
    			if (if_block0) if_block0.c();
    			if_block0_anchor = empty();
    			if (default_slot) default_slot.c();
    			if (if_block1) if_block1.c();
    			if_block1_anchor = empty();
    		},
    		m: function mount(target, anchor) {
    			if (if_block0) if_block0.m(target, anchor);
    			insert_dev(target, if_block0_anchor, anchor);

    			if (default_slot) {
    				default_slot.m(target, anchor);
    			}

    			if (if_block1) if_block1.m(target, anchor);
    			insert_dev(target, if_block1_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (/*ripple*/ ctx[2]) {
    				if (if_block0) ; else {
    					if_block0 = create_if_block_1(ctx);
    					if_block0.c();
    					if_block0.m(if_block0_anchor.parentNode, if_block0_anchor);
    				}
    			} else if (if_block0) {
    				if_block0.d(1);
    				if_block0 = null;
    			}

    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 524288) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[19], dirty, null, null);
    				}
    			}

    			if (/*touch*/ ctx[5]) {
    				if (if_block1) ; else {
    					if_block1 = create_if_block(ctx);
    					if_block1.c();
    					if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
    				}
    			} else if (if_block1) {
    				if_block1.d(1);
    				if_block1 = null;
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (if_block0) if_block0.d(detaching);
    			if (detaching) detach_dev(if_block0_anchor);
    			if (default_slot) default_slot.d(detaching);
    			if (if_block1) if_block1.d(detaching);
    			if (detaching) detach_dev(if_block1_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot$1.name,
    		type: "slot",
    		source: "(1:0) <svelte:component   this={component}   use={[[Ripple, {ripple, unbounded: false, disabled: !!$$props.disabled, classForward: classes => rippleClasses = classes}], forwardEvents, ...use]}   class=\\\"     mdc-button     {className}     {rippleClasses.join(' ')}     {variant === 'raised' ? 'mdc-button--raised' : ''}     {variant === 'unelevated' ? 'mdc-button--unelevated' : ''}     {variant === 'outlined' ? 'mdc-button--outlined' : ''}     {color === 'secondary' ? 'smui-button--color-secondary' : ''}     {touch ? 'mdc-button--touch' : ''}     {context === 'card:action' ? 'mdc-card__action' : ''}     {context === 'card:action' ? 'mdc-card__action--button' : ''}     {context === 'dialog:action' ? 'mdc-dialog__button' : ''}     {context === 'top-app-bar:navigation' ? 'mdc-top-app-bar__navigation-icon' : ''}     {context === 'top-app-bar:action' ? 'mdc-top-app-bar__action-item' : ''}     {context === 'snackbar' ? 'mdc-snackbar__action' : ''}   \\\"   {...actionProp}   {...defaultProp}   {...exclude($$props, ['use', 'class', 'ripple', 'color', 'variant', 'touch', 'component', ...dialogExcludes])} >",
    		ctx
    	});

    	return block;
    }

    function create_fragment$7(ctx) {
    	let switch_instance;
    	let switch_instance_anchor;
    	let current;

    	const switch_instance_spread_levels = [
    		{
    			use: [
    				[
    					Ripple,
    					{
    						ripple: /*ripple*/ ctx[2],
    						unbounded: false,
    						disabled: !!/*$$props*/ ctx[13].disabled,
    						classForward: /*func*/ ctx[18]
    					}
    				],
    				/*forwardEvents*/ ctx[11],
    				.../*use*/ ctx[0]
    			]
    		},
    		{
    			class: "\n    mdc-button\n    " + /*className*/ ctx[1] + "\n    " + /*rippleClasses*/ ctx[7].join(" ") + "\n    " + (/*variant*/ ctx[4] === "raised"
    			? "mdc-button--raised"
    			: "") + "\n    " + (/*variant*/ ctx[4] === "unelevated"
    			? "mdc-button--unelevated"
    			: "") + "\n    " + (/*variant*/ ctx[4] === "outlined"
    			? "mdc-button--outlined"
    			: "") + "\n    " + (/*color*/ ctx[3] === "secondary"
    			? "smui-button--color-secondary"
    			: "") + "\n    " + (/*touch*/ ctx[5] ? "mdc-button--touch" : "") + "\n    " + (/*context*/ ctx[12] === "card:action"
    			? "mdc-card__action"
    			: "") + "\n    " + (/*context*/ ctx[12] === "card:action"
    			? "mdc-card__action--button"
    			: "") + "\n    " + (/*context*/ ctx[12] === "dialog:action"
    			? "mdc-dialog__button"
    			: "") + "\n    " + (/*context*/ ctx[12] === "top-app-bar:navigation"
    			? "mdc-top-app-bar__navigation-icon"
    			: "") + "\n    " + (/*context*/ ctx[12] === "top-app-bar:action"
    			? "mdc-top-app-bar__action-item"
    			: "") + "\n    " + (/*context*/ ctx[12] === "snackbar"
    			? "mdc-snackbar__action"
    			: "") + "\n  "
    		},
    		/*actionProp*/ ctx[9],
    		/*defaultProp*/ ctx[10],
    		exclude(/*$$props*/ ctx[13], [
    			"use",
    			"class",
    			"ripple",
    			"color",
    			"variant",
    			"touch",
    			"component",
    			.../*dialogExcludes*/ ctx[8]
    		])
    	];

    	var switch_value = /*component*/ ctx[6];

    	function switch_props(ctx) {
    		let switch_instance_props = {
    			$$slots: { default: [create_default_slot$1] },
    			$$scope: { ctx }
    		};

    		for (let i = 0; i < switch_instance_spread_levels.length; i += 1) {
    			switch_instance_props = assign(switch_instance_props, switch_instance_spread_levels[i]);
    		}

    		return {
    			props: switch_instance_props,
    			$$inline: true
    		};
    	}

    	if (switch_value) {
    		switch_instance = new switch_value(switch_props(ctx));
    	}

    	const block = {
    		c: function create() {
    			if (switch_instance) create_component(switch_instance.$$.fragment);
    			switch_instance_anchor = empty();
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			if (switch_instance) {
    				mount_component(switch_instance, target, anchor);
    			}

    			insert_dev(target, switch_instance_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			const switch_instance_changes = (dirty & /*Ripple, ripple, $$props, rippleClasses, forwardEvents, use, className, variant, color, touch, context, actionProp, defaultProp, exclude, dialogExcludes*/ 16319)
    			? get_spread_update(switch_instance_spread_levels, [
    					dirty & /*Ripple, ripple, $$props, rippleClasses, forwardEvents, use*/ 10373 && {
    						use: [
    							[
    								Ripple,
    								{
    									ripple: /*ripple*/ ctx[2],
    									unbounded: false,
    									disabled: !!/*$$props*/ ctx[13].disabled,
    									classForward: /*func*/ ctx[18]
    								}
    							],
    							/*forwardEvents*/ ctx[11],
    							.../*use*/ ctx[0]
    						]
    					},
    					dirty & /*className, rippleClasses, variant, color, touch, context*/ 4282 && {
    						class: "\n    mdc-button\n    " + /*className*/ ctx[1] + "\n    " + /*rippleClasses*/ ctx[7].join(" ") + "\n    " + (/*variant*/ ctx[4] === "raised"
    						? "mdc-button--raised"
    						: "") + "\n    " + (/*variant*/ ctx[4] === "unelevated"
    						? "mdc-button--unelevated"
    						: "") + "\n    " + (/*variant*/ ctx[4] === "outlined"
    						? "mdc-button--outlined"
    						: "") + "\n    " + (/*color*/ ctx[3] === "secondary"
    						? "smui-button--color-secondary"
    						: "") + "\n    " + (/*touch*/ ctx[5] ? "mdc-button--touch" : "") + "\n    " + (/*context*/ ctx[12] === "card:action"
    						? "mdc-card__action"
    						: "") + "\n    " + (/*context*/ ctx[12] === "card:action"
    						? "mdc-card__action--button"
    						: "") + "\n    " + (/*context*/ ctx[12] === "dialog:action"
    						? "mdc-dialog__button"
    						: "") + "\n    " + (/*context*/ ctx[12] === "top-app-bar:navigation"
    						? "mdc-top-app-bar__navigation-icon"
    						: "") + "\n    " + (/*context*/ ctx[12] === "top-app-bar:action"
    						? "mdc-top-app-bar__action-item"
    						: "") + "\n    " + (/*context*/ ctx[12] === "snackbar"
    						? "mdc-snackbar__action"
    						: "") + "\n  "
    					},
    					dirty & /*actionProp*/ 512 && get_spread_object(/*actionProp*/ ctx[9]),
    					dirty & /*defaultProp*/ 1024 && get_spread_object(/*defaultProp*/ ctx[10]),
    					dirty & /*exclude, $$props, dialogExcludes*/ 8448 && get_spread_object(exclude(/*$$props*/ ctx[13], [
    						"use",
    						"class",
    						"ripple",
    						"color",
    						"variant",
    						"touch",
    						"component",
    						.../*dialogExcludes*/ ctx[8]
    					]))
    				])
    			: {};

    			if (dirty & /*$$scope, touch, ripple*/ 524324) {
    				switch_instance_changes.$$scope = { dirty, ctx };
    			}

    			if (switch_value !== (switch_value = /*component*/ ctx[6])) {
    				if (switch_instance) {
    					group_outros();
    					const old_component = switch_instance;

    					transition_out(old_component.$$.fragment, 1, 0, () => {
    						destroy_component(old_component, 1);
    					});

    					check_outros();
    				}

    				if (switch_value) {
    					switch_instance = new switch_value(switch_props(ctx));
    					create_component(switch_instance.$$.fragment);
    					transition_in(switch_instance.$$.fragment, 1);
    					mount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);
    				} else {
    					switch_instance = null;
    				}
    			} else if (switch_value) {
    				switch_instance.$set(switch_instance_changes);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			if (switch_instance) transition_in(switch_instance.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			if (switch_instance) transition_out(switch_instance.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(switch_instance_anchor);
    			if (switch_instance) destroy_component(switch_instance, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$7.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$7($$self, $$props, $$invalidate) {
    	let dialogExcludes;
    	let actionProp;
    	let defaultProp;
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Button", slots, ['default']);
    	const forwardEvents = forwardEventsBuilder(get_current_component());
    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	let { ripple = true } = $$props;
    	let { color = "primary" } = $$props;
    	let { variant = "text" } = $$props;
    	let { touch = false } = $$props;
    	let { href = null } = $$props;
    	let { action = "close" } = $$props;
    	let { default: defaultAction = false } = $$props;
    	let { component = href == null ? Button : A } = $$props;
    	let context = getContext("SMUI:button:context");
    	let rippleClasses = [];
    	setContext("SMUI:label:context", "button");
    	setContext("SMUI:icon:context", "button");
    	const func = classes => $$invalidate(7, rippleClasses = classes);

    	$$self.$$set = $$new_props => {
    		$$invalidate(13, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(0, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(1, className = $$new_props.class);
    		if ("ripple" in $$new_props) $$invalidate(2, ripple = $$new_props.ripple);
    		if ("color" in $$new_props) $$invalidate(3, color = $$new_props.color);
    		if ("variant" in $$new_props) $$invalidate(4, variant = $$new_props.variant);
    		if ("touch" in $$new_props) $$invalidate(5, touch = $$new_props.touch);
    		if ("href" in $$new_props) $$invalidate(14, href = $$new_props.href);
    		if ("action" in $$new_props) $$invalidate(15, action = $$new_props.action);
    		if ("default" in $$new_props) $$invalidate(16, defaultAction = $$new_props.default);
    		if ("component" in $$new_props) $$invalidate(6, component = $$new_props.component);
    		if ("$$scope" in $$new_props) $$invalidate(19, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		setContext,
    		getContext,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		A,
    		Button,
    		Ripple,
    		forwardEvents,
    		use,
    		className,
    		ripple,
    		color,
    		variant,
    		touch,
    		href,
    		action,
    		defaultAction,
    		component,
    		context,
    		rippleClasses,
    		dialogExcludes,
    		actionProp,
    		defaultProp
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(13, $$props = assign(assign({}, $$props), $$new_props));
    		if ("use" in $$props) $$invalidate(0, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(1, className = $$new_props.className);
    		if ("ripple" in $$props) $$invalidate(2, ripple = $$new_props.ripple);
    		if ("color" in $$props) $$invalidate(3, color = $$new_props.color);
    		if ("variant" in $$props) $$invalidate(4, variant = $$new_props.variant);
    		if ("touch" in $$props) $$invalidate(5, touch = $$new_props.touch);
    		if ("href" in $$props) $$invalidate(14, href = $$new_props.href);
    		if ("action" in $$props) $$invalidate(15, action = $$new_props.action);
    		if ("defaultAction" in $$props) $$invalidate(16, defaultAction = $$new_props.defaultAction);
    		if ("component" in $$props) $$invalidate(6, component = $$new_props.component);
    		if ("context" in $$props) $$invalidate(12, context = $$new_props.context);
    		if ("rippleClasses" in $$props) $$invalidate(7, rippleClasses = $$new_props.rippleClasses);
    		if ("dialogExcludes" in $$props) $$invalidate(8, dialogExcludes = $$new_props.dialogExcludes);
    		if ("actionProp" in $$props) $$invalidate(9, actionProp = $$new_props.actionProp);
    		if ("defaultProp" in $$props) $$invalidate(10, defaultProp = $$new_props.defaultProp);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		if ($$self.$$.dirty & /*action*/ 32768) {
    			 $$invalidate(9, actionProp = context === "dialog:action" && action !== null
    			? { "data-mdc-dialog-action": action }
    			: {});
    		}

    		if ($$self.$$.dirty & /*defaultAction*/ 65536) {
    			 $$invalidate(10, defaultProp = context === "dialog:action" && defaultAction
    			? { "data-mdc-dialog-button-default": "" }
    			: {});
    		}
    	};

    	 $$invalidate(8, dialogExcludes = context === "dialog:action" ? ["action", "default"] : []);
    	$$props = exclude_internal_props($$props);

    	return [
    		use,
    		className,
    		ripple,
    		color,
    		variant,
    		touch,
    		component,
    		rippleClasses,
    		dialogExcludes,
    		actionProp,
    		defaultProp,
    		forwardEvents,
    		context,
    		$$props,
    		href,
    		action,
    		defaultAction,
    		slots,
    		func,
    		$$scope
    	];
    }

    class Button_1 extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$7, create_fragment$7, safe_not_equal, {
    			use: 0,
    			class: 1,
    			ripple: 2,
    			color: 3,
    			variant: 4,
    			touch: 5,
    			href: 14,
    			action: 15,
    			default: 16,
    			component: 6
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Button_1",
    			options,
    			id: create_fragment$7.name
    		});
    	}

    	get use() {
    		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get ripple() {
    		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set ripple(value) {
    		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get color() {
    		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set color(value) {
    		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get variant() {
    		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set variant(value) {
    		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get touch() {
    		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set touch(value) {
    		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get href() {
    		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set href(value) {
    		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get action() {
    		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set action(value) {
    		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get default() {
    		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set default(value) {
    		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get component() {
    		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set component(value) {
    		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/@smui/common/Label.svelte generated by Svelte v3.32.1 */
    const file$7 = "node_modules/@smui/common/Label.svelte";

    function create_fragment$8(ctx) {
    	let span;
    	let span_class_value;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[7].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[6], null);

    	let span_levels = [
    		{
    			class: span_class_value = "\n    " + /*className*/ ctx[1] + "\n    " + (/*context*/ ctx[3] === "button"
    			? "mdc-button__label"
    			: "") + "\n    " + (/*context*/ ctx[3] === "fab" ? "mdc-fab__label" : "") + "\n    " + (/*context*/ ctx[3] === "tab"
    			? "mdc-tab__text-label"
    			: "") + "\n    " + (/*context*/ ctx[3] === "image-list"
    			? "mdc-image-list__label"
    			: "") + "\n    " + (/*context*/ ctx[3] === "snackbar"
    			? "mdc-snackbar__label"
    			: "") + "\n  "
    		},
    		/*context*/ ctx[3] === "snackbar"
    		? { role: "status", "aria-live": "polite" }
    		: {},
    		/*tabindex*/ ctx[4] != null
    		? { tabindex: /*tabindex*/ ctx[4] }
    		: {},
    		exclude(/*$$props*/ ctx[5], ["use", "class"])
    	];

    	let span_data = {};

    	for (let i = 0; i < span_levels.length; i += 1) {
    		span_data = assign(span_data, span_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			span = element("span");
    			if (default_slot) default_slot.c();
    			set_attributes(span, span_data);
    			add_location(span, file$7, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, span, anchor);

    			if (default_slot) {
    				default_slot.m(span, null);
    			}

    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, span, /*use*/ ctx[0])),
    					action_destroyer(/*forwardEvents*/ ctx[2].call(null, span))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 64) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[6], dirty, null, null);
    				}
    			}

    			set_attributes(span, span_data = get_spread_update(span_levels, [
    				(!current || dirty & /*className*/ 2 && span_class_value !== (span_class_value = "\n    " + /*className*/ ctx[1] + "\n    " + (/*context*/ ctx[3] === "button"
    				? "mdc-button__label"
    				: "") + "\n    " + (/*context*/ ctx[3] === "fab" ? "mdc-fab__label" : "") + "\n    " + (/*context*/ ctx[3] === "tab"
    				? "mdc-tab__text-label"
    				: "") + "\n    " + (/*context*/ ctx[3] === "image-list"
    				? "mdc-image-list__label"
    				: "") + "\n    " + (/*context*/ ctx[3] === "snackbar"
    				? "mdc-snackbar__label"
    				: "") + "\n  ")) && { class: span_class_value },
    				/*context*/ ctx[3] === "snackbar"
    				? { role: "status", "aria-live": "polite" }
    				: {},
    				/*tabindex*/ ctx[4] != null
    				? { tabindex: /*tabindex*/ ctx[4] }
    				: {},
    				dirty & /*$$props*/ 32 && exclude(/*$$props*/ ctx[5], ["use", "class"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 1) useActions_action.update.call(null, /*use*/ ctx[0]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(span);
    			if (default_slot) default_slot.d(detaching);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$8.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$8($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Label", slots, ['default']);
    	const forwardEvents = forwardEventsBuilder(get_current_component());
    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	const context = getContext("SMUI:label:context");
    	const tabindex = getContext("SMUI:label:tabindex");

    	$$self.$$set = $$new_props => {
    		$$invalidate(5, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(0, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(1, className = $$new_props.class);
    		if ("$$scope" in $$new_props) $$invalidate(6, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		getContext,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		forwardEvents,
    		use,
    		className,
    		context,
    		tabindex
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(5, $$props = assign(assign({}, $$props), $$new_props));
    		if ("use" in $$props) $$invalidate(0, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(1, className = $$new_props.className);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);
    	return [use, className, forwardEvents, context, tabindex, $$props, $$scope, slots];
    }

    class Label extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$8, create_fragment$8, safe_not_equal, { use: 0, class: 1 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Label",
    			options,
    			id: create_fragment$8.name
    		});
    	}

    	get use() {
    		throw new Error("<Label>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<Label>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<Label>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<Label>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var cssClasses$1 = {
        LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',
        LABEL_SHAKE: 'mdc-floating-label--shake',
        ROOT: 'mdc-floating-label',
    };

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCFloatingLabelFoundation = /** @class */ (function (_super) {
        __extends(MDCFloatingLabelFoundation, _super);
        function MDCFloatingLabelFoundation(adapter) {
            var _this = _super.call(this, __assign({}, MDCFloatingLabelFoundation.defaultAdapter, adapter)) || this;
            _this.shakeAnimationEndHandler_ = function () { return _this.handleShakeAnimationEnd_(); };
            return _this;
        }
        Object.defineProperty(MDCFloatingLabelFoundation, "cssClasses", {
            get: function () {
                return cssClasses$1;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCFloatingLabelFoundation, "defaultAdapter", {
            /**
             * See {@link MDCFloatingLabelAdapter} for typing information on parameters and return types.
             */
            get: function () {
                // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
                return {
                    addClass: function () { return undefined; },
                    removeClass: function () { return undefined; },
                    getWidth: function () { return 0; },
                    registerInteractionHandler: function () { return undefined; },
                    deregisterInteractionHandler: function () { return undefined; },
                };
                // tslint:enable:object-literal-sort-keys
            },
            enumerable: true,
            configurable: true
        });
        MDCFloatingLabelFoundation.prototype.init = function () {
            this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);
        };
        MDCFloatingLabelFoundation.prototype.destroy = function () {
            this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);
        };
        /**
         * Returns the width of the label element.
         */
        MDCFloatingLabelFoundation.prototype.getWidth = function () {
            return this.adapter_.getWidth();
        };
        /**
         * Styles the label to produce a shake animation to indicate an error.
         * @param shouldShake If true, adds the shake CSS class; otherwise, removes shake class.
         */
        MDCFloatingLabelFoundation.prototype.shake = function (shouldShake) {
            var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;
            if (shouldShake) {
                this.adapter_.addClass(LABEL_SHAKE);
            }
            else {
                this.adapter_.removeClass(LABEL_SHAKE);
            }
        };
        /**
         * Styles the label to float or dock.
         * @param shouldFloat If true, adds the float CSS class; otherwise, removes float and shake classes to dock the label.
         */
        MDCFloatingLabelFoundation.prototype.float = function (shouldFloat) {
            var _a = MDCFloatingLabelFoundation.cssClasses, LABEL_FLOAT_ABOVE = _a.LABEL_FLOAT_ABOVE, LABEL_SHAKE = _a.LABEL_SHAKE;
            if (shouldFloat) {
                this.adapter_.addClass(LABEL_FLOAT_ABOVE);
            }
            else {
                this.adapter_.removeClass(LABEL_FLOAT_ABOVE);
                this.adapter_.removeClass(LABEL_SHAKE);
            }
        };
        MDCFloatingLabelFoundation.prototype.handleShakeAnimationEnd_ = function () {
            var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;
            this.adapter_.removeClass(LABEL_SHAKE);
        };
        return MDCFloatingLabelFoundation;
    }(MDCFoundation));

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCFloatingLabel = /** @class */ (function (_super) {
        __extends(MDCFloatingLabel, _super);
        function MDCFloatingLabel() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        MDCFloatingLabel.attachTo = function (root) {
            return new MDCFloatingLabel(root);
        };
        /**
         * Styles the label to produce the label shake for errors.
         * @param shouldShake If true, shakes the label by adding a CSS class; otherwise, stops shaking by removing the class.
         */
        MDCFloatingLabel.prototype.shake = function (shouldShake) {
            this.foundation_.shake(shouldShake);
        };
        /**
         * Styles the label to float/dock.
         * @param shouldFloat If true, floats the label by adding a CSS class; otherwise, docks it by removing the class.
         */
        MDCFloatingLabel.prototype.float = function (shouldFloat) {
            this.foundation_.float(shouldFloat);
        };
        MDCFloatingLabel.prototype.getWidth = function () {
            return this.foundation_.getWidth();
        };
        MDCFloatingLabel.prototype.getDefaultFoundation = function () {
            var _this = this;
            // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.
            // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.
            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
            var adapter = {
                addClass: function (className) { return _this.root_.classList.add(className); },
                removeClass: function (className) { return _this.root_.classList.remove(className); },
                getWidth: function () { return _this.root_.scrollWidth; },
                registerInteractionHandler: function (evtType, handler) { return _this.listen(evtType, handler); },
                deregisterInteractionHandler: function (evtType, handler) { return _this.unlisten(evtType, handler); },
            };
            // tslint:enable:object-literal-sort-keys
            return new MDCFloatingLabelFoundation(adapter);
        };
        return MDCFloatingLabel;
    }(MDCComponent));

    /**
     * @license
     * Copyright 2018 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var cssClasses$2 = {
        LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',
        LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',
    };

    /**
     * @license
     * Copyright 2018 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCLineRippleFoundation = /** @class */ (function (_super) {
        __extends(MDCLineRippleFoundation, _super);
        function MDCLineRippleFoundation(adapter) {
            var _this = _super.call(this, __assign({}, MDCLineRippleFoundation.defaultAdapter, adapter)) || this;
            _this.transitionEndHandler_ = function (evt) { return _this.handleTransitionEnd(evt); };
            return _this;
        }
        Object.defineProperty(MDCLineRippleFoundation, "cssClasses", {
            get: function () {
                return cssClasses$2;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCLineRippleFoundation, "defaultAdapter", {
            /**
             * See {@link MDCLineRippleAdapter} for typing information on parameters and return types.
             */
            get: function () {
                // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
                return {
                    addClass: function () { return undefined; },
                    removeClass: function () { return undefined; },
                    hasClass: function () { return false; },
                    setStyle: function () { return undefined; },
                    registerEventHandler: function () { return undefined; },
                    deregisterEventHandler: function () { return undefined; },
                };
                // tslint:enable:object-literal-sort-keys
            },
            enumerable: true,
            configurable: true
        });
        MDCLineRippleFoundation.prototype.init = function () {
            this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);
        };
        MDCLineRippleFoundation.prototype.destroy = function () {
            this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);
        };
        MDCLineRippleFoundation.prototype.activate = function () {
            this.adapter_.removeClass(cssClasses$2.LINE_RIPPLE_DEACTIVATING);
            this.adapter_.addClass(cssClasses$2.LINE_RIPPLE_ACTIVE);
        };
        MDCLineRippleFoundation.prototype.setRippleCenter = function (xCoordinate) {
            this.adapter_.setStyle('transform-origin', xCoordinate + "px center");
        };
        MDCLineRippleFoundation.prototype.deactivate = function () {
            this.adapter_.addClass(cssClasses$2.LINE_RIPPLE_DEACTIVATING);
        };
        MDCLineRippleFoundation.prototype.handleTransitionEnd = function (evt) {
            // Wait for the line ripple to be either transparent or opaque
            // before emitting the animation end event
            var isDeactivating = this.adapter_.hasClass(cssClasses$2.LINE_RIPPLE_DEACTIVATING);
            if (evt.propertyName === 'opacity') {
                if (isDeactivating) {
                    this.adapter_.removeClass(cssClasses$2.LINE_RIPPLE_ACTIVE);
                    this.adapter_.removeClass(cssClasses$2.LINE_RIPPLE_DEACTIVATING);
                }
            }
        };
        return MDCLineRippleFoundation;
    }(MDCFoundation));

    /**
     * @license
     * Copyright 2018 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCLineRipple = /** @class */ (function (_super) {
        __extends(MDCLineRipple, _super);
        function MDCLineRipple() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        MDCLineRipple.attachTo = function (root) {
            return new MDCLineRipple(root);
        };
        /**
         * Activates the line ripple
         */
        MDCLineRipple.prototype.activate = function () {
            this.foundation_.activate();
        };
        /**
         * Deactivates the line ripple
         */
        MDCLineRipple.prototype.deactivate = function () {
            this.foundation_.deactivate();
        };
        /**
         * Sets the transform origin given a user's click location.
         * The `rippleCenter` is the x-coordinate of the middle of the ripple.
         */
        MDCLineRipple.prototype.setRippleCenter = function (xCoordinate) {
            this.foundation_.setRippleCenter(xCoordinate);
        };
        MDCLineRipple.prototype.getDefaultFoundation = function () {
            var _this = this;
            // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.
            // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.
            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
            var adapter = {
                addClass: function (className) { return _this.root_.classList.add(className); },
                removeClass: function (className) { return _this.root_.classList.remove(className); },
                hasClass: function (className) { return _this.root_.classList.contains(className); },
                setStyle: function (propertyName, value) { return _this.root_.style.setProperty(propertyName, value); },
                registerEventHandler: function (evtType, handler) { return _this.listen(evtType, handler); },
                deregisterEventHandler: function (evtType, handler) { return _this.unlisten(evtType, handler); },
            };
            // tslint:enable:object-literal-sort-keys
            return new MDCLineRippleFoundation(adapter);
        };
        return MDCLineRipple;
    }(MDCComponent));

    /**
     * @license
     * Copyright 2018 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var strings$1 = {
        NOTCH_ELEMENT_SELECTOR: '.mdc-notched-outline__notch',
    };
    var numbers$1 = {
        // This should stay in sync with $mdc-notched-outline-padding * 2.
        NOTCH_ELEMENT_PADDING: 8,
    };
    var cssClasses$3 = {
        NO_LABEL: 'mdc-notched-outline--no-label',
        OUTLINE_NOTCHED: 'mdc-notched-outline--notched',
        OUTLINE_UPGRADED: 'mdc-notched-outline--upgraded',
    };

    /**
     * @license
     * Copyright 2017 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCNotchedOutlineFoundation = /** @class */ (function (_super) {
        __extends(MDCNotchedOutlineFoundation, _super);
        function MDCNotchedOutlineFoundation(adapter) {
            return _super.call(this, __assign({}, MDCNotchedOutlineFoundation.defaultAdapter, adapter)) || this;
        }
        Object.defineProperty(MDCNotchedOutlineFoundation, "strings", {
            get: function () {
                return strings$1;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCNotchedOutlineFoundation, "cssClasses", {
            get: function () {
                return cssClasses$3;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCNotchedOutlineFoundation, "numbers", {
            get: function () {
                return numbers$1;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCNotchedOutlineFoundation, "defaultAdapter", {
            /**
             * See {@link MDCNotchedOutlineAdapter} for typing information on parameters and return types.
             */
            get: function () {
                // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
                return {
                    addClass: function () { return undefined; },
                    removeClass: function () { return undefined; },
                    setNotchWidthProperty: function () { return undefined; },
                    removeNotchWidthProperty: function () { return undefined; },
                };
                // tslint:enable:object-literal-sort-keys
            },
            enumerable: true,
            configurable: true
        });
        /**
         * Adds the outline notched selector and updates the notch width calculated based off of notchWidth.
         */
        MDCNotchedOutlineFoundation.prototype.notch = function (notchWidth) {
            var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;
            if (notchWidth > 0) {
                notchWidth += numbers$1.NOTCH_ELEMENT_PADDING; // Add padding from left/right.
            }
            this.adapter_.setNotchWidthProperty(notchWidth);
            this.adapter_.addClass(OUTLINE_NOTCHED);
        };
        /**
         * Removes notched outline selector to close the notch in the outline.
         */
        MDCNotchedOutlineFoundation.prototype.closeNotch = function () {
            var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;
            this.adapter_.removeClass(OUTLINE_NOTCHED);
            this.adapter_.removeNotchWidthProperty();
        };
        return MDCNotchedOutlineFoundation;
    }(MDCFoundation));

    /**
     * @license
     * Copyright 2017 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCNotchedOutline = /** @class */ (function (_super) {
        __extends(MDCNotchedOutline, _super);
        function MDCNotchedOutline() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        MDCNotchedOutline.attachTo = function (root) {
            return new MDCNotchedOutline(root);
        };
        MDCNotchedOutline.prototype.initialSyncWithDOM = function () {
            this.notchElement_ = this.root_.querySelector(strings$1.NOTCH_ELEMENT_SELECTOR);
            var label = this.root_.querySelector('.' + MDCFloatingLabelFoundation.cssClasses.ROOT);
            if (label) {
                label.style.transitionDuration = '0s';
                this.root_.classList.add(cssClasses$3.OUTLINE_UPGRADED);
                requestAnimationFrame(function () {
                    label.style.transitionDuration = '';
                });
            }
            else {
                this.root_.classList.add(cssClasses$3.NO_LABEL);
            }
        };
        /**
         * Updates classes and styles to open the notch to the specified width.
         * @param notchWidth The notch width in the outline.
         */
        MDCNotchedOutline.prototype.notch = function (notchWidth) {
            this.foundation_.notch(notchWidth);
        };
        /**
         * Updates classes and styles to close the notch.
         */
        MDCNotchedOutline.prototype.closeNotch = function () {
            this.foundation_.closeNotch();
        };
        MDCNotchedOutline.prototype.getDefaultFoundation = function () {
            var _this = this;
            // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.
            // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.
            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
            var adapter = {
                addClass: function (className) { return _this.root_.classList.add(className); },
                removeClass: function (className) { return _this.root_.classList.remove(className); },
                setNotchWidthProperty: function (width) { return _this.notchElement_.style.setProperty('width', width + 'px'); },
                removeNotchWidthProperty: function () { return _this.notchElement_.style.removeProperty('width'); },
            };
            // tslint:enable:object-literal-sort-keys
            return new MDCNotchedOutlineFoundation(adapter);
        };
        return MDCNotchedOutline;
    }(MDCComponent));

    /**
     * @license
     * Copyright 2019 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var cssClasses$4 = {
        ROOT: 'mdc-text-field-character-counter',
    };
    var strings$2 = {
        ROOT_SELECTOR: "." + cssClasses$4.ROOT,
    };

    /**
     * @license
     * Copyright 2019 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCTextFieldCharacterCounterFoundation = /** @class */ (function (_super) {
        __extends(MDCTextFieldCharacterCounterFoundation, _super);
        function MDCTextFieldCharacterCounterFoundation(adapter) {
            return _super.call(this, __assign({}, MDCTextFieldCharacterCounterFoundation.defaultAdapter, adapter)) || this;
        }
        Object.defineProperty(MDCTextFieldCharacterCounterFoundation, "cssClasses", {
            get: function () {
                return cssClasses$4;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextFieldCharacterCounterFoundation, "strings", {
            get: function () {
                return strings$2;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextFieldCharacterCounterFoundation, "defaultAdapter", {
            /**
             * See {@link MDCTextFieldCharacterCounterAdapter} for typing information on parameters and return types.
             */
            get: function () {
                return {
                    setContent: function () { return undefined; },
                };
            },
            enumerable: true,
            configurable: true
        });
        MDCTextFieldCharacterCounterFoundation.prototype.setCounterValue = function (currentLength, maxLength) {
            currentLength = Math.min(currentLength, maxLength);
            this.adapter_.setContent(currentLength + " / " + maxLength);
        };
        return MDCTextFieldCharacterCounterFoundation;
    }(MDCFoundation));

    /**
     * @license
     * Copyright 2019 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCTextFieldCharacterCounter = /** @class */ (function (_super) {
        __extends(MDCTextFieldCharacterCounter, _super);
        function MDCTextFieldCharacterCounter() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        MDCTextFieldCharacterCounter.attachTo = function (root) {
            return new MDCTextFieldCharacterCounter(root);
        };
        Object.defineProperty(MDCTextFieldCharacterCounter.prototype, "foundation", {
            get: function () {
                return this.foundation_;
            },
            enumerable: true,
            configurable: true
        });
        MDCTextFieldCharacterCounter.prototype.getDefaultFoundation = function () {
            var _this = this;
            // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.
            // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.
            var adapter = {
                setContent: function (content) {
                    _this.root_.textContent = content;
                },
            };
            return new MDCTextFieldCharacterCounterFoundation(adapter);
        };
        return MDCTextFieldCharacterCounter;
    }(MDCComponent));

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var strings$3 = {
        ARIA_CONTROLS: 'aria-controls',
        ICON_SELECTOR: '.mdc-text-field__icon',
        INPUT_SELECTOR: '.mdc-text-field__input',
        LABEL_SELECTOR: '.mdc-floating-label',
        LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',
        OUTLINE_SELECTOR: '.mdc-notched-outline',
    };
    var cssClasses$5 = {
        DENSE: 'mdc-text-field--dense',
        DISABLED: 'mdc-text-field--disabled',
        FOCUSED: 'mdc-text-field--focused',
        FULLWIDTH: 'mdc-text-field--fullwidth',
        HELPER_LINE: 'mdc-text-field-helper-line',
        INVALID: 'mdc-text-field--invalid',
        NO_LABEL: 'mdc-text-field--no-label',
        OUTLINED: 'mdc-text-field--outlined',
        ROOT: 'mdc-text-field',
        TEXTAREA: 'mdc-text-field--textarea',
        WITH_LEADING_ICON: 'mdc-text-field--with-leading-icon',
        WITH_TRAILING_ICON: 'mdc-text-field--with-trailing-icon',
    };
    var numbers$2 = {
        DENSE_LABEL_SCALE: 0.923,
        LABEL_SCALE: 0.75,
    };
    /**
     * Whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation
     * under the "Validation-related attributes" section.
     */
    var VALIDATION_ATTR_WHITELIST = [
        'pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength',
    ];
    /**
     * Label should always float for these types as they show some UI even if value is empty.
     */
    var ALWAYS_FLOAT_TYPES = [
        'color', 'date', 'datetime-local', 'month', 'range', 'time', 'week',
    ];

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var POINTERDOWN_EVENTS = ['mousedown', 'touchstart'];
    var INTERACTION_EVENTS = ['click', 'keydown'];
    var MDCTextFieldFoundation = /** @class */ (function (_super) {
        __extends(MDCTextFieldFoundation, _super);
        /**
         * @param adapter
         * @param foundationMap Map from subcomponent names to their subfoundations.
         */
        function MDCTextFieldFoundation(adapter, foundationMap) {
            if (foundationMap === void 0) { foundationMap = {}; }
            var _this = _super.call(this, __assign({}, MDCTextFieldFoundation.defaultAdapter, adapter)) || this;
            _this.isFocused_ = false;
            _this.receivedUserInput_ = false;
            _this.isValid_ = true;
            _this.useNativeValidation_ = true;
            _this.helperText_ = foundationMap.helperText;
            _this.characterCounter_ = foundationMap.characterCounter;
            _this.leadingIcon_ = foundationMap.leadingIcon;
            _this.trailingIcon_ = foundationMap.trailingIcon;
            _this.inputFocusHandler_ = function () { return _this.activateFocus(); };
            _this.inputBlurHandler_ = function () { return _this.deactivateFocus(); };
            _this.inputInputHandler_ = function () { return _this.handleInput(); };
            _this.setPointerXOffset_ = function (evt) { return _this.setTransformOrigin(evt); };
            _this.textFieldInteractionHandler_ = function () { return _this.handleTextFieldInteraction(); };
            _this.validationAttributeChangeHandler_ = function (attributesList) { return _this.handleValidationAttributeChange(attributesList); };
            return _this;
        }
        Object.defineProperty(MDCTextFieldFoundation, "cssClasses", {
            get: function () {
                return cssClasses$5;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextFieldFoundation, "strings", {
            get: function () {
                return strings$3;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextFieldFoundation, "numbers", {
            get: function () {
                return numbers$2;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextFieldFoundation.prototype, "shouldAlwaysFloat_", {
            get: function () {
                var type = this.getNativeInput_().type;
                return ALWAYS_FLOAT_TYPES.indexOf(type) >= 0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextFieldFoundation.prototype, "shouldFloat", {
            get: function () {
                return this.shouldAlwaysFloat_ || this.isFocused_ || !!this.getValue() || this.isBadInput_();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextFieldFoundation.prototype, "shouldShake", {
            get: function () {
                return !this.isFocused_ && !this.isValid() && !!this.getValue();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextFieldFoundation, "defaultAdapter", {
            /**
             * See {@link MDCTextFieldAdapter} for typing information on parameters and return types.
             */
            get: function () {
                // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
                return {
                    addClass: function () { return undefined; },
                    removeClass: function () { return undefined; },
                    hasClass: function () { return true; },
                    registerTextFieldInteractionHandler: function () { return undefined; },
                    deregisterTextFieldInteractionHandler: function () { return undefined; },
                    registerInputInteractionHandler: function () { return undefined; },
                    deregisterInputInteractionHandler: function () { return undefined; },
                    registerValidationAttributeChangeHandler: function () { return new MutationObserver(function () { return undefined; }); },
                    deregisterValidationAttributeChangeHandler: function () { return undefined; },
                    getNativeInput: function () { return null; },
                    isFocused: function () { return false; },
                    activateLineRipple: function () { return undefined; },
                    deactivateLineRipple: function () { return undefined; },
                    setLineRippleTransformOrigin: function () { return undefined; },
                    shakeLabel: function () { return undefined; },
                    floatLabel: function () { return undefined; },
                    hasLabel: function () { return false; },
                    getLabelWidth: function () { return 0; },
                    hasOutline: function () { return false; },
                    notchOutline: function () { return undefined; },
                    closeOutline: function () { return undefined; },
                };
                // tslint:enable:object-literal-sort-keys
            },
            enumerable: true,
            configurable: true
        });
        MDCTextFieldFoundation.prototype.init = function () {
            var _this = this;
            if (this.adapter_.isFocused()) {
                this.inputFocusHandler_();
            }
            else if (this.adapter_.hasLabel() && this.shouldFloat) {
                this.notchOutline(true);
                this.adapter_.floatLabel(true);
            }
            this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);
            this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);
            this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);
            POINTERDOWN_EVENTS.forEach(function (evtType) {
                _this.adapter_.registerInputInteractionHandler(evtType, _this.setPointerXOffset_);
            });
            INTERACTION_EVENTS.forEach(function (evtType) {
                _this.adapter_.registerTextFieldInteractionHandler(evtType, _this.textFieldInteractionHandler_);
            });
            this.validationObserver_ =
                this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);
            this.setCharacterCounter_(this.getValue().length);
        };
        MDCTextFieldFoundation.prototype.destroy = function () {
            var _this = this;
            this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);
            this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);
            this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);
            POINTERDOWN_EVENTS.forEach(function (evtType) {
                _this.adapter_.deregisterInputInteractionHandler(evtType, _this.setPointerXOffset_);
            });
            INTERACTION_EVENTS.forEach(function (evtType) {
                _this.adapter_.deregisterTextFieldInteractionHandler(evtType, _this.textFieldInteractionHandler_);
            });
            this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);
        };
        /**
         * Handles user interactions with the Text Field.
         */
        MDCTextFieldFoundation.prototype.handleTextFieldInteraction = function () {
            var nativeInput = this.adapter_.getNativeInput();
            if (nativeInput && nativeInput.disabled) {
                return;
            }
            this.receivedUserInput_ = true;
        };
        /**
         * Handles validation attribute changes
         */
        MDCTextFieldFoundation.prototype.handleValidationAttributeChange = function (attributesList) {
            var _this = this;
            attributesList.some(function (attributeName) {
                if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {
                    _this.styleValidity_(true);
                    return true;
                }
                return false;
            });
            if (attributesList.indexOf('maxlength') > -1) {
                this.setCharacterCounter_(this.getValue().length);
            }
        };
        /**
         * Opens/closes the notched outline.
         */
        MDCTextFieldFoundation.prototype.notchOutline = function (openNotch) {
            if (!this.adapter_.hasOutline()) {
                return;
            }
            if (openNotch) {
                var isDense = this.adapter_.hasClass(cssClasses$5.DENSE);
                var labelScale = isDense ? numbers$2.DENSE_LABEL_SCALE : numbers$2.LABEL_SCALE;
                var labelWidth = this.adapter_.getLabelWidth() * labelScale;
                this.adapter_.notchOutline(labelWidth);
            }
            else {
                this.adapter_.closeOutline();
            }
        };
        /**
         * Activates the text field focus state.
         */
        MDCTextFieldFoundation.prototype.activateFocus = function () {
            this.isFocused_ = true;
            this.styleFocused_(this.isFocused_);
            this.adapter_.activateLineRipple();
            if (this.adapter_.hasLabel()) {
                this.notchOutline(this.shouldFloat);
                this.adapter_.floatLabel(this.shouldFloat);
                this.adapter_.shakeLabel(this.shouldShake);
            }
            if (this.helperText_) {
                this.helperText_.showToScreenReader();
            }
        };
        /**
         * Sets the line ripple's transform origin, so that the line ripple activate
         * animation will animate out from the user's click location.
         */
        MDCTextFieldFoundation.prototype.setTransformOrigin = function (evt) {
            var touches = evt.touches;
            var targetEvent = touches ? touches[0] : evt;
            var targetClientRect = targetEvent.target.getBoundingClientRect();
            var normalizedX = targetEvent.clientX - targetClientRect.left;
            this.adapter_.setLineRippleTransformOrigin(normalizedX);
        };
        /**
         * Handles input change of text input and text area.
         */
        MDCTextFieldFoundation.prototype.handleInput = function () {
            this.autoCompleteFocus();
            this.setCharacterCounter_(this.getValue().length);
        };
        /**
         * Activates the Text Field's focus state in cases when the input value
         * changes without user input (e.g. programmatically).
         */
        MDCTextFieldFoundation.prototype.autoCompleteFocus = function () {
            if (!this.receivedUserInput_) {
                this.activateFocus();
            }
        };
        /**
         * Deactivates the Text Field's focus state.
         */
        MDCTextFieldFoundation.prototype.deactivateFocus = function () {
            this.isFocused_ = false;
            this.adapter_.deactivateLineRipple();
            var isValid = this.isValid();
            this.styleValidity_(isValid);
            this.styleFocused_(this.isFocused_);
            if (this.adapter_.hasLabel()) {
                this.notchOutline(this.shouldFloat);
                this.adapter_.floatLabel(this.shouldFloat);
                this.adapter_.shakeLabel(this.shouldShake);
            }
            if (!this.shouldFloat) {
                this.receivedUserInput_ = false;
            }
        };
        MDCTextFieldFoundation.prototype.getValue = function () {
            return this.getNativeInput_().value;
        };
        /**
         * @param value The value to set on the input Element.
         */
        MDCTextFieldFoundation.prototype.setValue = function (value) {
            // Prevent Safari from moving the caret to the end of the input when the value has not changed.
            if (this.getValue() !== value) {
                this.getNativeInput_().value = value;
            }
            this.setCharacterCounter_(value.length);
            var isValid = this.isValid();
            this.styleValidity_(isValid);
            if (this.adapter_.hasLabel()) {
                this.notchOutline(this.shouldFloat);
                this.adapter_.floatLabel(this.shouldFloat);
                this.adapter_.shakeLabel(this.shouldShake);
            }
        };
        /**
         * @return The custom validity state, if set; otherwise, the result of a native validity check.
         */
        MDCTextFieldFoundation.prototype.isValid = function () {
            return this.useNativeValidation_
                ? this.isNativeInputValid_() : this.isValid_;
        };
        /**
         * @param isValid Sets the custom validity state of the Text Field.
         */
        MDCTextFieldFoundation.prototype.setValid = function (isValid) {
            this.isValid_ = isValid;
            this.styleValidity_(isValid);
            var shouldShake = !isValid && !this.isFocused_ && !!this.getValue();
            if (this.adapter_.hasLabel()) {
                this.adapter_.shakeLabel(shouldShake);
            }
        };
        /**
         * Enables or disables the use of native validation. Use this for custom validation.
         * @param useNativeValidation Set this to false to ignore native input validation.
         */
        MDCTextFieldFoundation.prototype.setUseNativeValidation = function (useNativeValidation) {
            this.useNativeValidation_ = useNativeValidation;
        };
        MDCTextFieldFoundation.prototype.isDisabled = function () {
            return this.getNativeInput_().disabled;
        };
        /**
         * @param disabled Sets the text-field disabled or enabled.
         */
        MDCTextFieldFoundation.prototype.setDisabled = function (disabled) {
            this.getNativeInput_().disabled = disabled;
            this.styleDisabled_(disabled);
        };
        /**
         * @param content Sets the content of the helper text.
         */
        MDCTextFieldFoundation.prototype.setHelperTextContent = function (content) {
            if (this.helperText_) {
                this.helperText_.setContent(content);
            }
        };
        /**
         * Sets the aria label of the leading icon.
         */
        MDCTextFieldFoundation.prototype.setLeadingIconAriaLabel = function (label) {
            if (this.leadingIcon_) {
                this.leadingIcon_.setAriaLabel(label);
            }
        };
        /**
         * Sets the text content of the leading icon.
         */
        MDCTextFieldFoundation.prototype.setLeadingIconContent = function (content) {
            if (this.leadingIcon_) {
                this.leadingIcon_.setContent(content);
            }
        };
        /**
         * Sets the aria label of the trailing icon.
         */
        MDCTextFieldFoundation.prototype.setTrailingIconAriaLabel = function (label) {
            if (this.trailingIcon_) {
                this.trailingIcon_.setAriaLabel(label);
            }
        };
        /**
         * Sets the text content of the trailing icon.
         */
        MDCTextFieldFoundation.prototype.setTrailingIconContent = function (content) {
            if (this.trailingIcon_) {
                this.trailingIcon_.setContent(content);
            }
        };
        /**
         * Sets character counter values that shows characters used and the total character limit.
         */
        MDCTextFieldFoundation.prototype.setCharacterCounter_ = function (currentLength) {
            if (!this.characterCounter_) {
                return;
            }
            var maxLength = this.getNativeInput_().maxLength;
            if (maxLength === -1) {
                throw new Error('MDCTextFieldFoundation: Expected maxlength html property on text input or textarea.');
            }
            this.characterCounter_.setCounterValue(currentLength, maxLength);
        };
        /**
         * @return True if the Text Field input fails in converting the user-supplied value.
         */
        MDCTextFieldFoundation.prototype.isBadInput_ = function () {
            // The badInput property is not supported in IE 11 💩.
            return this.getNativeInput_().validity.badInput || false;
        };
        /**
         * @return The result of native validity checking (ValidityState.valid).
         */
        MDCTextFieldFoundation.prototype.isNativeInputValid_ = function () {
            return this.getNativeInput_().validity.valid;
        };
        /**
         * Styles the component based on the validity state.
         */
        MDCTextFieldFoundation.prototype.styleValidity_ = function (isValid) {
            var INVALID = MDCTextFieldFoundation.cssClasses.INVALID;
            if (isValid) {
                this.adapter_.removeClass(INVALID);
            }
            else {
                this.adapter_.addClass(INVALID);
            }
            if (this.helperText_) {
                this.helperText_.setValidity(isValid);
            }
        };
        /**
         * Styles the component based on the focused state.
         */
        MDCTextFieldFoundation.prototype.styleFocused_ = function (isFocused) {
            var FOCUSED = MDCTextFieldFoundation.cssClasses.FOCUSED;
            if (isFocused) {
                this.adapter_.addClass(FOCUSED);
            }
            else {
                this.adapter_.removeClass(FOCUSED);
            }
        };
        /**
         * Styles the component based on the disabled state.
         */
        MDCTextFieldFoundation.prototype.styleDisabled_ = function (isDisabled) {
            var _a = MDCTextFieldFoundation.cssClasses, DISABLED = _a.DISABLED, INVALID = _a.INVALID;
            if (isDisabled) {
                this.adapter_.addClass(DISABLED);
                this.adapter_.removeClass(INVALID);
            }
            else {
                this.adapter_.removeClass(DISABLED);
            }
            if (this.leadingIcon_) {
                this.leadingIcon_.setDisabled(isDisabled);
            }
            if (this.trailingIcon_) {
                this.trailingIcon_.setDisabled(isDisabled);
            }
        };
        /**
         * @return The native text input element from the host environment, or an object with the same shape for unit tests.
         */
        MDCTextFieldFoundation.prototype.getNativeInput_ = function () {
            // this.adapter_ may be undefined in foundation unit tests. This happens when testdouble is creating a mock object
            // and invokes the shouldShake/shouldFloat getters (which in turn call getValue(), which calls this method) before
            // init() has been called from the MDCTextField constructor. To work around that issue, we return a dummy object.
            var nativeInput = this.adapter_ ? this.adapter_.getNativeInput() : null;
            return nativeInput || {
                disabled: false,
                maxLength: -1,
                type: 'input',
                validity: {
                    badInput: false,
                    valid: true,
                },
                value: '',
            };
        };
        return MDCTextFieldFoundation;
    }(MDCFoundation));

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var cssClasses$6 = {
        HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',
        HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',
        ROOT: 'mdc-text-field-helper-text',
    };
    var strings$4 = {
        ARIA_HIDDEN: 'aria-hidden',
        ROLE: 'role',
        ROOT_SELECTOR: "." + cssClasses$6.ROOT,
    };

    /**
     * @license
     * Copyright 2017 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCTextFieldHelperTextFoundation = /** @class */ (function (_super) {
        __extends(MDCTextFieldHelperTextFoundation, _super);
        function MDCTextFieldHelperTextFoundation(adapter) {
            return _super.call(this, __assign({}, MDCTextFieldHelperTextFoundation.defaultAdapter, adapter)) || this;
        }
        Object.defineProperty(MDCTextFieldHelperTextFoundation, "cssClasses", {
            get: function () {
                return cssClasses$6;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextFieldHelperTextFoundation, "strings", {
            get: function () {
                return strings$4;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextFieldHelperTextFoundation, "defaultAdapter", {
            /**
             * See {@link MDCTextFieldHelperTextAdapter} for typing information on parameters and return types.
             */
            get: function () {
                // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
                return {
                    addClass: function () { return undefined; },
                    removeClass: function () { return undefined; },
                    hasClass: function () { return false; },
                    setAttr: function () { return undefined; },
                    removeAttr: function () { return undefined; },
                    setContent: function () { return undefined; },
                };
                // tslint:enable:object-literal-sort-keys
            },
            enumerable: true,
            configurable: true
        });
        /**
         * Sets the content of the helper text field.
         */
        MDCTextFieldHelperTextFoundation.prototype.setContent = function (content) {
            this.adapter_.setContent(content);
        };
        /**
         * @param isPersistent Sets the persistency of the helper text.
         */
        MDCTextFieldHelperTextFoundation.prototype.setPersistent = function (isPersistent) {
            if (isPersistent) {
                this.adapter_.addClass(cssClasses$6.HELPER_TEXT_PERSISTENT);
            }
            else {
                this.adapter_.removeClass(cssClasses$6.HELPER_TEXT_PERSISTENT);
            }
        };
        /**
         * @param isValidation True to make the helper text act as an error validation message.
         */
        MDCTextFieldHelperTextFoundation.prototype.setValidation = function (isValidation) {
            if (isValidation) {
                this.adapter_.addClass(cssClasses$6.HELPER_TEXT_VALIDATION_MSG);
            }
            else {
                this.adapter_.removeClass(cssClasses$6.HELPER_TEXT_VALIDATION_MSG);
            }
        };
        /**
         * Makes the helper text visible to the screen reader.
         */
        MDCTextFieldHelperTextFoundation.prototype.showToScreenReader = function () {
            this.adapter_.removeAttr(strings$4.ARIA_HIDDEN);
        };
        /**
         * Sets the validity of the helper text based on the input validity.
         */
        MDCTextFieldHelperTextFoundation.prototype.setValidity = function (inputIsValid) {
            var helperTextIsPersistent = this.adapter_.hasClass(cssClasses$6.HELPER_TEXT_PERSISTENT);
            var helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses$6.HELPER_TEXT_VALIDATION_MSG);
            var validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;
            if (validationMsgNeedsDisplay) {
                this.adapter_.setAttr(strings$4.ROLE, 'alert');
            }
            else {
                this.adapter_.removeAttr(strings$4.ROLE);
            }
            if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {
                this.hide_();
            }
        };
        /**
         * Hides the help text from screen readers.
         */
        MDCTextFieldHelperTextFoundation.prototype.hide_ = function () {
            this.adapter_.setAttr(strings$4.ARIA_HIDDEN, 'true');
        };
        return MDCTextFieldHelperTextFoundation;
    }(MDCFoundation));

    /**
     * @license
     * Copyright 2017 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCTextFieldHelperText = /** @class */ (function (_super) {
        __extends(MDCTextFieldHelperText, _super);
        function MDCTextFieldHelperText() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        MDCTextFieldHelperText.attachTo = function (root) {
            return new MDCTextFieldHelperText(root);
        };
        Object.defineProperty(MDCTextFieldHelperText.prototype, "foundation", {
            get: function () {
                return this.foundation_;
            },
            enumerable: true,
            configurable: true
        });
        MDCTextFieldHelperText.prototype.getDefaultFoundation = function () {
            var _this = this;
            // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.
            // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.
            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
            var adapter = {
                addClass: function (className) { return _this.root_.classList.add(className); },
                removeClass: function (className) { return _this.root_.classList.remove(className); },
                hasClass: function (className) { return _this.root_.classList.contains(className); },
                setAttr: function (attr, value) { return _this.root_.setAttribute(attr, value); },
                removeAttr: function (attr) { return _this.root_.removeAttribute(attr); },
                setContent: function (content) {
                    _this.root_.textContent = content;
                },
            };
            // tslint:enable:object-literal-sort-keys
            return new MDCTextFieldHelperTextFoundation(adapter);
        };
        return MDCTextFieldHelperText;
    }(MDCComponent));

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var strings$5 = {
        ICON_EVENT: 'MDCTextField:icon',
        ICON_ROLE: 'button',
    };
    var cssClasses$7 = {
        ROOT: 'mdc-text-field__icon',
    };

    /**
     * @license
     * Copyright 2017 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var INTERACTION_EVENTS$1 = ['click', 'keydown'];
    var MDCTextFieldIconFoundation = /** @class */ (function (_super) {
        __extends(MDCTextFieldIconFoundation, _super);
        function MDCTextFieldIconFoundation(adapter) {
            var _this = _super.call(this, __assign({}, MDCTextFieldIconFoundation.defaultAdapter, adapter)) || this;
            _this.savedTabIndex_ = null;
            _this.interactionHandler_ = function (evt) { return _this.handleInteraction(evt); };
            return _this;
        }
        Object.defineProperty(MDCTextFieldIconFoundation, "strings", {
            get: function () {
                return strings$5;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextFieldIconFoundation, "cssClasses", {
            get: function () {
                return cssClasses$7;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextFieldIconFoundation, "defaultAdapter", {
            /**
             * See {@link MDCTextFieldIconAdapter} for typing information on parameters and return types.
             */
            get: function () {
                // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
                return {
                    getAttr: function () { return null; },
                    setAttr: function () { return undefined; },
                    removeAttr: function () { return undefined; },
                    setContent: function () { return undefined; },
                    registerInteractionHandler: function () { return undefined; },
                    deregisterInteractionHandler: function () { return undefined; },
                    notifyIconAction: function () { return undefined; },
                };
                // tslint:enable:object-literal-sort-keys
            },
            enumerable: true,
            configurable: true
        });
        MDCTextFieldIconFoundation.prototype.init = function () {
            var _this = this;
            this.savedTabIndex_ = this.adapter_.getAttr('tabindex');
            INTERACTION_EVENTS$1.forEach(function (evtType) {
                _this.adapter_.registerInteractionHandler(evtType, _this.interactionHandler_);
            });
        };
        MDCTextFieldIconFoundation.prototype.destroy = function () {
            var _this = this;
            INTERACTION_EVENTS$1.forEach(function (evtType) {
                _this.adapter_.deregisterInteractionHandler(evtType, _this.interactionHandler_);
            });
        };
        MDCTextFieldIconFoundation.prototype.setDisabled = function (disabled) {
            if (!this.savedTabIndex_) {
                return;
            }
            if (disabled) {
                this.adapter_.setAttr('tabindex', '-1');
                this.adapter_.removeAttr('role');
            }
            else {
                this.adapter_.setAttr('tabindex', this.savedTabIndex_);
                this.adapter_.setAttr('role', strings$5.ICON_ROLE);
            }
        };
        MDCTextFieldIconFoundation.prototype.setAriaLabel = function (label) {
            this.adapter_.setAttr('aria-label', label);
        };
        MDCTextFieldIconFoundation.prototype.setContent = function (content) {
            this.adapter_.setContent(content);
        };
        MDCTextFieldIconFoundation.prototype.handleInteraction = function (evt) {
            var isEnterKey = evt.key === 'Enter' || evt.keyCode === 13;
            if (evt.type === 'click' || isEnterKey) {
                this.adapter_.notifyIconAction();
            }
        };
        return MDCTextFieldIconFoundation;
    }(MDCFoundation));

    /**
     * @license
     * Copyright 2017 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCTextFieldIcon = /** @class */ (function (_super) {
        __extends(MDCTextFieldIcon, _super);
        function MDCTextFieldIcon() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        MDCTextFieldIcon.attachTo = function (root) {
            return new MDCTextFieldIcon(root);
        };
        Object.defineProperty(MDCTextFieldIcon.prototype, "foundation", {
            get: function () {
                return this.foundation_;
            },
            enumerable: true,
            configurable: true
        });
        MDCTextFieldIcon.prototype.getDefaultFoundation = function () {
            var _this = this;
            // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.
            // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.
            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
            var adapter = {
                getAttr: function (attr) { return _this.root_.getAttribute(attr); },
                setAttr: function (attr, value) { return _this.root_.setAttribute(attr, value); },
                removeAttr: function (attr) { return _this.root_.removeAttribute(attr); },
                setContent: function (content) {
                    _this.root_.textContent = content;
                },
                registerInteractionHandler: function (evtType, handler) { return _this.listen(evtType, handler); },
                deregisterInteractionHandler: function (evtType, handler) { return _this.unlisten(evtType, handler); },
                notifyIconAction: function () { return _this.emit(MDCTextFieldIconFoundation.strings.ICON_EVENT, {} /* evtData */, true /* shouldBubble */); },
            };
            // tslint:enable:object-literal-sort-keys
            return new MDCTextFieldIconFoundation(adapter);
        };
        return MDCTextFieldIcon;
    }(MDCComponent));

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCTextField = /** @class */ (function (_super) {
        __extends(MDCTextField, _super);
        function MDCTextField() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        MDCTextField.attachTo = function (root) {
            return new MDCTextField(root);
        };
        MDCTextField.prototype.initialize = function (rippleFactory, lineRippleFactory, helperTextFactory, characterCounterFactory, iconFactory, labelFactory, outlineFactory) {
            if (rippleFactory === void 0) { rippleFactory = function (el, foundation) { return new MDCRipple(el, foundation); }; }
            if (lineRippleFactory === void 0) { lineRippleFactory = function (el) { return new MDCLineRipple(el); }; }
            if (helperTextFactory === void 0) { helperTextFactory = function (el) { return new MDCTextFieldHelperText(el); }; }
            if (characterCounterFactory === void 0) { characterCounterFactory = function (el) { return new MDCTextFieldCharacterCounter(el); }; }
            if (iconFactory === void 0) { iconFactory = function (el) { return new MDCTextFieldIcon(el); }; }
            if (labelFactory === void 0) { labelFactory = function (el) { return new MDCFloatingLabel(el); }; }
            if (outlineFactory === void 0) { outlineFactory = function (el) { return new MDCNotchedOutline(el); }; }
            this.input_ = this.root_.querySelector(strings$3.INPUT_SELECTOR);
            var labelElement = this.root_.querySelector(strings$3.LABEL_SELECTOR);
            this.label_ = labelElement ? labelFactory(labelElement) : null;
            var lineRippleElement = this.root_.querySelector(strings$3.LINE_RIPPLE_SELECTOR);
            this.lineRipple_ = lineRippleElement ? lineRippleFactory(lineRippleElement) : null;
            var outlineElement = this.root_.querySelector(strings$3.OUTLINE_SELECTOR);
            this.outline_ = outlineElement ? outlineFactory(outlineElement) : null;
            // Helper text
            var helperTextStrings = MDCTextFieldHelperTextFoundation.strings;
            var nextElementSibling = this.root_.nextElementSibling;
            var hasHelperLine = (nextElementSibling && nextElementSibling.classList.contains(cssClasses$5.HELPER_LINE));
            var helperTextEl = hasHelperLine && nextElementSibling && nextElementSibling.querySelector(helperTextStrings.ROOT_SELECTOR);
            this.helperText_ = helperTextEl ? helperTextFactory(helperTextEl) : null;
            // Character counter
            var characterCounterStrings = MDCTextFieldCharacterCounterFoundation.strings;
            var characterCounterEl = this.root_.querySelector(characterCounterStrings.ROOT_SELECTOR);
            // If character counter is not found in root element search in sibling element.
            if (!characterCounterEl && hasHelperLine && nextElementSibling) {
                characterCounterEl = nextElementSibling.querySelector(characterCounterStrings.ROOT_SELECTOR);
            }
            this.characterCounter_ = characterCounterEl ? characterCounterFactory(characterCounterEl) : null;
            this.leadingIcon_ = null;
            this.trailingIcon_ = null;
            var iconElements = this.root_.querySelectorAll(strings$3.ICON_SELECTOR);
            if (iconElements.length > 0) {
                if (iconElements.length > 1) { // Has both icons.
                    this.leadingIcon_ = iconFactory(iconElements[0]);
                    this.trailingIcon_ = iconFactory(iconElements[1]);
                }
                else {
                    if (this.root_.classList.contains(cssClasses$5.WITH_LEADING_ICON)) {
                        this.leadingIcon_ = iconFactory(iconElements[0]);
                    }
                    else {
                        this.trailingIcon_ = iconFactory(iconElements[0]);
                    }
                }
            }
            this.ripple = this.createRipple_(rippleFactory);
        };
        MDCTextField.prototype.destroy = function () {
            if (this.ripple) {
                this.ripple.destroy();
            }
            if (this.lineRipple_) {
                this.lineRipple_.destroy();
            }
            if (this.helperText_) {
                this.helperText_.destroy();
            }
            if (this.characterCounter_) {
                this.characterCounter_.destroy();
            }
            if (this.leadingIcon_) {
                this.leadingIcon_.destroy();
            }
            if (this.trailingIcon_) {
                this.trailingIcon_.destroy();
            }
            if (this.label_) {
                this.label_.destroy();
            }
            if (this.outline_) {
                this.outline_.destroy();
            }
            _super.prototype.destroy.call(this);
        };
        /**
         * Initializes the Text Field's internal state based on the environment's
         * state.
         */
        MDCTextField.prototype.initialSyncWithDOM = function () {
            this.disabled = this.input_.disabled;
        };
        Object.defineProperty(MDCTextField.prototype, "value", {
            get: function () {
                return this.foundation_.getValue();
            },
            /**
             * @param value The value to set on the input.
             */
            set: function (value) {
                this.foundation_.setValue(value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextField.prototype, "disabled", {
            get: function () {
                return this.foundation_.isDisabled();
            },
            /**
             * @param disabled Sets the Text Field disabled or enabled.
             */
            set: function (disabled) {
                this.foundation_.setDisabled(disabled);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextField.prototype, "valid", {
            get: function () {
                return this.foundation_.isValid();
            },
            /**
             * @param valid Sets the Text Field valid or invalid.
             */
            set: function (valid) {
                this.foundation_.setValid(valid);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextField.prototype, "required", {
            get: function () {
                return this.input_.required;
            },
            /**
             * @param required Sets the Text Field to required.
             */
            set: function (required) {
                this.input_.required = required;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextField.prototype, "pattern", {
            get: function () {
                return this.input_.pattern;
            },
            /**
             * @param pattern Sets the input element's validation pattern.
             */
            set: function (pattern) {
                this.input_.pattern = pattern;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextField.prototype, "minLength", {
            get: function () {
                return this.input_.minLength;
            },
            /**
             * @param minLength Sets the input element's minLength.
             */
            set: function (minLength) {
                this.input_.minLength = minLength;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextField.prototype, "maxLength", {
            get: function () {
                return this.input_.maxLength;
            },
            /**
             * @param maxLength Sets the input element's maxLength.
             */
            set: function (maxLength) {
                // Chrome throws exception if maxLength is set to a value less than zero
                if (maxLength < 0) {
                    this.input_.removeAttribute('maxLength');
                }
                else {
                    this.input_.maxLength = maxLength;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextField.prototype, "min", {
            get: function () {
                return this.input_.min;
            },
            /**
             * @param min Sets the input element's min.
             */
            set: function (min) {
                this.input_.min = min;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextField.prototype, "max", {
            get: function () {
                return this.input_.max;
            },
            /**
             * @param max Sets the input element's max.
             */
            set: function (max) {
                this.input_.max = max;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextField.prototype, "step", {
            get: function () {
                return this.input_.step;
            },
            /**
             * @param step Sets the input element's step.
             */
            set: function (step) {
                this.input_.step = step;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextField.prototype, "helperTextContent", {
            /**
             * Sets the helper text element content.
             */
            set: function (content) {
                this.foundation_.setHelperTextContent(content);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextField.prototype, "leadingIconAriaLabel", {
            /**
             * Sets the aria label of the leading icon.
             */
            set: function (label) {
                this.foundation_.setLeadingIconAriaLabel(label);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextField.prototype, "leadingIconContent", {
            /**
             * Sets the text content of the leading icon.
             */
            set: function (content) {
                this.foundation_.setLeadingIconContent(content);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextField.prototype, "trailingIconAriaLabel", {
            /**
             * Sets the aria label of the trailing icon.
             */
            set: function (label) {
                this.foundation_.setTrailingIconAriaLabel(label);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextField.prototype, "trailingIconContent", {
            /**
             * Sets the text content of the trailing icon.
             */
            set: function (content) {
                this.foundation_.setTrailingIconContent(content);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCTextField.prototype, "useNativeValidation", {
            /**
             * Enables or disables the use of native validation. Use this for custom validation.
             * @param useNativeValidation Set this to false to ignore native input validation.
             */
            set: function (useNativeValidation) {
                this.foundation_.setUseNativeValidation(useNativeValidation);
            },
            enumerable: true,
            configurable: true
        });
        /**
         * Focuses the input element.
         */
        MDCTextField.prototype.focus = function () {
            this.input_.focus();
        };
        /**
         * Recomputes the outline SVG path for the outline element.
         */
        MDCTextField.prototype.layout = function () {
            var openNotch = this.foundation_.shouldFloat;
            this.foundation_.notchOutline(openNotch);
        };
        MDCTextField.prototype.getDefaultFoundation = function () {
            // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.
            // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.
            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
            var adapter = __assign({}, this.getRootAdapterMethods_(), this.getInputAdapterMethods_(), this.getLabelAdapterMethods_(), this.getLineRippleAdapterMethods_(), this.getOutlineAdapterMethods_());
            // tslint:enable:object-literal-sort-keys
            return new MDCTextFieldFoundation(adapter, this.getFoundationMap_());
        };
        MDCTextField.prototype.getRootAdapterMethods_ = function () {
            var _this = this;
            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
            return {
                addClass: function (className) { return _this.root_.classList.add(className); },
                removeClass: function (className) { return _this.root_.classList.remove(className); },
                hasClass: function (className) { return _this.root_.classList.contains(className); },
                registerTextFieldInteractionHandler: function (evtType, handler) { return _this.listen(evtType, handler); },
                deregisterTextFieldInteractionHandler: function (evtType, handler) { return _this.unlisten(evtType, handler); },
                registerValidationAttributeChangeHandler: function (handler) {
                    var getAttributesList = function (mutationsList) {
                        return mutationsList
                            .map(function (mutation) { return mutation.attributeName; })
                            .filter(function (attributeName) { return attributeName; });
                    };
                    var observer = new MutationObserver(function (mutationsList) { return handler(getAttributesList(mutationsList)); });
                    var config = { attributes: true };
                    observer.observe(_this.input_, config);
                    return observer;
                },
                deregisterValidationAttributeChangeHandler: function (observer) { return observer.disconnect(); },
            };
            // tslint:enable:object-literal-sort-keys
        };
        MDCTextField.prototype.getInputAdapterMethods_ = function () {
            var _this = this;
            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
            return {
                getNativeInput: function () { return _this.input_; },
                isFocused: function () { return document.activeElement === _this.input_; },
                registerInputInteractionHandler: function (evtType, handler) {
                    return _this.input_.addEventListener(evtType, handler, applyPassive());
                },
                deregisterInputInteractionHandler: function (evtType, handler) {
                    return _this.input_.removeEventListener(evtType, handler, applyPassive());
                },
            };
            // tslint:enable:object-literal-sort-keys
        };
        MDCTextField.prototype.getLabelAdapterMethods_ = function () {
            var _this = this;
            return {
                floatLabel: function (shouldFloat) { return _this.label_ && _this.label_.float(shouldFloat); },
                getLabelWidth: function () { return _this.label_ ? _this.label_.getWidth() : 0; },
                hasLabel: function () { return Boolean(_this.label_); },
                shakeLabel: function (shouldShake) { return _this.label_ && _this.label_.shake(shouldShake); },
            };
        };
        MDCTextField.prototype.getLineRippleAdapterMethods_ = function () {
            var _this = this;
            return {
                activateLineRipple: function () {
                    if (_this.lineRipple_) {
                        _this.lineRipple_.activate();
                    }
                },
                deactivateLineRipple: function () {
                    if (_this.lineRipple_) {
                        _this.lineRipple_.deactivate();
                    }
                },
                setLineRippleTransformOrigin: function (normalizedX) {
                    if (_this.lineRipple_) {
                        _this.lineRipple_.setRippleCenter(normalizedX);
                    }
                },
            };
        };
        MDCTextField.prototype.getOutlineAdapterMethods_ = function () {
            var _this = this;
            return {
                closeOutline: function () { return _this.outline_ && _this.outline_.closeNotch(); },
                hasOutline: function () { return Boolean(_this.outline_); },
                notchOutline: function (labelWidth) { return _this.outline_ && _this.outline_.notch(labelWidth); },
            };
        };
        /**
         * @return A map of all subcomponents to subfoundations.
         */
        MDCTextField.prototype.getFoundationMap_ = function () {
            return {
                characterCounter: this.characterCounter_ ? this.characterCounter_.foundation : undefined,
                helperText: this.helperText_ ? this.helperText_.foundation : undefined,
                leadingIcon: this.leadingIcon_ ? this.leadingIcon_.foundation : undefined,
                trailingIcon: this.trailingIcon_ ? this.trailingIcon_.foundation : undefined,
            };
        };
        MDCTextField.prototype.createRipple_ = function (rippleFactory) {
            var _this = this;
            var isTextArea = this.root_.classList.contains(cssClasses$5.TEXTAREA);
            var isOutlined = this.root_.classList.contains(cssClasses$5.OUTLINED);
            if (isTextArea || isOutlined) {
                return null;
            }
            // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.
            // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.
            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
            var adapter = __assign({}, MDCRipple.createAdapter(this), { isSurfaceActive: function () { return matches(_this.input_, ':active'); }, registerInteractionHandler: function (evtType, handler) { return _this.input_.addEventListener(evtType, handler, applyPassive()); }, deregisterInteractionHandler: function (evtType, handler) {
                    return _this.input_.removeEventListener(evtType, handler, applyPassive());
                } });
            // tslint:enable:object-literal-sort-keys
            return rippleFactory(this.root_, new MDCRippleFoundation(adapter));
        };
        return MDCTextField;
    }(MDCComponent));

    function prefixFilter(obj, prefix) {
      let names = Object.getOwnPropertyNames(obj);
      const newObj = {};

      for (let i = 0; i < names.length; i++) {
        const name = names[i];
        if (name.substring(0, prefix.length) === prefix) {
          newObj[name.substring(prefix.length)] = obj[name];
        }
      }

      return newObj;
    }

    /* node_modules/@smui/floating-label/FloatingLabel.svelte generated by Svelte v3.32.1 */
    const file$8 = "node_modules/@smui/floating-label/FloatingLabel.svelte";

    // (13:0) {:else}
    function create_else_block(ctx) {
    	let label;
    	let label_class_value;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[13].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[12], null);

    	let label_levels = [
    		{
    			class: label_class_value = "\n      mdc-floating-label\n      " + /*className*/ ctx[1] + "\n      " + (/*floatAbove*/ ctx[3]
    			? "mdc-floating-label--float-above"
    			: "") + "\n    "
    		},
    		/*forId*/ ctx[2] || /*inputProps*/ ctx[7] && /*inputProps*/ ctx[7].id
    		? {
    				"for": /*forId*/ ctx[2] || /*inputProps*/ ctx[7] && /*inputProps*/ ctx[7].id
    			}
    		: {},
    		exclude(/*$$props*/ ctx[8], ["use", "class", "for", "floatAbove", "wrapped"])
    	];

    	let label_data = {};

    	for (let i = 0; i < label_levels.length; i += 1) {
    		label_data = assign(label_data, label_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			label = element("label");
    			if (default_slot) default_slot.c();
    			set_attributes(label, label_data);
    			add_location(label, file$8, 13, 2, 317);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, label, anchor);

    			if (default_slot) {
    				default_slot.m(label, null);
    			}

    			/*label_binding*/ ctx[15](label);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, label, /*use*/ ctx[0])),
    					action_destroyer(/*forwardEvents*/ ctx[6].call(null, label))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 4096) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[12], dirty, null, null);
    				}
    			}

    			set_attributes(label, label_data = get_spread_update(label_levels, [
    				(!current || dirty & /*className, floatAbove*/ 10 && label_class_value !== (label_class_value = "\n      mdc-floating-label\n      " + /*className*/ ctx[1] + "\n      " + (/*floatAbove*/ ctx[3]
    				? "mdc-floating-label--float-above"
    				: "") + "\n    ")) && { class: label_class_value },
    				dirty & /*forId*/ 4 && (/*forId*/ ctx[2] || /*inputProps*/ ctx[7] && /*inputProps*/ ctx[7].id
    				? {
    						"for": /*forId*/ ctx[2] || /*inputProps*/ ctx[7] && /*inputProps*/ ctx[7].id
    					}
    				: {}),
    				dirty & /*$$props*/ 256 && exclude(/*$$props*/ ctx[8], ["use", "class", "for", "floatAbove", "wrapped"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 1) useActions_action.update.call(null, /*use*/ ctx[0]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(label);
    			if (default_slot) default_slot.d(detaching);
    			/*label_binding*/ ctx[15](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_else_block.name,
    		type: "else",
    		source: "(13:0) {:else}",
    		ctx
    	});

    	return block;
    }

    // (1:0) {#if wrapped}
    function create_if_block$1(ctx) {
    	let span;
    	let span_class_value;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[13].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[12], null);

    	let span_levels = [
    		{
    			class: span_class_value = "\n      mdc-floating-label\n      " + /*className*/ ctx[1] + "\n      " + (/*floatAbove*/ ctx[3]
    			? "mdc-floating-label--float-above"
    			: "") + "\n    "
    		},
    		exclude(/*$$props*/ ctx[8], ["use", "class", "floatAbove", "wrapped"])
    	];

    	let span_data = {};

    	for (let i = 0; i < span_levels.length; i += 1) {
    		span_data = assign(span_data, span_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			span = element("span");
    			if (default_slot) default_slot.c();
    			set_attributes(span, span_data);
    			add_location(span, file$8, 1, 2, 16);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, span, anchor);

    			if (default_slot) {
    				default_slot.m(span, null);
    			}

    			/*span_binding*/ ctx[14](span);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, span, /*use*/ ctx[0])),
    					action_destroyer(/*forwardEvents*/ ctx[6].call(null, span))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 4096) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[12], dirty, null, null);
    				}
    			}

    			set_attributes(span, span_data = get_spread_update(span_levels, [
    				(!current || dirty & /*className, floatAbove*/ 10 && span_class_value !== (span_class_value = "\n      mdc-floating-label\n      " + /*className*/ ctx[1] + "\n      " + (/*floatAbove*/ ctx[3]
    				? "mdc-floating-label--float-above"
    				: "") + "\n    ")) && { class: span_class_value },
    				dirty & /*$$props*/ 256 && exclude(/*$$props*/ ctx[8], ["use", "class", "floatAbove", "wrapped"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 1) useActions_action.update.call(null, /*use*/ ctx[0]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(span);
    			if (default_slot) default_slot.d(detaching);
    			/*span_binding*/ ctx[14](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$1.name,
    		type: "if",
    		source: "(1:0) {#if wrapped}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$9(ctx) {
    	let current_block_type_index;
    	let if_block;
    	let if_block_anchor;
    	let current;
    	const if_block_creators = [create_if_block$1, create_else_block];
    	const if_blocks = [];

    	function select_block_type(ctx, dirty) {
    		if (/*wrapped*/ ctx[4]) return 0;
    		return 1;
    	}

    	current_block_type_index = select_block_type(ctx);
    	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

    	const block = {
    		c: function create() {
    			if_block.c();
    			if_block_anchor = empty();
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			if_blocks[current_block_type_index].m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			let previous_block_index = current_block_type_index;
    			current_block_type_index = select_block_type(ctx);

    			if (current_block_type_index === previous_block_index) {
    				if_blocks[current_block_type_index].p(ctx, dirty);
    			} else {
    				group_outros();

    				transition_out(if_blocks[previous_block_index], 1, 1, () => {
    					if_blocks[previous_block_index] = null;
    				});

    				check_outros();
    				if_block = if_blocks[current_block_type_index];

    				if (!if_block) {
    					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
    					if_block.c();
    				} else {
    					if_block.p(ctx, dirty);
    				}

    				transition_in(if_block, 1);
    				if_block.m(if_block_anchor.parentNode, if_block_anchor);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if_blocks[current_block_type_index].d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$9.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$9($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("FloatingLabel", slots, ['default']);
    	const forwardEvents = forwardEventsBuilder(get_current_component());
    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	let { for: forId = "" } = $$props;
    	let { floatAbove = false } = $$props;
    	let { wrapped = false } = $$props;
    	let element;
    	let floatingLabel;
    	let inputProps = getContext("SMUI:generic:input:props") || {};

    	onMount(() => {
    		floatingLabel = new MDCFloatingLabel(element);
    	});

    	onDestroy(() => {
    		floatingLabel && floatingLabel.destroy();
    	});

    	function shake(shouldShake, ...args) {
    		return floatingLabel.shake(shouldShake, ...args);
    	}

    	function float(shouldFloat, ...args) {
    		return floatingLabel.float(shouldFloat, ...args);
    	}

    	function getWidth(...args) {
    		return floatingLabel.getWidth(...args);
    	}

    	function span_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(5, element);
    		});
    	}

    	function label_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(5, element);
    		});
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(8, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(0, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(1, className = $$new_props.class);
    		if ("for" in $$new_props) $$invalidate(2, forId = $$new_props.for);
    		if ("floatAbove" in $$new_props) $$invalidate(3, floatAbove = $$new_props.floatAbove);
    		if ("wrapped" in $$new_props) $$invalidate(4, wrapped = $$new_props.wrapped);
    		if ("$$scope" in $$new_props) $$invalidate(12, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		MDCFloatingLabel,
    		onMount,
    		onDestroy,
    		getContext,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		forwardEvents,
    		use,
    		className,
    		forId,
    		floatAbove,
    		wrapped,
    		element,
    		floatingLabel,
    		inputProps,
    		shake,
    		float,
    		getWidth
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(8, $$props = assign(assign({}, $$props), $$new_props));
    		if ("use" in $$props) $$invalidate(0, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(1, className = $$new_props.className);
    		if ("forId" in $$props) $$invalidate(2, forId = $$new_props.forId);
    		if ("floatAbove" in $$props) $$invalidate(3, floatAbove = $$new_props.floatAbove);
    		if ("wrapped" in $$props) $$invalidate(4, wrapped = $$new_props.wrapped);
    		if ("element" in $$props) $$invalidate(5, element = $$new_props.element);
    		if ("floatingLabel" in $$props) floatingLabel = $$new_props.floatingLabel;
    		if ("inputProps" in $$props) $$invalidate(7, inputProps = $$new_props.inputProps);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		use,
    		className,
    		forId,
    		floatAbove,
    		wrapped,
    		element,
    		forwardEvents,
    		inputProps,
    		$$props,
    		shake,
    		float,
    		getWidth,
    		$$scope,
    		slots,
    		span_binding,
    		label_binding
    	];
    }

    class FloatingLabel extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$9, create_fragment$9, safe_not_equal, {
    			use: 0,
    			class: 1,
    			for: 2,
    			floatAbove: 3,
    			wrapped: 4,
    			shake: 9,
    			float: 10,
    			getWidth: 11
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "FloatingLabel",
    			options,
    			id: create_fragment$9.name
    		});
    	}

    	get use() {
    		throw new Error("<FloatingLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<FloatingLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<FloatingLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<FloatingLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get for() {
    		throw new Error("<FloatingLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set for(value) {
    		throw new Error("<FloatingLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get floatAbove() {
    		throw new Error("<FloatingLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set floatAbove(value) {
    		throw new Error("<FloatingLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get wrapped() {
    		throw new Error("<FloatingLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set wrapped(value) {
    		throw new Error("<FloatingLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get shake() {
    		return this.$$.ctx[9];
    	}

    	set shake(value) {
    		throw new Error("<FloatingLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get float() {
    		return this.$$.ctx[10];
    	}

    	set float(value) {
    		throw new Error("<FloatingLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get getWidth() {
    		return this.$$.ctx[11];
    	}

    	set getWidth(value) {
    		throw new Error("<FloatingLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/@smui/line-ripple/LineRipple.svelte generated by Svelte v3.32.1 */
    const file$9 = "node_modules/@smui/line-ripple/LineRipple.svelte";

    function create_fragment$a(ctx) {
    	let div;
    	let div_class_value;
    	let useActions_action;
    	let mounted;
    	let dispose;

    	let div_levels = [
    		{
    			class: div_class_value = "\n    mdc-line-ripple\n    " + /*className*/ ctx[1] + "\n    " + (/*active*/ ctx[2] ? "mdc-line-ripple--active" : "") + "\n  "
    		},
    		exclude(/*$$props*/ ctx[5], ["use", "class", "active"])
    	];

    	let div_data = {};

    	for (let i = 0; i < div_levels.length; i += 1) {
    		div_data = assign(div_data, div_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			div = element("div");
    			set_attributes(div, div_data);
    			add_location(div, file$9, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			/*div_binding*/ ctx[9](div);

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, div, /*use*/ ctx[0])),
    					action_destroyer(/*forwardEvents*/ ctx[4].call(null, div))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			set_attributes(div, div_data = get_spread_update(div_levels, [
    				dirty & /*className, active*/ 6 && div_class_value !== (div_class_value = "\n    mdc-line-ripple\n    " + /*className*/ ctx[1] + "\n    " + (/*active*/ ctx[2] ? "mdc-line-ripple--active" : "") + "\n  ") && { class: div_class_value },
    				dirty & /*$$props*/ 32 && exclude(/*$$props*/ ctx[5], ["use", "class", "active"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 1) useActions_action.update.call(null, /*use*/ ctx[0]);
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			/*div_binding*/ ctx[9](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$a.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$a($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("LineRipple", slots, []);
    	const forwardEvents = forwardEventsBuilder(get_current_component());
    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	let { active = false } = $$props;
    	let element;
    	let lineRipple;

    	onMount(() => {
    		lineRipple = new MDCLineRipple(element);
    	});

    	onDestroy(() => {
    		lineRipple && lineRipple.destroy();
    	});

    	function activate(...args) {
    		return lineRipple.activate(...args);
    	}

    	function deactivate(...args) {
    		return lineRipple.deactivate(...args);
    	}

    	function setRippleCenter(xCoordinate, ...args) {
    		return lineRipple.setRippleCenter(xCoordinate, ...args);
    	}

    	function div_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(3, element);
    		});
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(5, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(0, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(1, className = $$new_props.class);
    		if ("active" in $$new_props) $$invalidate(2, active = $$new_props.active);
    	};

    	$$self.$capture_state = () => ({
    		MDCLineRipple,
    		onMount,
    		onDestroy,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		forwardEvents,
    		use,
    		className,
    		active,
    		element,
    		lineRipple,
    		activate,
    		deactivate,
    		setRippleCenter
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(5, $$props = assign(assign({}, $$props), $$new_props));
    		if ("use" in $$props) $$invalidate(0, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(1, className = $$new_props.className);
    		if ("active" in $$props) $$invalidate(2, active = $$new_props.active);
    		if ("element" in $$props) $$invalidate(3, element = $$new_props.element);
    		if ("lineRipple" in $$props) lineRipple = $$new_props.lineRipple;
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		use,
    		className,
    		active,
    		element,
    		forwardEvents,
    		$$props,
    		activate,
    		deactivate,
    		setRippleCenter,
    		div_binding
    	];
    }

    class LineRipple extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$a, create_fragment$a, safe_not_equal, {
    			use: 0,
    			class: 1,
    			active: 2,
    			activate: 6,
    			deactivate: 7,
    			setRippleCenter: 8
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "LineRipple",
    			options,
    			id: create_fragment$a.name
    		});
    	}

    	get use() {
    		throw new Error("<LineRipple>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<LineRipple>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<LineRipple>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<LineRipple>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get active() {
    		throw new Error("<LineRipple>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set active(value) {
    		throw new Error("<LineRipple>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get activate() {
    		return this.$$.ctx[6];
    	}

    	set activate(value) {
    		throw new Error("<LineRipple>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get deactivate() {
    		return this.$$.ctx[7];
    	}

    	set deactivate(value) {
    		throw new Error("<LineRipple>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get setRippleCenter() {
    		return this.$$.ctx[8];
    	}

    	set setRippleCenter(value) {
    		throw new Error("<LineRipple>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/@smui/notched-outline/NotchedOutline.svelte generated by Svelte v3.32.1 */
    const file$a = "node_modules/@smui/notched-outline/NotchedOutline.svelte";

    // (14:2) {#if !noLabel}
    function create_if_block$2(ctx) {
    	let div;
    	let current;
    	const default_slot_template = /*#slots*/ ctx[10].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[9], null);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (default_slot) default_slot.c();
    			attr_dev(div, "class", "mdc-notched-outline__notch");
    			add_location(div, file$a, 14, 4, 367);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);

    			if (default_slot) {
    				default_slot.m(div, null);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 512) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[9], dirty, null, null);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (default_slot) default_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$2.name,
    		type: "if",
    		source: "(14:2) {#if !noLabel}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$b(ctx) {
    	let div2;
    	let div0;
    	let t0;
    	let t1;
    	let div1;
    	let div2_class_value;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	let if_block = !/*noLabel*/ ctx[3] && create_if_block$2(ctx);

    	let div2_levels = [
    		{
    			class: div2_class_value = "\n    mdc-notched-outline\n    " + /*className*/ ctx[1] + "\n    " + (/*notched*/ ctx[2] ? "mdc-notched-outline--notched" : "") + "\n    " + (/*noLabel*/ ctx[3]
    			? "mdc-notched-outline--no-label"
    			: "") + "\n  "
    		},
    		exclude(/*$$props*/ ctx[6], ["use", "class", "notched", "noLabel"])
    	];

    	let div2_data = {};

    	for (let i = 0; i < div2_levels.length; i += 1) {
    		div2_data = assign(div2_data, div2_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			div2 = element("div");
    			div0 = element("div");
    			t0 = space();
    			if (if_block) if_block.c();
    			t1 = space();
    			div1 = element("div");
    			attr_dev(div0, "class", "mdc-notched-outline__leading");
    			add_location(div0, file$a, 12, 2, 297);
    			attr_dev(div1, "class", "mdc-notched-outline__trailing");
    			add_location(div1, file$a, 16, 2, 437);
    			set_attributes(div2, div2_data);
    			add_location(div2, file$a, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div2, anchor);
    			append_dev(div2, div0);
    			append_dev(div2, t0);
    			if (if_block) if_block.m(div2, null);
    			append_dev(div2, t1);
    			append_dev(div2, div1);
    			/*div2_binding*/ ctx[11](div2);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, div2, /*use*/ ctx[0])),
    					action_destroyer(/*forwardEvents*/ ctx[5].call(null, div2))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (!/*noLabel*/ ctx[3]) {
    				if (if_block) {
    					if_block.p(ctx, dirty);

    					if (dirty & /*noLabel*/ 8) {
    						transition_in(if_block, 1);
    					}
    				} else {
    					if_block = create_if_block$2(ctx);
    					if_block.c();
    					transition_in(if_block, 1);
    					if_block.m(div2, t1);
    				}
    			} else if (if_block) {
    				group_outros();

    				transition_out(if_block, 1, 1, () => {
    					if_block = null;
    				});

    				check_outros();
    			}

    			set_attributes(div2, div2_data = get_spread_update(div2_levels, [
    				(!current || dirty & /*className, notched, noLabel*/ 14 && div2_class_value !== (div2_class_value = "\n    mdc-notched-outline\n    " + /*className*/ ctx[1] + "\n    " + (/*notched*/ ctx[2] ? "mdc-notched-outline--notched" : "") + "\n    " + (/*noLabel*/ ctx[3]
    				? "mdc-notched-outline--no-label"
    				: "") + "\n  ")) && { class: div2_class_value },
    				dirty & /*$$props*/ 64 && exclude(/*$$props*/ ctx[6], ["use", "class", "notched", "noLabel"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 1) useActions_action.update.call(null, /*use*/ ctx[0]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div2);
    			if (if_block) if_block.d();
    			/*div2_binding*/ ctx[11](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$b.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$b($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("NotchedOutline", slots, ['default']);
    	const forwardEvents = forwardEventsBuilder(get_current_component());
    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	let { notched = false } = $$props;
    	let { noLabel = false } = $$props;
    	let element;
    	let notchedOutline;

    	onMount(() => {
    		notchedOutline = new MDCNotchedOutline(element);
    	});

    	onDestroy(() => {
    		notchedOutline && notchedOutline.destroy();
    	});

    	function notch(notchWidth, ...args) {
    		return notchedOutline.notch(notchWidth, ...args);
    	}

    	function closeNotch(...args) {
    		return notchedOutline.closeNotch(...args);
    	}

    	function div2_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(4, element);
    		});
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(6, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(0, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(1, className = $$new_props.class);
    		if ("notched" in $$new_props) $$invalidate(2, notched = $$new_props.notched);
    		if ("noLabel" in $$new_props) $$invalidate(3, noLabel = $$new_props.noLabel);
    		if ("$$scope" in $$new_props) $$invalidate(9, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		MDCNotchedOutline,
    		onMount,
    		onDestroy,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		forwardEvents,
    		use,
    		className,
    		notched,
    		noLabel,
    		element,
    		notchedOutline,
    		notch,
    		closeNotch
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(6, $$props = assign(assign({}, $$props), $$new_props));
    		if ("use" in $$props) $$invalidate(0, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(1, className = $$new_props.className);
    		if ("notched" in $$props) $$invalidate(2, notched = $$new_props.notched);
    		if ("noLabel" in $$props) $$invalidate(3, noLabel = $$new_props.noLabel);
    		if ("element" in $$props) $$invalidate(4, element = $$new_props.element);
    		if ("notchedOutline" in $$props) notchedOutline = $$new_props.notchedOutline;
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		use,
    		className,
    		notched,
    		noLabel,
    		element,
    		forwardEvents,
    		$$props,
    		notch,
    		closeNotch,
    		$$scope,
    		slots,
    		div2_binding
    	];
    }

    class NotchedOutline extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$b, create_fragment$b, safe_not_equal, {
    			use: 0,
    			class: 1,
    			notched: 2,
    			noLabel: 3,
    			notch: 7,
    			closeNotch: 8
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "NotchedOutline",
    			options,
    			id: create_fragment$b.name
    		});
    	}

    	get use() {
    		throw new Error("<NotchedOutline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<NotchedOutline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<NotchedOutline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<NotchedOutline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get notched() {
    		throw new Error("<NotchedOutline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set notched(value) {
    		throw new Error("<NotchedOutline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get noLabel() {
    		throw new Error("<NotchedOutline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set noLabel(value) {
    		throw new Error("<NotchedOutline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get notch() {
    		return this.$$.ctx[7];
    	}

    	set notch(value) {
    		throw new Error("<NotchedOutline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get closeNotch() {
    		return this.$$.ctx[8];
    	}

    	set closeNotch(value) {
    		throw new Error("<NotchedOutline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/@smui/textfield/Input.svelte generated by Svelte v3.32.1 */
    const file$b = "node_modules/@smui/textfield/Input.svelte";

    function create_fragment$c(ctx) {
    	let input;
    	let input_class_value;
    	let useActions_action;
    	let mounted;
    	let dispose;

    	let input_levels = [
    		{
    			class: input_class_value = "mdc-text-field__input " + /*className*/ ctx[1]
    		},
    		{ type: /*type*/ ctx[2] },
    		/*valueProp*/ ctx[3],
    		exclude(/*$$props*/ ctx[8], [
    			"use",
    			"class",
    			"type",
    			"value",
    			"files",
    			"dirty",
    			"invalid",
    			"updateInvalid"
    		])
    	];

    	let input_data = {};

    	for (let i = 0; i < input_levels.length; i += 1) {
    		input_data = assign(input_data, input_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			input = element("input");
    			set_attributes(input, input_data);
    			add_location(input, file$b, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, input, anchor);
    			/*input_binding*/ ctx[14](input);

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, input, /*use*/ ctx[0])),
    					action_destroyer(/*forwardEvents*/ ctx[5].call(null, input)),
    					listen_dev(input, "change", /*change_handler*/ ctx[15], false, false, false),
    					listen_dev(input, "input", /*input_handler*/ ctx[16], false, false, false),
    					listen_dev(input, "change", /*changeHandler*/ ctx[7], false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			set_attributes(input, input_data = get_spread_update(input_levels, [
    				dirty & /*className*/ 2 && input_class_value !== (input_class_value = "mdc-text-field__input " + /*className*/ ctx[1]) && { class: input_class_value },
    				dirty & /*type*/ 4 && { type: /*type*/ ctx[2] },
    				dirty & /*valueProp*/ 8 && /*valueProp*/ ctx[3],
    				dirty & /*$$props*/ 256 && exclude(/*$$props*/ ctx[8], [
    					"use",
    					"class",
    					"type",
    					"value",
    					"files",
    					"dirty",
    					"invalid",
    					"updateInvalid"
    				])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 1) useActions_action.update.call(null, /*use*/ ctx[0]);
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(input);
    			/*input_binding*/ ctx[14](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$c.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function toNumber(value) {
    	if (value === "") {
    		const nan = new Number(Number.NaN);
    		nan.length = 0;
    		return nan;
    	}

    	return +value;
    }

    function instance$c($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Input", slots, []);
    	const forwardEvents = forwardEventsBuilder(get_current_component(), ["change", "input"]);
    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	let { type = "text" } = $$props;
    	let { value = "" } = $$props;
    	let { files = undefined } = $$props;
    	let { dirty = false } = $$props;
    	let { invalid = false } = $$props;
    	let { updateInvalid = true } = $$props;
    	let element;
    	let valueProp = {};

    	onMount(() => {
    		if (updateInvalid) {
    			$$invalidate(12, invalid = element.matches(":invalid"));
    		}
    	});

    	function valueUpdater(e) {
    		switch (type) {
    			case "number":
    			case "range":
    				$$invalidate(9, value = toNumber(e.target.value));
    				break;
    			case "file":
    				$$invalidate(10, files = e.target.files);
    			default:
    				$$invalidate(9, value = e.target.value);
    				break;
    		}
    	}

    	function changeHandler(e) {
    		$$invalidate(11, dirty = true);

    		if (updateInvalid) {
    			$$invalidate(12, invalid = element.matches(":invalid"));
    		}
    	}

    	function input_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(4, element);
    		});
    	}

    	const change_handler = e => (type === "file" || type === "range") && valueUpdater(e);
    	const input_handler = e => type !== "file" && valueUpdater(e);

    	$$self.$$set = $$new_props => {
    		$$invalidate(8, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(0, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(1, className = $$new_props.class);
    		if ("type" in $$new_props) $$invalidate(2, type = $$new_props.type);
    		if ("value" in $$new_props) $$invalidate(9, value = $$new_props.value);
    		if ("files" in $$new_props) $$invalidate(10, files = $$new_props.files);
    		if ("dirty" in $$new_props) $$invalidate(11, dirty = $$new_props.dirty);
    		if ("invalid" in $$new_props) $$invalidate(12, invalid = $$new_props.invalid);
    		if ("updateInvalid" in $$new_props) $$invalidate(13, updateInvalid = $$new_props.updateInvalid);
    	};

    	$$self.$capture_state = () => ({
    		onMount,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		forwardEvents,
    		use,
    		className,
    		type,
    		value,
    		files,
    		dirty,
    		invalid,
    		updateInvalid,
    		element,
    		valueProp,
    		toNumber,
    		valueUpdater,
    		changeHandler
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(8, $$props = assign(assign({}, $$props), $$new_props));
    		if ("use" in $$props) $$invalidate(0, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(1, className = $$new_props.className);
    		if ("type" in $$props) $$invalidate(2, type = $$new_props.type);
    		if ("value" in $$props) $$invalidate(9, value = $$new_props.value);
    		if ("files" in $$props) $$invalidate(10, files = $$new_props.files);
    		if ("dirty" in $$props) $$invalidate(11, dirty = $$new_props.dirty);
    		if ("invalid" in $$props) $$invalidate(12, invalid = $$new_props.invalid);
    		if ("updateInvalid" in $$props) $$invalidate(13, updateInvalid = $$new_props.updateInvalid);
    		if ("element" in $$props) $$invalidate(4, element = $$new_props.element);
    		if ("valueProp" in $$props) $$invalidate(3, valueProp = $$new_props.valueProp);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		if ($$self.$$.dirty & /*type, valueProp, value*/ 524) {
    			 if (type === "file") {
    				delete valueProp.value;
    			} else {
    				$$invalidate(3, valueProp.value = value === undefined ? "" : value, valueProp);
    			}
    		}
    	};

    	$$props = exclude_internal_props($$props);

    	return [
    		use,
    		className,
    		type,
    		valueProp,
    		element,
    		forwardEvents,
    		valueUpdater,
    		changeHandler,
    		$$props,
    		value,
    		files,
    		dirty,
    		invalid,
    		updateInvalid,
    		input_binding,
    		change_handler,
    		input_handler
    	];
    }

    class Input extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$c, create_fragment$c, safe_not_equal, {
    			use: 0,
    			class: 1,
    			type: 2,
    			value: 9,
    			files: 10,
    			dirty: 11,
    			invalid: 12,
    			updateInvalid: 13
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Input",
    			options,
    			id: create_fragment$c.name
    		});
    	}

    	get use() {
    		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get type() {
    		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set type(value) {
    		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get value() {
    		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set value(value) {
    		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get files() {
    		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set files(value) {
    		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get dirty() {
    		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set dirty(value) {
    		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get invalid() {
    		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set invalid(value) {
    		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get updateInvalid() {
    		throw new Error("<Input>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set updateInvalid(value) {
    		throw new Error("<Input>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/@smui/textfield/Textarea.svelte generated by Svelte v3.32.1 */
    const file$c = "node_modules/@smui/textfield/Textarea.svelte";

    function create_fragment$d(ctx) {
    	let textarea;
    	let textarea_class_value;
    	let useActions_action;
    	let mounted;
    	let dispose;

    	let textarea_levels = [
    		{
    			class: textarea_class_value = "mdc-text-field__input " + /*className*/ ctx[2]
    		},
    		exclude(/*$$props*/ ctx[6], ["use", "class", "value", "dirty", "invalid", "updateInvalid"])
    	];

    	let textarea_data = {};

    	for (let i = 0; i < textarea_levels.length; i += 1) {
    		textarea_data = assign(textarea_data, textarea_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			textarea = element("textarea");
    			set_attributes(textarea, textarea_data);
    			add_location(textarea, file$c, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, textarea, anchor);
    			/*textarea_binding*/ ctx[10](textarea);
    			set_input_value(textarea, /*value*/ ctx[0]);

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, textarea, /*use*/ ctx[1])),
    					action_destroyer(/*forwardEvents*/ ctx[4].call(null, textarea)),
    					listen_dev(textarea, "input", /*textarea_input_handler*/ ctx[11]),
    					listen_dev(textarea, "change", /*changeHandler*/ ctx[5], false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			set_attributes(textarea, textarea_data = get_spread_update(textarea_levels, [
    				dirty & /*className*/ 4 && textarea_class_value !== (textarea_class_value = "mdc-text-field__input " + /*className*/ ctx[2]) && { class: textarea_class_value },
    				dirty & /*$$props*/ 64 && exclude(/*$$props*/ ctx[6], ["use", "class", "value", "dirty", "invalid", "updateInvalid"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 2) useActions_action.update.call(null, /*use*/ ctx[1]);

    			if (dirty & /*value*/ 1) {
    				set_input_value(textarea, /*value*/ ctx[0]);
    			}
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(textarea);
    			/*textarea_binding*/ ctx[10](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$d.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$d($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Textarea", slots, []);
    	const forwardEvents = forwardEventsBuilder(get_current_component(), ["change", "input"]);
    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	let { value = "" } = $$props;
    	let { dirty = false } = $$props;
    	let { invalid = false } = $$props;
    	let { updateInvalid = true } = $$props;
    	let element;

    	onMount(() => {
    		if (updateInvalid) {
    			$$invalidate(8, invalid = element.matches(":invalid"));
    		}
    	});

    	function changeHandler() {
    		$$invalidate(7, dirty = true);

    		if (updateInvalid) {
    			$$invalidate(8, invalid = element.matches(":invalid"));
    		}
    	}

    	function textarea_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(3, element);
    		});
    	}

    	function textarea_input_handler() {
    		value = this.value;
    		$$invalidate(0, value);
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(6, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(1, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(2, className = $$new_props.class);
    		if ("value" in $$new_props) $$invalidate(0, value = $$new_props.value);
    		if ("dirty" in $$new_props) $$invalidate(7, dirty = $$new_props.dirty);
    		if ("invalid" in $$new_props) $$invalidate(8, invalid = $$new_props.invalid);
    		if ("updateInvalid" in $$new_props) $$invalidate(9, updateInvalid = $$new_props.updateInvalid);
    	};

    	$$self.$capture_state = () => ({
    		onMount,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		forwardEvents,
    		use,
    		className,
    		value,
    		dirty,
    		invalid,
    		updateInvalid,
    		element,
    		changeHandler
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(6, $$props = assign(assign({}, $$props), $$new_props));
    		if ("use" in $$props) $$invalidate(1, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(2, className = $$new_props.className);
    		if ("value" in $$props) $$invalidate(0, value = $$new_props.value);
    		if ("dirty" in $$props) $$invalidate(7, dirty = $$new_props.dirty);
    		if ("invalid" in $$props) $$invalidate(8, invalid = $$new_props.invalid);
    		if ("updateInvalid" in $$props) $$invalidate(9, updateInvalid = $$new_props.updateInvalid);
    		if ("element" in $$props) $$invalidate(3, element = $$new_props.element);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		value,
    		use,
    		className,
    		element,
    		forwardEvents,
    		changeHandler,
    		$$props,
    		dirty,
    		invalid,
    		updateInvalid,
    		textarea_binding,
    		textarea_input_handler
    	];
    }

    class Textarea extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$d, create_fragment$d, safe_not_equal, {
    			use: 1,
    			class: 2,
    			value: 0,
    			dirty: 7,
    			invalid: 8,
    			updateInvalid: 9
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Textarea",
    			options,
    			id: create_fragment$d.name
    		});
    	}

    	get use() {
    		throw new Error("<Textarea>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<Textarea>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<Textarea>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<Textarea>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get value() {
    		throw new Error("<Textarea>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set value(value) {
    		throw new Error("<Textarea>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get dirty() {
    		throw new Error("<Textarea>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set dirty(value) {
    		throw new Error("<Textarea>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get invalid() {
    		throw new Error("<Textarea>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set invalid(value) {
    		throw new Error("<Textarea>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get updateInvalid() {
    		throw new Error("<Textarea>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set updateInvalid(value) {
    		throw new Error("<Textarea>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/@smui/textfield/Textfield.svelte generated by Svelte v3.32.1 */
    const file$d = "node_modules/@smui/textfield/Textfield.svelte";
    const get_label_slot_changes_1 = dirty => ({});
    const get_label_slot_context_1 = ctx => ({});
    const get_label_slot_changes = dirty => ({});
    const get_label_slot_context = ctx => ({});

    // (69:0) {:else}
    function create_else_block_1(ctx) {
    	let div;
    	let div_class_value;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[27].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[45], null);

    	let div_levels = [
    		{
    			class: div_class_value = "\n      mdc-text-field\n      " + /*className*/ ctx[5] + "\n      " + (/*disabled*/ ctx[7] ? "mdc-text-field--disabled" : "") + "\n      " + (/*fullwidth*/ ctx[8] ? "mdc-text-field--fullwidth" : "") + "\n      " + (/*textarea*/ ctx[9] ? "mdc-text-field--textarea" : "") + "\n      " + (/*variant*/ ctx[10] === "outlined" && !/*fullwidth*/ ctx[8]
    			? "mdc-text-field--outlined"
    			: "") + "\n      " + (/*variant*/ ctx[10] === "standard" && !/*fullwidth*/ ctx[8] && !/*textarea*/ ctx[9]
    			? "smui-text-field--standard"
    			: "") + "\n      " + (/*dense*/ ctx[11] ? "mdc-text-field--dense" : "") + "\n      " + (/*noLabel*/ ctx[14] ? "mdc-text-field--no-label" : "") + "\n      " + (/*withLeadingIcon*/ ctx[12]
    			? "mdc-text-field--with-leading-icon"
    			: "") + "\n      " + (/*withTrailingIcon*/ ctx[13]
    			? "mdc-text-field--with-trailing-icon"
    			: "") + "\n      " + (/*invalid*/ ctx[2] ? "mdc-text-field--invalid" : "") + "\n    "
    		},
    		/*props*/ ctx[19]
    	];

    	let div_data = {};

    	for (let i = 0; i < div_levels.length; i += 1) {
    		div_data = assign(div_data, div_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (default_slot) default_slot.c();
    			set_attributes(div, div_data);
    			add_location(div, file$d, 69, 2, 2148);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);

    			if (default_slot) {
    				default_slot.m(div, null);
    			}

    			/*div_binding*/ ctx[44](div);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, div, /*use*/ ctx[4])),
    					action_destroyer(/*forwardEvents*/ ctx[21].call(null, div))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (default_slot) {
    				if (default_slot.p && dirty[1] & /*$$scope*/ 16384) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[45], dirty, null, null);
    				}
    			}

    			set_attributes(div, div_data = get_spread_update(div_levels, [
    				(!current || dirty[0] & /*className, disabled, fullwidth, textarea, variant, dense, noLabel, withLeadingIcon, withTrailingIcon, invalid*/ 32676 && div_class_value !== (div_class_value = "\n      mdc-text-field\n      " + /*className*/ ctx[5] + "\n      " + (/*disabled*/ ctx[7] ? "mdc-text-field--disabled" : "") + "\n      " + (/*fullwidth*/ ctx[8] ? "mdc-text-field--fullwidth" : "") + "\n      " + (/*textarea*/ ctx[9] ? "mdc-text-field--textarea" : "") + "\n      " + (/*variant*/ ctx[10] === "outlined" && !/*fullwidth*/ ctx[8]
    				? "mdc-text-field--outlined"
    				: "") + "\n      " + (/*variant*/ ctx[10] === "standard" && !/*fullwidth*/ ctx[8] && !/*textarea*/ ctx[9]
    				? "smui-text-field--standard"
    				: "") + "\n      " + (/*dense*/ ctx[11] ? "mdc-text-field--dense" : "") + "\n      " + (/*noLabel*/ ctx[14] ? "mdc-text-field--no-label" : "") + "\n      " + (/*withLeadingIcon*/ ctx[12]
    				? "mdc-text-field--with-leading-icon"
    				: "") + "\n      " + (/*withTrailingIcon*/ ctx[13]
    				? "mdc-text-field--with-trailing-icon"
    				: "") + "\n      " + (/*invalid*/ ctx[2] ? "mdc-text-field--invalid" : "") + "\n    ")) && { class: div_class_value },
    				dirty[0] & /*props*/ 524288 && /*props*/ ctx[19]
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty[0] & /*use*/ 16) useActions_action.update.call(null, /*use*/ ctx[4]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (default_slot) default_slot.d(detaching);
    			/*div_binding*/ ctx[44](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_else_block_1.name,
    		type: "else",
    		source: "(69:0) {:else}",
    		ctx
    	});

    	return block;
    }

    // (1:0) {#if valued}
    function create_if_block$3(ctx) {
    	let label_1;
    	let t0;
    	let current_block_type_index;
    	let if_block0;
    	let t1;
    	let t2;
    	let label_1_class_value;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[27].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[45], null);
    	const if_block_creators = [create_if_block_6, create_else_block$1];
    	const if_blocks = [];

    	function select_block_type_1(ctx, dirty) {
    		if (/*textarea*/ ctx[9]) return 0;
    		return 1;
    	}

    	current_block_type_index = select_block_type_1(ctx);
    	if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
    	let if_block1 = !/*textarea*/ ctx[9] && /*variant*/ ctx[10] !== "outlined" && create_if_block_3(ctx);
    	let if_block2 = (/*textarea*/ ctx[9] || /*variant*/ ctx[10] === "outlined" && !/*fullwidth*/ ctx[8]) && create_if_block_1$1(ctx);

    	let label_1_levels = [
    		{
    			class: label_1_class_value = "\n      mdc-text-field\n      " + /*className*/ ctx[5] + "\n      " + (/*disabled*/ ctx[7] ? "mdc-text-field--disabled" : "") + "\n      " + (/*fullwidth*/ ctx[8] ? "mdc-text-field--fullwidth" : "") + "\n      " + (/*textarea*/ ctx[9] ? "mdc-text-field--textarea" : "") + "\n      " + (/*variant*/ ctx[10] === "outlined" && !/*fullwidth*/ ctx[8]
    			? "mdc-text-field--outlined"
    			: "") + "\n      " + (/*variant*/ ctx[10] === "standard" && !/*fullwidth*/ ctx[8] && !/*textarea*/ ctx[9]
    			? "smui-text-field--standard"
    			: "") + "\n      " + (/*dense*/ ctx[11] ? "mdc-text-field--dense" : "") + "\n      " + (/*noLabel*/ ctx[14] || /*label*/ ctx[15] == null
    			? "mdc-text-field--no-label"
    			: "") + "\n      " + (/*withLeadingIcon*/ ctx[12]
    			? "mdc-text-field--with-leading-icon"
    			: "") + "\n      " + (/*withTrailingIcon*/ ctx[13]
    			? "mdc-text-field--with-trailing-icon"
    			: "") + "\n      " + (/*invalid*/ ctx[2] ? "mdc-text-field--invalid" : "") + "\n    "
    		},
    		/*props*/ ctx[19]
    	];

    	let label_1_data = {};

    	for (let i = 0; i < label_1_levels.length; i += 1) {
    		label_1_data = assign(label_1_data, label_1_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			label_1 = element("label");
    			if (default_slot) default_slot.c();
    			t0 = space();
    			if_block0.c();
    			t1 = space();
    			if (if_block1) if_block1.c();
    			t2 = space();
    			if (if_block2) if_block2.c();
    			set_attributes(label_1, label_1_data);
    			add_location(label_1, file$d, 1, 2, 15);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, label_1, anchor);

    			if (default_slot) {
    				default_slot.m(label_1, null);
    			}

    			append_dev(label_1, t0);
    			if_blocks[current_block_type_index].m(label_1, null);
    			append_dev(label_1, t1);
    			if (if_block1) if_block1.m(label_1, null);
    			append_dev(label_1, t2);
    			if (if_block2) if_block2.m(label_1, null);
    			/*label_1_binding*/ ctx[43](label_1);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, label_1, /*use*/ ctx[4])),
    					action_destroyer(/*forwardEvents*/ ctx[21].call(null, label_1))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (default_slot) {
    				if (default_slot.p && dirty[1] & /*$$scope*/ 16384) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[45], dirty, null, null);
    				}
    			}

    			let previous_block_index = current_block_type_index;
    			current_block_type_index = select_block_type_1(ctx);

    			if (current_block_type_index === previous_block_index) {
    				if_blocks[current_block_type_index].p(ctx, dirty);
    			} else {
    				group_outros();

    				transition_out(if_blocks[previous_block_index], 1, 1, () => {
    					if_blocks[previous_block_index] = null;
    				});

    				check_outros();
    				if_block0 = if_blocks[current_block_type_index];

    				if (!if_block0) {
    					if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
    					if_block0.c();
    				} else {
    					if_block0.p(ctx, dirty);
    				}

    				transition_in(if_block0, 1);
    				if_block0.m(label_1, t1);
    			}

    			if (!/*textarea*/ ctx[9] && /*variant*/ ctx[10] !== "outlined") {
    				if (if_block1) {
    					if_block1.p(ctx, dirty);

    					if (dirty[0] & /*textarea, variant*/ 1536) {
    						transition_in(if_block1, 1);
    					}
    				} else {
    					if_block1 = create_if_block_3(ctx);
    					if_block1.c();
    					transition_in(if_block1, 1);
    					if_block1.m(label_1, t2);
    				}
    			} else if (if_block1) {
    				group_outros();

    				transition_out(if_block1, 1, 1, () => {
    					if_block1 = null;
    				});

    				check_outros();
    			}

    			if (/*textarea*/ ctx[9] || /*variant*/ ctx[10] === "outlined" && !/*fullwidth*/ ctx[8]) {
    				if (if_block2) {
    					if_block2.p(ctx, dirty);

    					if (dirty[0] & /*textarea, variant, fullwidth*/ 1792) {
    						transition_in(if_block2, 1);
    					}
    				} else {
    					if_block2 = create_if_block_1$1(ctx);
    					if_block2.c();
    					transition_in(if_block2, 1);
    					if_block2.m(label_1, null);
    				}
    			} else if (if_block2) {
    				group_outros();

    				transition_out(if_block2, 1, 1, () => {
    					if_block2 = null;
    				});

    				check_outros();
    			}

    			set_attributes(label_1, label_1_data = get_spread_update(label_1_levels, [
    				(!current || dirty[0] & /*className, disabled, fullwidth, textarea, variant, dense, noLabel, label, withLeadingIcon, withTrailingIcon, invalid*/ 65444 && label_1_class_value !== (label_1_class_value = "\n      mdc-text-field\n      " + /*className*/ ctx[5] + "\n      " + (/*disabled*/ ctx[7] ? "mdc-text-field--disabled" : "") + "\n      " + (/*fullwidth*/ ctx[8] ? "mdc-text-field--fullwidth" : "") + "\n      " + (/*textarea*/ ctx[9] ? "mdc-text-field--textarea" : "") + "\n      " + (/*variant*/ ctx[10] === "outlined" && !/*fullwidth*/ ctx[8]
    				? "mdc-text-field--outlined"
    				: "") + "\n      " + (/*variant*/ ctx[10] === "standard" && !/*fullwidth*/ ctx[8] && !/*textarea*/ ctx[9]
    				? "smui-text-field--standard"
    				: "") + "\n      " + (/*dense*/ ctx[11] ? "mdc-text-field--dense" : "") + "\n      " + (/*noLabel*/ ctx[14] || /*label*/ ctx[15] == null
    				? "mdc-text-field--no-label"
    				: "") + "\n      " + (/*withLeadingIcon*/ ctx[12]
    				? "mdc-text-field--with-leading-icon"
    				: "") + "\n      " + (/*withTrailingIcon*/ ctx[13]
    				? "mdc-text-field--with-trailing-icon"
    				: "") + "\n      " + (/*invalid*/ ctx[2] ? "mdc-text-field--invalid" : "") + "\n    ")) && { class: label_1_class_value },
    				dirty[0] & /*props*/ 524288 && /*props*/ ctx[19]
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty[0] & /*use*/ 16) useActions_action.update.call(null, /*use*/ ctx[4]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			transition_in(if_block0);
    			transition_in(if_block1);
    			transition_in(if_block2);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			transition_out(if_block0);
    			transition_out(if_block1);
    			transition_out(if_block2);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(label_1);
    			if (default_slot) default_slot.d(detaching);
    			if_blocks[current_block_type_index].d();
    			if (if_block1) if_block1.d();
    			if (if_block2) if_block2.d();
    			/*label_1_binding*/ ctx[43](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$3.name,
    		type: "if",
    		source: "(1:0) {#if valued}",
    		ctx
    	});

    	return block;
    }

    // (36:4) {:else}
    function create_else_block$1(ctx) {
    	let input;
    	let updating_value;
    	let updating_files;
    	let updating_dirty;
    	let updating_invalid;
    	let current;

    	const input_spread_levels = [
    		{ type: /*type*/ ctx[16] },
    		{ disabled: /*disabled*/ ctx[7] },
    		{ updateInvalid: /*updateInvalid*/ ctx[17] },
    		/*fullwidth*/ ctx[8] && /*label*/ ctx[15]
    		? { placeholder: /*label*/ ctx[15] }
    		: {},
    		prefixFilter(/*$$props*/ ctx[22], "input$")
    	];

    	function input_value_binding(value) {
    		/*input_value_binding*/ ctx[35].call(null, value);
    	}

    	function input_files_binding(value) {
    		/*input_files_binding*/ ctx[36].call(null, value);
    	}

    	function input_dirty_binding(value) {
    		/*input_dirty_binding*/ ctx[37].call(null, value);
    	}

    	function input_invalid_binding(value) {
    		/*input_invalid_binding*/ ctx[38].call(null, value);
    	}

    	let input_props = {};

    	for (let i = 0; i < input_spread_levels.length; i += 1) {
    		input_props = assign(input_props, input_spread_levels[i]);
    	}

    	if (/*value*/ ctx[0] !== void 0) {
    		input_props.value = /*value*/ ctx[0];
    	}

    	if (/*files*/ ctx[1] !== void 0) {
    		input_props.files = /*files*/ ctx[1];
    	}

    	if (/*dirty*/ ctx[3] !== void 0) {
    		input_props.dirty = /*dirty*/ ctx[3];
    	}

    	if (/*invalid*/ ctx[2] !== void 0) {
    		input_props.invalid = /*invalid*/ ctx[2];
    	}

    	input = new Input({ props: input_props, $$inline: true });
    	binding_callbacks.push(() => bind(input, "value", input_value_binding));
    	binding_callbacks.push(() => bind(input, "files", input_files_binding));
    	binding_callbacks.push(() => bind(input, "dirty", input_dirty_binding));
    	binding_callbacks.push(() => bind(input, "invalid", input_invalid_binding));
    	input.$on("change", /*change_handler_1*/ ctx[39]);
    	input.$on("input", /*input_handler_1*/ ctx[40]);
    	input.$on("blur", /*blur_handler_1*/ ctx[41]);
    	input.$on("focus", /*focus_handler_1*/ ctx[42]);

    	const block = {
    		c: function create() {
    			create_component(input.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(input, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const input_changes = (dirty[0] & /*type, disabled, updateInvalid, fullwidth, label, $$props*/ 4424064)
    			? get_spread_update(input_spread_levels, [
    					dirty[0] & /*type*/ 65536 && { type: /*type*/ ctx[16] },
    					dirty[0] & /*disabled*/ 128 && { disabled: /*disabled*/ ctx[7] },
    					dirty[0] & /*updateInvalid*/ 131072 && { updateInvalid: /*updateInvalid*/ ctx[17] },
    					dirty[0] & /*fullwidth, label*/ 33024 && get_spread_object(/*fullwidth*/ ctx[8] && /*label*/ ctx[15]
    					? { placeholder: /*label*/ ctx[15] }
    					: {}),
    					dirty[0] & /*$$props*/ 4194304 && get_spread_object(prefixFilter(/*$$props*/ ctx[22], "input$"))
    				])
    			: {};

    			if (!updating_value && dirty[0] & /*value*/ 1) {
    				updating_value = true;
    				input_changes.value = /*value*/ ctx[0];
    				add_flush_callback(() => updating_value = false);
    			}

    			if (!updating_files && dirty[0] & /*files*/ 2) {
    				updating_files = true;
    				input_changes.files = /*files*/ ctx[1];
    				add_flush_callback(() => updating_files = false);
    			}

    			if (!updating_dirty && dirty[0] & /*dirty*/ 8) {
    				updating_dirty = true;
    				input_changes.dirty = /*dirty*/ ctx[3];
    				add_flush_callback(() => updating_dirty = false);
    			}

    			if (!updating_invalid && dirty[0] & /*invalid*/ 4) {
    				updating_invalid = true;
    				input_changes.invalid = /*invalid*/ ctx[2];
    				add_flush_callback(() => updating_invalid = false);
    			}

    			input.$set(input_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(input.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(input.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(input, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_else_block$1.name,
    		type: "else",
    		source: "(36:4) {:else}",
    		ctx
    	});

    	return block;
    }

    // (23:4) {#if textarea}
    function create_if_block_6(ctx) {
    	let textarea_1;
    	let updating_value;
    	let updating_dirty;
    	let updating_invalid;
    	let current;

    	const textarea_1_spread_levels = [
    		{ disabled: /*disabled*/ ctx[7] },
    		{ updateInvalid: /*updateInvalid*/ ctx[17] },
    		prefixFilter(/*$$props*/ ctx[22], "input$")
    	];

    	function textarea_1_value_binding(value) {
    		/*textarea_1_value_binding*/ ctx[28].call(null, value);
    	}

    	function textarea_1_dirty_binding(value) {
    		/*textarea_1_dirty_binding*/ ctx[29].call(null, value);
    	}

    	function textarea_1_invalid_binding(value) {
    		/*textarea_1_invalid_binding*/ ctx[30].call(null, value);
    	}

    	let textarea_1_props = {};

    	for (let i = 0; i < textarea_1_spread_levels.length; i += 1) {
    		textarea_1_props = assign(textarea_1_props, textarea_1_spread_levels[i]);
    	}

    	if (/*value*/ ctx[0] !== void 0) {
    		textarea_1_props.value = /*value*/ ctx[0];
    	}

    	if (/*dirty*/ ctx[3] !== void 0) {
    		textarea_1_props.dirty = /*dirty*/ ctx[3];
    	}

    	if (/*invalid*/ ctx[2] !== void 0) {
    		textarea_1_props.invalid = /*invalid*/ ctx[2];
    	}

    	textarea_1 = new Textarea({ props: textarea_1_props, $$inline: true });
    	binding_callbacks.push(() => bind(textarea_1, "value", textarea_1_value_binding));
    	binding_callbacks.push(() => bind(textarea_1, "dirty", textarea_1_dirty_binding));
    	binding_callbacks.push(() => bind(textarea_1, "invalid", textarea_1_invalid_binding));
    	textarea_1.$on("change", /*change_handler*/ ctx[31]);
    	textarea_1.$on("input", /*input_handler*/ ctx[32]);
    	textarea_1.$on("blur", /*blur_handler*/ ctx[33]);
    	textarea_1.$on("focus", /*focus_handler*/ ctx[34]);

    	const block = {
    		c: function create() {
    			create_component(textarea_1.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(textarea_1, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const textarea_1_changes = (dirty[0] & /*disabled, updateInvalid, $$props*/ 4325504)
    			? get_spread_update(textarea_1_spread_levels, [
    					dirty[0] & /*disabled*/ 128 && { disabled: /*disabled*/ ctx[7] },
    					dirty[0] & /*updateInvalid*/ 131072 && { updateInvalid: /*updateInvalid*/ ctx[17] },
    					dirty[0] & /*$$props*/ 4194304 && get_spread_object(prefixFilter(/*$$props*/ ctx[22], "input$"))
    				])
    			: {};

    			if (!updating_value && dirty[0] & /*value*/ 1) {
    				updating_value = true;
    				textarea_1_changes.value = /*value*/ ctx[0];
    				add_flush_callback(() => updating_value = false);
    			}

    			if (!updating_dirty && dirty[0] & /*dirty*/ 8) {
    				updating_dirty = true;
    				textarea_1_changes.dirty = /*dirty*/ ctx[3];
    				add_flush_callback(() => updating_dirty = false);
    			}

    			if (!updating_invalid && dirty[0] & /*invalid*/ 4) {
    				updating_invalid = true;
    				textarea_1_changes.invalid = /*invalid*/ ctx[2];
    				add_flush_callback(() => updating_invalid = false);
    			}

    			textarea_1.$set(textarea_1_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(textarea_1.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(textarea_1.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(textarea_1, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_6.name,
    		type: "if",
    		source: "(23:4) {#if textarea}",
    		ctx
    	});

    	return block;
    }

    // (53:4) {#if !textarea && variant !== 'outlined'}
    function create_if_block_3(ctx) {
    	let t;
    	let if_block1_anchor;
    	let current;
    	let if_block0 = !/*noLabel*/ ctx[14] && /*label*/ ctx[15] != null && !/*fullwidth*/ ctx[8] && create_if_block_5(ctx);
    	let if_block1 = /*ripple*/ ctx[6] && create_if_block_4(ctx);

    	const block = {
    		c: function create() {
    			if (if_block0) if_block0.c();
    			t = space();
    			if (if_block1) if_block1.c();
    			if_block1_anchor = empty();
    		},
    		m: function mount(target, anchor) {
    			if (if_block0) if_block0.m(target, anchor);
    			insert_dev(target, t, anchor);
    			if (if_block1) if_block1.m(target, anchor);
    			insert_dev(target, if_block1_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (!/*noLabel*/ ctx[14] && /*label*/ ctx[15] != null && !/*fullwidth*/ ctx[8]) {
    				if (if_block0) {
    					if_block0.p(ctx, dirty);

    					if (dirty[0] & /*noLabel, label, fullwidth*/ 49408) {
    						transition_in(if_block0, 1);
    					}
    				} else {
    					if_block0 = create_if_block_5(ctx);
    					if_block0.c();
    					transition_in(if_block0, 1);
    					if_block0.m(t.parentNode, t);
    				}
    			} else if (if_block0) {
    				group_outros();

    				transition_out(if_block0, 1, 1, () => {
    					if_block0 = null;
    				});

    				check_outros();
    			}

    			if (/*ripple*/ ctx[6]) {
    				if (if_block1) {
    					if_block1.p(ctx, dirty);

    					if (dirty[0] & /*ripple*/ 64) {
    						transition_in(if_block1, 1);
    					}
    				} else {
    					if_block1 = create_if_block_4(ctx);
    					if_block1.c();
    					transition_in(if_block1, 1);
    					if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
    				}
    			} else if (if_block1) {
    				group_outros();

    				transition_out(if_block1, 1, 1, () => {
    					if_block1 = null;
    				});

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block0);
    			transition_in(if_block1);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block0);
    			transition_out(if_block1);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (if_block0) if_block0.d(detaching);
    			if (detaching) detach_dev(t);
    			if (if_block1) if_block1.d(detaching);
    			if (detaching) detach_dev(if_block1_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_3.name,
    		type: "if",
    		source: "(53:4) {#if !textarea && variant !== 'outlined'}",
    		ctx
    	});

    	return block;
    }

    // (54:6) {#if !noLabel && label != null && !fullwidth}
    function create_if_block_5(ctx) {
    	let floatinglabel;
    	let current;
    	const floatinglabel_spread_levels = [{ wrapped: true }, prefixFilter(/*$$props*/ ctx[22], "label$")];

    	let floatinglabel_props = {
    		$$slots: { default: [create_default_slot_2] },
    		$$scope: { ctx }
    	};

    	for (let i = 0; i < floatinglabel_spread_levels.length; i += 1) {
    		floatinglabel_props = assign(floatinglabel_props, floatinglabel_spread_levels[i]);
    	}

    	floatinglabel = new FloatingLabel({
    			props: floatinglabel_props,
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(floatinglabel.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(floatinglabel, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const floatinglabel_changes = (dirty[0] & /*$$props*/ 4194304)
    			? get_spread_update(floatinglabel_spread_levels, [
    					floatinglabel_spread_levels[0],
    					get_spread_object(prefixFilter(/*$$props*/ ctx[22], "label$"))
    				])
    			: {};

    			if (dirty[0] & /*label*/ 32768 | dirty[1] & /*$$scope*/ 16384) {
    				floatinglabel_changes.$$scope = { dirty, ctx };
    			}

    			floatinglabel.$set(floatinglabel_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(floatinglabel.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(floatinglabel.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(floatinglabel, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_5.name,
    		type: "if",
    		source: "(54:6) {#if !noLabel && label != null && !fullwidth}",
    		ctx
    	});

    	return block;
    }

    // (55:8) <FloatingLabel wrapped {...prefixFilter($$props, 'label$')}>
    function create_default_slot_2(ctx) {
    	let t;
    	let current;
    	const label_slot_template = /*#slots*/ ctx[27].label;
    	const label_slot = create_slot(label_slot_template, ctx, /*$$scope*/ ctx[45], get_label_slot_context);

    	const block = {
    		c: function create() {
    			t = text(/*label*/ ctx[15]);
    			if (label_slot) label_slot.c();
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, t, anchor);

    			if (label_slot) {
    				label_slot.m(target, anchor);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (!current || dirty[0] & /*label*/ 32768) set_data_dev(t, /*label*/ ctx[15]);

    			if (label_slot) {
    				if (label_slot.p && dirty[1] & /*$$scope*/ 16384) {
    					update_slot(label_slot, label_slot_template, ctx, /*$$scope*/ ctx[45], dirty, get_label_slot_changes, get_label_slot_context);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(label_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(label_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(t);
    			if (label_slot) label_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_2.name,
    		type: "slot",
    		source: "(55:8) <FloatingLabel wrapped {...prefixFilter($$props, 'label$')}>",
    		ctx
    	});

    	return block;
    }

    // (57:6) {#if ripple}
    function create_if_block_4(ctx) {
    	let lineripple;
    	let current;
    	const lineripple_spread_levels = [prefixFilter(/*$$props*/ ctx[22], "ripple$")];
    	let lineripple_props = {};

    	for (let i = 0; i < lineripple_spread_levels.length; i += 1) {
    		lineripple_props = assign(lineripple_props, lineripple_spread_levels[i]);
    	}

    	lineripple = new LineRipple({ props: lineripple_props, $$inline: true });

    	const block = {
    		c: function create() {
    			create_component(lineripple.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(lineripple, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const lineripple_changes = (dirty[0] & /*$$props*/ 4194304)
    			? get_spread_update(lineripple_spread_levels, [get_spread_object(prefixFilter(/*$$props*/ ctx[22], "ripple$"))])
    			: {};

    			lineripple.$set(lineripple_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(lineripple.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(lineripple.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(lineripple, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_4.name,
    		type: "if",
    		source: "(57:6) {#if ripple}",
    		ctx
    	});

    	return block;
    }

    // (61:4) {#if textarea || (variant === 'outlined' && !fullwidth)}
    function create_if_block_1$1(ctx) {
    	let notchedoutline;
    	let current;

    	const notchedoutline_spread_levels = [
    		{
    			noLabel: /*noLabel*/ ctx[14] || /*label*/ ctx[15] == null
    		},
    		prefixFilter(/*$$props*/ ctx[22], "outline$")
    	];

    	let notchedoutline_props = {
    		$$slots: { default: [create_default_slot$2] },
    		$$scope: { ctx }
    	};

    	for (let i = 0; i < notchedoutline_spread_levels.length; i += 1) {
    		notchedoutline_props = assign(notchedoutline_props, notchedoutline_spread_levels[i]);
    	}

    	notchedoutline = new NotchedOutline({
    			props: notchedoutline_props,
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(notchedoutline.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(notchedoutline, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const notchedoutline_changes = (dirty[0] & /*noLabel, label, $$props*/ 4243456)
    			? get_spread_update(notchedoutline_spread_levels, [
    					dirty[0] & /*noLabel, label*/ 49152 && {
    						noLabel: /*noLabel*/ ctx[14] || /*label*/ ctx[15] == null
    					},
    					dirty[0] & /*$$props*/ 4194304 && get_spread_object(prefixFilter(/*$$props*/ ctx[22], "outline$"))
    				])
    			: {};

    			if (dirty[0] & /*$$props, label, noLabel*/ 4243456 | dirty[1] & /*$$scope*/ 16384) {
    				notchedoutline_changes.$$scope = { dirty, ctx };
    			}

    			notchedoutline.$set(notchedoutline_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(notchedoutline.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(notchedoutline.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(notchedoutline, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1$1.name,
    		type: "if",
    		source: "(61:4) {#if textarea || (variant === 'outlined' && !fullwidth)}",
    		ctx
    	});

    	return block;
    }

    // (63:8) {#if !noLabel && label != null}
    function create_if_block_2(ctx) {
    	let floatinglabel;
    	let current;
    	const floatinglabel_spread_levels = [{ wrapped: true }, prefixFilter(/*$$props*/ ctx[22], "label$")];

    	let floatinglabel_props = {
    		$$slots: { default: [create_default_slot_1] },
    		$$scope: { ctx }
    	};

    	for (let i = 0; i < floatinglabel_spread_levels.length; i += 1) {
    		floatinglabel_props = assign(floatinglabel_props, floatinglabel_spread_levels[i]);
    	}

    	floatinglabel = new FloatingLabel({
    			props: floatinglabel_props,
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(floatinglabel.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(floatinglabel, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const floatinglabel_changes = (dirty[0] & /*$$props*/ 4194304)
    			? get_spread_update(floatinglabel_spread_levels, [
    					floatinglabel_spread_levels[0],
    					get_spread_object(prefixFilter(/*$$props*/ ctx[22], "label$"))
    				])
    			: {};

    			if (dirty[0] & /*label*/ 32768 | dirty[1] & /*$$scope*/ 16384) {
    				floatinglabel_changes.$$scope = { dirty, ctx };
    			}

    			floatinglabel.$set(floatinglabel_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(floatinglabel.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(floatinglabel.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(floatinglabel, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_2.name,
    		type: "if",
    		source: "(63:8) {#if !noLabel && label != null}",
    		ctx
    	});

    	return block;
    }

    // (64:10) <FloatingLabel wrapped {...prefixFilter($$props, 'label$')}>
    function create_default_slot_1(ctx) {
    	let t;
    	let current;
    	const label_slot_template = /*#slots*/ ctx[27].label;
    	const label_slot = create_slot(label_slot_template, ctx, /*$$scope*/ ctx[45], get_label_slot_context_1);

    	const block = {
    		c: function create() {
    			t = text(/*label*/ ctx[15]);
    			if (label_slot) label_slot.c();
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, t, anchor);

    			if (label_slot) {
    				label_slot.m(target, anchor);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (!current || dirty[0] & /*label*/ 32768) set_data_dev(t, /*label*/ ctx[15]);

    			if (label_slot) {
    				if (label_slot.p && dirty[1] & /*$$scope*/ 16384) {
    					update_slot(label_slot, label_slot_template, ctx, /*$$scope*/ ctx[45], dirty, get_label_slot_changes_1, get_label_slot_context_1);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(label_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(label_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(t);
    			if (label_slot) label_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_1.name,
    		type: "slot",
    		source: "(64:10) <FloatingLabel wrapped {...prefixFilter($$props, 'label$')}>",
    		ctx
    	});

    	return block;
    }

    // (62:6) <NotchedOutline noLabel={noLabel || label == null} {...prefixFilter($$props, 'outline$')}>
    function create_default_slot$2(ctx) {
    	let if_block_anchor;
    	let current;
    	let if_block = !/*noLabel*/ ctx[14] && /*label*/ ctx[15] != null && create_if_block_2(ctx);

    	const block = {
    		c: function create() {
    			if (if_block) if_block.c();
    			if_block_anchor = empty();
    		},
    		m: function mount(target, anchor) {
    			if (if_block) if_block.m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (!/*noLabel*/ ctx[14] && /*label*/ ctx[15] != null) {
    				if (if_block) {
    					if_block.p(ctx, dirty);

    					if (dirty[0] & /*noLabel, label*/ 49152) {
    						transition_in(if_block, 1);
    					}
    				} else {
    					if_block = create_if_block_2(ctx);
    					if_block.c();
    					transition_in(if_block, 1);
    					if_block.m(if_block_anchor.parentNode, if_block_anchor);
    				}
    			} else if (if_block) {
    				group_outros();

    				transition_out(if_block, 1, 1, () => {
    					if_block = null;
    				});

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (if_block) if_block.d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot$2.name,
    		type: "slot",
    		source: "(62:6) <NotchedOutline noLabel={noLabel || label == null} {...prefixFilter($$props, 'outline$')}>",
    		ctx
    	});

    	return block;
    }

    function create_fragment$e(ctx) {
    	let current_block_type_index;
    	let if_block;
    	let if_block_anchor;
    	let current;
    	const if_block_creators = [create_if_block$3, create_else_block_1];
    	const if_blocks = [];

    	function select_block_type(ctx, dirty) {
    		if (/*valued*/ ctx[20]) return 0;
    		return 1;
    	}

    	current_block_type_index = select_block_type(ctx);
    	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

    	const block = {
    		c: function create() {
    			if_block.c();
    			if_block_anchor = empty();
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			if_blocks[current_block_type_index].m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			let previous_block_index = current_block_type_index;
    			current_block_type_index = select_block_type(ctx);

    			if (current_block_type_index === previous_block_index) {
    				if_blocks[current_block_type_index].p(ctx, dirty);
    			} else {
    				group_outros();

    				transition_out(if_blocks[previous_block_index], 1, 1, () => {
    					if_blocks[previous_block_index] = null;
    				});

    				check_outros();
    				if_block = if_blocks[current_block_type_index];

    				if (!if_block) {
    					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
    					if_block.c();
    				} else {
    					if_block.p(ctx, dirty);
    				}

    				transition_in(if_block, 1);
    				if_block.m(if_block_anchor.parentNode, if_block_anchor);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if_blocks[current_block_type_index].d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$e.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$e($$self, $$props, $$invalidate) {
    	let props;
    	let valued;
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Textfield", slots, ['default','label']);
    	const forwardEvents = forwardEventsBuilder(get_current_component());

    	let uninitializedValue = () => {
    		
    	};

    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	let { ripple = true } = $$props;
    	let { disabled = false } = $$props;
    	let { fullwidth = false } = $$props;
    	let { textarea = false } = $$props;
    	let { variant = "standard" } = $$props;
    	let { dense = false } = $$props;
    	let { withLeadingIcon = false } = $$props;
    	let { withTrailingIcon = false } = $$props;
    	let { noLabel = false } = $$props;
    	let { label = null } = $$props;
    	let { type = "text" } = $$props;
    	let { value = uninitializedValue } = $$props;
    	let { files = uninitializedValue } = $$props;
    	let { dirty = false } = $$props;
    	let { invalid = uninitializedValue } = $$props;
    	let { updateInvalid = invalid === uninitializedValue } = $$props;
    	let { useNativeValidation = updateInvalid } = $$props;
    	let element;
    	let textField;
    	let addLayoutListener = getContext("SMUI:addLayoutListener");
    	let removeLayoutListener;

    	if (addLayoutListener) {
    		removeLayoutListener = addLayoutListener(layout);
    	}

    	onMount(() => {
    		$$invalidate(26, textField = new MDCTextField(element));

    		if (!ripple) {
    			textField.ripple && textField.ripple.destroy();
    		}
    	});

    	onDestroy(() => {
    		textField && textField.destroy();

    		if (removeLayoutListener) {
    			removeLayoutListener();
    		}
    	});

    	function focus(...args) {
    		return textField.focus(...args);
    	}

    	function layout(...args) {
    		return textField.layout(...args);
    	}

    	function textarea_1_value_binding(value$1) {
    		value = value$1;
    		$$invalidate(0, value);
    	}

    	function textarea_1_dirty_binding(value) {
    		dirty = value;
    		$$invalidate(3, dirty);
    	}

    	function textarea_1_invalid_binding(value$1) {
    		invalid = value$1;
    		(((((($$invalidate(2, invalid), $$invalidate(26, textField)), $$invalidate(17, updateInvalid)), $$invalidate(0, value)), $$invalidate(47, uninitializedValue)), $$invalidate(7, disabled)), $$invalidate(23, useNativeValidation));
    	}

    	function change_handler(event) {
    		bubble($$self, event);
    	}

    	function input_handler(event) {
    		bubble($$self, event);
    	}

    	function blur_handler(event) {
    		bubble($$self, event);
    	}

    	function focus_handler(event) {
    		bubble($$self, event);
    	}

    	function input_value_binding(value$1) {
    		value = value$1;
    		$$invalidate(0, value);
    	}

    	function input_files_binding(value) {
    		files = value;
    		$$invalidate(1, files);
    	}

    	function input_dirty_binding(value) {
    		dirty = value;
    		$$invalidate(3, dirty);
    	}

    	function input_invalid_binding(value$1) {
    		invalid = value$1;
    		(((((($$invalidate(2, invalid), $$invalidate(26, textField)), $$invalidate(17, updateInvalid)), $$invalidate(0, value)), $$invalidate(47, uninitializedValue)), $$invalidate(7, disabled)), $$invalidate(23, useNativeValidation));
    	}

    	function change_handler_1(event) {
    		bubble($$self, event);
    	}

    	function input_handler_1(event) {
    		bubble($$self, event);
    	}

    	function blur_handler_1(event) {
    		bubble($$self, event);
    	}

    	function focus_handler_1(event) {
    		bubble($$self, event);
    	}

    	function label_1_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(18, element);
    		});
    	}

    	function div_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(18, element);
    		});
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(22, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(4, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(5, className = $$new_props.class);
    		if ("ripple" in $$new_props) $$invalidate(6, ripple = $$new_props.ripple);
    		if ("disabled" in $$new_props) $$invalidate(7, disabled = $$new_props.disabled);
    		if ("fullwidth" in $$new_props) $$invalidate(8, fullwidth = $$new_props.fullwidth);
    		if ("textarea" in $$new_props) $$invalidate(9, textarea = $$new_props.textarea);
    		if ("variant" in $$new_props) $$invalidate(10, variant = $$new_props.variant);
    		if ("dense" in $$new_props) $$invalidate(11, dense = $$new_props.dense);
    		if ("withLeadingIcon" in $$new_props) $$invalidate(12, withLeadingIcon = $$new_props.withLeadingIcon);
    		if ("withTrailingIcon" in $$new_props) $$invalidate(13, withTrailingIcon = $$new_props.withTrailingIcon);
    		if ("noLabel" in $$new_props) $$invalidate(14, noLabel = $$new_props.noLabel);
    		if ("label" in $$new_props) $$invalidate(15, label = $$new_props.label);
    		if ("type" in $$new_props) $$invalidate(16, type = $$new_props.type);
    		if ("value" in $$new_props) $$invalidate(0, value = $$new_props.value);
    		if ("files" in $$new_props) $$invalidate(1, files = $$new_props.files);
    		if ("dirty" in $$new_props) $$invalidate(3, dirty = $$new_props.dirty);
    		if ("invalid" in $$new_props) $$invalidate(2, invalid = $$new_props.invalid);
    		if ("updateInvalid" in $$new_props) $$invalidate(17, updateInvalid = $$new_props.updateInvalid);
    		if ("useNativeValidation" in $$new_props) $$invalidate(23, useNativeValidation = $$new_props.useNativeValidation);
    		if ("$$scope" in $$new_props) $$invalidate(45, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		MDCTextField,
    		onMount,
    		onDestroy,
    		getContext,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		prefixFilter,
    		useActions,
    		FloatingLabel,
    		LineRipple,
    		NotchedOutline,
    		Input,
    		Textarea,
    		forwardEvents,
    		uninitializedValue,
    		use,
    		className,
    		ripple,
    		disabled,
    		fullwidth,
    		textarea,
    		variant,
    		dense,
    		withLeadingIcon,
    		withTrailingIcon,
    		noLabel,
    		label,
    		type,
    		value,
    		files,
    		dirty,
    		invalid,
    		updateInvalid,
    		useNativeValidation,
    		element,
    		textField,
    		addLayoutListener,
    		removeLayoutListener,
    		focus,
    		layout,
    		props,
    		valued
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(22, $$props = assign(assign({}, $$props), $$new_props));
    		if ("uninitializedValue" in $$props) $$invalidate(47, uninitializedValue = $$new_props.uninitializedValue);
    		if ("use" in $$props) $$invalidate(4, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(5, className = $$new_props.className);
    		if ("ripple" in $$props) $$invalidate(6, ripple = $$new_props.ripple);
    		if ("disabled" in $$props) $$invalidate(7, disabled = $$new_props.disabled);
    		if ("fullwidth" in $$props) $$invalidate(8, fullwidth = $$new_props.fullwidth);
    		if ("textarea" in $$props) $$invalidate(9, textarea = $$new_props.textarea);
    		if ("variant" in $$props) $$invalidate(10, variant = $$new_props.variant);
    		if ("dense" in $$props) $$invalidate(11, dense = $$new_props.dense);
    		if ("withLeadingIcon" in $$props) $$invalidate(12, withLeadingIcon = $$new_props.withLeadingIcon);
    		if ("withTrailingIcon" in $$props) $$invalidate(13, withTrailingIcon = $$new_props.withTrailingIcon);
    		if ("noLabel" in $$props) $$invalidate(14, noLabel = $$new_props.noLabel);
    		if ("label" in $$props) $$invalidate(15, label = $$new_props.label);
    		if ("type" in $$props) $$invalidate(16, type = $$new_props.type);
    		if ("value" in $$props) $$invalidate(0, value = $$new_props.value);
    		if ("files" in $$props) $$invalidate(1, files = $$new_props.files);
    		if ("dirty" in $$props) $$invalidate(3, dirty = $$new_props.dirty);
    		if ("invalid" in $$props) $$invalidate(2, invalid = $$new_props.invalid);
    		if ("updateInvalid" in $$props) $$invalidate(17, updateInvalid = $$new_props.updateInvalid);
    		if ("useNativeValidation" in $$props) $$invalidate(23, useNativeValidation = $$new_props.useNativeValidation);
    		if ("element" in $$props) $$invalidate(18, element = $$new_props.element);
    		if ("textField" in $$props) $$invalidate(26, textField = $$new_props.textField);
    		if ("addLayoutListener" in $$props) addLayoutListener = $$new_props.addLayoutListener;
    		if ("removeLayoutListener" in $$props) removeLayoutListener = $$new_props.removeLayoutListener;
    		if ("props" in $$props) $$invalidate(19, props = $$new_props.props);
    		if ("valued" in $$props) $$invalidate(20, valued = $$new_props.valued);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		 $$invalidate(19, props = exclude($$props, [
    			"use",
    			"class",
    			"ripple",
    			"disabled",
    			"fullwidth",
    			"textarea",
    			"variant",
    			"dense",
    			"withLeadingIcon",
    			"withTrailingIcon",
    			"noLabel",
    			"label",
    			"type",
    			"value",
    			"dirty",
    			"invalid",
    			"updateInvalid",
    			"useNativeValidation",
    			"input$",
    			"label$",
    			"ripple$",
    			"outline$"
    		]));

    		if ($$self.$$.dirty[0] & /*value, files*/ 3) {
    			 $$invalidate(20, valued = value !== uninitializedValue || files !== uninitializedValue);
    		}

    		if ($$self.$$.dirty[0] & /*textField, value*/ 67108865) {
    			 if (textField && value !== uninitializedValue && textField.value !== value) {
    				$$invalidate(26, textField.value = value, textField);
    			}
    		}

    		if ($$self.$$.dirty[0] & /*textField, disabled*/ 67108992) {
    			 if (textField && textField.disabled !== disabled) {
    				$$invalidate(26, textField.disabled = disabled, textField);
    			}
    		}

    		if ($$self.$$.dirty[0] & /*textField, invalid, updateInvalid*/ 67239940) {
    			 if (textField && textField.valid !== !invalid) {
    				if (updateInvalid) {
    					$$invalidate(2, invalid = !textField.valid);
    				} else {
    					$$invalidate(26, textField.valid = !invalid, textField);
    				}
    			}
    		}

    		if ($$self.$$.dirty[0] & /*textField, useNativeValidation*/ 75497472) {
    			 if (textField && textField.useNativeValidation !== useNativeValidation) {
    				$$invalidate(26, textField.useNativeValidation = useNativeValidation, textField);
    			}
    		}
    	};

    	$$props = exclude_internal_props($$props);

    	return [
    		value,
    		files,
    		invalid,
    		dirty,
    		use,
    		className,
    		ripple,
    		disabled,
    		fullwidth,
    		textarea,
    		variant,
    		dense,
    		withLeadingIcon,
    		withTrailingIcon,
    		noLabel,
    		label,
    		type,
    		updateInvalid,
    		element,
    		props,
    		valued,
    		forwardEvents,
    		$$props,
    		useNativeValidation,
    		focus,
    		layout,
    		textField,
    		slots,
    		textarea_1_value_binding,
    		textarea_1_dirty_binding,
    		textarea_1_invalid_binding,
    		change_handler,
    		input_handler,
    		blur_handler,
    		focus_handler,
    		input_value_binding,
    		input_files_binding,
    		input_dirty_binding,
    		input_invalid_binding,
    		change_handler_1,
    		input_handler_1,
    		blur_handler_1,
    		focus_handler_1,
    		label_1_binding,
    		div_binding,
    		$$scope
    	];
    }

    class Textfield extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(
    			this,
    			options,
    			instance$e,
    			create_fragment$e,
    			safe_not_equal,
    			{
    				use: 4,
    				class: 5,
    				ripple: 6,
    				disabled: 7,
    				fullwidth: 8,
    				textarea: 9,
    				variant: 10,
    				dense: 11,
    				withLeadingIcon: 12,
    				withTrailingIcon: 13,
    				noLabel: 14,
    				label: 15,
    				type: 16,
    				value: 0,
    				files: 1,
    				dirty: 3,
    				invalid: 2,
    				updateInvalid: 17,
    				useNativeValidation: 23,
    				focus: 24,
    				layout: 25
    			},
    			[-1, -1]
    		);

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Textfield",
    			options,
    			id: create_fragment$e.name
    		});
    	}

    	get use() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get ripple() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set ripple(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get disabled() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set disabled(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get fullwidth() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set fullwidth(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get textarea() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set textarea(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get variant() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set variant(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get dense() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set dense(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get withLeadingIcon() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set withLeadingIcon(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get withTrailingIcon() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set withTrailingIcon(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get noLabel() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set noLabel(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get label() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set label(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get type() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set type(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get value() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set value(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get files() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set files(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get dirty() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set dirty(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get invalid() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set invalid(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get updateInvalid() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set updateInvalid(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get useNativeValidation() {
    		throw new Error("<Textfield>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set useNativeValidation(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get focus() {
    		return this.$$.ctx[24];
    	}

    	set focus(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get layout() {
    		return this.$$.ctx[25];
    	}

    	set layout(value) {
    		throw new Error("<Textfield>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var jsEventTypeMap = {
        animationend: {
            cssProperty: 'animation',
            prefixed: 'webkitAnimationEnd',
            standard: 'animationend',
        },
        animationiteration: {
            cssProperty: 'animation',
            prefixed: 'webkitAnimationIteration',
            standard: 'animationiteration',
        },
        animationstart: {
            cssProperty: 'animation',
            prefixed: 'webkitAnimationStart',
            standard: 'animationstart',
        },
        transitionend: {
            cssProperty: 'transition',
            prefixed: 'webkitTransitionEnd',
            standard: 'transitionend',
        },
    };
    function isWindow(windowObj) {
        return Boolean(windowObj.document) && typeof windowObj.document.createElement === 'function';
    }
    function getCorrectEventName(windowObj, eventType) {
        if (isWindow(windowObj) && eventType in jsEventTypeMap) {
            var el = windowObj.document.createElement('div');
            var _a = jsEventTypeMap[eventType], standard = _a.standard, prefixed = _a.prefixed, cssProperty = _a.cssProperty;
            var isStandard = cssProperty in el.style;
            return isStandard ? standard : prefixed;
        }
        return eventType;
    }

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var cssClasses$8 = {
        ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',
        ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',
        ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',
        ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked',
        ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',
        ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',
        BACKGROUND: 'mdc-checkbox__background',
        CHECKED: 'mdc-checkbox--checked',
        CHECKMARK: 'mdc-checkbox__checkmark',
        CHECKMARK_PATH: 'mdc-checkbox__checkmark-path',
        DISABLED: 'mdc-checkbox--disabled',
        INDETERMINATE: 'mdc-checkbox--indeterminate',
        MIXEDMARK: 'mdc-checkbox__mixedmark',
        NATIVE_CONTROL: 'mdc-checkbox__native-control',
        ROOT: 'mdc-checkbox',
        SELECTED: 'mdc-checkbox--selected',
        UPGRADED: 'mdc-checkbox--upgraded',
    };
    var strings$6 = {
        ARIA_CHECKED_ATTR: 'aria-checked',
        ARIA_CHECKED_INDETERMINATE_VALUE: 'mixed',
        NATIVE_CONTROL_SELECTOR: '.mdc-checkbox__native-control',
        TRANSITION_STATE_CHECKED: 'checked',
        TRANSITION_STATE_INDETERMINATE: 'indeterminate',
        TRANSITION_STATE_INIT: 'init',
        TRANSITION_STATE_UNCHECKED: 'unchecked',
    };
    var numbers$3 = {
        ANIM_END_LATCH_MS: 250,
    };

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCCheckboxFoundation = /** @class */ (function (_super) {
        __extends(MDCCheckboxFoundation, _super);
        function MDCCheckboxFoundation(adapter) {
            var _this = _super.call(this, __assign({}, MDCCheckboxFoundation.defaultAdapter, adapter)) || this;
            _this.currentCheckState_ = strings$6.TRANSITION_STATE_INIT;
            _this.currentAnimationClass_ = '';
            _this.animEndLatchTimer_ = 0;
            _this.enableAnimationEndHandler_ = false;
            return _this;
        }
        Object.defineProperty(MDCCheckboxFoundation, "cssClasses", {
            get: function () {
                return cssClasses$8;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCCheckboxFoundation, "strings", {
            get: function () {
                return strings$6;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCCheckboxFoundation, "numbers", {
            get: function () {
                return numbers$3;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCCheckboxFoundation, "defaultAdapter", {
            get: function () {
                return {
                    addClass: function () { return undefined; },
                    forceLayout: function () { return undefined; },
                    hasNativeControl: function () { return false; },
                    isAttachedToDOM: function () { return false; },
                    isChecked: function () { return false; },
                    isIndeterminate: function () { return false; },
                    removeClass: function () { return undefined; },
                    removeNativeControlAttr: function () { return undefined; },
                    setNativeControlAttr: function () { return undefined; },
                    setNativeControlDisabled: function () { return undefined; },
                };
            },
            enumerable: true,
            configurable: true
        });
        MDCCheckboxFoundation.prototype.init = function () {
            this.currentCheckState_ = this.determineCheckState_();
            this.updateAriaChecked_();
            this.adapter_.addClass(cssClasses$8.UPGRADED);
        };
        MDCCheckboxFoundation.prototype.destroy = function () {
            clearTimeout(this.animEndLatchTimer_);
        };
        MDCCheckboxFoundation.prototype.setDisabled = function (disabled) {
            this.adapter_.setNativeControlDisabled(disabled);
            if (disabled) {
                this.adapter_.addClass(cssClasses$8.DISABLED);
            }
            else {
                this.adapter_.removeClass(cssClasses$8.DISABLED);
            }
        };
        /**
         * Handles the animationend event for the checkbox
         */
        MDCCheckboxFoundation.prototype.handleAnimationEnd = function () {
            var _this = this;
            if (!this.enableAnimationEndHandler_) {
                return;
            }
            clearTimeout(this.animEndLatchTimer_);
            this.animEndLatchTimer_ = setTimeout(function () {
                _this.adapter_.removeClass(_this.currentAnimationClass_);
                _this.enableAnimationEndHandler_ = false;
            }, numbers$3.ANIM_END_LATCH_MS);
        };
        /**
         * Handles the change event for the checkbox
         */
        MDCCheckboxFoundation.prototype.handleChange = function () {
            this.transitionCheckState_();
        };
        MDCCheckboxFoundation.prototype.transitionCheckState_ = function () {
            if (!this.adapter_.hasNativeControl()) {
                return;
            }
            var oldState = this.currentCheckState_;
            var newState = this.determineCheckState_();
            if (oldState === newState) {
                return;
            }
            this.updateAriaChecked_();
            var TRANSITION_STATE_UNCHECKED = strings$6.TRANSITION_STATE_UNCHECKED;
            var SELECTED = cssClasses$8.SELECTED;
            if (newState === TRANSITION_STATE_UNCHECKED) {
                this.adapter_.removeClass(SELECTED);
            }
            else {
                this.adapter_.addClass(SELECTED);
            }
            // Check to ensure that there isn't a previously existing animation class, in case for example
            // the user interacted with the checkbox before the animation was finished.
            if (this.currentAnimationClass_.length > 0) {
                clearTimeout(this.animEndLatchTimer_);
                this.adapter_.forceLayout();
                this.adapter_.removeClass(this.currentAnimationClass_);
            }
            this.currentAnimationClass_ = this.getTransitionAnimationClass_(oldState, newState);
            this.currentCheckState_ = newState;
            // Check for parentNode so that animations are only run when the element is attached
            // to the DOM.
            if (this.adapter_.isAttachedToDOM() && this.currentAnimationClass_.length > 0) {
                this.adapter_.addClass(this.currentAnimationClass_);
                this.enableAnimationEndHandler_ = true;
            }
        };
        MDCCheckboxFoundation.prototype.determineCheckState_ = function () {
            var TRANSITION_STATE_INDETERMINATE = strings$6.TRANSITION_STATE_INDETERMINATE, TRANSITION_STATE_CHECKED = strings$6.TRANSITION_STATE_CHECKED, TRANSITION_STATE_UNCHECKED = strings$6.TRANSITION_STATE_UNCHECKED;
            if (this.adapter_.isIndeterminate()) {
                return TRANSITION_STATE_INDETERMINATE;
            }
            return this.adapter_.isChecked() ? TRANSITION_STATE_CHECKED : TRANSITION_STATE_UNCHECKED;
        };
        MDCCheckboxFoundation.prototype.getTransitionAnimationClass_ = function (oldState, newState) {
            var TRANSITION_STATE_INIT = strings$6.TRANSITION_STATE_INIT, TRANSITION_STATE_CHECKED = strings$6.TRANSITION_STATE_CHECKED, TRANSITION_STATE_UNCHECKED = strings$6.TRANSITION_STATE_UNCHECKED;
            var _a = MDCCheckboxFoundation.cssClasses, ANIM_UNCHECKED_CHECKED = _a.ANIM_UNCHECKED_CHECKED, ANIM_UNCHECKED_INDETERMINATE = _a.ANIM_UNCHECKED_INDETERMINATE, ANIM_CHECKED_UNCHECKED = _a.ANIM_CHECKED_UNCHECKED, ANIM_CHECKED_INDETERMINATE = _a.ANIM_CHECKED_INDETERMINATE, ANIM_INDETERMINATE_CHECKED = _a.ANIM_INDETERMINATE_CHECKED, ANIM_INDETERMINATE_UNCHECKED = _a.ANIM_INDETERMINATE_UNCHECKED;
            switch (oldState) {
                case TRANSITION_STATE_INIT:
                    if (newState === TRANSITION_STATE_UNCHECKED) {
                        return '';
                    }
                    return newState === TRANSITION_STATE_CHECKED ? ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;
                case TRANSITION_STATE_UNCHECKED:
                    return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;
                case TRANSITION_STATE_CHECKED:
                    return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;
                default: // TRANSITION_STATE_INDETERMINATE
                    return newState === TRANSITION_STATE_CHECKED ? ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;
            }
        };
        MDCCheckboxFoundation.prototype.updateAriaChecked_ = function () {
            // Ensure aria-checked is set to mixed if checkbox is in indeterminate state.
            if (this.adapter_.isIndeterminate()) {
                this.adapter_.setNativeControlAttr(strings$6.ARIA_CHECKED_ATTR, strings$6.ARIA_CHECKED_INDETERMINATE_VALUE);
            }
            else {
                // The on/off state does not need to keep track of aria-checked, since
                // the screenreader uses the checked property on the checkbox element.
                this.adapter_.removeNativeControlAttr(strings$6.ARIA_CHECKED_ATTR);
            }
        };
        return MDCCheckboxFoundation;
    }(MDCFoundation));

    /**
     * @license
     * Copyright 2016 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var CB_PROTO_PROPS = ['checked', 'indeterminate'];
    var MDCCheckbox = /** @class */ (function (_super) {
        __extends(MDCCheckbox, _super);
        function MDCCheckbox() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.ripple_ = _this.createRipple_();
            return _this;
        }
        MDCCheckbox.attachTo = function (root) {
            return new MDCCheckbox(root);
        };
        Object.defineProperty(MDCCheckbox.prototype, "ripple", {
            get: function () {
                return this.ripple_;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCCheckbox.prototype, "checked", {
            get: function () {
                return this.nativeControl_.checked;
            },
            set: function (checked) {
                this.nativeControl_.checked = checked;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCCheckbox.prototype, "indeterminate", {
            get: function () {
                return this.nativeControl_.indeterminate;
            },
            set: function (indeterminate) {
                this.nativeControl_.indeterminate = indeterminate;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCCheckbox.prototype, "disabled", {
            get: function () {
                return this.nativeControl_.disabled;
            },
            set: function (disabled) {
                this.foundation_.setDisabled(disabled);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCCheckbox.prototype, "value", {
            get: function () {
                return this.nativeControl_.value;
            },
            set: function (value) {
                this.nativeControl_.value = value;
            },
            enumerable: true,
            configurable: true
        });
        MDCCheckbox.prototype.initialSyncWithDOM = function () {
            var _this = this;
            this.handleChange_ = function () { return _this.foundation_.handleChange(); };
            this.handleAnimationEnd_ = function () { return _this.foundation_.handleAnimationEnd(); };
            this.nativeControl_.addEventListener('change', this.handleChange_);
            this.listen(getCorrectEventName(window, 'animationend'), this.handleAnimationEnd_);
            this.installPropertyChangeHooks_();
        };
        MDCCheckbox.prototype.destroy = function () {
            this.ripple_.destroy();
            this.nativeControl_.removeEventListener('change', this.handleChange_);
            this.unlisten(getCorrectEventName(window, 'animationend'), this.handleAnimationEnd_);
            this.uninstallPropertyChangeHooks_();
            _super.prototype.destroy.call(this);
        };
        MDCCheckbox.prototype.getDefaultFoundation = function () {
            var _this = this;
            // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.
            // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.
            var adapter = {
                addClass: function (className) { return _this.root_.classList.add(className); },
                forceLayout: function () { return _this.root_.offsetWidth; },
                hasNativeControl: function () { return !!_this.nativeControl_; },
                isAttachedToDOM: function () { return Boolean(_this.root_.parentNode); },
                isChecked: function () { return _this.checked; },
                isIndeterminate: function () { return _this.indeterminate; },
                removeClass: function (className) { return _this.root_.classList.remove(className); },
                removeNativeControlAttr: function (attr) { return _this.nativeControl_.removeAttribute(attr); },
                setNativeControlAttr: function (attr, value) { return _this.nativeControl_.setAttribute(attr, value); },
                setNativeControlDisabled: function (disabled) { return _this.nativeControl_.disabled = disabled; },
            };
            return new MDCCheckboxFoundation(adapter);
        };
        MDCCheckbox.prototype.createRipple_ = function () {
            var _this = this;
            // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.
            // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.
            var adapter = __assign({}, MDCRipple.createAdapter(this), { deregisterInteractionHandler: function (evtType, handler) { return _this.nativeControl_.removeEventListener(evtType, handler, applyPassive()); }, isSurfaceActive: function () { return matches(_this.nativeControl_, ':active'); }, isUnbounded: function () { return true; }, registerInteractionHandler: function (evtType, handler) { return _this.nativeControl_.addEventListener(evtType, handler, applyPassive()); } });
            return new MDCRipple(this.root_, new MDCRippleFoundation(adapter));
        };
        MDCCheckbox.prototype.installPropertyChangeHooks_ = function () {
            var _this = this;
            var nativeCb = this.nativeControl_;
            var cbProto = Object.getPrototypeOf(nativeCb);
            CB_PROTO_PROPS.forEach(function (controlState) {
                var desc = Object.getOwnPropertyDescriptor(cbProto, controlState);
                // We have to check for this descriptor, since some browsers (Safari) don't support its return.
                // See: https://bugs.webkit.org/show_bug.cgi?id=49739
                if (!validDescriptor(desc)) {
                    return;
                }
                // Type cast is needed for compatibility with Closure Compiler.
                var nativeGetter = desc.get;
                var nativeCbDesc = {
                    configurable: desc.configurable,
                    enumerable: desc.enumerable,
                    get: nativeGetter,
                    set: function (state) {
                        desc.set.call(nativeCb, state);
                        _this.foundation_.handleChange();
                    },
                };
                Object.defineProperty(nativeCb, controlState, nativeCbDesc);
            });
        };
        MDCCheckbox.prototype.uninstallPropertyChangeHooks_ = function () {
            var nativeCb = this.nativeControl_;
            var cbProto = Object.getPrototypeOf(nativeCb);
            CB_PROTO_PROPS.forEach(function (controlState) {
                var desc = Object.getOwnPropertyDescriptor(cbProto, controlState);
                if (!validDescriptor(desc)) {
                    return;
                }
                Object.defineProperty(nativeCb, controlState, desc);
            });
        };
        Object.defineProperty(MDCCheckbox.prototype, "nativeControl_", {
            get: function () {
                var NATIVE_CONTROL_SELECTOR = MDCCheckboxFoundation.strings.NATIVE_CONTROL_SELECTOR;
                var el = this.root_.querySelector(NATIVE_CONTROL_SELECTOR);
                if (!el) {
                    throw new Error("Checkbox component requires a " + NATIVE_CONTROL_SELECTOR + " element");
                }
                return el;
            },
            enumerable: true,
            configurable: true
        });
        return MDCCheckbox;
    }(MDCComponent));
    function validDescriptor(inputPropDesc) {
        return !!inputPropDesc && typeof inputPropDesc.set === 'function';
    }

    /**
     * @license
     * Copyright 2019 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var cssClasses$9 = {
        CELL: 'mdc-data-table__cell',
        CELL_NUMERIC: 'mdc-data-table__cell--numeric',
        CONTENT: 'mdc-data-table__content',
        HEADER_ROW: 'mdc-data-table__header-row',
        HEADER_ROW_CHECKBOX: 'mdc-data-table__header-row-checkbox',
        ROOT: 'mdc-data-table',
        ROW: 'mdc-data-table__row',
        ROW_CHECKBOX: 'mdc-data-table__row-checkbox',
        ROW_SELECTED: 'mdc-data-table__row--selected',
    };
    var strings$7 = {
        ARIA_SELECTED: 'aria-selected',
        DATA_ROW_ID_ATTR: 'data-row-id',
        HEADER_ROW_CHECKBOX_SELECTOR: "." + cssClasses$9.HEADER_ROW_CHECKBOX,
        ROW_CHECKBOX_SELECTOR: "." + cssClasses$9.ROW_CHECKBOX,
        ROW_SELECTED_SELECTOR: "." + cssClasses$9.ROW_SELECTED,
        ROW_SELECTOR: "." + cssClasses$9.ROW,
    };
    var events = {
        ROW_SELECTION_CHANGED: 'MDCDataTable:rowSelectionChanged',
        SELECTED_ALL: 'MDCDataTable:selectedAll',
        UNSELECTED_ALL: 'MDCDataTable:unselectedAll',
    };

    /**
     * @license
     * Copyright 2019 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCDataTableFoundation = /** @class */ (function (_super) {
        __extends(MDCDataTableFoundation, _super);
        function MDCDataTableFoundation(adapter) {
            return _super.call(this, __assign({}, MDCDataTableFoundation.defaultAdapter, adapter)) || this;
        }
        Object.defineProperty(MDCDataTableFoundation, "defaultAdapter", {
            get: function () {
                return {
                    addClassAtRowIndex: function () { return undefined; },
                    getRowCount: function () { return 0; },
                    getRowElements: function () { return []; },
                    getRowIdAtIndex: function () { return ''; },
                    getRowIndexByChildElement: function () { return 0; },
                    getSelectedRowCount: function () { return 0; },
                    isCheckboxAtRowIndexChecked: function () { return false; },
                    isHeaderRowCheckboxChecked: function () { return false; },
                    isRowsSelectable: function () { return false; },
                    notifyRowSelectionChanged: function () { return undefined; },
                    notifySelectedAll: function () { return undefined; },
                    notifyUnselectedAll: function () { return undefined; },
                    registerHeaderRowCheckbox: function () { return undefined; },
                    registerRowCheckboxes: function () { return undefined; },
                    removeClassAtRowIndex: function () { return undefined; },
                    setAttributeAtRowIndex: function () { return undefined; },
                    setHeaderRowCheckboxChecked: function () { return undefined; },
                    setHeaderRowCheckboxIndeterminate: function () { return undefined; },
                    setRowCheckboxCheckedAtIndex: function () { return undefined; },
                };
            },
            enumerable: true,
            configurable: true
        });
        /**
         * Re-initializes header row checkbox and row checkboxes when selectable rows are added or removed from table.
         * Use this if registering checkbox is synchronous.
         */
        MDCDataTableFoundation.prototype.layout = function () {
            if (this.adapter_.isRowsSelectable()) {
                this.adapter_.registerHeaderRowCheckbox();
                this.adapter_.registerRowCheckboxes();
                this.setHeaderRowCheckboxState_();
            }
        };
        /**
         * Re-initializes header row checkbox and row checkboxes when selectable rows are added or removed from table.
         * Use this if registering checkbox is asynchronous.
         */
        MDCDataTableFoundation.prototype.layoutAsync = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!this.adapter_.isRowsSelectable()) return [3 /*break*/, 3];
                            return [4 /*yield*/, this.adapter_.registerHeaderRowCheckbox()];
                        case 1:
                            _a.sent();
                            return [4 /*yield*/, this.adapter_.registerRowCheckboxes()];
                        case 2:
                            _a.sent();
                            this.setHeaderRowCheckboxState_();
                            _a.label = 3;
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        /**
         * @return Returns array of row elements.
         */
        MDCDataTableFoundation.prototype.getRows = function () {
            return this.adapter_.getRowElements();
        };
        /**
         * Sets selected row ids. Overwrites previously selected rows.
         * @param rowIds Array of row ids that needs to be selected.
         */
        MDCDataTableFoundation.prototype.setSelectedRowIds = function (rowIds) {
            for (var rowIndex = 0; rowIndex < this.adapter_.getRowCount(); rowIndex++) {
                var rowId = this.adapter_.getRowIdAtIndex(rowIndex);
                var isSelected = false;
                if (rowId && rowIds.indexOf(rowId) >= 0) {
                    isSelected = true;
                }
                this.adapter_.setRowCheckboxCheckedAtIndex(rowIndex, isSelected);
                this.selectRowAtIndex_(rowIndex, isSelected);
            }
            this.setHeaderRowCheckboxState_();
        };
        /**
         * @return Returns array of selected row ids.
         */
        MDCDataTableFoundation.prototype.getSelectedRowIds = function () {
            var selectedRowIds = [];
            for (var rowIndex = 0; rowIndex < this.adapter_.getRowCount(); rowIndex++) {
                if (this.adapter_.isCheckboxAtRowIndexChecked(rowIndex)) {
                    selectedRowIds.push(this.adapter_.getRowIdAtIndex(rowIndex));
                }
            }
            return selectedRowIds;
        };
        /**
         * Handles header row checkbox change event.
         */
        MDCDataTableFoundation.prototype.handleHeaderRowCheckboxChange = function () {
            var isHeaderChecked = this.adapter_.isHeaderRowCheckboxChecked();
            for (var rowIndex = 0; rowIndex < this.adapter_.getRowCount(); rowIndex++) {
                this.adapter_.setRowCheckboxCheckedAtIndex(rowIndex, isHeaderChecked);
                this.selectRowAtIndex_(rowIndex, isHeaderChecked);
            }
            if (isHeaderChecked) {
                this.adapter_.notifySelectedAll();
            }
            else {
                this.adapter_.notifyUnselectedAll();
            }
        };
        /**
         * Handles change event originated from row checkboxes.
         */
        MDCDataTableFoundation.prototype.handleRowCheckboxChange = function (event) {
            var rowIndex = this.adapter_.getRowIndexByChildElement(event.target);
            if (rowIndex === -1) {
                return;
            }
            var selected = this.adapter_.isCheckboxAtRowIndexChecked(rowIndex);
            this.selectRowAtIndex_(rowIndex, selected);
            this.setHeaderRowCheckboxState_();
            var rowId = this.adapter_.getRowIdAtIndex(rowIndex);
            this.adapter_.notifyRowSelectionChanged({ rowId: rowId, rowIndex: rowIndex, selected: selected });
        };
        /**
         * Updates header row checkbox state based on number of rows selected.
         */
        MDCDataTableFoundation.prototype.setHeaderRowCheckboxState_ = function () {
            if (this.adapter_.getSelectedRowCount() === this.adapter_.getRowCount()) {
                this.adapter_.setHeaderRowCheckboxChecked(true);
                this.adapter_.setHeaderRowCheckboxIndeterminate(false);
            }
            else if (this.adapter_.getSelectedRowCount() === 0) {
                this.adapter_.setHeaderRowCheckboxIndeterminate(false);
                this.adapter_.setHeaderRowCheckboxChecked(false);
            }
            else {
                this.adapter_.setHeaderRowCheckboxIndeterminate(true);
                this.adapter_.setHeaderRowCheckboxChecked(false);
            }
        };
        /**
         * Sets the attributes of row element based on selection state.
         */
        MDCDataTableFoundation.prototype.selectRowAtIndex_ = function (rowIndex, selected) {
            if (selected) {
                this.adapter_.addClassAtRowIndex(rowIndex, cssClasses$9.ROW_SELECTED);
                this.adapter_.setAttributeAtRowIndex(rowIndex, strings$7.ARIA_SELECTED, 'true');
            }
            else {
                this.adapter_.removeClassAtRowIndex(rowIndex, cssClasses$9.ROW_SELECTED);
                this.adapter_.setAttributeAtRowIndex(rowIndex, strings$7.ARIA_SELECTED, 'false');
            }
        };
        return MDCDataTableFoundation;
    }(MDCFoundation));

    /**
     * @license
     * Copyright 2019 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCDataTable = /** @class */ (function (_super) {
        __extends(MDCDataTable, _super);
        function MDCDataTable() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        MDCDataTable.attachTo = function (root) {
            return new MDCDataTable(root);
        };
        MDCDataTable.prototype.initialize = function (checkboxFactory) {
            if (checkboxFactory === void 0) { checkboxFactory = function (el) { return new MDCCheckbox(el); }; }
            this.checkboxFactory_ = checkboxFactory;
        };
        MDCDataTable.prototype.initialSyncWithDOM = function () {
            var _this = this;
            this.headerRow_ = this.root_.querySelector("." + cssClasses$9.HEADER_ROW);
            this.handleHeaderRowCheckboxChange_ = function () { return _this.foundation_.handleHeaderRowCheckboxChange(); };
            this.headerRow_.addEventListener('change', this.handleHeaderRowCheckboxChange_);
            this.content_ = this.root_.querySelector("." + cssClasses$9.CONTENT);
            this.handleRowCheckboxChange_ = function (event) { return _this.foundation_.handleRowCheckboxChange(event); };
            this.content_.addEventListener('change', this.handleRowCheckboxChange_);
            this.layout();
        };
        /**
         * Re-initializes header row checkbox and row checkboxes when selectable rows are added or removed from table.
         */
        MDCDataTable.prototype.layout = function () {
            this.foundation_.layout();
        };
        /**
         * @return Returns array of row elements.
         */
        MDCDataTable.prototype.getRows = function () {
            return this.foundation_.getRows();
        };
        /**
         * @return Returns array of selected row ids.
         */
        MDCDataTable.prototype.getSelectedRowIds = function () {
            return this.foundation_.getSelectedRowIds();
        };
        /**
         * Sets selected row ids. Overwrites previously selected rows.
         * @param rowIds Array of row ids that needs to be selected.
         */
        MDCDataTable.prototype.setSelectedRowIds = function (rowIds) {
            this.foundation_.setSelectedRowIds(rowIds);
        };
        MDCDataTable.prototype.destroy = function () {
            this.headerRow_.removeEventListener('change', this.handleHeaderRowCheckboxChange_);
            this.content_.removeEventListener('change', this.handleRowCheckboxChange_);
            this.headerRowCheckbox_.destroy();
            this.rowCheckboxList_.forEach(function (checkbox) { return checkbox.destroy(); });
        };
        MDCDataTable.prototype.getDefaultFoundation = function () {
            var _this = this;
            // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.
            // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.
            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.
            var adapter = {
                addClassAtRowIndex: function (rowIndex, className) { return _this.getRows()[rowIndex].classList.add(className); },
                getRowCount: function () { return _this.getRows().length; },
                getRowElements: function () { return [].slice.call(_this.root_.querySelectorAll(strings$7.ROW_SELECTOR)); },
                getRowIdAtIndex: function (rowIndex) { return _this.getRows()[rowIndex].getAttribute(strings$7.DATA_ROW_ID_ATTR); },
                getRowIndexByChildElement: function (el) {
                    return _this.getRows().indexOf(closest(el, strings$7.ROW_SELECTOR));
                },
                getSelectedRowCount: function () { return _this.root_.querySelectorAll(strings$7.ROW_SELECTED_SELECTOR).length; },
                isCheckboxAtRowIndexChecked: function (rowIndex) { return _this.rowCheckboxList_[rowIndex].checked; },
                isHeaderRowCheckboxChecked: function () { return _this.headerRowCheckbox_.checked; },
                isRowsSelectable: function () { return !!_this.root_.querySelector(strings$7.ROW_CHECKBOX_SELECTOR); },
                notifyRowSelectionChanged: function (data) {
                    _this.emit(events.ROW_SELECTION_CHANGED, {
                        row: _this.getRowByIndex_(data.rowIndex),
                        rowId: _this.getRowIdByIndex_(data.rowIndex),
                        rowIndex: data.rowIndex,
                        selected: data.selected,
                    }, 
                    /** shouldBubble */ true);
                },
                notifySelectedAll: function () { return _this.emit(events.SELECTED_ALL, {}, /** shouldBubble */ true); },
                notifyUnselectedAll: function () { return _this.emit(events.UNSELECTED_ALL, {}, /** shouldBubble */ true); },
                registerHeaderRowCheckbox: function () {
                    if (_this.headerRowCheckbox_) {
                        _this.headerRowCheckbox_.destroy();
                    }
                    var checkboxEl = _this.root_.querySelector(strings$7.HEADER_ROW_CHECKBOX_SELECTOR);
                    _this.headerRowCheckbox_ = _this.checkboxFactory_(checkboxEl);
                },
                registerRowCheckboxes: function () {
                    if (_this.rowCheckboxList_) {
                        _this.rowCheckboxList_.forEach(function (checkbox) { return checkbox.destroy(); });
                    }
                    _this.rowCheckboxList_ = [];
                    _this.getRows().forEach(function (rowEl) {
                        var checkbox = _this.checkboxFactory_(rowEl.querySelector(strings$7.ROW_CHECKBOX_SELECTOR));
                        _this.rowCheckboxList_.push(checkbox);
                    });
                },
                removeClassAtRowIndex: function (rowIndex, className) {
                    _this.getRows()[rowIndex].classList.remove(className);
                },
                setAttributeAtRowIndex: function (rowIndex, attr, value) {
                    _this.getRows()[rowIndex].setAttribute(attr, value);
                },
                setHeaderRowCheckboxChecked: function (checked) {
                    _this.headerRowCheckbox_.checked = checked;
                },
                setHeaderRowCheckboxIndeterminate: function (indeterminate) {
                    _this.headerRowCheckbox_.indeterminate = indeterminate;
                },
                setRowCheckboxCheckedAtIndex: function (rowIndex, checked) {
                    _this.rowCheckboxList_[rowIndex].checked = checked;
                },
            };
            return new MDCDataTableFoundation(adapter);
        };
        MDCDataTable.prototype.getRowByIndex_ = function (index) {
            return this.getRows()[index];
        };
        MDCDataTable.prototype.getRowIdByIndex_ = function (index) {
            return this.getRowByIndex_(index).getAttribute(strings$7.DATA_ROW_ID_ATTR);
        };
        return MDCDataTable;
    }(MDCComponent));

    /* node_modules/@smui/data-table/DataTable.svelte generated by Svelte v3.32.1 */

    const { Error: Error_1 } = globals;
    const file$e = "node_modules/@smui/data-table/DataTable.svelte";

    function create_fragment$f(ctx) {
    	let div;
    	let table;
    	let table_class_value;
    	let useActions_action;
    	let div_class_value;
    	let useActions_action_1;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[13].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[12], null);

    	let table_levels = [
    		{
    			class: table_class_value = "mdc-data-table__table " + /*table$class*/ ctx[3]
    		},
    		prefixFilter(/*$$props*/ ctx[7], "table$")
    	];

    	let table_data = {};

    	for (let i = 0; i < table_levels.length; i += 1) {
    		table_data = assign(table_data, table_levels[i]);
    	}

    	let div_levels = [
    		{
    			class: div_class_value = "mdc-data-table " + /*className*/ ctx[1]
    		},
    		exclude(/*$$props*/ ctx[7], ["use", "class", "table$"])
    	];

    	let div_data = {};

    	for (let i = 0; i < div_levels.length; i += 1) {
    		div_data = assign(div_data, div_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			div = element("div");
    			table = element("table");
    			if (default_slot) default_slot.c();
    			set_attributes(table, table_data);
    			add_location(table, file$e, 10, 2, 308);
    			set_attributes(div, div_data);
    			add_location(div, file$e, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error_1("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, table);

    			if (default_slot) {
    				default_slot.m(table, null);
    			}

    			/*div_binding*/ ctx[14](div);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, table, /*table$use*/ ctx[2])),
    					action_destroyer(useActions_action_1 = useActions.call(null, div, /*use*/ ctx[0])),
    					action_destroyer(/*forwardEvents*/ ctx[5].call(null, div)),
    					listen_dev(div, "MDCDataTable:rowSelectionChanged", /*handleChange*/ ctx[6], false, false, false),
    					listen_dev(div, "MDCDataTable:selectedAll", /*handleChange*/ ctx[6], false, false, false),
    					listen_dev(div, "MDCDataTable:unselectedAll", /*handleChange*/ ctx[6], false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 4096) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[12], dirty, null, null);
    				}
    			}

    			set_attributes(table, table_data = get_spread_update(table_levels, [
    				(!current || dirty & /*table$class*/ 8 && table_class_value !== (table_class_value = "mdc-data-table__table " + /*table$class*/ ctx[3])) && { class: table_class_value },
    				dirty & /*$$props*/ 128 && prefixFilter(/*$$props*/ ctx[7], "table$")
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*table$use*/ 4) useActions_action.update.call(null, /*table$use*/ ctx[2]);

    			set_attributes(div, div_data = get_spread_update(div_levels, [
    				(!current || dirty & /*className*/ 2 && div_class_value !== (div_class_value = "mdc-data-table " + /*className*/ ctx[1])) && { class: div_class_value },
    				dirty & /*$$props*/ 128 && exclude(/*$$props*/ ctx[7], ["use", "class", "table$"])
    			]));

    			if (useActions_action_1 && is_function(useActions_action_1.update) && dirty & /*use*/ 1) useActions_action_1.update.call(null, /*use*/ ctx[0]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (default_slot) default_slot.d(detaching);
    			/*div_binding*/ ctx[14](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$f.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$f($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("DataTable", slots, ['default']);

    	if (events.ROW_SELECTION_CHANGED !== "MDCDataTable:rowSelectionChanged" || events.SELECTED_ALL !== "MDCDataTable:selectedAll" || events.UNSELECTED_ALL !== "MDCDataTable:unselectedAll") {
    		throw new Error("MDC API has changed!");
    	}

    	const forwardEvents = forwardEventsBuilder(get_current_component(), [
    		"MDCDataTable:rowSelectionChanged",
    		"MDCDataTable:selectedAll",
    		"MDCDataTable:unselectedAll"
    	]);

    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	let { table$use = [] } = $$props;
    	let { table$class = "" } = $$props;
    	let element;
    	let dataTable;
    	let changeHandlers = [];
    	let checkBoxHeaderPromiseResolve;
    	let checkBoxHeaderPromise = new Promise(resolve => checkBoxHeaderPromiseResolve = resolve);
    	let checkBoxListPromiseResolve;
    	let checkBoxListPromise = new Promise(resolve => checkBoxListPromiseResolve = resolve);
    	let addLayoutListener = getContext("SMUI:addLayoutListener");
    	let removeLayoutListener;
    	setContext("SMUI:generic:input:addChangeHandler", addChangeHandler);
    	setContext("SMUI:checkbox:context", "data-table");
    	setContext("SMUI:checkbox:instantiate", false);
    	setContext("SMUI:checkbox:getInstance", getCheckboxInstancePromise);

    	if (addLayoutListener) {
    		removeLayoutListener = addLayoutListener(layout);
    	}

    	onMount(async () => {
    		dataTable = new MDCDataTable(element);
    		checkBoxHeaderPromiseResolve(dataTable.headerRowCheckbox_);
    		checkBoxListPromiseResolve(dataTable.rowCheckboxList_);

    		// Workaround for a bug in MDC DataTable where a table with no checkboxes
    		// calls destroy on them anyway.
    		if (!dataTable.headerRowCheckbox_) {
    			dataTable.headerRowCheckbox_ = {
    				destroy() {
    					
    				}
    			};
    		}

    		if (!dataTable.rowCheckboxList_) {
    			dataTable.rowCheckboxList_ = [];
    		}
    	});

    	onDestroy(() => {
    		dataTable && dataTable.destroy();

    		if (removeLayoutListener) {
    			removeLayoutListener();
    		}
    	});

    	function getCheckboxInstancePromise(header) {
    		return header ? checkBoxHeaderPromise : checkBoxListPromise;
    	}

    	function handleChange() {
    		for (let i = 0; i < changeHandlers.length; i++) {
    			changeHandlers[i]();
    		}
    	}

    	function addChangeHandler(handler) {
    		changeHandlers.push(handler);
    	}

    	function layout(...args) {
    		return dataTable.layout(...args);
    	}

    	function getRows(...args) {
    		return dataTable.getRows(...args);
    	}

    	function getSelectedRowIds(...args) {
    		return dataTable.getSelectedRowIds(...args);
    	}

    	function setSelectedRowIds(...args) {
    		return dataTable.setSelectedRowIds(...args);
    	}

    	function div_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(4, element);
    		});
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(7, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(0, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(1, className = $$new_props.class);
    		if ("table$use" in $$new_props) $$invalidate(2, table$use = $$new_props.table$use);
    		if ("table$class" in $$new_props) $$invalidate(3, table$class = $$new_props.table$class);
    		if ("$$scope" in $$new_props) $$invalidate(12, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		MDCDataTable,
    		events,
    		onMount,
    		onDestroy,
    		getContext,
    		setContext,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		prefixFilter,
    		useActions,
    		forwardEvents,
    		use,
    		className,
    		table$use,
    		table$class,
    		element,
    		dataTable,
    		changeHandlers,
    		checkBoxHeaderPromiseResolve,
    		checkBoxHeaderPromise,
    		checkBoxListPromiseResolve,
    		checkBoxListPromise,
    		addLayoutListener,
    		removeLayoutListener,
    		getCheckboxInstancePromise,
    		handleChange,
    		addChangeHandler,
    		layout,
    		getRows,
    		getSelectedRowIds,
    		setSelectedRowIds
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(7, $$props = assign(assign({}, $$props), $$new_props));
    		if ("use" in $$props) $$invalidate(0, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(1, className = $$new_props.className);
    		if ("table$use" in $$props) $$invalidate(2, table$use = $$new_props.table$use);
    		if ("table$class" in $$props) $$invalidate(3, table$class = $$new_props.table$class);
    		if ("element" in $$props) $$invalidate(4, element = $$new_props.element);
    		if ("dataTable" in $$props) dataTable = $$new_props.dataTable;
    		if ("changeHandlers" in $$props) changeHandlers = $$new_props.changeHandlers;
    		if ("checkBoxHeaderPromiseResolve" in $$props) checkBoxHeaderPromiseResolve = $$new_props.checkBoxHeaderPromiseResolve;
    		if ("checkBoxHeaderPromise" in $$props) checkBoxHeaderPromise = $$new_props.checkBoxHeaderPromise;
    		if ("checkBoxListPromiseResolve" in $$props) checkBoxListPromiseResolve = $$new_props.checkBoxListPromiseResolve;
    		if ("checkBoxListPromise" in $$props) checkBoxListPromise = $$new_props.checkBoxListPromise;
    		if ("addLayoutListener" in $$props) addLayoutListener = $$new_props.addLayoutListener;
    		if ("removeLayoutListener" in $$props) removeLayoutListener = $$new_props.removeLayoutListener;
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		use,
    		className,
    		table$use,
    		table$class,
    		element,
    		forwardEvents,
    		handleChange,
    		$$props,
    		layout,
    		getRows,
    		getSelectedRowIds,
    		setSelectedRowIds,
    		$$scope,
    		slots,
    		div_binding
    	];
    }

    class DataTable extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$f, create_fragment$f, safe_not_equal, {
    			use: 0,
    			class: 1,
    			table$use: 2,
    			table$class: 3,
    			layout: 8,
    			getRows: 9,
    			getSelectedRowIds: 10,
    			setSelectedRowIds: 11
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "DataTable",
    			options,
    			id: create_fragment$f.name
    		});
    	}

    	get use() {
    		throw new Error_1("<DataTable>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error_1("<DataTable>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error_1("<DataTable>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error_1("<DataTable>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get table$use() {
    		throw new Error_1("<DataTable>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set table$use(value) {
    		throw new Error_1("<DataTable>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get table$class() {
    		throw new Error_1("<DataTable>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set table$class(value) {
    		throw new Error_1("<DataTable>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get layout() {
    		return this.$$.ctx[8];
    	}

    	set layout(value) {
    		throw new Error_1("<DataTable>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get getRows() {
    		return this.$$.ctx[9];
    	}

    	set getRows(value) {
    		throw new Error_1("<DataTable>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get getSelectedRowIds() {
    		return this.$$.ctx[10];
    	}

    	set getSelectedRowIds(value) {
    		throw new Error_1("<DataTable>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get setSelectedRowIds() {
    		return this.$$.ctx[11];
    	}

    	set setSelectedRowIds(value) {
    		throw new Error_1("<DataTable>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/@smui/data-table/Head.svelte generated by Svelte v3.32.1 */
    const file$f = "node_modules/@smui/data-table/Head.svelte";

    function create_fragment$g(ctx) {
    	let thead;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[4].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[3], null);
    	let thead_levels = [exclude(/*$$props*/ ctx[2], ["use"])];
    	let thead_data = {};

    	for (let i = 0; i < thead_levels.length; i += 1) {
    		thead_data = assign(thead_data, thead_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			thead = element("thead");
    			if (default_slot) default_slot.c();
    			set_attributes(thead, thead_data);
    			add_location(thead, file$f, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, thead, anchor);

    			if (default_slot) {
    				default_slot.m(thead, null);
    			}

    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, thead, /*use*/ ctx[0])),
    					action_destroyer(/*forwardEvents*/ ctx[1].call(null, thead))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 8) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[3], dirty, null, null);
    				}
    			}

    			set_attributes(thead, thead_data = get_spread_update(thead_levels, [dirty & /*$$props*/ 4 && exclude(/*$$props*/ ctx[2], ["use"])]));
    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 1) useActions_action.update.call(null, /*use*/ ctx[0]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(thead);
    			if (default_slot) default_slot.d(detaching);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$g.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$g($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Head", slots, ['default']);
    	const forwardEvents = forwardEventsBuilder(get_current_component());
    	let { use = [] } = $$props;
    	setContext("SMUI:data-table:row:header", true);

    	$$self.$$set = $$new_props => {
    		$$invalidate(2, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(0, use = $$new_props.use);
    		if ("$$scope" in $$new_props) $$invalidate(3, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		setContext,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		forwardEvents,
    		use
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(2, $$props = assign(assign({}, $$props), $$new_props));
    		if ("use" in $$props) $$invalidate(0, use = $$new_props.use);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);
    	return [use, forwardEvents, $$props, $$scope, slots];
    }

    class Head extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$g, create_fragment$g, safe_not_equal, { use: 0 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Head",
    			options,
    			id: create_fragment$g.name
    		});
    	}

    	get use() {
    		throw new Error("<Head>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<Head>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/@smui/data-table/Body.svelte generated by Svelte v3.32.1 */
    const file$g = "node_modules/@smui/data-table/Body.svelte";

    function create_fragment$h(ctx) {
    	let tbody;
    	let tbody_class_value;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[5].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[4], null);

    	let tbody_levels = [
    		{
    			class: tbody_class_value = "mdc-data-table__content " + /*className*/ ctx[1]
    		},
    		exclude(/*$$props*/ ctx[3], ["use", "class"])
    	];

    	let tbody_data = {};

    	for (let i = 0; i < tbody_levels.length; i += 1) {
    		tbody_data = assign(tbody_data, tbody_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			tbody = element("tbody");
    			if (default_slot) default_slot.c();
    			set_attributes(tbody, tbody_data);
    			add_location(tbody, file$g, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, tbody, anchor);

    			if (default_slot) {
    				default_slot.m(tbody, null);
    			}

    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, tbody, /*use*/ ctx[0])),
    					action_destroyer(/*forwardEvents*/ ctx[2].call(null, tbody))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 16) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[4], dirty, null, null);
    				}
    			}

    			set_attributes(tbody, tbody_data = get_spread_update(tbody_levels, [
    				(!current || dirty & /*className*/ 2 && tbody_class_value !== (tbody_class_value = "mdc-data-table__content " + /*className*/ ctx[1])) && { class: tbody_class_value },
    				dirty & /*$$props*/ 8 && exclude(/*$$props*/ ctx[3], ["use", "class"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 1) useActions_action.update.call(null, /*use*/ ctx[0]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(tbody);
    			if (default_slot) default_slot.d(detaching);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$h.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$h($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Body", slots, ['default']);
    	const forwardEvents = forwardEventsBuilder(get_current_component());
    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	setContext("SMUI:data-table:row:header", false);

    	$$self.$$set = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(0, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(1, className = $$new_props.class);
    		if ("$$scope" in $$new_props) $$invalidate(4, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		setContext,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		forwardEvents,
    		use,
    		className
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), $$new_props));
    		if ("use" in $$props) $$invalidate(0, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(1, className = $$new_props.className);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);
    	return [use, className, forwardEvents, $$props, $$scope, slots];
    }

    class Body extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$h, create_fragment$h, safe_not_equal, { use: 0, class: 1 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Body",
    			options,
    			id: create_fragment$h.name
    		});
    	}

    	get use() {
    		throw new Error("<Body>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<Body>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<Body>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<Body>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/@smui/data-table/Row.svelte generated by Svelte v3.32.1 */
    const file$h = "node_modules/@smui/data-table/Row.svelte";

    function create_fragment$i(ctx) {
    	let tr;
    	let tr_class_value;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[8].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[7], null);

    	let tr_levels = [
    		{
    			class: tr_class_value = "\n    " + /*className*/ ctx[1] + "\n    " + (/*header*/ ctx[5] ? "mdc-data-table__header-row" : "") + "\n    " + (!/*header*/ ctx[5] ? "mdc-data-table__row" : "") + "\n    " + (!/*header*/ ctx[5] && /*selected*/ ctx[3]
    			? "mdc-data-table__row--selected"
    			: "") + "\n  "
    		},
    		/*selected*/ ctx[3] !== undefined
    		? {
    				"aria-selected": /*selected*/ ctx[3] ? "true" : "false"
    			}
    		: {},
    		exclude(/*$$props*/ ctx[6], ["use", "class"])
    	];

    	let tr_data = {};

    	for (let i = 0; i < tr_levels.length; i += 1) {
    		tr_data = assign(tr_data, tr_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			tr = element("tr");
    			if (default_slot) default_slot.c();
    			set_attributes(tr, tr_data);
    			add_location(tr, file$h, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, tr, anchor);

    			if (default_slot) {
    				default_slot.m(tr, null);
    			}

    			/*tr_binding*/ ctx[9](tr);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, tr, /*use*/ ctx[0])),
    					action_destroyer(/*forwardEvents*/ ctx[4].call(null, tr))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 128) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[7], dirty, null, null);
    				}
    			}

    			set_attributes(tr, tr_data = get_spread_update(tr_levels, [
    				(!current || dirty & /*className, selected*/ 10 && tr_class_value !== (tr_class_value = "\n    " + /*className*/ ctx[1] + "\n    " + (/*header*/ ctx[5] ? "mdc-data-table__header-row" : "") + "\n    " + (!/*header*/ ctx[5] ? "mdc-data-table__row" : "") + "\n    " + (!/*header*/ ctx[5] && /*selected*/ ctx[3]
    				? "mdc-data-table__row--selected"
    				: "") + "\n  ")) && { class: tr_class_value },
    				dirty & /*selected*/ 8 && (/*selected*/ ctx[3] !== undefined
    				? {
    						"aria-selected": /*selected*/ ctx[3] ? "true" : "false"
    					}
    				: {}),
    				dirty & /*$$props*/ 64 && exclude(/*$$props*/ ctx[6], ["use", "class"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 1) useActions_action.update.call(null, /*use*/ ctx[0]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(tr);
    			if (default_slot) default_slot.d(detaching);
    			/*tr_binding*/ ctx[9](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$i.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$i($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Row", slots, ['default']);
    	const forwardEvents = forwardEventsBuilder(get_current_component());
    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	let element;
    	let header = getContext("SMUI:data-table:row:header");
    	let selected = undefined;
    	setContext("SMUI:data-table:row:getIndex", getIndex);
    	setContext("SMUI:generic:input:setChecked", setChecked);

    	function setChecked(checked) {
    		$$invalidate(3, selected = checked);
    	}

    	function getIndex() {
    		let i = 0;

    		if (element) {
    			let el = element;

    			while (el.previousSibling) {
    				el = el.previousSibling;

    				if (el.nodeType === 1) {
    					i++;
    				}
    			}
    		}

    		return i;
    	}

    	function tr_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(2, element);
    		});
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(6, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(0, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(1, className = $$new_props.class);
    		if ("$$scope" in $$new_props) $$invalidate(7, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		getContext,
    		setContext,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		forwardEvents,
    		use,
    		className,
    		element,
    		header,
    		selected,
    		setChecked,
    		getIndex
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(6, $$props = assign(assign({}, $$props), $$new_props));
    		if ("use" in $$props) $$invalidate(0, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(1, className = $$new_props.className);
    		if ("element" in $$props) $$invalidate(2, element = $$new_props.element);
    		if ("header" in $$props) $$invalidate(5, header = $$new_props.header);
    		if ("selected" in $$props) $$invalidate(3, selected = $$new_props.selected);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		use,
    		className,
    		element,
    		selected,
    		forwardEvents,
    		header,
    		$$props,
    		$$scope,
    		slots,
    		tr_binding
    	];
    }

    class Row extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$i, create_fragment$i, safe_not_equal, { use: 0, class: 1 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Row",
    			options,
    			id: create_fragment$i.name
    		});
    	}

    	get use() {
    		throw new Error("<Row>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<Row>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<Row>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<Row>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/@smui/data-table/Cell.svelte generated by Svelte v3.32.1 */
    const file$i = "node_modules/@smui/data-table/Cell.svelte";

    // (14:0) {:else}
    function create_else_block$2(ctx) {
    	let td;
    	let td_class_value;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[12].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[11], null);

    	let td_levels = [
    		{
    			class: td_class_value = "\n      mdc-data-table__cell\n      " + /*className*/ ctx[1] + "\n      " + (/*numeric*/ ctx[2]
    			? "mdc-data-table__cell--numeric"
    			: "") + "\n      " + (/*checkbox*/ ctx[3]
    			? "mdc-data-table__cell--checkbox"
    			: "") + "\n    "
    		},
    		/*roleProp*/ ctx[5],
    		/*scopeProp*/ ctx[6],
    		/*props*/ ctx[4]
    	];

    	let td_data = {};

    	for (let i = 0; i < td_levels.length; i += 1) {
    		td_data = assign(td_data, td_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			td = element("td");
    			if (default_slot) default_slot.c();
    			set_attributes(td, td_data);
    			add_location(td, file$i, 14, 2, 284);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, td, anchor);

    			if (default_slot) {
    				default_slot.m(td, null);
    			}

    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, td, /*use*/ ctx[0])),
    					action_destroyer(/*forwardEvents*/ ctx[7].call(null, td))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 2048) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[11], dirty, null, null);
    				}
    			}

    			set_attributes(td, td_data = get_spread_update(td_levels, [
    				(!current || dirty & /*className, numeric, checkbox*/ 14 && td_class_value !== (td_class_value = "\n      mdc-data-table__cell\n      " + /*className*/ ctx[1] + "\n      " + (/*numeric*/ ctx[2]
    				? "mdc-data-table__cell--numeric"
    				: "") + "\n      " + (/*checkbox*/ ctx[3]
    				? "mdc-data-table__cell--checkbox"
    				: "") + "\n    ")) && { class: td_class_value },
    				dirty & /*roleProp*/ 32 && /*roleProp*/ ctx[5],
    				dirty & /*scopeProp*/ 64 && /*scopeProp*/ ctx[6],
    				dirty & /*props*/ 16 && /*props*/ ctx[4]
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 1) useActions_action.update.call(null, /*use*/ ctx[0]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(td);
    			if (default_slot) default_slot.d(detaching);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_else_block$2.name,
    		type: "else",
    		source: "(14:0) {:else}",
    		ctx
    	});

    	return block;
    }

    // (1:0) {#if header}
    function create_if_block$4(ctx) {
    	let th;
    	let th_class_value;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[12].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[11], null);

    	let th_levels = [
    		{
    			class: th_class_value = "\n      mdc-data-table__header-cell\n      " + /*className*/ ctx[1] + "\n      " + (/*checkbox*/ ctx[3]
    			? "mdc-data-table__header-cell--checkbox"
    			: "") + "\n    "
    		},
    		/*roleProp*/ ctx[5],
    		/*scopeProp*/ ctx[6],
    		/*props*/ ctx[4]
    	];

    	let th_data = {};

    	for (let i = 0; i < th_levels.length; i += 1) {
    		th_data = assign(th_data, th_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			th = element("th");
    			if (default_slot) default_slot.c();
    			set_attributes(th, th_data);
    			add_location(th, file$i, 1, 2, 15);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, th, anchor);

    			if (default_slot) {
    				default_slot.m(th, null);
    			}

    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, th, /*use*/ ctx[0])),
    					action_destroyer(/*forwardEvents*/ ctx[7].call(null, th))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 2048) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[11], dirty, null, null);
    				}
    			}

    			set_attributes(th, th_data = get_spread_update(th_levels, [
    				(!current || dirty & /*className, checkbox*/ 10 && th_class_value !== (th_class_value = "\n      mdc-data-table__header-cell\n      " + /*className*/ ctx[1] + "\n      " + (/*checkbox*/ ctx[3]
    				? "mdc-data-table__header-cell--checkbox"
    				: "") + "\n    ")) && { class: th_class_value },
    				dirty & /*roleProp*/ 32 && /*roleProp*/ ctx[5],
    				dirty & /*scopeProp*/ 64 && /*scopeProp*/ ctx[6],
    				dirty & /*props*/ 16 && /*props*/ ctx[4]
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 1) useActions_action.update.call(null, /*use*/ ctx[0]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(th);
    			if (default_slot) default_slot.d(detaching);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$4.name,
    		type: "if",
    		source: "(1:0) {#if header}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$j(ctx) {
    	let current_block_type_index;
    	let if_block;
    	let if_block_anchor;
    	let current;
    	const if_block_creators = [create_if_block$4, create_else_block$2];
    	const if_blocks = [];

    	function select_block_type(ctx, dirty) {
    		if (/*header*/ ctx[8]) return 0;
    		return 1;
    	}

    	current_block_type_index = select_block_type(ctx);
    	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

    	const block = {
    		c: function create() {
    			if_block.c();
    			if_block_anchor = empty();
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			if_blocks[current_block_type_index].m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			if_block.p(ctx, dirty);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if_blocks[current_block_type_index].d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$j.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$j($$self, $$props, $$invalidate) {
    	let props;
    	let roleProp;
    	let scopeProp;
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Cell", slots, ['default']);
    	const forwardEvents = forwardEventsBuilder(get_current_component());
    	let header = getContext("SMUI:data-table:row:header");
    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	let { role = header ? "columnheader" : undefined } = $$props;
    	let { scope = header ? "col" : undefined } = $$props;
    	let { numeric = false } = $$props;
    	let { checkbox = false } = $$props;

    	$$self.$$set = $$new_props => {
    		$$invalidate(13, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(0, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(1, className = $$new_props.class);
    		if ("role" in $$new_props) $$invalidate(9, role = $$new_props.role);
    		if ("scope" in $$new_props) $$invalidate(10, scope = $$new_props.scope);
    		if ("numeric" in $$new_props) $$invalidate(2, numeric = $$new_props.numeric);
    		if ("checkbox" in $$new_props) $$invalidate(3, checkbox = $$new_props.checkbox);
    		if ("$$scope" in $$new_props) $$invalidate(11, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		getContext,
    		setContext,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		forwardEvents,
    		header,
    		use,
    		className,
    		role,
    		scope,
    		numeric,
    		checkbox,
    		props,
    		roleProp,
    		scopeProp
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(13, $$props = assign(assign({}, $$props), $$new_props));
    		if ("header" in $$props) $$invalidate(8, header = $$new_props.header);
    		if ("use" in $$props) $$invalidate(0, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(1, className = $$new_props.className);
    		if ("role" in $$props) $$invalidate(9, role = $$new_props.role);
    		if ("scope" in $$props) $$invalidate(10, scope = $$new_props.scope);
    		if ("numeric" in $$props) $$invalidate(2, numeric = $$new_props.numeric);
    		if ("checkbox" in $$props) $$invalidate(3, checkbox = $$new_props.checkbox);
    		if ("props" in $$props) $$invalidate(4, props = $$new_props.props);
    		if ("roleProp" in $$props) $$invalidate(5, roleProp = $$new_props.roleProp);
    		if ("scopeProp" in $$props) $$invalidate(6, scopeProp = $$new_props.scopeProp);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		 $$invalidate(4, props = exclude($$props, ["use", "class", "numeric", "checkbox"]));

    		if ($$self.$$.dirty & /*role*/ 512) {
    			 $$invalidate(5, roleProp = role ? { role } : {});
    		}

    		if ($$self.$$.dirty & /*scope*/ 1024) {
    			 $$invalidate(6, scopeProp = scope ? { scope } : {});
    		}
    	};

    	$$props = exclude_internal_props($$props);

    	return [
    		use,
    		className,
    		numeric,
    		checkbox,
    		props,
    		roleProp,
    		scopeProp,
    		forwardEvents,
    		header,
    		role,
    		scope,
    		$$scope,
    		slots
    	];
    }

    class Cell extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$j, create_fragment$j, safe_not_equal, {
    			use: 0,
    			class: 1,
    			role: 9,
    			scope: 10,
    			numeric: 2,
    			checkbox: 3
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Cell",
    			options,
    			id: create_fragment$j.name
    		});
    	}

    	get use() {
    		throw new Error("<Cell>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<Cell>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<Cell>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<Cell>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get role() {
    		throw new Error("<Cell>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set role(value) {
    		throw new Error("<Cell>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get scope() {
    		throw new Error("<Cell>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set scope(value) {
    		throw new Error("<Cell>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get numeric() {
    		throw new Error("<Cell>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set numeric(value) {
    		throw new Error("<Cell>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get checkbox() {
    		throw new Error("<Cell>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set checkbox(value) {
    		throw new Error("<Cell>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /**
     * @license
     * Copyright 2018 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var cssClasses$a = {
        LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated',
        LIST_ITEM_CLASS: 'mdc-list-item',
        LIST_ITEM_DISABLED_CLASS: 'mdc-list-item--disabled',
        LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',
        ROOT: 'mdc-list',
    };
    var strings$8 = {
        ACTION_EVENT: 'MDCList:action',
        ARIA_CHECKED: 'aria-checked',
        ARIA_CHECKED_CHECKBOX_SELECTOR: '[role="checkbox"][aria-checked="true"]',
        ARIA_CHECKED_RADIO_SELECTOR: '[role="radio"][aria-checked="true"]',
        ARIA_CURRENT: 'aria-current',
        ARIA_DISABLED: 'aria-disabled',
        ARIA_ORIENTATION: 'aria-orientation',
        ARIA_ORIENTATION_HORIZONTAL: 'horizontal',
        ARIA_ROLE_CHECKBOX_SELECTOR: '[role="checkbox"]',
        ARIA_SELECTED: 'aria-selected',
        CHECKBOX_RADIO_SELECTOR: 'input[type="checkbox"], input[type="radio"]',
        CHECKBOX_SELECTOR: 'input[type="checkbox"]',
        CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: "\n    ." + cssClasses$a.LIST_ITEM_CLASS + " button:not(:disabled),\n    ." + cssClasses$a.LIST_ITEM_CLASS + " a\n  ",
        FOCUSABLE_CHILD_ELEMENTS: "\n    ." + cssClasses$a.LIST_ITEM_CLASS + " button:not(:disabled),\n    ." + cssClasses$a.LIST_ITEM_CLASS + " a,\n    ." + cssClasses$a.LIST_ITEM_CLASS + " input[type=\"radio\"]:not(:disabled),\n    ." + cssClasses$a.LIST_ITEM_CLASS + " input[type=\"checkbox\"]:not(:disabled)\n  ",
        RADIO_SELECTOR: 'input[type="radio"]',
    };
    var numbers$4 = {
        UNSET_INDEX: -1,
    };

    /**
     * @license
     * Copyright 2018 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];
    function isNumberArray(selectedIndex) {
        return selectedIndex instanceof Array;
    }
    var MDCListFoundation = /** @class */ (function (_super) {
        __extends(MDCListFoundation, _super);
        function MDCListFoundation(adapter) {
            var _this = _super.call(this, __assign({}, MDCListFoundation.defaultAdapter, adapter)) || this;
            _this.wrapFocus_ = false;
            _this.isVertical_ = true;
            _this.isSingleSelectionList_ = false;
            _this.selectedIndex_ = numbers$4.UNSET_INDEX;
            _this.focusedItemIndex_ = numbers$4.UNSET_INDEX;
            _this.useActivatedClass_ = false;
            _this.ariaCurrentAttrValue_ = null;
            _this.isCheckboxList_ = false;
            _this.isRadioList_ = false;
            return _this;
        }
        Object.defineProperty(MDCListFoundation, "strings", {
            get: function () {
                return strings$8;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCListFoundation, "cssClasses", {
            get: function () {
                return cssClasses$a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCListFoundation, "numbers", {
            get: function () {
                return numbers$4;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCListFoundation, "defaultAdapter", {
            get: function () {
                return {
                    addClassForElementIndex: function () { return undefined; },
                    focusItemAtIndex: function () { return undefined; },
                    getAttributeForElementIndex: function () { return null; },
                    getFocusedElementIndex: function () { return 0; },
                    getListItemCount: function () { return 0; },
                    hasCheckboxAtIndex: function () { return false; },
                    hasRadioAtIndex: function () { return false; },
                    isCheckboxCheckedAtIndex: function () { return false; },
                    isFocusInsideList: function () { return false; },
                    isRootFocused: function () { return false; },
                    listItemAtIndexHasClass: function () { return false; },
                    notifyAction: function () { return undefined; },
                    removeClassForElementIndex: function () { return undefined; },
                    setAttributeForElementIndex: function () { return undefined; },
                    setCheckedCheckboxOrRadioAtIndex: function () { return undefined; },
                    setTabIndexForListItemChildren: function () { return undefined; },
                };
            },
            enumerable: true,
            configurable: true
        });
        MDCListFoundation.prototype.layout = function () {
            if (this.adapter_.getListItemCount() === 0) {
                return;
            }
            if (this.adapter_.hasCheckboxAtIndex(0)) {
                this.isCheckboxList_ = true;
            }
            else if (this.adapter_.hasRadioAtIndex(0)) {
                this.isRadioList_ = true;
            }
        };
        /**
         * Sets the private wrapFocus_ variable.
         */
        MDCListFoundation.prototype.setWrapFocus = function (value) {
            this.wrapFocus_ = value;
        };
        /**
         * Sets the isVertical_ private variable.
         */
        MDCListFoundation.prototype.setVerticalOrientation = function (value) {
            this.isVertical_ = value;
        };
        /**
         * Sets the isSingleSelectionList_ private variable.
         */
        MDCListFoundation.prototype.setSingleSelection = function (value) {
            this.isSingleSelectionList_ = value;
        };
        /**
         * Sets the useActivatedClass_ private variable.
         */
        MDCListFoundation.prototype.setUseActivatedClass = function (useActivated) {
            this.useActivatedClass_ = useActivated;
        };
        MDCListFoundation.prototype.getSelectedIndex = function () {
            return this.selectedIndex_;
        };
        MDCListFoundation.prototype.setSelectedIndex = function (index) {
            if (!this.isIndexValid_(index)) {
                return;
            }
            if (this.isCheckboxList_) {
                this.setCheckboxAtIndex_(index);
            }
            else if (this.isRadioList_) {
                this.setRadioAtIndex_(index);
            }
            else {
                this.setSingleSelectionAtIndex_(index);
            }
        };
        /**
         * Focus in handler for the list items.
         */
        MDCListFoundation.prototype.handleFocusIn = function (_, listItemIndex) {
            if (listItemIndex >= 0) {
                this.adapter_.setTabIndexForListItemChildren(listItemIndex, '0');
            }
        };
        /**
         * Focus out handler for the list items.
         */
        MDCListFoundation.prototype.handleFocusOut = function (_, listItemIndex) {
            var _this = this;
            if (listItemIndex >= 0) {
                this.adapter_.setTabIndexForListItemChildren(listItemIndex, '-1');
            }
            /**
             * Between Focusout & Focusin some browsers do not have focus on any element. Setting a delay to wait till the focus
             * is moved to next element.
             */
            setTimeout(function () {
                if (!_this.adapter_.isFocusInsideList()) {
                    _this.setTabindexToFirstSelectedItem_();
                }
            }, 0);
        };
        /**
         * Key handler for the list.
         */
        MDCListFoundation.prototype.handleKeydown = function (evt, isRootListItem, listItemIndex) {
            var isArrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;
            var isArrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;
            var isArrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;
            var isArrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;
            var isHome = evt.key === 'Home' || evt.keyCode === 36;
            var isEnd = evt.key === 'End' || evt.keyCode === 35;
            var isEnter = evt.key === 'Enter' || evt.keyCode === 13;
            var isSpace = evt.key === 'Space' || evt.keyCode === 32;
            if (this.adapter_.isRootFocused()) {
                if (isArrowUp || isEnd) {
                    evt.preventDefault();
                    this.focusLastElement();
                }
                else if (isArrowDown || isHome) {
                    evt.preventDefault();
                    this.focusFirstElement();
                }
                return;
            }
            var currentIndex = this.adapter_.getFocusedElementIndex();
            if (currentIndex === -1) {
                currentIndex = listItemIndex;
                if (currentIndex < 0) {
                    // If this event doesn't have a mdc-list-item ancestor from the
                    // current list (not from a sublist), return early.
                    return;
                }
            }
            var nextIndex;
            if ((this.isVertical_ && isArrowDown) || (!this.isVertical_ && isArrowRight)) {
                this.preventDefaultEvent_(evt);
                nextIndex = this.focusNextElement(currentIndex);
            }
            else if ((this.isVertical_ && isArrowUp) || (!this.isVertical_ && isArrowLeft)) {
                this.preventDefaultEvent_(evt);
                nextIndex = this.focusPrevElement(currentIndex);
            }
            else if (isHome) {
                this.preventDefaultEvent_(evt);
                nextIndex = this.focusFirstElement();
            }
            else if (isEnd) {
                this.preventDefaultEvent_(evt);
                nextIndex = this.focusLastElement();
            }
            else if (isEnter || isSpace) {
                if (isRootListItem) {
                    // Return early if enter key is pressed on anchor element which triggers synthetic MouseEvent event.
                    var target = evt.target;
                    if (target && target.tagName === 'A' && isEnter) {
                        return;
                    }
                    this.preventDefaultEvent_(evt);
                    if (this.isSelectableList_()) {
                        this.setSelectedIndexOnAction_(currentIndex);
                    }
                    this.adapter_.notifyAction(currentIndex);
                }
            }
            this.focusedItemIndex_ = currentIndex;
            if (nextIndex !== undefined) {
                this.setTabindexAtIndex_(nextIndex);
                this.focusedItemIndex_ = nextIndex;
            }
        };
        /**
         * Click handler for the list.
         */
        MDCListFoundation.prototype.handleClick = function (index, toggleCheckbox) {
            if (index === numbers$4.UNSET_INDEX) {
                return;
            }
            if (this.isSelectableList_()) {
                this.setSelectedIndexOnAction_(index, toggleCheckbox);
            }
            this.adapter_.notifyAction(index);
            this.setTabindexAtIndex_(index);
            this.focusedItemIndex_ = index;
        };
        /**
         * Focuses the next element on the list.
         */
        MDCListFoundation.prototype.focusNextElement = function (index) {
            var count = this.adapter_.getListItemCount();
            var nextIndex = index + 1;
            if (nextIndex >= count) {
                if (this.wrapFocus_) {
                    nextIndex = 0;
                }
                else {
                    // Return early because last item is already focused.
                    return index;
                }
            }
            this.adapter_.focusItemAtIndex(nextIndex);
            return nextIndex;
        };
        /**
         * Focuses the previous element on the list.
         */
        MDCListFoundation.prototype.focusPrevElement = function (index) {
            var prevIndex = index - 1;
            if (prevIndex < 0) {
                if (this.wrapFocus_) {
                    prevIndex = this.adapter_.getListItemCount() - 1;
                }
                else {
                    // Return early because first item is already focused.
                    return index;
                }
            }
            this.adapter_.focusItemAtIndex(prevIndex);
            return prevIndex;
        };
        MDCListFoundation.prototype.focusFirstElement = function () {
            this.adapter_.focusItemAtIndex(0);
            return 0;
        };
        MDCListFoundation.prototype.focusLastElement = function () {
            var lastIndex = this.adapter_.getListItemCount() - 1;
            this.adapter_.focusItemAtIndex(lastIndex);
            return lastIndex;
        };
        /**
         * @param itemIndex Index of the list item
         * @param isEnabled Sets the list item to enabled or disabled.
         */
        MDCListFoundation.prototype.setEnabled = function (itemIndex, isEnabled) {
            if (!this.isIndexValid_(itemIndex)) {
                return;
            }
            if (isEnabled) {
                this.adapter_.removeClassForElementIndex(itemIndex, cssClasses$a.LIST_ITEM_DISABLED_CLASS);
                this.adapter_.setAttributeForElementIndex(itemIndex, strings$8.ARIA_DISABLED, 'false');
            }
            else {
                this.adapter_.addClassForElementIndex(itemIndex, cssClasses$a.LIST_ITEM_DISABLED_CLASS);
                this.adapter_.setAttributeForElementIndex(itemIndex, strings$8.ARIA_DISABLED, 'true');
            }
        };
        /**
         * Ensures that preventDefault is only called if the containing element doesn't
         * consume the event, and it will cause an unintended scroll.
         */
        MDCListFoundation.prototype.preventDefaultEvent_ = function (evt) {
            var target = evt.target;
            var tagName = ("" + target.tagName).toLowerCase();
            if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {
                evt.preventDefault();
            }
        };
        MDCListFoundation.prototype.setSingleSelectionAtIndex_ = function (index) {
            if (this.selectedIndex_ === index) {
                return;
            }
            var selectedClassName = cssClasses$a.LIST_ITEM_SELECTED_CLASS;
            if (this.useActivatedClass_) {
                selectedClassName = cssClasses$a.LIST_ITEM_ACTIVATED_CLASS;
            }
            if (this.selectedIndex_ !== numbers$4.UNSET_INDEX) {
                this.adapter_.removeClassForElementIndex(this.selectedIndex_, selectedClassName);
            }
            this.adapter_.addClassForElementIndex(index, selectedClassName);
            this.setAriaForSingleSelectionAtIndex_(index);
            this.selectedIndex_ = index;
        };
        /**
         * Sets aria attribute for single selection at given index.
         */
        MDCListFoundation.prototype.setAriaForSingleSelectionAtIndex_ = function (index) {
            // Detect the presence of aria-current and get the value only during list initialization when it is in unset state.
            if (this.selectedIndex_ === numbers$4.UNSET_INDEX) {
                this.ariaCurrentAttrValue_ =
                    this.adapter_.getAttributeForElementIndex(index, strings$8.ARIA_CURRENT);
            }
            var isAriaCurrent = this.ariaCurrentAttrValue_ !== null;
            var ariaAttribute = isAriaCurrent ? strings$8.ARIA_CURRENT : strings$8.ARIA_SELECTED;
            if (this.selectedIndex_ !== numbers$4.UNSET_INDEX) {
                this.adapter_.setAttributeForElementIndex(this.selectedIndex_, ariaAttribute, 'false');
            }
            var ariaAttributeValue = isAriaCurrent ? this.ariaCurrentAttrValue_ : 'true';
            this.adapter_.setAttributeForElementIndex(index, ariaAttribute, ariaAttributeValue);
        };
        /**
         * Toggles radio at give index. Radio doesn't change the checked state if it is already checked.
         */
        MDCListFoundation.prototype.setRadioAtIndex_ = function (index) {
            this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, true);
            if (this.selectedIndex_ !== numbers$4.UNSET_INDEX) {
                this.adapter_.setAttributeForElementIndex(this.selectedIndex_, strings$8.ARIA_CHECKED, 'false');
            }
            this.adapter_.setAttributeForElementIndex(index, strings$8.ARIA_CHECKED, 'true');
            this.selectedIndex_ = index;
        };
        MDCListFoundation.prototype.setCheckboxAtIndex_ = function (index) {
            for (var i = 0; i < this.adapter_.getListItemCount(); i++) {
                var isChecked = false;
                if (index.indexOf(i) >= 0) {
                    isChecked = true;
                }
                this.adapter_.setCheckedCheckboxOrRadioAtIndex(i, isChecked);
                this.adapter_.setAttributeForElementIndex(i, strings$8.ARIA_CHECKED, isChecked ? 'true' : 'false');
            }
            this.selectedIndex_ = index;
        };
        MDCListFoundation.prototype.setTabindexAtIndex_ = function (index) {
            if (this.focusedItemIndex_ === numbers$4.UNSET_INDEX && index !== 0) {
                // If no list item was selected set first list item's tabindex to -1.
                // Generally, tabindex is set to 0 on first list item of list that has no preselected items.
                this.adapter_.setAttributeForElementIndex(0, 'tabindex', '-1');
            }
            else if (this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {
                this.adapter_.setAttributeForElementIndex(this.focusedItemIndex_, 'tabindex', '-1');
            }
            this.adapter_.setAttributeForElementIndex(index, 'tabindex', '0');
        };
        /**
         * @return Return true if it is single selectin list, checkbox list or radio list.
         */
        MDCListFoundation.prototype.isSelectableList_ = function () {
            return this.isSingleSelectionList_ || this.isCheckboxList_ || this.isRadioList_;
        };
        MDCListFoundation.prototype.setTabindexToFirstSelectedItem_ = function () {
            var targetIndex = 0;
            if (this.isSelectableList_()) {
                if (typeof this.selectedIndex_ === 'number' && this.selectedIndex_ !== numbers$4.UNSET_INDEX) {
                    targetIndex = this.selectedIndex_;
                }
                else if (isNumberArray(this.selectedIndex_) && this.selectedIndex_.length > 0) {
                    targetIndex = this.selectedIndex_.reduce(function (currentIndex, minIndex) { return Math.min(currentIndex, minIndex); });
                }
            }
            this.setTabindexAtIndex_(targetIndex);
        };
        MDCListFoundation.prototype.isIndexValid_ = function (index) {
            var _this = this;
            if (index instanceof Array) {
                if (!this.isCheckboxList_) {
                    throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');
                }
                if (index.length === 0) {
                    return true;
                }
                else {
                    return index.some(function (i) { return _this.isIndexInRange_(i); });
                }
            }
            else if (typeof index === 'number') {
                if (this.isCheckboxList_) {
                    throw new Error('MDCListFoundation: Expected array of index for checkbox based list but got number: ' + index);
                }
                return this.isIndexInRange_(index);
            }
            else {
                return false;
            }
        };
        MDCListFoundation.prototype.isIndexInRange_ = function (index) {
            var listSize = this.adapter_.getListItemCount();
            return index >= 0 && index < listSize;
        };
        /**
         * Sets selected index on user action, toggles checkbox / radio based on toggleCheckbox value.
         * User interaction should not toggle list item(s) when disabled.
         */
        MDCListFoundation.prototype.setSelectedIndexOnAction_ = function (index, toggleCheckbox) {
            if (toggleCheckbox === void 0) { toggleCheckbox = true; }
            if (this.adapter_.listItemAtIndexHasClass(index, cssClasses$a.LIST_ITEM_DISABLED_CLASS)) {
                return;
            }
            if (this.isCheckboxList_) {
                this.toggleCheckboxAtIndex_(index, toggleCheckbox);
            }
            else {
                this.setSelectedIndex(index);
            }
        };
        MDCListFoundation.prototype.toggleCheckboxAtIndex_ = function (index, toggleCheckbox) {
            var isChecked = this.adapter_.isCheckboxCheckedAtIndex(index);
            if (toggleCheckbox) {
                isChecked = !isChecked;
                this.adapter_.setCheckedCheckboxOrRadioAtIndex(index, isChecked);
            }
            this.adapter_.setAttributeForElementIndex(index, strings$8.ARIA_CHECKED, isChecked ? 'true' : 'false');
            // If none of the checkbox items are selected and selectedIndex is not initialized then provide a default value.
            var selectedIndexes = this.selectedIndex_ === numbers$4.UNSET_INDEX ? [] : this.selectedIndex_.slice();
            if (isChecked) {
                selectedIndexes.push(index);
            }
            else {
                selectedIndexes = selectedIndexes.filter(function (i) { return i !== index; });
            }
            this.selectedIndex_ = selectedIndexes;
        };
        return MDCListFoundation;
    }(MDCFoundation));

    /**
     * @license
     * Copyright 2018 Google Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    var MDCList = /** @class */ (function (_super) {
        __extends(MDCList, _super);
        function MDCList() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(MDCList.prototype, "vertical", {
            set: function (value) {
                this.foundation_.setVerticalOrientation(value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCList.prototype, "listElements", {
            get: function () {
                return [].slice.call(this.root_.querySelectorAll("." + cssClasses$a.LIST_ITEM_CLASS));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCList.prototype, "wrapFocus", {
            set: function (value) {
                this.foundation_.setWrapFocus(value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCList.prototype, "singleSelection", {
            set: function (isSingleSelectionList) {
                this.foundation_.setSingleSelection(isSingleSelectionList);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MDCList.prototype, "selectedIndex", {
            get: function () {
                return this.foundation_.getSelectedIndex();
            },
            set: function (index) {
                this.foundation_.setSelectedIndex(index);
            },
            enumerable: true,
            configurable: true
        });
        MDCList.attachTo = function (root) {
            return new MDCList(root);
        };
        MDCList.prototype.initialSyncWithDOM = function () {
            this.handleClick_ = this.handleClickEvent_.bind(this);
            this.handleKeydown_ = this.handleKeydownEvent_.bind(this);
            this.focusInEventListener_ = this.handleFocusInEvent_.bind(this);
            this.focusOutEventListener_ = this.handleFocusOutEvent_.bind(this);
            this.listen('keydown', this.handleKeydown_);
            this.listen('click', this.handleClick_);
            this.listen('focusin', this.focusInEventListener_);
            this.listen('focusout', this.focusOutEventListener_);
            this.layout();
            this.initializeListType();
        };
        MDCList.prototype.destroy = function () {
            this.unlisten('keydown', this.handleKeydown_);
            this.unlisten('click', this.handleClick_);
            this.unlisten('focusin', this.focusInEventListener_);
            this.unlisten('focusout', this.focusOutEventListener_);
        };
        MDCList.prototype.layout = function () {
            var direction = this.root_.getAttribute(strings$8.ARIA_ORIENTATION);
            this.vertical = direction !== strings$8.ARIA_ORIENTATION_HORIZONTAL;
            // List items need to have at least tabindex=-1 to be focusable.
            [].slice.call(this.root_.querySelectorAll('.mdc-list-item:not([tabindex])'))
                .forEach(function (el) {
                el.setAttribute('tabindex', '-1');
            });
            // Child button/a elements are not tabbable until the list item is focused.
            [].slice.call(this.root_.querySelectorAll(strings$8.FOCUSABLE_CHILD_ELEMENTS))
                .forEach(function (el) { return el.setAttribute('tabindex', '-1'); });
            this.foundation_.layout();
        };
        /**
         * Initialize selectedIndex value based on pre-selected checkbox list items, single selection or radio.
         */
        MDCList.prototype.initializeListType = function () {
            var _this = this;
            var checkboxListItems = this.root_.querySelectorAll(strings$8.ARIA_ROLE_CHECKBOX_SELECTOR);
            var singleSelectedListItem = this.root_.querySelector("\n      ." + cssClasses$a.LIST_ITEM_ACTIVATED_CLASS + ",\n      ." + cssClasses$a.LIST_ITEM_SELECTED_CLASS + "\n    ");
            var radioSelectedListItem = this.root_.querySelector(strings$8.ARIA_CHECKED_RADIO_SELECTOR);
            if (checkboxListItems.length) {
                var preselectedItems = this.root_.querySelectorAll(strings$8.ARIA_CHECKED_CHECKBOX_SELECTOR);
                this.selectedIndex =
                    [].map.call(preselectedItems, function (listItem) { return _this.listElements.indexOf(listItem); });
            }
            else if (singleSelectedListItem) {
                if (singleSelectedListItem.classList.contains(cssClasses$a.LIST_ITEM_ACTIVATED_CLASS)) {
                    this.foundation_.setUseActivatedClass(true);
                }
                this.singleSelection = true;
                this.selectedIndex = this.listElements.indexOf(singleSelectedListItem);
            }
            else if (radioSelectedListItem) {
                this.selectedIndex = this.listElements.indexOf(radioSelectedListItem);
            }
        };
        /**
         * Updates the list item at itemIndex to the desired isEnabled state.
         * @param itemIndex Index of the list item
         * @param isEnabled Sets the list item to enabled or disabled.
         */
        MDCList.prototype.setEnabled = function (itemIndex, isEnabled) {
            this.foundation_.setEnabled(itemIndex, isEnabled);
        };
        MDCList.prototype.getDefaultFoundation = function () {
            var _this = this;
            // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.
            // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.
            var adapter = {
                addClassForElementIndex: function (index, className) {
                    var element = _this.listElements[index];
                    if (element) {
                        element.classList.add(className);
                    }
                },
                focusItemAtIndex: function (index) {
                    var element = _this.listElements[index];
                    if (element) {
                        element.focus();
                    }
                },
                getAttributeForElementIndex: function (index, attr) { return _this.listElements[index].getAttribute(attr); },
                getFocusedElementIndex: function () { return _this.listElements.indexOf(document.activeElement); },
                getListItemCount: function () { return _this.listElements.length; },
                hasCheckboxAtIndex: function (index) {
                    var listItem = _this.listElements[index];
                    return !!listItem.querySelector(strings$8.CHECKBOX_SELECTOR);
                },
                hasRadioAtIndex: function (index) {
                    var listItem = _this.listElements[index];
                    return !!listItem.querySelector(strings$8.RADIO_SELECTOR);
                },
                isCheckboxCheckedAtIndex: function (index) {
                    var listItem = _this.listElements[index];
                    var toggleEl = listItem.querySelector(strings$8.CHECKBOX_SELECTOR);
                    return toggleEl.checked;
                },
                isFocusInsideList: function () {
                    return _this.root_.contains(document.activeElement);
                },
                isRootFocused: function () { return document.activeElement === _this.root_; },
                listItemAtIndexHasClass: function (index, className) { return _this.listElements[index].classList.contains(className); },
                notifyAction: function (index) {
                    _this.emit(strings$8.ACTION_EVENT, { index: index }, /** shouldBubble */ true);
                },
                removeClassForElementIndex: function (index, className) {
                    var element = _this.listElements[index];
                    if (element) {
                        element.classList.remove(className);
                    }
                },
                setAttributeForElementIndex: function (index, attr, value) {
                    var element = _this.listElements[index];
                    if (element) {
                        element.setAttribute(attr, value);
                    }
                },
                setCheckedCheckboxOrRadioAtIndex: function (index, isChecked) {
                    var listItem = _this.listElements[index];
                    var toggleEl = listItem.querySelector(strings$8.CHECKBOX_RADIO_SELECTOR);
                    toggleEl.checked = isChecked;
                    var event = document.createEvent('Event');
                    event.initEvent('change', true, true);
                    toggleEl.dispatchEvent(event);
                },
                setTabIndexForListItemChildren: function (listItemIndex, tabIndexValue) {
                    var element = _this.listElements[listItemIndex];
                    var listItemChildren = [].slice.call(element.querySelectorAll(strings$8.CHILD_ELEMENTS_TO_TOGGLE_TABINDEX));
                    listItemChildren.forEach(function (el) { return el.setAttribute('tabindex', tabIndexValue); });
                },
            };
            return new MDCListFoundation(adapter);
        };
        /**
         * Used to figure out which list item this event is targetting. Or returns -1 if
         * there is no list item
         */
        MDCList.prototype.getListItemIndex_ = function (evt) {
            var eventTarget = evt.target;
            var nearestParent = closest(eventTarget, "." + cssClasses$a.LIST_ITEM_CLASS + ", ." + cssClasses$a.ROOT);
            // Get the index of the element if it is a list item.
            if (nearestParent && matches(nearestParent, "." + cssClasses$a.LIST_ITEM_CLASS)) {
                return this.listElements.indexOf(nearestParent);
            }
            return -1;
        };
        /**
         * Used to figure out which element was clicked before sending the event to the foundation.
         */
        MDCList.prototype.handleFocusInEvent_ = function (evt) {
            var index = this.getListItemIndex_(evt);
            this.foundation_.handleFocusIn(evt, index);
        };
        /**
         * Used to figure out which element was clicked before sending the event to the foundation.
         */
        MDCList.prototype.handleFocusOutEvent_ = function (evt) {
            var index = this.getListItemIndex_(evt);
            this.foundation_.handleFocusOut(evt, index);
        };
        /**
         * Used to figure out which element was focused when keydown event occurred before sending the event to the
         * foundation.
         */
        MDCList.prototype.handleKeydownEvent_ = function (evt) {
            var index = this.getListItemIndex_(evt);
            var target = evt.target;
            this.foundation_.handleKeydown(evt, target.classList.contains(cssClasses$a.LIST_ITEM_CLASS), index);
        };
        /**
         * Used to figure out which element was clicked before sending the event to the foundation.
         */
        MDCList.prototype.handleClickEvent_ = function (evt) {
            var index = this.getListItemIndex_(evt);
            var target = evt.target;
            // Toggle the checkbox only if it's not the target of the event, or the checkbox will have 2 change events.
            var toggleCheckbox = !matches(target, strings$8.CHECKBOX_RADIO_SELECTOR);
            this.foundation_.handleClick(index, toggleCheckbox);
        };
        return MDCList;
    }(MDCComponent));

    /* node_modules/@smui/list/List.svelte generated by Svelte v3.32.1 */
    const file$j = "node_modules/@smui/list/List.svelte";

    // (18:0) {:else}
    function create_else_block$3(ctx) {
    	let ul;
    	let ul_class_value;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[24].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[23], null);

    	let ul_levels = [
    		{
    			class: ul_class_value = "\n      mdc-list\n      " + /*className*/ ctx[1] + "\n      " + (/*nonInteractive*/ ctx[2]
    			? "mdc-list--non-interactive"
    			: "") + "\n      " + (/*dense*/ ctx[3] ? "mdc-list--dense" : "") + "\n      " + (/*avatarList*/ ctx[4] ? "mdc-list--avatar-list" : "") + "\n      " + (/*twoLine*/ ctx[5] ? "mdc-list--two-line" : "") + "\n      " + (/*threeLine*/ ctx[6] && !/*twoLine*/ ctx[5]
    			? "smui-list--three-line"
    			: "") + "\n    "
    		},
    		{ role: /*role*/ ctx[8] },
    		/*props*/ ctx[9]
    	];

    	let ul_data = {};

    	for (let i = 0; i < ul_levels.length; i += 1) {
    		ul_data = assign(ul_data, ul_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			ul = element("ul");
    			if (default_slot) default_slot.c();
    			set_attributes(ul, ul_data);
    			add_location(ul, file$j, 18, 2, 478);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, ul, anchor);

    			if (default_slot) {
    				default_slot.m(ul, null);
    			}

    			/*ul_binding*/ ctx[26](ul);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, ul, /*use*/ ctx[0])),
    					action_destroyer(/*forwardEvents*/ ctx[10].call(null, ul)),
    					listen_dev(ul, "MDCList:action", /*handleAction*/ ctx[12], false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (default_slot) {
    				if (default_slot.p && dirty[0] & /*$$scope*/ 8388608) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[23], dirty, null, null);
    				}
    			}

    			set_attributes(ul, ul_data = get_spread_update(ul_levels, [
    				(!current || dirty[0] & /*className, nonInteractive, dense, avatarList, twoLine, threeLine*/ 126 && ul_class_value !== (ul_class_value = "\n      mdc-list\n      " + /*className*/ ctx[1] + "\n      " + (/*nonInteractive*/ ctx[2]
    				? "mdc-list--non-interactive"
    				: "") + "\n      " + (/*dense*/ ctx[3] ? "mdc-list--dense" : "") + "\n      " + (/*avatarList*/ ctx[4] ? "mdc-list--avatar-list" : "") + "\n      " + (/*twoLine*/ ctx[5] ? "mdc-list--two-line" : "") + "\n      " + (/*threeLine*/ ctx[6] && !/*twoLine*/ ctx[5]
    				? "smui-list--three-line"
    				: "") + "\n    ")) && { class: ul_class_value },
    				(!current || dirty[0] & /*role*/ 256) && { role: /*role*/ ctx[8] },
    				dirty[0] & /*props*/ 512 && /*props*/ ctx[9]
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty[0] & /*use*/ 1) useActions_action.update.call(null, /*use*/ ctx[0]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(ul);
    			if (default_slot) default_slot.d(detaching);
    			/*ul_binding*/ ctx[26](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_else_block$3.name,
    		type: "else",
    		source: "(18:0) {:else}",
    		ctx
    	});

    	return block;
    }

    // (1:0) {#if nav}
    function create_if_block$5(ctx) {
    	let nav_1;
    	let nav_1_class_value;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[24].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[23], null);

    	let nav_1_levels = [
    		{
    			class: nav_1_class_value = "\n      mdc-list\n      " + /*className*/ ctx[1] + "\n      " + (/*nonInteractive*/ ctx[2]
    			? "mdc-list--non-interactive"
    			: "") + "\n      " + (/*dense*/ ctx[3] ? "mdc-list--dense" : "") + "\n      " + (/*avatarList*/ ctx[4] ? "mdc-list--avatar-list" : "") + "\n      " + (/*twoLine*/ ctx[5] ? "mdc-list--two-line" : "") + "\n      " + (/*threeLine*/ ctx[6] && !/*twoLine*/ ctx[5]
    			? "smui-list--three-line"
    			: "") + "\n    "
    		},
    		/*props*/ ctx[9]
    	];

    	let nav_1_data = {};

    	for (let i = 0; i < nav_1_levels.length; i += 1) {
    		nav_1_data = assign(nav_1_data, nav_1_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			nav_1 = element("nav");
    			if (default_slot) default_slot.c();
    			set_attributes(nav_1, nav_1_data);
    			add_location(nav_1, file$j, 1, 2, 12);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, nav_1, anchor);

    			if (default_slot) {
    				default_slot.m(nav_1, null);
    			}

    			/*nav_1_binding*/ ctx[25](nav_1);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, nav_1, /*use*/ ctx[0])),
    					action_destroyer(/*forwardEvents*/ ctx[10].call(null, nav_1)),
    					listen_dev(nav_1, "MDCList:action", /*handleAction*/ ctx[12], false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (default_slot) {
    				if (default_slot.p && dirty[0] & /*$$scope*/ 8388608) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[23], dirty, null, null);
    				}
    			}

    			set_attributes(nav_1, nav_1_data = get_spread_update(nav_1_levels, [
    				(!current || dirty[0] & /*className, nonInteractive, dense, avatarList, twoLine, threeLine*/ 126 && nav_1_class_value !== (nav_1_class_value = "\n      mdc-list\n      " + /*className*/ ctx[1] + "\n      " + (/*nonInteractive*/ ctx[2]
    				? "mdc-list--non-interactive"
    				: "") + "\n      " + (/*dense*/ ctx[3] ? "mdc-list--dense" : "") + "\n      " + (/*avatarList*/ ctx[4] ? "mdc-list--avatar-list" : "") + "\n      " + (/*twoLine*/ ctx[5] ? "mdc-list--two-line" : "") + "\n      " + (/*threeLine*/ ctx[6] && !/*twoLine*/ ctx[5]
    				? "smui-list--three-line"
    				: "") + "\n    ")) && { class: nav_1_class_value },
    				dirty[0] & /*props*/ 512 && /*props*/ ctx[9]
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty[0] & /*use*/ 1) useActions_action.update.call(null, /*use*/ ctx[0]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(nav_1);
    			if (default_slot) default_slot.d(detaching);
    			/*nav_1_binding*/ ctx[25](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$5.name,
    		type: "if",
    		source: "(1:0) {#if nav}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$k(ctx) {
    	let current_block_type_index;
    	let if_block;
    	let if_block_anchor;
    	let current;
    	const if_block_creators = [create_if_block$5, create_else_block$3];
    	const if_blocks = [];

    	function select_block_type(ctx, dirty) {
    		if (/*nav*/ ctx[11]) return 0;
    		return 1;
    	}

    	current_block_type_index = select_block_type(ctx);
    	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

    	const block = {
    		c: function create() {
    			if_block.c();
    			if_block_anchor = empty();
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			if_blocks[current_block_type_index].m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if_block.p(ctx, dirty);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if_blocks[current_block_type_index].d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$k.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$k($$self, $$props, $$invalidate) {
    	let props;
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("List", slots, ['default']);
    	const forwardEvents = forwardEventsBuilder(get_current_component(), ["MDCList:action"]);
    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	let { nonInteractive = false } = $$props;
    	let { dense = false } = $$props;
    	let { avatarList = false } = $$props;
    	let { twoLine = false } = $$props;
    	let { threeLine = false } = $$props;
    	let { vertical = true } = $$props;
    	let { wrapFocus = false } = $$props;
    	let { singleSelection = false } = $$props;
    	let { selectedIndex = null } = $$props;
    	let { radiolist = false } = $$props;
    	let { checklist = false } = $$props;
    	let element;
    	let list;
    	let role = getContext("SMUI:list:role");
    	let nav = getContext("SMUI:list:nav");
    	let instantiate = getContext("SMUI:list:instantiate");
    	let getInstance = getContext("SMUI:list:getInstance");
    	let addLayoutListener = getContext("SMUI:addLayoutListener");
    	let removeLayoutListener;
    	setContext("SMUI:list:nonInteractive", nonInteractive);

    	if (!role) {
    		if (singleSelection) {
    			role = "listbox";
    			setContext("SMUI:list:item:role", "option");
    		} else if (radiolist) {
    			role = "radiogroup";
    			setContext("SMUI:list:item:role", "radio");
    		} else if (checklist) {
    			role = "group";
    			setContext("SMUI:list:item:role", "checkbox");
    		} else {
    			role = "list";
    			setContext("SMUI:list:item:role", undefined);
    		}
    	}

    	if (addLayoutListener) {
    		removeLayoutListener = addLayoutListener(layout);
    	}

    	onMount(async () => {
    		if (instantiate !== false) {
    			$$invalidate(22, list = new MDCList(element));
    		} else {
    			$$invalidate(22, list = await getInstance());
    		}

    		if (singleSelection) {
    			list.initializeListType();
    			$$invalidate(13, selectedIndex = list.selectedIndex);
    		}
    	});

    	onDestroy(() => {
    		if (instantiate !== false) {
    			list && list.destroy();
    		}

    		if (removeLayoutListener) {
    			removeLayoutListener();
    		}
    	});

    	function handleAction(e) {
    		if (list && list.listElements[e.detail.index].classList.contains("mdc-list-item--disabled")) {
    			e.preventDefault();
    			$$invalidate(22, list.selectedIndex = selectedIndex, list);
    		} else if (list && list.selectedIndex === e.detail.index) {
    			$$invalidate(13, selectedIndex = e.detail.index);
    		}
    	}

    	function layout(...args) {
    		return list.layout(...args);
    	}

    	function setEnabled(...args) {
    		return list.setEnabled(...args);
    	}

    	function getDefaultFoundation(...args) {
    		return list.getDefaultFoundation(...args);
    	}

    	function nav_1_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(7, element);
    		});
    	}

    	function ul_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(7, element);
    		});
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(31, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(0, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(1, className = $$new_props.class);
    		if ("nonInteractive" in $$new_props) $$invalidate(2, nonInteractive = $$new_props.nonInteractive);
    		if ("dense" in $$new_props) $$invalidate(3, dense = $$new_props.dense);
    		if ("avatarList" in $$new_props) $$invalidate(4, avatarList = $$new_props.avatarList);
    		if ("twoLine" in $$new_props) $$invalidate(5, twoLine = $$new_props.twoLine);
    		if ("threeLine" in $$new_props) $$invalidate(6, threeLine = $$new_props.threeLine);
    		if ("vertical" in $$new_props) $$invalidate(14, vertical = $$new_props.vertical);
    		if ("wrapFocus" in $$new_props) $$invalidate(15, wrapFocus = $$new_props.wrapFocus);
    		if ("singleSelection" in $$new_props) $$invalidate(16, singleSelection = $$new_props.singleSelection);
    		if ("selectedIndex" in $$new_props) $$invalidate(13, selectedIndex = $$new_props.selectedIndex);
    		if ("radiolist" in $$new_props) $$invalidate(17, radiolist = $$new_props.radiolist);
    		if ("checklist" in $$new_props) $$invalidate(18, checklist = $$new_props.checklist);
    		if ("$$scope" in $$new_props) $$invalidate(23, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		MDCList,
    		onMount,
    		onDestroy,
    		getContext,
    		setContext,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		forwardEvents,
    		use,
    		className,
    		nonInteractive,
    		dense,
    		avatarList,
    		twoLine,
    		threeLine,
    		vertical,
    		wrapFocus,
    		singleSelection,
    		selectedIndex,
    		radiolist,
    		checklist,
    		element,
    		list,
    		role,
    		nav,
    		instantiate,
    		getInstance,
    		addLayoutListener,
    		removeLayoutListener,
    		handleAction,
    		layout,
    		setEnabled,
    		getDefaultFoundation,
    		props
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(31, $$props = assign(assign({}, $$props), $$new_props));
    		if ("use" in $$props) $$invalidate(0, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(1, className = $$new_props.className);
    		if ("nonInteractive" in $$props) $$invalidate(2, nonInteractive = $$new_props.nonInteractive);
    		if ("dense" in $$props) $$invalidate(3, dense = $$new_props.dense);
    		if ("avatarList" in $$props) $$invalidate(4, avatarList = $$new_props.avatarList);
    		if ("twoLine" in $$props) $$invalidate(5, twoLine = $$new_props.twoLine);
    		if ("threeLine" in $$props) $$invalidate(6, threeLine = $$new_props.threeLine);
    		if ("vertical" in $$props) $$invalidate(14, vertical = $$new_props.vertical);
    		if ("wrapFocus" in $$props) $$invalidate(15, wrapFocus = $$new_props.wrapFocus);
    		if ("singleSelection" in $$props) $$invalidate(16, singleSelection = $$new_props.singleSelection);
    		if ("selectedIndex" in $$props) $$invalidate(13, selectedIndex = $$new_props.selectedIndex);
    		if ("radiolist" in $$props) $$invalidate(17, radiolist = $$new_props.radiolist);
    		if ("checklist" in $$props) $$invalidate(18, checklist = $$new_props.checklist);
    		if ("element" in $$props) $$invalidate(7, element = $$new_props.element);
    		if ("list" in $$props) $$invalidate(22, list = $$new_props.list);
    		if ("role" in $$props) $$invalidate(8, role = $$new_props.role);
    		if ("nav" in $$props) $$invalidate(11, nav = $$new_props.nav);
    		if ("instantiate" in $$props) instantiate = $$new_props.instantiate;
    		if ("getInstance" in $$props) getInstance = $$new_props.getInstance;
    		if ("addLayoutListener" in $$props) addLayoutListener = $$new_props.addLayoutListener;
    		if ("removeLayoutListener" in $$props) removeLayoutListener = $$new_props.removeLayoutListener;
    		if ("props" in $$props) $$invalidate(9, props = $$new_props.props);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		 $$invalidate(9, props = exclude($$props, [
    			"use",
    			"class",
    			"nonInteractive",
    			"dense",
    			"avatarList",
    			"twoLine",
    			"threeLine",
    			"vertical",
    			"wrapFocus",
    			"singleSelection",
    			"selectedIndex",
    			"radiolist",
    			"checklist"
    		]));

    		if ($$self.$$.dirty[0] & /*list, vertical*/ 4210688) {
    			 if (list && list.vertical !== vertical) {
    				$$invalidate(22, list.vertical = vertical, list);
    			}
    		}

    		if ($$self.$$.dirty[0] & /*list, wrapFocus*/ 4227072) {
    			 if (list && list.wrapFocus !== wrapFocus) {
    				$$invalidate(22, list.wrapFocus = wrapFocus, list);
    			}
    		}

    		if ($$self.$$.dirty[0] & /*list, singleSelection*/ 4259840) {
    			 if (list && list.singleSelection !== singleSelection) {
    				$$invalidate(22, list.singleSelection = singleSelection, list);
    			}
    		}

    		if ($$self.$$.dirty[0] & /*list, singleSelection, selectedIndex*/ 4268032) {
    			 if (list && singleSelection && list.selectedIndex !== selectedIndex) {
    				$$invalidate(22, list.selectedIndex = selectedIndex, list);
    			}
    		}
    	};

    	$$props = exclude_internal_props($$props);

    	return [
    		use,
    		className,
    		nonInteractive,
    		dense,
    		avatarList,
    		twoLine,
    		threeLine,
    		element,
    		role,
    		props,
    		forwardEvents,
    		nav,
    		handleAction,
    		selectedIndex,
    		vertical,
    		wrapFocus,
    		singleSelection,
    		radiolist,
    		checklist,
    		layout,
    		setEnabled,
    		getDefaultFoundation,
    		list,
    		$$scope,
    		slots,
    		nav_1_binding,
    		ul_binding
    	];
    }

    class List extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(
    			this,
    			options,
    			instance$k,
    			create_fragment$k,
    			safe_not_equal,
    			{
    				use: 0,
    				class: 1,
    				nonInteractive: 2,
    				dense: 3,
    				avatarList: 4,
    				twoLine: 5,
    				threeLine: 6,
    				vertical: 14,
    				wrapFocus: 15,
    				singleSelection: 16,
    				selectedIndex: 13,
    				radiolist: 17,
    				checklist: 18,
    				layout: 19,
    				setEnabled: 20,
    				getDefaultFoundation: 21
    			},
    			[-1, -1]
    		);

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "List",
    			options,
    			id: create_fragment$k.name
    		});
    	}

    	get use() {
    		throw new Error("<List>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<List>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get nonInteractive() {
    		throw new Error("<List>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set nonInteractive(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get dense() {
    		throw new Error("<List>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set dense(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get avatarList() {
    		throw new Error("<List>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set avatarList(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get twoLine() {
    		throw new Error("<List>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set twoLine(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get threeLine() {
    		throw new Error("<List>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set threeLine(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get vertical() {
    		throw new Error("<List>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set vertical(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get wrapFocus() {
    		throw new Error("<List>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set wrapFocus(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get singleSelection() {
    		throw new Error("<List>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set singleSelection(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get selectedIndex() {
    		throw new Error("<List>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set selectedIndex(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get radiolist() {
    		throw new Error("<List>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set radiolist(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get checklist() {
    		throw new Error("<List>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set checklist(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get layout() {
    		return this.$$.ctx[19];
    	}

    	set layout(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get setEnabled() {
    		return this.$$.ctx[20];
    	}

    	set setEnabled(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get getDefaultFoundation() {
    		return this.$$.ctx[21];
    	}

    	set getDefaultFoundation(value) {
    		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/@smui/common/Span.svelte generated by Svelte v3.32.1 */
    const file$k = "node_modules/@smui/common/Span.svelte";

    function create_fragment$l(ctx) {
    	let span;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[6].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[5], null);
    	let span_levels = [exclude(/*$$props*/ ctx[3], ["element", "use", "forwardEvents"])];
    	let span_data = {};

    	for (let i = 0; i < span_levels.length; i += 1) {
    		span_data = assign(span_data, span_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			span = element("span");
    			if (default_slot) default_slot.c();
    			set_attributes(span, span_data);
    			add_location(span, file$k, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, span, anchor);

    			if (default_slot) {
    				default_slot.m(span, null);
    			}

    			/*span_binding*/ ctx[7](span);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, span, /*use*/ ctx[1])),
    					action_destroyer(/*forwardEvents*/ ctx[2].call(null, span))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 32) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[5], dirty, null, null);
    				}
    			}

    			set_attributes(span, span_data = get_spread_update(span_levels, [
    				dirty & /*$$props*/ 8 && exclude(/*$$props*/ ctx[3], ["element", "use", "forwardEvents"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 2) useActions_action.update.call(null, /*use*/ ctx[1]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(span);
    			if (default_slot) default_slot.d(detaching);
    			/*span_binding*/ ctx[7](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$l.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$l($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Span", slots, ['default']);
    	let { element = null } = $$props;
    	let { use = [] } = $$props;
    	let { forwardEvents: forwardEventsAdditional = [] } = $$props;
    	const forwardEvents = forwardEventsBuilder(get_current_component(), forwardEventsAdditional);

    	function span_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(0, element);
    		});
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("element" in $$new_props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$new_props) $$invalidate(1, use = $$new_props.use);
    		if ("forwardEvents" in $$new_props) $$invalidate(4, forwardEventsAdditional = $$new_props.forwardEvents);
    		if ("$$scope" in $$new_props) $$invalidate(5, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		element,
    		use,
    		forwardEventsAdditional,
    		forwardEvents
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), $$new_props));
    		if ("element" in $$props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$props) $$invalidate(1, use = $$new_props.use);
    		if ("forwardEventsAdditional" in $$props) $$invalidate(4, forwardEventsAdditional = $$new_props.forwardEventsAdditional);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		element,
    		use,
    		forwardEvents,
    		$$props,
    		forwardEventsAdditional,
    		$$scope,
    		slots,
    		span_binding
    	];
    }

    class Span extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$l, create_fragment$l, safe_not_equal, { element: 0, use: 1, forwardEvents: 4 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Span",
    			options,
    			id: create_fragment$l.name
    		});
    	}

    	get element() {
    		throw new Error("<Span>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set element(value) {
    		throw new Error("<Span>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get use() {
    		throw new Error("<Span>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<Span>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get forwardEvents() {
    		throw new Error("<Span>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set forwardEvents(value) {
    		throw new Error("<Span>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/@smui/common/Li.svelte generated by Svelte v3.32.1 */
    const file$l = "node_modules/@smui/common/Li.svelte";

    function create_fragment$m(ctx) {
    	let li;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[6].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[5], null);
    	let li_levels = [exclude(/*$$props*/ ctx[3], ["element", "use", "forwardEvents"])];
    	let li_data = {};

    	for (let i = 0; i < li_levels.length; i += 1) {
    		li_data = assign(li_data, li_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			li = element("li");
    			if (default_slot) default_slot.c();
    			set_attributes(li, li_data);
    			add_location(li, file$l, 1, 0, 1);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, li, anchor);

    			if (default_slot) {
    				default_slot.m(li, null);
    			}

    			/*li_binding*/ ctx[7](li);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, li, /*use*/ ctx[1])),
    					action_destroyer(/*forwardEvents*/ ctx[2].call(null, li))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 32) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[5], dirty, null, null);
    				}
    			}

    			set_attributes(li, li_data = get_spread_update(li_levels, [
    				dirty & /*$$props*/ 8 && exclude(/*$$props*/ ctx[3], ["element", "use", "forwardEvents"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 2) useActions_action.update.call(null, /*use*/ ctx[1]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(li);
    			if (default_slot) default_slot.d(detaching);
    			/*li_binding*/ ctx[7](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$m.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$m($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Li", slots, ['default']);
    	let { element = null } = $$props;
    	let { use = [] } = $$props;
    	let { forwardEvents: forwardEventsAdditional = [] } = $$props;
    	const forwardEvents = forwardEventsBuilder(get_current_component(), forwardEventsAdditional);

    	function li_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(0, element);
    		});
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("element" in $$new_props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$new_props) $$invalidate(1, use = $$new_props.use);
    		if ("forwardEvents" in $$new_props) $$invalidate(4, forwardEventsAdditional = $$new_props.forwardEvents);
    		if ("$$scope" in $$new_props) $$invalidate(5, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		element,
    		use,
    		forwardEventsAdditional,
    		forwardEvents
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), $$new_props));
    		if ("element" in $$props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$props) $$invalidate(1, use = $$new_props.use);
    		if ("forwardEventsAdditional" in $$props) $$invalidate(4, forwardEventsAdditional = $$new_props.forwardEventsAdditional);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		element,
    		use,
    		forwardEvents,
    		$$props,
    		forwardEventsAdditional,
    		$$scope,
    		slots,
    		li_binding
    	];
    }

    class Li extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$m, create_fragment$m, safe_not_equal, { element: 0, use: 1, forwardEvents: 4 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Li",
    			options,
    			id: create_fragment$m.name
    		});
    	}

    	get element() {
    		throw new Error("<Li>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set element(value) {
    		throw new Error("<Li>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get use() {
    		throw new Error("<Li>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<Li>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get forwardEvents() {
    		throw new Error("<Li>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set forwardEvents(value) {
    		throw new Error("<Li>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/@smui/list/Item.svelte generated by Svelte v3.32.1 */

    // (1:0) <svelte:component   this={component}   bind:element={element}   use={[[Ripple, {ripple, unbounded: false, color}], forwardEvents, ...use]}   class="     mdc-list-item     {className}     {activated ? 'mdc-list-item--activated' : ''}     {selected ? 'mdc-list-item--selected' : ''}     {disabled ? 'mdc-list-item--disabled' : ''}     {(!nav && role === 'menuitem' && selected) ? 'mdc-menu-item--selected' : ''}   "   {...((nav && activated) ? {'aria-current': 'page'} : {})}   {...(!nav ? {role} : {})}   {...((!nav && role === 'option') ? {'aria-selected': (selected ? 'true' : 'false')} : {})}   {...((!nav && (role === 'radio' || role === 'checkbox')) ? {'aria-checked': (checked ? 'true' : 'false')} : {})}   {...(!nav ? {'aria-disabled': (disabled ? 'true' : 'false')} : {})}   {tabindex}   on:click={action}   on:keydown={handleKeydown}   {...exclude($$props, ['use', 'class', 'ripple', 'color', 'nonInteractive', 'activated', 'selected', 'disabled', 'tabindex', 'inputId'])} >
    function create_default_slot$3(ctx) {
    	let current;
    	const default_slot_template = /*#slots*/ ctx[20].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[22], null);

    	const block = {
    		c: function create() {
    			if (default_slot) default_slot.c();
    		},
    		m: function mount(target, anchor) {
    			if (default_slot) {
    				default_slot.m(target, anchor);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 4194304) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[22], dirty, null, null);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (default_slot) default_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot$3.name,
    		type: "slot",
    		source: "(1:0) <svelte:component   this={component}   bind:element={element}   use={[[Ripple, {ripple, unbounded: false, color}], forwardEvents, ...use]}   class=\\\"     mdc-list-item     {className}     {activated ? 'mdc-list-item--activated' : ''}     {selected ? 'mdc-list-item--selected' : ''}     {disabled ? 'mdc-list-item--disabled' : ''}     {(!nav && role === 'menuitem' && selected) ? 'mdc-menu-item--selected' : ''}   \\\"   {...((nav && activated) ? {'aria-current': 'page'} : {})}   {...(!nav ? {role} : {})}   {...((!nav && role === 'option') ? {'aria-selected': (selected ? 'true' : 'false')} : {})}   {...((!nav && (role === 'radio' || role === 'checkbox')) ? {'aria-checked': (checked ? 'true' : 'false')} : {})}   {...(!nav ? {'aria-disabled': (disabled ? 'true' : 'false')} : {})}   {tabindex}   on:click={action}   on:keydown={handleKeydown}   {...exclude($$props, ['use', 'class', 'ripple', 'color', 'nonInteractive', 'activated', 'selected', 'disabled', 'tabindex', 'inputId'])} >",
    		ctx
    	});

    	return block;
    }

    function create_fragment$n(ctx) {
    	let switch_instance;
    	let updating_element;
    	let switch_instance_anchor;
    	let current;

    	const switch_instance_spread_levels = [
    		{
    			use: [
    				[
    					Ripple,
    					{
    						ripple: /*ripple*/ ctx[3],
    						unbounded: false,
    						color: /*color*/ ctx[4]
    					}
    				],
    				/*forwardEvents*/ ctx[12],
    				.../*use*/ ctx[1]
    			]
    		},
    		{
    			class: "\n    mdc-list-item\n    " + /*className*/ ctx[2] + "\n    " + (/*activated*/ ctx[5] ? "mdc-list-item--activated" : "") + "\n    " + (/*selected*/ ctx[7] ? "mdc-list-item--selected" : "") + "\n    " + (/*disabled*/ ctx[8] ? "mdc-list-item--disabled" : "") + "\n    " + (!/*nav*/ ctx[13] && /*role*/ ctx[6] === "menuitem" && /*selected*/ ctx[7]
    			? "mdc-menu-item--selected"
    			: "") + "\n  "
    		},
    		/*nav*/ ctx[13] && /*activated*/ ctx[5]
    		? { "aria-current": "page" }
    		: {},
    		!/*nav*/ ctx[13] ? { role: /*role*/ ctx[6] } : {},
    		!/*nav*/ ctx[13] && /*role*/ ctx[6] === "option"
    		? {
    				"aria-selected": /*selected*/ ctx[7] ? "true" : "false"
    			}
    		: {},
    		!/*nav*/ ctx[13] && (/*role*/ ctx[6] === "radio" || /*role*/ ctx[6] === "checkbox")
    		? {
    				"aria-checked": /*checked*/ ctx[10] ? "true" : "false"
    			}
    		: {},
    		!/*nav*/ ctx[13]
    		? {
    				"aria-disabled": /*disabled*/ ctx[8] ? "true" : "false"
    			}
    		: {},
    		{ tabindex: /*tabindex*/ ctx[0] },
    		exclude(/*$$props*/ ctx[16], [
    			"use",
    			"class",
    			"ripple",
    			"color",
    			"nonInteractive",
    			"activated",
    			"selected",
    			"disabled",
    			"tabindex",
    			"inputId"
    		])
    	];

    	function switch_instance_element_binding(value) {
    		/*switch_instance_element_binding*/ ctx[21].call(null, value);
    	}

    	var switch_value = /*component*/ ctx[9];

    	function switch_props(ctx) {
    		let switch_instance_props = {
    			$$slots: { default: [create_default_slot$3] },
    			$$scope: { ctx }
    		};

    		for (let i = 0; i < switch_instance_spread_levels.length; i += 1) {
    			switch_instance_props = assign(switch_instance_props, switch_instance_spread_levels[i]);
    		}

    		if (/*element*/ ctx[11] !== void 0) {
    			switch_instance_props.element = /*element*/ ctx[11];
    		}

    		return {
    			props: switch_instance_props,
    			$$inline: true
    		};
    	}

    	if (switch_value) {
    		switch_instance = new switch_value(switch_props(ctx));
    		binding_callbacks.push(() => bind(switch_instance, "element", switch_instance_element_binding));
    		switch_instance.$on("click", /*action*/ ctx[14]);
    		switch_instance.$on("keydown", /*handleKeydown*/ ctx[15]);
    	}

    	const block = {
    		c: function create() {
    			if (switch_instance) create_component(switch_instance.$$.fragment);
    			switch_instance_anchor = empty();
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			if (switch_instance) {
    				mount_component(switch_instance, target, anchor);
    			}

    			insert_dev(target, switch_instance_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			const switch_instance_changes = (dirty & /*Ripple, ripple, color, forwardEvents, use, className, activated, selected, disabled, nav, role, checked, tabindex, exclude, $$props*/ 79359)
    			? get_spread_update(switch_instance_spread_levels, [
    					dirty & /*Ripple, ripple, color, forwardEvents, use*/ 4122 && {
    						use: [
    							[
    								Ripple,
    								{
    									ripple: /*ripple*/ ctx[3],
    									unbounded: false,
    									color: /*color*/ ctx[4]
    								}
    							],
    							/*forwardEvents*/ ctx[12],
    							.../*use*/ ctx[1]
    						]
    					},
    					dirty & /*className, activated, selected, disabled, nav, role*/ 8676 && {
    						class: "\n    mdc-list-item\n    " + /*className*/ ctx[2] + "\n    " + (/*activated*/ ctx[5] ? "mdc-list-item--activated" : "") + "\n    " + (/*selected*/ ctx[7] ? "mdc-list-item--selected" : "") + "\n    " + (/*disabled*/ ctx[8] ? "mdc-list-item--disabled" : "") + "\n    " + (!/*nav*/ ctx[13] && /*role*/ ctx[6] === "menuitem" && /*selected*/ ctx[7]
    						? "mdc-menu-item--selected"
    						: "") + "\n  "
    					},
    					dirty & /*nav, activated*/ 8224 && get_spread_object(/*nav*/ ctx[13] && /*activated*/ ctx[5]
    					? { "aria-current": "page" }
    					: {}),
    					dirty & /*nav, role*/ 8256 && get_spread_object(!/*nav*/ ctx[13] ? { role: /*role*/ ctx[6] } : {}),
    					dirty & /*nav, role, selected*/ 8384 && get_spread_object(!/*nav*/ ctx[13] && /*role*/ ctx[6] === "option"
    					? {
    							"aria-selected": /*selected*/ ctx[7] ? "true" : "false"
    						}
    					: {}),
    					dirty & /*nav, role, checked*/ 9280 && get_spread_object(!/*nav*/ ctx[13] && (/*role*/ ctx[6] === "radio" || /*role*/ ctx[6] === "checkbox")
    					? {
    							"aria-checked": /*checked*/ ctx[10] ? "true" : "false"
    						}
    					: {}),
    					dirty & /*nav, disabled*/ 8448 && get_spread_object(!/*nav*/ ctx[13]
    					? {
    							"aria-disabled": /*disabled*/ ctx[8] ? "true" : "false"
    						}
    					: {}),
    					dirty & /*tabindex*/ 1 && { tabindex: /*tabindex*/ ctx[0] },
    					dirty & /*exclude, $$props*/ 65536 && get_spread_object(exclude(/*$$props*/ ctx[16], [
    						"use",
    						"class",
    						"ripple",
    						"color",
    						"nonInteractive",
    						"activated",
    						"selected",
    						"disabled",
    						"tabindex",
    						"inputId"
    					]))
    				])
    			: {};

    			if (dirty & /*$$scope*/ 4194304) {
    				switch_instance_changes.$$scope = { dirty, ctx };
    			}

    			if (!updating_element && dirty & /*element*/ 2048) {
    				updating_element = true;
    				switch_instance_changes.element = /*element*/ ctx[11];
    				add_flush_callback(() => updating_element = false);
    			}

    			if (switch_value !== (switch_value = /*component*/ ctx[9])) {
    				if (switch_instance) {
    					group_outros();
    					const old_component = switch_instance;

    					transition_out(old_component.$$.fragment, 1, 0, () => {
    						destroy_component(old_component, 1);
    					});

    					check_outros();
    				}

    				if (switch_value) {
    					switch_instance = new switch_value(switch_props(ctx));
    					binding_callbacks.push(() => bind(switch_instance, "element", switch_instance_element_binding));
    					switch_instance.$on("click", /*action*/ ctx[14]);
    					switch_instance.$on("keydown", /*handleKeydown*/ ctx[15]);
    					create_component(switch_instance.$$.fragment);
    					transition_in(switch_instance.$$.fragment, 1);
    					mount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);
    				} else {
    					switch_instance = null;
    				}
    			} else if (switch_value) {
    				switch_instance.$set(switch_instance_changes);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			if (switch_instance) transition_in(switch_instance.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			if (switch_instance) transition_out(switch_instance.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(switch_instance_anchor);
    			if (switch_instance) destroy_component(switch_instance, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$n.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    let counter = 0;

    function instance$n($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Item", slots, ['default']);
    	const dispatch = createEventDispatcher();
    	const forwardEvents = forwardEventsBuilder(get_current_component());
    	let checked = false;
    	let { use = [] } = $$props;
    	let { class: className = "" } = $$props;
    	let { ripple = true } = $$props;
    	let { color = null } = $$props;
    	let { nonInteractive = getContext("SMUI:list:nonInteractive") } = $$props;
    	let { activated = false } = $$props;
    	let { role = getContext("SMUI:list:item:role") } = $$props;
    	let { selected = false } = $$props;
    	let { disabled = false } = $$props;
    	let { tabindex = !nonInteractive && !disabled && (selected || checked) && "0" || "-1" } = $$props;
    	let { inputId = "SMUI-form-field-list-" + counter++ } = $$props;
    	let { href = null } = $$props;
    	let element;
    	let addTabindexIfNoItemsSelectedRaf;
    	let nav = getContext("SMUI:list:item:nav");
    	let { component = nav ? href ? A : Span : Li } = $$props;
    	setContext("SMUI:generic:input:props", { id: inputId });
    	setContext("SMUI:generic:input:setChecked", setChecked);

    	onMount(() => {
    		// Tabindex needs to be '0' if this is the first non-disabled list item, and
    		// no other item is selected.
    		if (!selected && !nonInteractive) {
    			let first = true;
    			let el = element;

    			while (el.previousSibling) {
    				el = el.previousSibling;

    				if (el.nodeType === 1 && el.classList.contains("mdc-list-item") && !el.classList.contains("mdc-list-item--disabled")) {
    					first = false;
    					break;
    				}
    			}

    			if (first) {
    				// This is first, so now set up a check that no other items are
    				// selected.
    				addTabindexIfNoItemsSelectedRaf = window.requestAnimationFrame(addTabindexIfNoItemsSelected);
    			}
    		}
    	});

    	onDestroy(() => {
    		if (addTabindexIfNoItemsSelectedRaf) {
    			window.cancelAnimationFrame(addTabindexIfNoItemsSelectedRaf);
    		}
    	});

    	function addTabindexIfNoItemsSelected() {
    		// Look through next siblings to see if none of them are selected.
    		let noneSelected = true;

    		let el = element;

    		while (el.nextSibling) {
    			el = el.nextSibling;

    			if (el.nodeType === 1 && el.classList.contains("mdc-list-item") && el.attributes["tabindex"] && el.attributes["tabindex"].value === "0") {
    				noneSelected = false;
    				break;
    			}
    		}

    		if (noneSelected) {
    			// This is the first element, and no other element is selected, so the
    			// tabindex should be '0'.
    			$$invalidate(0, tabindex = "0");
    		}
    	}

    	function action(e) {
    		if (disabled) {
    			e.preventDefault();
    		} else {
    			dispatch("SMUI:action", e);
    		}
    	}

    	function handleKeydown(e) {
    		const isEnter = e.key === "Enter" || e.keyCode === 13;
    		const isSpace = e.key === "Space" || e.keyCode === 32;

    		if (isEnter || isSpace) {
    			action(e);
    		}
    	}

    	function setChecked(isChecked) {
    		$$invalidate(10, checked = isChecked);
    		$$invalidate(0, tabindex = !nonInteractive && !disabled && (selected || checked) && "0" || "-1");
    	}

    	function switch_instance_element_binding(value) {
    		element = value;
    		$$invalidate(11, element);
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(16, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("use" in $$new_props) $$invalidate(1, use = $$new_props.use);
    		if ("class" in $$new_props) $$invalidate(2, className = $$new_props.class);
    		if ("ripple" in $$new_props) $$invalidate(3, ripple = $$new_props.ripple);
    		if ("color" in $$new_props) $$invalidate(4, color = $$new_props.color);
    		if ("nonInteractive" in $$new_props) $$invalidate(17, nonInteractive = $$new_props.nonInteractive);
    		if ("activated" in $$new_props) $$invalidate(5, activated = $$new_props.activated);
    		if ("role" in $$new_props) $$invalidate(6, role = $$new_props.role);
    		if ("selected" in $$new_props) $$invalidate(7, selected = $$new_props.selected);
    		if ("disabled" in $$new_props) $$invalidate(8, disabled = $$new_props.disabled);
    		if ("tabindex" in $$new_props) $$invalidate(0, tabindex = $$new_props.tabindex);
    		if ("inputId" in $$new_props) $$invalidate(18, inputId = $$new_props.inputId);
    		if ("href" in $$new_props) $$invalidate(19, href = $$new_props.href);
    		if ("component" in $$new_props) $$invalidate(9, component = $$new_props.component);
    		if ("$$scope" in $$new_props) $$invalidate(22, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		counter,
    		onMount,
    		onDestroy,
    		getContext,
    		setContext,
    		createEventDispatcher,
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		A,
    		Span,
    		Li,
    		Ripple,
    		dispatch,
    		forwardEvents,
    		checked,
    		use,
    		className,
    		ripple,
    		color,
    		nonInteractive,
    		activated,
    		role,
    		selected,
    		disabled,
    		tabindex,
    		inputId,
    		href,
    		element,
    		addTabindexIfNoItemsSelectedRaf,
    		nav,
    		component,
    		addTabindexIfNoItemsSelected,
    		action,
    		handleKeydown,
    		setChecked
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(16, $$props = assign(assign({}, $$props), $$new_props));
    		if ("checked" in $$props) $$invalidate(10, checked = $$new_props.checked);
    		if ("use" in $$props) $$invalidate(1, use = $$new_props.use);
    		if ("className" in $$props) $$invalidate(2, className = $$new_props.className);
    		if ("ripple" in $$props) $$invalidate(3, ripple = $$new_props.ripple);
    		if ("color" in $$props) $$invalidate(4, color = $$new_props.color);
    		if ("nonInteractive" in $$props) $$invalidate(17, nonInteractive = $$new_props.nonInteractive);
    		if ("activated" in $$props) $$invalidate(5, activated = $$new_props.activated);
    		if ("role" in $$props) $$invalidate(6, role = $$new_props.role);
    		if ("selected" in $$props) $$invalidate(7, selected = $$new_props.selected);
    		if ("disabled" in $$props) $$invalidate(8, disabled = $$new_props.disabled);
    		if ("tabindex" in $$props) $$invalidate(0, tabindex = $$new_props.tabindex);
    		if ("inputId" in $$props) $$invalidate(18, inputId = $$new_props.inputId);
    		if ("href" in $$props) $$invalidate(19, href = $$new_props.href);
    		if ("element" in $$props) $$invalidate(11, element = $$new_props.element);
    		if ("addTabindexIfNoItemsSelectedRaf" in $$props) addTabindexIfNoItemsSelectedRaf = $$new_props.addTabindexIfNoItemsSelectedRaf;
    		if ("nav" in $$props) $$invalidate(13, nav = $$new_props.nav);
    		if ("component" in $$props) $$invalidate(9, component = $$new_props.component);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		tabindex,
    		use,
    		className,
    		ripple,
    		color,
    		activated,
    		role,
    		selected,
    		disabled,
    		component,
    		checked,
    		element,
    		forwardEvents,
    		nav,
    		action,
    		handleKeydown,
    		$$props,
    		nonInteractive,
    		inputId,
    		href,
    		slots,
    		switch_instance_element_binding,
    		$$scope
    	];
    }

    class Item extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$n, create_fragment$n, safe_not_equal, {
    			use: 1,
    			class: 2,
    			ripple: 3,
    			color: 4,
    			nonInteractive: 17,
    			activated: 5,
    			role: 6,
    			selected: 7,
    			disabled: 8,
    			tabindex: 0,
    			inputId: 18,
    			href: 19,
    			component: 9
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Item",
    			options,
    			id: create_fragment$n.name
    		});
    	}

    	get use() {
    		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get ripple() {
    		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set ripple(value) {
    		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get color() {
    		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set color(value) {
    		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get nonInteractive() {
    		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set nonInteractive(value) {
    		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get activated() {
    		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set activated(value) {
    		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get role() {
    		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set role(value) {
    		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get selected() {
    		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set selected(value) {
    		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get disabled() {
    		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set disabled(value) {
    		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get tabindex() {
    		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set tabindex(value) {
    		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get inputId() {
    		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set inputId(value) {
    		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get href() {
    		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set href(value) {
    		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get component() {
    		throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set component(value) {
    		throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    var Text = classAdderBuilder({
      class: 'mdc-list-item__text',
      component: Span,
      contexts: {}
    });

    classAdderBuilder({
      class: 'mdc-list-item__primary-text',
      component: Span,
      contexts: {}
    });

    classAdderBuilder({
      class: 'mdc-list-item__secondary-text',
      component: Span,
      contexts: {}
    });

    classAdderBuilder({
      class: 'mdc-list-item__graphic',
      component: Span,
      contexts: {}
    });

    classAdderBuilder({
      class: 'mdc-list-item__meta',
      component: Span,
      contexts: {}
    });

    classAdderBuilder({
      class: 'mdc-list-group',
      component: Div,
      contexts: {}
    });

    /* node_modules/@smui/common/H3.svelte generated by Svelte v3.32.1 */
    const file$m = "node_modules/@smui/common/H3.svelte";

    function create_fragment$o(ctx) {
    	let h3;
    	let useActions_action;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[6].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[5], null);
    	let h3_levels = [exclude(/*$$props*/ ctx[3], ["element", "use", "forwardEvents"])];
    	let h3_data = {};

    	for (let i = 0; i < h3_levels.length; i += 1) {
    		h3_data = assign(h3_data, h3_levels[i]);
    	}

    	const block = {
    		c: function create() {
    			h3 = element("h3");
    			if (default_slot) default_slot.c();
    			set_attributes(h3, h3_data);
    			add_location(h3, file$m, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, h3, anchor);

    			if (default_slot) {
    				default_slot.m(h3, null);
    			}

    			/*h3_binding*/ ctx[7](h3);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					action_destroyer(useActions_action = useActions.call(null, h3, /*use*/ ctx[1])),
    					action_destroyer(/*forwardEvents*/ ctx[2].call(null, h3))
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 32) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[5], dirty, null, null);
    				}
    			}

    			set_attributes(h3, h3_data = get_spread_update(h3_levels, [
    				dirty & /*$$props*/ 8 && exclude(/*$$props*/ ctx[3], ["element", "use", "forwardEvents"])
    			]));

    			if (useActions_action && is_function(useActions_action.update) && dirty & /*use*/ 2) useActions_action.update.call(null, /*use*/ ctx[1]);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(h3);
    			if (default_slot) default_slot.d(detaching);
    			/*h3_binding*/ ctx[7](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$o.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$o($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("H3", slots, ['default']);
    	let { element = null } = $$props;
    	let { use = [] } = $$props;
    	let { forwardEvents: forwardEventsAdditional = [] } = $$props;
    	const forwardEvents = forwardEventsBuilder(get_current_component(), forwardEventsAdditional);

    	function h3_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			element = $$value;
    			$$invalidate(0, element);
    		});
    	}

    	$$self.$$set = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ("element" in $$new_props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$new_props) $$invalidate(1, use = $$new_props.use);
    		if ("forwardEvents" in $$new_props) $$invalidate(4, forwardEventsAdditional = $$new_props.forwardEvents);
    		if ("$$scope" in $$new_props) $$invalidate(5, $$scope = $$new_props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		get_current_component,
    		forwardEventsBuilder,
    		exclude,
    		useActions,
    		element,
    		use,
    		forwardEventsAdditional,
    		forwardEvents
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(3, $$props = assign(assign({}, $$props), $$new_props));
    		if ("element" in $$props) $$invalidate(0, element = $$new_props.element);
    		if ("use" in $$props) $$invalidate(1, use = $$new_props.use);
    		if ("forwardEventsAdditional" in $$props) $$invalidate(4, forwardEventsAdditional = $$new_props.forwardEventsAdditional);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);

    	return [
    		element,
    		use,
    		forwardEvents,
    		$$props,
    		forwardEventsAdditional,
    		$$scope,
    		slots,
    		h3_binding
    	];
    }

    class H3 extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$o, create_fragment$o, safe_not_equal, { element: 0, use: 1, forwardEvents: 4 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "H3",
    			options,
    			id: create_fragment$o.name
    		});
    	}

    	get element() {
    		throw new Error("<H3>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set element(value) {
    		throw new Error("<H3>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get use() {
    		throw new Error("<H3>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set use(value) {
    		throw new Error("<H3>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get forwardEvents() {
    		throw new Error("<H3>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set forwardEvents(value) {
    		throw new Error("<H3>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    classAdderBuilder({
      class: 'mdc-list-group__subheader',
      component: H3,
      contexts: {}
    });

    var encode_1 = encode;
    var MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);
    function encode(num, out, offset) {
      out = out || [];
      offset = offset || 0;
      var oldOffset = offset;
      while (num >= INT) {
        out[offset++] = num & 255 | MSB;
        num /= 128;
      }
      while (num & MSBALL) {
        out[offset++] = num & 255 | MSB;
        num >>>= 7;
      }
      out[offset] = num | 0;
      encode.bytes = offset - oldOffset + 1;
      return out;
    }
    var decode = read;
    var MSB$1 = 128, REST$1 = 127;
    function read(buf, offset) {
      var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;
      do {
        if (counter >= l) {
          read.bytes = 0;
          throw new RangeError('Could not decode varint');
        }
        b = buf[counter++];
        res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);
        shift += 7;
      } while (b >= MSB$1);
      read.bytes = counter - offset;
      return res;
    }
    var N1 = Math.pow(2, 7);
    var N2 = Math.pow(2, 14);
    var N3 = Math.pow(2, 21);
    var N4 = Math.pow(2, 28);
    var N5 = Math.pow(2, 35);
    var N6 = Math.pow(2, 42);
    var N7 = Math.pow(2, 49);
    var N8 = Math.pow(2, 56);
    var N9 = Math.pow(2, 63);
    var length = function (value) {
      return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;
    };
    var varint = {
      encode: encode_1,
      decode: decode,
      encodingLength: length
    };
    var _brrp_varint = varint;

    const decode$1 = data => {
      const code = _brrp_varint.decode(data);
      return [
        code,
        _brrp_varint.decode.bytes
      ];
    };
    const encodeTo = (int, target, offset = 0) => {
      _brrp_varint.encode(int, target, offset);
      return target;
    };
    const encodingLength = int => {
      return _brrp_varint.encodingLength(int);
    };

    const equals = (aa, bb) => {
      if (aa === bb)
        return true;
      if (aa.byteLength !== bb.byteLength) {
        return false;
      }
      for (let ii = 0; ii < aa.byteLength; ii++) {
        if (aa[ii] !== bb[ii]) {
          return false;
        }
      }
      return true;
    };
    const coerce = o => {
      if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')
        return o;
      if (o instanceof ArrayBuffer)
        return new Uint8Array(o);
      if (ArrayBuffer.isView(o)) {
        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);
      }
      throw new Error('Unknown type, must be binary type');
    };

    const create = (code, digest) => {
      const size = digest.byteLength;
      const sizeOffset = encodingLength(code);
      const digestOffset = sizeOffset + encodingLength(size);
      const bytes = new Uint8Array(digestOffset + size);
      encodeTo(code, bytes, 0);
      encodeTo(size, bytes, sizeOffset);
      bytes.set(digest, digestOffset);
      return new Digest(code, size, digest, bytes);
    };
    const decode$2 = multihash => {
      const bytes = coerce(multihash);
      const [code, sizeOffset] = decode$1(bytes);
      const [size, digestOffset] = decode$1(bytes.subarray(sizeOffset));
      const digest = bytes.subarray(sizeOffset + digestOffset);
      if (digest.byteLength !== size) {
        throw new Error('Incorrect length');
      }
      return new Digest(code, size, digest, bytes);
    };
    const equals$1 = (a, b) => {
      if (a === b) {
        return true;
      } else {
        return a.code === b.code && a.size === b.size && equals(a.bytes, b.bytes);
      }
    };
    class Digest {
      constructor(code, size, digest, bytes) {
        this.code = code;
        this.size = size;
        this.digest = digest;
        this.bytes = bytes;
      }
    }

    function base(ALPHABET) {
      if (ALPHABET.length >= 255) {
        throw new TypeError('Alphabet too long');
      }
      var BASE_MAP = new Uint8Array(256);
      for (var j = 0; j < BASE_MAP.length; j++) {
        BASE_MAP[j] = 255;
      }
      for (var i = 0; i < ALPHABET.length; i++) {
        var x = ALPHABET.charAt(i);
        var xc = x.charCodeAt(0);
        if (BASE_MAP[xc] !== 255) {
          throw new TypeError(x + ' is ambiguous');
        }
        BASE_MAP[xc] = i;
      }
      var BASE = ALPHABET.length;
      var LEADER = ALPHABET.charAt(0);
      var FACTOR = Math.log(BASE) / Math.log(256);
      var iFACTOR = Math.log(256) / Math.log(BASE);
      function encode(source) {
        if (source instanceof Uint8Array);
        else if (ArrayBuffer.isView(source)) {
          source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
        } else if (Array.isArray(source)) {
          source = Uint8Array.from(source);
        }
        if (!(source instanceof Uint8Array)) {
          throw new TypeError('Expected Uint8Array');
        }
        if (source.length === 0) {
          return '';
        }
        var zeroes = 0;
        var length = 0;
        var pbegin = 0;
        var pend = source.length;
        while (pbegin !== pend && source[pbegin] === 0) {
          pbegin++;
          zeroes++;
        }
        var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
        var b58 = new Uint8Array(size);
        while (pbegin !== pend) {
          var carry = source[pbegin];
          var i = 0;
          for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {
            carry += 256 * b58[it1] >>> 0;
            b58[it1] = carry % BASE >>> 0;
            carry = carry / BASE >>> 0;
          }
          if (carry !== 0) {
            throw new Error('Non-zero carry');
          }
          length = i;
          pbegin++;
        }
        var it2 = size - length;
        while (it2 !== size && b58[it2] === 0) {
          it2++;
        }
        var str = LEADER.repeat(zeroes);
        for (; it2 < size; ++it2) {
          str += ALPHABET.charAt(b58[it2]);
        }
        return str;
      }
      function decodeUnsafe(source) {
        if (typeof source !== 'string') {
          throw new TypeError('Expected String');
        }
        if (source.length === 0) {
          return new Uint8Array();
        }
        var psz = 0;
        if (source[psz] === ' ') {
          return;
        }
        var zeroes = 0;
        var length = 0;
        while (source[psz] === LEADER) {
          zeroes++;
          psz++;
        }
        var size = (source.length - psz) * FACTOR + 1 >>> 0;
        var b256 = new Uint8Array(size);
        while (source[psz]) {
          var carry = BASE_MAP[source.charCodeAt(psz)];
          if (carry === 255) {
            return;
          }
          var i = 0;
          for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {
            carry += BASE * b256[it3] >>> 0;
            b256[it3] = carry % 256 >>> 0;
            carry = carry / 256 >>> 0;
          }
          if (carry !== 0) {
            throw new Error('Non-zero carry');
          }
          length = i;
          psz++;
        }
        if (source[psz] === ' ') {
          return;
        }
        var it4 = size - length;
        while (it4 !== size && b256[it4] === 0) {
          it4++;
        }
        var vch = new Uint8Array(zeroes + (size - it4));
        var j = zeroes;
        while (it4 !== size) {
          vch[j++] = b256[it4++];
        }
        return vch;
      }
      function decode(string) {
        var buffer = decodeUnsafe(string);
        if (buffer) {
          return buffer;
        }
        throw new Error('Non-base' + BASE + ' character');
      }
      return {
        encode: encode,
        decodeUnsafe: decodeUnsafe,
        decode: decode
      };
    }
    var src = base;
    var _brrp__multiformats_scope_baseX = src;

    class Encoder {
      constructor(name, prefix, baseEncode) {
        this.name = name;
        this.prefix = prefix;
        this.baseEncode = baseEncode;
      }
      encode(bytes) {
        if (bytes instanceof Uint8Array) {
          return `${ this.prefix }${ this.baseEncode(bytes) }`;
        } else {
          throw Error('Unknown type, must be binary type');
        }
      }
    }
    class Decoder {
      constructor(name, prefix, baseDecode) {
        this.name = name;
        this.prefix = prefix;
        this.baseDecode = baseDecode;
      }
      decode(text) {
        if (typeof text === 'string') {
          switch (text[0]) {
          case this.prefix: {
              return this.baseDecode(text.slice(1));
            }
          default: {
              throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);
            }
          }
        } else {
          throw Error('Can only multibase decode strings');
        }
      }
      or(decoder) {
        const decoders = {
          [this.prefix]: this,
          ...decoder.decoders || { [decoder.prefix]: decoder }
        };
        return new ComposedDecoder(decoders);
      }
    }
    class ComposedDecoder {
      constructor(decoders) {
        this.decoders = decoders;
      }
      or(decoder) {
        const other = decoder.decoders || { [decoder.prefix]: decoder };
        return new ComposedDecoder({
          ...this.decoders,
          ...other
        });
      }
      decode(input) {
        const prefix = input[0];
        const decoder = this.decoders[prefix];
        if (decoder) {
          return decoder.decode(input);
        } else {
          throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);
        }
      }
    }
    class Codec {
      constructor(name, prefix, baseEncode, baseDecode) {
        this.name = name;
        this.prefix = prefix;
        this.baseEncode = baseEncode;
        this.baseDecode = baseDecode;
        this.encoder = new Encoder(name, prefix, baseEncode);
        this.decoder = new Decoder(name, prefix, baseDecode);
      }
      encode(input) {
        return this.encoder.encode(input);
      }
      decode(input) {
        return this.decoder.decode(input);
      }
    }
    const withAlphabet = ({name, prefix, encode, decode, alphabet}) => from({
      name,
      prefix,
      encode: input => encode(input, alphabet),
      decode: input => {
        for (const char of input) {
          if (alphabet.indexOf(char) < 0) {
            throw new Error(`invalid ${ name } character`);
          }
        }
        return decode(input, alphabet);
      }
    });
    const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);

    const implement = alphabet => {
      const {encode, decode} = _brrp__multiformats_scope_baseX(alphabet);
      return {
        encode,
        decode: text => coerce(decode(text))
      };
    };
    const base58btc = from({
      name: 'base58btc',
      prefix: 'z',
      ...implement('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz')
    });
    from({
      name: 'base58flickr',
      prefix: 'Z',
      ...implement('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ')
    });

    function decode$3(input, alphabet) {
      input = input.replace(new RegExp('=', 'g'), '');
      const length = input.length;
      let bits = 0;
      let value = 0;
      let index = 0;
      const output = new Uint8Array(length * 5 / 8 | 0);
      for (let i = 0; i < length; i++) {
        value = value << 5 | alphabet.indexOf(input[i]);
        bits += 5;
        if (bits >= 8) {
          output[index++] = value >>> bits - 8 & 255;
          bits -= 8;
        }
      }
      return output;
    }
    function encode$1(buffer, alphabet) {
      const length = buffer.byteLength;
      const view = new Uint8Array(buffer);
      const padding = alphabet.indexOf('=') === alphabet.length - 1;
      if (padding) {
        alphabet = alphabet.substring(0, alphabet.length - 1);
      }
      let bits = 0;
      let value = 0;
      let output = '';
      for (let i = 0; i < length; i++) {
        value = value << 8 | view[i];
        bits += 8;
        while (bits >= 5) {
          output += alphabet[value >>> bits - 5 & 31];
          bits -= 5;
        }
      }
      if (bits > 0) {
        output += alphabet[value << 5 - bits & 31];
      }
      if (padding) {
        while (output.length % 8 !== 0) {
          output += '=';
        }
      }
      return output;
    }
    const base32 = withAlphabet({
      prefix: 'b',
      name: 'base32',
      alphabet: 'abcdefghijklmnopqrstuvwxyz234567',
      encode: encode$1,
      decode: decode$3
    });

    class CID {
      constructor(version, code, multihash, bytes) {
        this.code = code;
        this.version = version;
        this.multihash = multihash;
        this.bytes = bytes;
        this.byteOffset = bytes.byteOffset;
        this.byteLength = bytes.byteLength;
        this.asCID = this;
        this._baseCache = new Map();
        Object.defineProperties(this, {
          byteOffset: hidden,
          byteLength: hidden,
          code: readonly,
          version: readonly,
          multihash: readonly,
          bytes: readonly,
          _baseCache: hidden,
          asCID: hidden
        });
      }
      toV0() {
        switch (this.version) {
        case 0: {
            return this;
          }
        default: {
            const {code, multihash} = this;
            if (code !== DAG_PB_CODE) {
              throw new Error('Cannot convert a non dag-pb CID to CIDv0');
            }
            if (multihash.code !== SHA_256_CODE) {
              throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');
            }
            return CID.createV0(multihash);
          }
        }
      }
      toV1() {
        switch (this.version) {
        case 0: {
            const {code, digest} = this.multihash;
            const multihash = create(code, digest);
            return CID.createV1(this.code, multihash);
          }
        case 1: {
            return this;
          }
        default: {
            throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);
          }
        }
      }
      equals(other) {
        return other && this.code === other.code && this.version === other.version && equals$1(this.multihash, other.multihash);
      }
      toString(base) {
        const {bytes, version, _baseCache} = this;
        switch (version) {
        case 0:
          return toStringV0(bytes, _baseCache, base || base58btc.encoder);
        default:
          return toStringV1(bytes, _baseCache, base || base32.encoder);
        }
      }
      toJSON() {
        return {
          code: this.code,
          version: this.version,
          hash: this.multihash.bytes
        };
      }
      get [Symbol.toStringTag]() {
        return 'CID';
      }
      [Symbol.for('nodejs.util.inspect.custom')]() {
        return 'CID(' + this.toString() + ')';
      }
      static isCID(value) {
        deprecate(/^0\.0/, IS_CID_DEPRECATION);
        return !!(value && (value[cidSymbol] || value.asCID === value));
      }
      get toBaseEncodedString() {
        throw new Error('Deprecated, use .toString()');
      }
      get codec() {
        throw new Error('"codec" property is deprecated, use integer "code" property instead');
      }
      get buffer() {
        throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');
      }
      get multibaseName() {
        throw new Error('"multibaseName" property is deprecated');
      }
      get prefix() {
        throw new Error('"prefix" property is deprecated');
      }
      static asCID(value) {
        if (value instanceof CID) {
          return value;
        } else if (value != null && value.asCID === value) {
          const {version, code, multihash, bytes} = value;
          return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));
        } else if (value != null && value[cidSymbol] === true) {
          const {version, multihash, code} = value;
          const digest = decode$2(multihash);
          return CID.create(version, code, digest);
        } else {
          return null;
        }
      }
      static create(version, code, digest) {
        if (typeof code !== 'number') {
          throw new Error('String codecs are no longer supported');
        }
        switch (version) {
        case 0: {
            if (code !== DAG_PB_CODE) {
              throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);
            } else {
              return new CID(version, code, digest, digest.bytes);
            }
          }
        case 1: {
            const bytes = encodeCID(version, code, digest.bytes);
            return new CID(version, code, digest, bytes);
          }
        default: {
            throw new Error('Invalid version');
          }
        }
      }
      static createV0(digest) {
        return CID.create(0, DAG_PB_CODE, digest);
      }
      static createV1(code, digest) {
        return CID.create(1, code, digest);
      }
      static decode(bytes) {
        const [cid, remainder] = CID.decodeFirst(bytes);
        if (remainder.length) {
          throw new Error('Incorrect length');
        }
        return cid;
      }
      static decodeFirst(bytes) {
        const specs = CID.inspectBytes(bytes);
        const prefixSize = specs.size - specs.multihashSize;
        const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));
        if (multihashBytes.byteLength !== specs.multihashSize) {
          throw new Error('Incorrect length');
        }
        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);
        const digest = new Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);
        const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);
        return [
          cid,
          bytes.subarray(specs.size)
        ];
      }
      static inspectBytes(initialBytes) {
        let offset = 0;
        const next = () => {
          const [i, length] = decode$1(initialBytes.subarray(offset));
          offset += length;
          return i;
        };
        let version = next();
        let codec = DAG_PB_CODE;
        if (version === 18) {
          version = 0;
          offset = 0;
        } else if (version === 1) {
          codec = next();
        } else if (version !== 1) {
          throw new RangeError(`Invalid CID version ${ version }`);
        }
        const prefixSize = offset;
        const multihashCode = next();
        const digestSize = next();
        const size = offset + digestSize;
        const multihashSize = size - prefixSize;
        return {
          version,
          codec,
          multihashCode,
          digestSize,
          multihashSize,
          size
        };
      }
      static parse(source, base) {
        const [prefix, bytes] = parseCIDtoBytes(source, base);
        const cid = CID.decode(bytes);
        cid._baseCache.set(prefix, source);
        return cid;
      }
    }
    const parseCIDtoBytes = (source, base) => {
      switch (source[0]) {
      case 'Q': {
          const decoder = base || base58btc;
          return [
            base58btc.prefix,
            decoder.decode(`${ base58btc.prefix }${ source }`)
          ];
        }
      case base58btc.prefix: {
          const decoder = base || base58btc;
          return [
            base58btc.prefix,
            decoder.decode(source)
          ];
        }
      case base32.prefix: {
          const decoder = base || base32;
          return [
            base32.prefix,
            decoder.decode(source)
          ];
        }
      default: {
          if (base == null) {
            throw Error('To parse non base32 or base56btc encoded CID multibase decoder must be provided');
          }
          return [
            source[0],
            base.decode(source)
          ];
        }
      }
    };
    const toStringV0 = (bytes, cache, base) => {
      const {prefix} = base;
      if (prefix !== base58btc.prefix) {
        throw Error(`Cannot string encode V0 in ${ base.name } encoding`);
      }
      const cid = cache.get(prefix);
      if (cid == null) {
        const cid = base.encode(bytes).slice(1);
        cache.set(prefix, cid);
        return cid;
      } else {
        return cid;
      }
    };
    const toStringV1 = (bytes, cache, base) => {
      const {prefix} = base;
      const cid = cache.get(prefix);
      if (cid == null) {
        const cid = base.encode(bytes);
        cache.set(prefix, cid);
        return cid;
      } else {
        return cid;
      }
    };
    const DAG_PB_CODE = 112;
    const SHA_256_CODE = 18;
    const encodeCID = (version, code, multihash) => {
      const codeOffset = encodingLength(version);
      const hashOffset = codeOffset + encodingLength(code);
      const bytes = new Uint8Array(hashOffset + multihash.byteLength);
      encodeTo(version, bytes, 0);
      encodeTo(code, bytes, codeOffset);
      bytes.set(multihash, hashOffset);
      return bytes;
    };
    const cidSymbol = Symbol.for('@ipld/js-cid/CID');
    const readonly = {
      writable: false,
      configurable: false,
      enumerable: true
    };
    const hidden = {
      writable: false,
      enumerable: false,
      configurable: false
    };
    const version = '0.0.0-dev';
    const deprecate = (range, message) => {
      if (range.test(version)) {
        console.warn(message);
      } else {
        throw new Error(message);
      }
    };
    const IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`;

    const from$1 = ({name, code, encode}) => new Hasher(name, code, encode);
    class Hasher {
      constructor(name, code, encode) {
        this.name = name;
        this.code = code;
        this.encode = encode;
      }
      async digest(input) {
        if (input instanceof Uint8Array) {
          const digest = await this.encode(input);
          return create(this.code, digest);
        } else {
          throw Error('Unknown type, must be binary type');
        }
      }
    }

    const codec = ({name, code, decode, encode}) => new Codec$1(name, code, encode, decode);
    class Encoder$1 {
      constructor(name, code, encode) {
        this.name = name;
        this.code = code;
        this.encode = encode;
      }
    }
    class Decoder$1 {
      constructor(name, code, decode) {
        this.name = name;
        this.code = code;
        this.decode = decode;
      }
    }
    class Codec$1 {
      constructor(name, code, encode, decode) {
        this.name = name;
        this.code = code;
        this.encode = encode;
        this.decode = decode;
      }
      get decoder() {
        const {name, code, decode} = this;
        const decoder = new Decoder$1(name, code, decode);
        Object.defineProperty(this, 'decoder', { value: decoder });
        return decoder;
      }
      get encoder() {
        const {name, code, encode} = this;
        const encoder = new Encoder$1(name, code, encode);
        Object.defineProperty(this, 'encoder', { value: encoder });
        return encoder;
      }
    }

    var global$1 = (typeof global !== "undefined" ? global :
      typeof self !== "undefined" ? self :
      typeof window !== "undefined" ? window : {});

    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global$1 !== 'undefined' ? global$1 : typeof self !== 'undefined' ? self : {};
    function createCommonjsModule(fn, basedir, module) {
      return module = {
        path: basedir,
        exports: {},
        require: function (path, base) {
          return commonjsRequire(path, base === undefined || base === null ? module.path : base);
        }
      }, fn(module, module.exports), module.exports;
    }
    function commonjsRequire() {
      throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
    }
    var BigInteger = createCommonjsModule(function (module) {
      var bigInt = function (undefined$1) {
        var BASE = 10000000, LOG_BASE = 7, MAX_INT = 9007199254740992, MAX_INT_ARR = smallToArray(MAX_INT), DEFAULT_ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';
        var supportsNativeBigInt = typeof BigInt === 'function';
        function Integer(v, radix, alphabet, caseSensitive) {
          if (typeof v === 'undefined')
            return Integer[0];
          if (typeof radix !== 'undefined')
            return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);
          return parseValue(v);
        }
        function BigInteger(value, sign) {
          this.value = value;
          this.sign = sign;
          this.isSmall = false;
        }
        BigInteger.prototype = Object.create(Integer.prototype);
        function SmallInteger(value) {
          this.value = value;
          this.sign = value < 0;
          this.isSmall = true;
        }
        SmallInteger.prototype = Object.create(Integer.prototype);
        function NativeBigInt(value) {
          this.value = value;
        }
        NativeBigInt.prototype = Object.create(Integer.prototype);
        function isPrecise(n) {
          return -MAX_INT < n && n < MAX_INT;
        }
        function smallToArray(n) {
          if (n < 10000000)
            return [n];
          if (n < 100000000000000)
            return [
              n % 10000000,
              Math.floor(n / 10000000)
            ];
          return [
            n % 10000000,
            Math.floor(n / 10000000) % 10000000,
            Math.floor(n / 100000000000000)
          ];
        }
        function arrayToSmall(arr) {
          trim(arr);
          var length = arr.length;
          if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {
            switch (length) {
            case 0:
              return 0;
            case 1:
              return arr[0];
            case 2:
              return arr[0] + arr[1] * BASE;
            default:
              return arr[0] + (arr[1] + arr[2] * BASE) * BASE;
            }
          }
          return arr;
        }
        function trim(v) {
          var i = v.length;
          while (v[--i] === 0);
          v.length = i + 1;
        }
        function createArray(length) {
          var x = new Array(length);
          var i = -1;
          while (++i < length) {
            x[i] = 0;
          }
          return x;
        }
        function truncate(n) {
          if (n > 0)
            return Math.floor(n);
          return Math.ceil(n);
        }
        function add(a, b) {
          var l_a = a.length, l_b = b.length, r = new Array(l_a), carry = 0, base = BASE, sum, i;
          for (i = 0; i < l_b; i++) {
            sum = a[i] + b[i] + carry;
            carry = sum >= base ? 1 : 0;
            r[i] = sum - carry * base;
          }
          while (i < l_a) {
            sum = a[i] + carry;
            carry = sum === base ? 1 : 0;
            r[i++] = sum - carry * base;
          }
          if (carry > 0)
            r.push(carry);
          return r;
        }
        function addAny(a, b) {
          if (a.length >= b.length)
            return add(a, b);
          return add(b, a);
        }
        function addSmall(a, carry) {
          var l = a.length, r = new Array(l), base = BASE, sum, i;
          for (i = 0; i < l; i++) {
            sum = a[i] - base + carry;
            carry = Math.floor(sum / base);
            r[i] = sum - carry * base;
            carry += 1;
          }
          while (carry > 0) {
            r[i++] = carry % base;
            carry = Math.floor(carry / base);
          }
          return r;
        }
        BigInteger.prototype.add = function (v) {
          var n = parseValue(v);
          if (this.sign !== n.sign) {
            return this.subtract(n.negate());
          }
          var a = this.value, b = n.value;
          if (n.isSmall) {
            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);
          }
          return new BigInteger(addAny(a, b), this.sign);
        };
        BigInteger.prototype.plus = BigInteger.prototype.add;
        SmallInteger.prototype.add = function (v) {
          var n = parseValue(v);
          var a = this.value;
          if (a < 0 !== n.sign) {
            return this.subtract(n.negate());
          }
          var b = n.value;
          if (n.isSmall) {
            if (isPrecise(a + b))
              return new SmallInteger(a + b);
            b = smallToArray(Math.abs(b));
          }
          return new BigInteger(addSmall(b, Math.abs(a)), a < 0);
        };
        SmallInteger.prototype.plus = SmallInteger.prototype.add;
        NativeBigInt.prototype.add = function (v) {
          return new NativeBigInt(this.value + parseValue(v).value);
        };
        NativeBigInt.prototype.plus = NativeBigInt.prototype.add;
        function subtract(a, b) {
          var a_l = a.length, b_l = b.length, r = new Array(a_l), borrow = 0, base = BASE, i, difference;
          for (i = 0; i < b_l; i++) {
            difference = a[i] - borrow - b[i];
            if (difference < 0) {
              difference += base;
              borrow = 1;
            } else
              borrow = 0;
            r[i] = difference;
          }
          for (i = b_l; i < a_l; i++) {
            difference = a[i] - borrow;
            if (difference < 0)
              difference += base;
            else {
              r[i++] = difference;
              break;
            }
            r[i] = difference;
          }
          for (; i < a_l; i++) {
            r[i] = a[i];
          }
          trim(r);
          return r;
        }
        function subtractAny(a, b, sign) {
          var value;
          if (compareAbs(a, b) >= 0) {
            value = subtract(a, b);
          } else {
            value = subtract(b, a);
            sign = !sign;
          }
          value = arrayToSmall(value);
          if (typeof value === 'number') {
            if (sign)
              value = -value;
            return new SmallInteger(value);
          }
          return new BigInteger(value, sign);
        }
        function subtractSmall(a, b, sign) {
          var l = a.length, r = new Array(l), carry = -b, base = BASE, i, difference;
          for (i = 0; i < l; i++) {
            difference = a[i] + carry;
            carry = Math.floor(difference / base);
            difference %= base;
            r[i] = difference < 0 ? difference + base : difference;
          }
          r = arrayToSmall(r);
          if (typeof r === 'number') {
            if (sign)
              r = -r;
            return new SmallInteger(r);
          }
          return new BigInteger(r, sign);
        }
        BigInteger.prototype.subtract = function (v) {
          var n = parseValue(v);
          if (this.sign !== n.sign) {
            return this.add(n.negate());
          }
          var a = this.value, b = n.value;
          if (n.isSmall)
            return subtractSmall(a, Math.abs(b), this.sign);
          return subtractAny(a, b, this.sign);
        };
        BigInteger.prototype.minus = BigInteger.prototype.subtract;
        SmallInteger.prototype.subtract = function (v) {
          var n = parseValue(v);
          var a = this.value;
          if (a < 0 !== n.sign) {
            return this.add(n.negate());
          }
          var b = n.value;
          if (n.isSmall) {
            return new SmallInteger(a - b);
          }
          return subtractSmall(b, Math.abs(a), a >= 0);
        };
        SmallInteger.prototype.minus = SmallInteger.prototype.subtract;
        NativeBigInt.prototype.subtract = function (v) {
          return new NativeBigInt(this.value - parseValue(v).value);
        };
        NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;
        BigInteger.prototype.negate = function () {
          return new BigInteger(this.value, !this.sign);
        };
        SmallInteger.prototype.negate = function () {
          var sign = this.sign;
          var small = new SmallInteger(-this.value);
          small.sign = !sign;
          return small;
        };
        NativeBigInt.prototype.negate = function () {
          return new NativeBigInt(-this.value);
        };
        BigInteger.prototype.abs = function () {
          return new BigInteger(this.value, false);
        };
        SmallInteger.prototype.abs = function () {
          return new SmallInteger(Math.abs(this.value));
        };
        NativeBigInt.prototype.abs = function () {
          return new NativeBigInt(this.value >= 0 ? this.value : -this.value);
        };
        function multiplyLong(a, b) {
          var a_l = a.length, b_l = b.length, l = a_l + b_l, r = createArray(l), base = BASE, product, carry, i, a_i, b_j;
          for (i = 0; i < a_l; ++i) {
            a_i = a[i];
            for (var j = 0; j < b_l; ++j) {
              b_j = b[j];
              product = a_i * b_j + r[i + j];
              carry = Math.floor(product / base);
              r[i + j] = product - carry * base;
              r[i + j + 1] += carry;
            }
          }
          trim(r);
          return r;
        }
        function multiplySmall(a, b) {
          var l = a.length, r = new Array(l), base = BASE, carry = 0, product, i;
          for (i = 0; i < l; i++) {
            product = a[i] * b + carry;
            carry = Math.floor(product / base);
            r[i] = product - carry * base;
          }
          while (carry > 0) {
            r[i++] = carry % base;
            carry = Math.floor(carry / base);
          }
          return r;
        }
        function shiftLeft(x, n) {
          var r = [];
          while (n-- > 0)
            r.push(0);
          return r.concat(x);
        }
        function multiplyKaratsuba(x, y) {
          var n = Math.max(x.length, y.length);
          if (n <= 30)
            return multiplyLong(x, y);
          n = Math.ceil(n / 2);
          var b = x.slice(n), a = x.slice(0, n), d = y.slice(n), c = y.slice(0, n);
          var ac = multiplyKaratsuba(a, c), bd = multiplyKaratsuba(b, d), abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));
          var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));
          trim(product);
          return product;
        }
        function useKaratsuba(l1, l2) {
          return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;
        }
        BigInteger.prototype.multiply = function (v) {
          var n = parseValue(v), a = this.value, b = n.value, sign = this.sign !== n.sign, abs;
          if (n.isSmall) {
            if (b === 0)
              return Integer[0];
            if (b === 1)
              return this;
            if (b === -1)
              return this.negate();
            abs = Math.abs(b);
            if (abs < BASE) {
              return new BigInteger(multiplySmall(a, abs), sign);
            }
            b = smallToArray(abs);
          }
          if (useKaratsuba(a.length, b.length))
            return new BigInteger(multiplyKaratsuba(a, b), sign);
          return new BigInteger(multiplyLong(a, b), sign);
        };
        BigInteger.prototype.times = BigInteger.prototype.multiply;
        function multiplySmallAndArray(a, b, sign) {
          if (a < BASE) {
            return new BigInteger(multiplySmall(b, a), sign);
          }
          return new BigInteger(multiplyLong(b, smallToArray(a)), sign);
        }
        SmallInteger.prototype._multiplyBySmall = function (a) {
          if (isPrecise(a.value * this.value)) {
            return new SmallInteger(a.value * this.value);
          }
          return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);
        };
        BigInteger.prototype._multiplyBySmall = function (a) {
          if (a.value === 0)
            return Integer[0];
          if (a.value === 1)
            return this;
          if (a.value === -1)
            return this.negate();
          return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);
        };
        SmallInteger.prototype.multiply = function (v) {
          return parseValue(v)._multiplyBySmall(this);
        };
        SmallInteger.prototype.times = SmallInteger.prototype.multiply;
        NativeBigInt.prototype.multiply = function (v) {
          return new NativeBigInt(this.value * parseValue(v).value);
        };
        NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;
        function square(a) {
          var l = a.length, r = createArray(l + l), base = BASE, product, carry, i, a_i, a_j;
          for (i = 0; i < l; i++) {
            a_i = a[i];
            carry = 0 - a_i * a_i;
            for (var j = i; j < l; j++) {
              a_j = a[j];
              product = 2 * (a_i * a_j) + r[i + j] + carry;
              carry = Math.floor(product / base);
              r[i + j] = product - carry * base;
            }
            r[i + l] = carry;
          }
          trim(r);
          return r;
        }
        BigInteger.prototype.square = function () {
          return new BigInteger(square(this.value), false);
        };
        SmallInteger.prototype.square = function () {
          var value = this.value * this.value;
          if (isPrecise(value))
            return new SmallInteger(value);
          return new BigInteger(square(smallToArray(Math.abs(this.value))), false);
        };
        NativeBigInt.prototype.square = function (v) {
          return new NativeBigInt(this.value * this.value);
        };
        function divMod1(a, b) {
          var a_l = a.length, b_l = b.length, base = BASE, result = createArray(b.length), divisorMostSignificantDigit = b[b_l - 1], lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)), remainder = multiplySmall(a, lambda), divisor = multiplySmall(b, lambda), quotientDigit, shift, carry, borrow, i, l, q;
          if (remainder.length <= a_l)
            remainder.push(0);
          divisor.push(0);
          divisorMostSignificantDigit = divisor[b_l - 1];
          for (shift = a_l - b_l; shift >= 0; shift--) {
            quotientDigit = base - 1;
            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {
              quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);
            }
            carry = 0;
            borrow = 0;
            l = divisor.length;
            for (i = 0; i < l; i++) {
              carry += quotientDigit * divisor[i];
              q = Math.floor(carry / base);
              borrow += remainder[shift + i] - (carry - q * base);
              carry = q;
              if (borrow < 0) {
                remainder[shift + i] = borrow + base;
                borrow = -1;
              } else {
                remainder[shift + i] = borrow;
                borrow = 0;
              }
            }
            while (borrow !== 0) {
              quotientDigit -= 1;
              carry = 0;
              for (i = 0; i < l; i++) {
                carry += remainder[shift + i] - base + divisor[i];
                if (carry < 0) {
                  remainder[shift + i] = carry + base;
                  carry = 0;
                } else {
                  remainder[shift + i] = carry;
                  carry = 1;
                }
              }
              borrow += carry;
            }
            result[shift] = quotientDigit;
          }
          remainder = divModSmall(remainder, lambda)[0];
          return [
            arrayToSmall(result),
            arrayToSmall(remainder)
          ];
        }
        function divMod2(a, b) {
          var a_l = a.length, b_l = b.length, result = [], part = [], base = BASE, guess, xlen, highx, highy, check;
          while (a_l) {
            part.unshift(a[--a_l]);
            trim(part);
            if (compareAbs(part, b) < 0) {
              result.push(0);
              continue;
            }
            xlen = part.length;
            highx = part[xlen - 1] * base + part[xlen - 2];
            highy = b[b_l - 1] * base + b[b_l - 2];
            if (xlen > b_l) {
              highx = (highx + 1) * base;
            }
            guess = Math.ceil(highx / highy);
            do {
              check = multiplySmall(b, guess);
              if (compareAbs(check, part) <= 0)
                break;
              guess--;
            } while (guess);
            result.push(guess);
            part = subtract(part, check);
          }
          result.reverse();
          return [
            arrayToSmall(result),
            arrayToSmall(part)
          ];
        }
        function divModSmall(value, lambda) {
          var length = value.length, quotient = createArray(length), base = BASE, i, q, remainder, divisor;
          remainder = 0;
          for (i = length - 1; i >= 0; --i) {
            divisor = remainder * base + value[i];
            q = truncate(divisor / lambda);
            remainder = divisor - q * lambda;
            quotient[i] = q | 0;
          }
          return [
            quotient,
            remainder | 0
          ];
        }
        function divModAny(self, v) {
          var value, n = parseValue(v);
          if (supportsNativeBigInt) {
            return [
              new NativeBigInt(self.value / n.value),
              new NativeBigInt(self.value % n.value)
            ];
          }
          var a = self.value, b = n.value;
          var quotient;
          if (b === 0)
            throw new Error('Cannot divide by zero');
          if (self.isSmall) {
            if (n.isSmall) {
              return [
                new SmallInteger(truncate(a / b)),
                new SmallInteger(a % b)
              ];
            }
            return [
              Integer[0],
              self
            ];
          }
          if (n.isSmall) {
            if (b === 1)
              return [
                self,
                Integer[0]
              ];
            if (b == -1)
              return [
                self.negate(),
                Integer[0]
              ];
            var abs = Math.abs(b);
            if (abs < BASE) {
              value = divModSmall(a, abs);
              quotient = arrayToSmall(value[0]);
              var remainder = value[1];
              if (self.sign)
                remainder = -remainder;
              if (typeof quotient === 'number') {
                if (self.sign !== n.sign)
                  quotient = -quotient;
                return [
                  new SmallInteger(quotient),
                  new SmallInteger(remainder)
                ];
              }
              return [
                new BigInteger(quotient, self.sign !== n.sign),
                new SmallInteger(remainder)
              ];
            }
            b = smallToArray(abs);
          }
          var comparison = compareAbs(a, b);
          if (comparison === -1)
            return [
              Integer[0],
              self
            ];
          if (comparison === 0)
            return [
              Integer[self.sign === n.sign ? 1 : -1],
              Integer[0]
            ];
          if (a.length + b.length <= 200)
            value = divMod1(a, b);
          else
            value = divMod2(a, b);
          quotient = value[0];
          var qSign = self.sign !== n.sign, mod = value[1], mSign = self.sign;
          if (typeof quotient === 'number') {
            if (qSign)
              quotient = -quotient;
            quotient = new SmallInteger(quotient);
          } else
            quotient = new BigInteger(quotient, qSign);
          if (typeof mod === 'number') {
            if (mSign)
              mod = -mod;
            mod = new SmallInteger(mod);
          } else
            mod = new BigInteger(mod, mSign);
          return [
            quotient,
            mod
          ];
        }
        BigInteger.prototype.divmod = function (v) {
          var result = divModAny(this, v);
          return {
            quotient: result[0],
            remainder: result[1]
          };
        };
        NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;
        BigInteger.prototype.divide = function (v) {
          return divModAny(this, v)[0];
        };
        NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {
          return new NativeBigInt(this.value / parseValue(v).value);
        };
        SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;
        BigInteger.prototype.mod = function (v) {
          return divModAny(this, v)[1];
        };
        NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {
          return new NativeBigInt(this.value % parseValue(v).value);
        };
        SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;
        BigInteger.prototype.pow = function (v) {
          var n = parseValue(v), a = this.value, b = n.value, value, x, y;
          if (b === 0)
            return Integer[1];
          if (a === 0)
            return Integer[0];
          if (a === 1)
            return Integer[1];
          if (a === -1)
            return n.isEven() ? Integer[1] : Integer[-1];
          if (n.sign) {
            return Integer[0];
          }
          if (!n.isSmall)
            throw new Error('The exponent ' + n.toString() + ' is too large.');
          if (this.isSmall) {
            if (isPrecise(value = Math.pow(a, b)))
              return new SmallInteger(truncate(value));
          }
          x = this;
          y = Integer[1];
          while (true) {
            if (b & 1 === 1) {
              y = y.times(x);
              --b;
            }
            if (b === 0)
              break;
            b /= 2;
            x = x.square();
          }
          return y;
        };
        SmallInteger.prototype.pow = BigInteger.prototype.pow;
        NativeBigInt.prototype.pow = function (v) {
          var n = parseValue(v);
          var a = this.value, b = n.value;
          var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);
          if (b === _0)
            return Integer[1];
          if (a === _0)
            return Integer[0];
          if (a === _1)
            return Integer[1];
          if (a === BigInt(-1))
            return n.isEven() ? Integer[1] : Integer[-1];
          if (n.isNegative())
            return new NativeBigInt(_0);
          var x = this;
          var y = Integer[1];
          while (true) {
            if ((b & _1) === _1) {
              y = y.times(x);
              --b;
            }
            if (b === _0)
              break;
            b /= _2;
            x = x.square();
          }
          return y;
        };
        BigInteger.prototype.modPow = function (exp, mod) {
          exp = parseValue(exp);
          mod = parseValue(mod);
          if (mod.isZero())
            throw new Error('Cannot take modPow with modulus 0');
          var r = Integer[1], base = this.mod(mod);
          if (exp.isNegative()) {
            exp = exp.multiply(Integer[-1]);
            base = base.modInv(mod);
          }
          while (exp.isPositive()) {
            if (base.isZero())
              return Integer[0];
            if (exp.isOdd())
              r = r.multiply(base).mod(mod);
            exp = exp.divide(2);
            base = base.square().mod(mod);
          }
          return r;
        };
        NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;
        function compareAbs(a, b) {
          if (a.length !== b.length) {
            return a.length > b.length ? 1 : -1;
          }
          for (var i = a.length - 1; i >= 0; i--) {
            if (a[i] !== b[i])
              return a[i] > b[i] ? 1 : -1;
          }
          return 0;
        }
        BigInteger.prototype.compareAbs = function (v) {
          var n = parseValue(v), a = this.value, b = n.value;
          if (n.isSmall)
            return 1;
          return compareAbs(a, b);
        };
        SmallInteger.prototype.compareAbs = function (v) {
          var n = parseValue(v), a = Math.abs(this.value), b = n.value;
          if (n.isSmall) {
            b = Math.abs(b);
            return a === b ? 0 : a > b ? 1 : -1;
          }
          return -1;
        };
        NativeBigInt.prototype.compareAbs = function (v) {
          var a = this.value;
          var b = parseValue(v).value;
          a = a >= 0 ? a : -a;
          b = b >= 0 ? b : -b;
          return a === b ? 0 : a > b ? 1 : -1;
        };
        BigInteger.prototype.compare = function (v) {
          if (v === Infinity) {
            return -1;
          }
          if (v === -Infinity) {
            return 1;
          }
          var n = parseValue(v), a = this.value, b = n.value;
          if (this.sign !== n.sign) {
            return n.sign ? 1 : -1;
          }
          if (n.isSmall) {
            return this.sign ? -1 : 1;
          }
          return compareAbs(a, b) * (this.sign ? -1 : 1);
        };
        BigInteger.prototype.compareTo = BigInteger.prototype.compare;
        SmallInteger.prototype.compare = function (v) {
          if (v === Infinity) {
            return -1;
          }
          if (v === -Infinity) {
            return 1;
          }
          var n = parseValue(v), a = this.value, b = n.value;
          if (n.isSmall) {
            return a == b ? 0 : a > b ? 1 : -1;
          }
          if (a < 0 !== n.sign) {
            return a < 0 ? -1 : 1;
          }
          return a < 0 ? 1 : -1;
        };
        SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;
        NativeBigInt.prototype.compare = function (v) {
          if (v === Infinity) {
            return -1;
          }
          if (v === -Infinity) {
            return 1;
          }
          var a = this.value;
          var b = parseValue(v).value;
          return a === b ? 0 : a > b ? 1 : -1;
        };
        NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;
        BigInteger.prototype.equals = function (v) {
          return this.compare(v) === 0;
        };
        NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;
        BigInteger.prototype.notEquals = function (v) {
          return this.compare(v) !== 0;
        };
        NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;
        BigInteger.prototype.greater = function (v) {
          return this.compare(v) > 0;
        };
        NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;
        BigInteger.prototype.lesser = function (v) {
          return this.compare(v) < 0;
        };
        NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;
        BigInteger.prototype.greaterOrEquals = function (v) {
          return this.compare(v) >= 0;
        };
        NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;
        BigInteger.prototype.lesserOrEquals = function (v) {
          return this.compare(v) <= 0;
        };
        NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;
        BigInteger.prototype.isEven = function () {
          return (this.value[0] & 1) === 0;
        };
        SmallInteger.prototype.isEven = function () {
          return (this.value & 1) === 0;
        };
        NativeBigInt.prototype.isEven = function () {
          return (this.value & BigInt(1)) === BigInt(0);
        };
        BigInteger.prototype.isOdd = function () {
          return (this.value[0] & 1) === 1;
        };
        SmallInteger.prototype.isOdd = function () {
          return (this.value & 1) === 1;
        };
        NativeBigInt.prototype.isOdd = function () {
          return (this.value & BigInt(1)) === BigInt(1);
        };
        BigInteger.prototype.isPositive = function () {
          return !this.sign;
        };
        SmallInteger.prototype.isPositive = function () {
          return this.value > 0;
        };
        NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;
        BigInteger.prototype.isNegative = function () {
          return this.sign;
        };
        SmallInteger.prototype.isNegative = function () {
          return this.value < 0;
        };
        NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;
        BigInteger.prototype.isUnit = function () {
          return false;
        };
        SmallInteger.prototype.isUnit = function () {
          return Math.abs(this.value) === 1;
        };
        NativeBigInt.prototype.isUnit = function () {
          return this.abs().value === BigInt(1);
        };
        BigInteger.prototype.isZero = function () {
          return false;
        };
        SmallInteger.prototype.isZero = function () {
          return this.value === 0;
        };
        NativeBigInt.prototype.isZero = function () {
          return this.value === BigInt(0);
        };
        BigInteger.prototype.isDivisibleBy = function (v) {
          var n = parseValue(v);
          if (n.isZero())
            return false;
          if (n.isUnit())
            return true;
          if (n.compareAbs(2) === 0)
            return this.isEven();
          return this.mod(n).isZero();
        };
        NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;
        function isBasicPrime(v) {
          var n = v.abs();
          if (n.isUnit())
            return false;
          if (n.equals(2) || n.equals(3) || n.equals(5))
            return true;
          if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5))
            return false;
          if (n.lesser(49))
            return true;
        }
        function millerRabinTest(n, a) {
          var nPrev = n.prev(), b = nPrev, r = 0, d, i, x;
          while (b.isEven())
            b = b.divide(2), r++;
          next:
            for (i = 0; i < a.length; i++) {
              if (n.lesser(a[i]))
                continue;
              x = bigInt(a[i]).modPow(b, n);
              if (x.isUnit() || x.equals(nPrev))
                continue;
              for (d = r - 1; d != 0; d--) {
                x = x.square().mod(n);
                if (x.isUnit())
                  return false;
                if (x.equals(nPrev))
                  continue next;
              }
              return false;
            }
          return true;
        }
        BigInteger.prototype.isPrime = function (strict) {
          var isPrime = isBasicPrime(this);
          if (isPrime !== undefined$1)
            return isPrime;
          var n = this.abs();
          var bits = n.bitLength();
          if (bits <= 64)
            return millerRabinTest(n, [
              2,
              3,
              5,
              7,
              11,
              13,
              17,
              19,
              23,
              29,
              31,
              37
            ]);
          var logN = Math.log(2) * bits.toJSNumber();
          var t = Math.ceil(strict === true ? 2 * Math.pow(logN, 2) : logN);
          for (var a = [], i = 0; i < t; i++) {
            a.push(bigInt(i + 2));
          }
          return millerRabinTest(n, a);
        };
        NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;
        BigInteger.prototype.isProbablePrime = function (iterations, rng) {
          var isPrime = isBasicPrime(this);
          if (isPrime !== undefined$1)
            return isPrime;
          var n = this.abs();
          var t = iterations === undefined$1 ? 5 : iterations;
          for (var a = [], i = 0; i < t; i++) {
            a.push(bigInt.randBetween(2, n.minus(2), rng));
          }
          return millerRabinTest(n, a);
        };
        NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;
        BigInteger.prototype.modInv = function (n) {
          var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;
          while (!newR.isZero()) {
            q = r.divide(newR);
            lastT = t;
            lastR = r;
            t = newT;
            r = newR;
            newT = lastT.subtract(q.multiply(newT));
            newR = lastR.subtract(q.multiply(newR));
          }
          if (!r.isUnit())
            throw new Error(this.toString() + ' and ' + n.toString() + ' are not co-prime');
          if (t.compare(0) === -1) {
            t = t.add(n);
          }
          if (this.isNegative()) {
            return t.negate();
          }
          return t;
        };
        NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;
        BigInteger.prototype.next = function () {
          var value = this.value;
          if (this.sign) {
            return subtractSmall(value, 1, this.sign);
          }
          return new BigInteger(addSmall(value, 1), this.sign);
        };
        SmallInteger.prototype.next = function () {
          var value = this.value;
          if (value + 1 < MAX_INT)
            return new SmallInteger(value + 1);
          return new BigInteger(MAX_INT_ARR, false);
        };
        NativeBigInt.prototype.next = function () {
          return new NativeBigInt(this.value + BigInt(1));
        };
        BigInteger.prototype.prev = function () {
          var value = this.value;
          if (this.sign) {
            return new BigInteger(addSmall(value, 1), true);
          }
          return subtractSmall(value, 1, this.sign);
        };
        SmallInteger.prototype.prev = function () {
          var value = this.value;
          if (value - 1 > -MAX_INT)
            return new SmallInteger(value - 1);
          return new BigInteger(MAX_INT_ARR, true);
        };
        NativeBigInt.prototype.prev = function () {
          return new NativeBigInt(this.value - BigInt(1));
        };
        var powersOfTwo = [1];
        while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE)
          powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);
        var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];
        function shift_isSmall(n) {
          return Math.abs(n) <= BASE;
        }
        BigInteger.prototype.shiftLeft = function (v) {
          var n = parseValue(v).toJSNumber();
          if (!shift_isSmall(n)) {
            throw new Error(String(n) + ' is too large for shifting.');
          }
          if (n < 0)
            return this.shiftRight(-n);
          var result = this;
          if (result.isZero())
            return result;
          while (n >= powers2Length) {
            result = result.multiply(highestPower2);
            n -= powers2Length - 1;
          }
          return result.multiply(powersOfTwo[n]);
        };
        NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;
        BigInteger.prototype.shiftRight = function (v) {
          var remQuo;
          var n = parseValue(v).toJSNumber();
          if (!shift_isSmall(n)) {
            throw new Error(String(n) + ' is too large for shifting.');
          }
          if (n < 0)
            return this.shiftLeft(-n);
          var result = this;
          while (n >= powers2Length) {
            if (result.isZero() || result.isNegative() && result.isUnit())
              return result;
            remQuo = divModAny(result, highestPower2);
            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];
            n -= powers2Length - 1;
          }
          remQuo = divModAny(result, powersOfTwo[n]);
          return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];
        };
        NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;
        function bitwise(x, y, fn) {
          y = parseValue(y);
          var xSign = x.isNegative(), ySign = y.isNegative();
          var xRem = xSign ? x.not() : x, yRem = ySign ? y.not() : y;
          var xDigit = 0, yDigit = 0;
          var xDivMod = null, yDivMod = null;
          var result = [];
          while (!xRem.isZero() || !yRem.isZero()) {
            xDivMod = divModAny(xRem, highestPower2);
            xDigit = xDivMod[1].toJSNumber();
            if (xSign) {
              xDigit = highestPower2 - 1 - xDigit;
            }
            yDivMod = divModAny(yRem, highestPower2);
            yDigit = yDivMod[1].toJSNumber();
            if (ySign) {
              yDigit = highestPower2 - 1 - yDigit;
            }
            xRem = xDivMod[0];
            yRem = yDivMod[0];
            result.push(fn(xDigit, yDigit));
          }
          var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);
          for (var i = result.length - 1; i >= 0; i -= 1) {
            sum = sum.multiply(highestPower2).add(bigInt(result[i]));
          }
          return sum;
        }
        BigInteger.prototype.not = function () {
          return this.negate().prev();
        };
        NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;
        BigInteger.prototype.and = function (n) {
          return bitwise(this, n, function (a, b) {
            return a & b;
          });
        };
        NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;
        BigInteger.prototype.or = function (n) {
          return bitwise(this, n, function (a, b) {
            return a | b;
          });
        };
        NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;
        BigInteger.prototype.xor = function (n) {
          return bitwise(this, n, function (a, b) {
            return a ^ b;
          });
        };
        NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;
        var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;
        function roughLOB(n) {
          var v = n.value, x = typeof v === 'number' ? v | LOBMASK_I : typeof v === 'bigint' ? v | BigInt(LOBMASK_I) : v[0] + v[1] * BASE | LOBMASK_BI;
          return x & -x;
        }
        function integerLogarithm(value, base) {
          if (base.compareTo(value) <= 0) {
            var tmp = integerLogarithm(value, base.square(base));
            var p = tmp.p;
            var e = tmp.e;
            var t = p.multiply(base);
            return t.compareTo(value) <= 0 ? {
              p: t,
              e: e * 2 + 1
            } : {
              p: p,
              e: e * 2
            };
          }
          return {
            p: bigInt(1),
            e: 0
          };
        }
        BigInteger.prototype.bitLength = function () {
          var n = this;
          if (n.compareTo(bigInt(0)) < 0) {
            n = n.negate().subtract(bigInt(1));
          }
          if (n.compareTo(bigInt(0)) === 0) {
            return bigInt(0);
          }
          return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));
        };
        NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;
        function max(a, b) {
          a = parseValue(a);
          b = parseValue(b);
          return a.greater(b) ? a : b;
        }
        function min(a, b) {
          a = parseValue(a);
          b = parseValue(b);
          return a.lesser(b) ? a : b;
        }
        function gcd(a, b) {
          a = parseValue(a).abs();
          b = parseValue(b).abs();
          if (a.equals(b))
            return a;
          if (a.isZero())
            return b;
          if (b.isZero())
            return a;
          var c = Integer[1], d, t;
          while (a.isEven() && b.isEven()) {
            d = min(roughLOB(a), roughLOB(b));
            a = a.divide(d);
            b = b.divide(d);
            c = c.multiply(d);
          }
          while (a.isEven()) {
            a = a.divide(roughLOB(a));
          }
          do {
            while (b.isEven()) {
              b = b.divide(roughLOB(b));
            }
            if (a.greater(b)) {
              t = b;
              b = a;
              a = t;
            }
            b = b.subtract(a);
          } while (!b.isZero());
          return c.isUnit() ? a : a.multiply(c);
        }
        function lcm(a, b) {
          a = parseValue(a).abs();
          b = parseValue(b).abs();
          return a.divide(gcd(a, b)).multiply(b);
        }
        function randBetween(a, b, rng) {
          a = parseValue(a);
          b = parseValue(b);
          var usedRNG = rng || Math.random;
          var low = min(a, b), high = max(a, b);
          var range = high.subtract(low).add(1);
          if (range.isSmall)
            return low.add(Math.floor(usedRNG() * range));
          var digits = toBase(range, BASE).value;
          var result = [], restricted = true;
          for (var i = 0; i < digits.length; i++) {
            var top = restricted ? digits[i] : BASE;
            var digit = truncate(usedRNG() * top);
            result.push(digit);
            if (digit < top)
              restricted = false;
          }
          return low.add(Integer.fromArray(result, BASE, false));
        }
        var parseBase = function (text, base, alphabet, caseSensitive) {
          alphabet = alphabet || DEFAULT_ALPHABET;
          text = String(text);
          if (!caseSensitive) {
            text = text.toLowerCase();
            alphabet = alphabet.toLowerCase();
          }
          var length = text.length;
          var i;
          var absBase = Math.abs(base);
          var alphabetValues = {};
          for (i = 0; i < alphabet.length; i++) {
            alphabetValues[alphabet[i]] = i;
          }
          for (i = 0; i < length; i++) {
            var c = text[i];
            if (c === '-')
              continue;
            if (c in alphabetValues) {
              if (alphabetValues[c] >= absBase) {
                if (c === '1' && absBase === 1)
                  continue;
                throw new Error(c + ' is not a valid digit in base ' + base + '.');
              }
            }
          }
          base = parseValue(base);
          var digits = [];
          var isNegative = text[0] === '-';
          for (i = isNegative ? 1 : 0; i < text.length; i++) {
            var c = text[i];
            if (c in alphabetValues)
              digits.push(parseValue(alphabetValues[c]));
            else if (c === '<') {
              var start = i;
              do {
                i++;
              } while (text[i] !== '>' && i < text.length);
              digits.push(parseValue(text.slice(start + 1, i)));
            } else
              throw new Error(c + ' is not a valid character');
          }
          return parseBaseFromArray(digits, base, isNegative);
        };
        function parseBaseFromArray(digits, base, isNegative) {
          var val = Integer[0], pow = Integer[1], i;
          for (i = digits.length - 1; i >= 0; i--) {
            val = val.add(digits[i].times(pow));
            pow = pow.times(base);
          }
          return isNegative ? val.negate() : val;
        }
        function stringify(digit, alphabet) {
          alphabet = alphabet || DEFAULT_ALPHABET;
          if (digit < alphabet.length) {
            return alphabet[digit];
          }
          return '<' + digit + '>';
        }
        function toBase(n, base) {
          base = bigInt(base);
          if (base.isZero()) {
            if (n.isZero())
              return {
                value: [0],
                isNegative: false
              };
            throw new Error('Cannot convert nonzero numbers to base 0.');
          }
          if (base.equals(-1)) {
            if (n.isZero())
              return {
                value: [0],
                isNegative: false
              };
            if (n.isNegative())
              return {
                value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber())).map(Array.prototype.valueOf, [
                  1,
                  0
                ])),
                isNegative: false
              };
            var arr = Array.apply(null, Array(n.toJSNumber() - 1)).map(Array.prototype.valueOf, [
              0,
              1
            ]);
            arr.unshift([1]);
            return {
              value: [].concat.apply([], arr),
              isNegative: false
            };
          }
          var neg = false;
          if (n.isNegative() && base.isPositive()) {
            neg = true;
            n = n.abs();
          }
          if (base.isUnit()) {
            if (n.isZero())
              return {
                value: [0],
                isNegative: false
              };
            return {
              value: Array.apply(null, Array(n.toJSNumber())).map(Number.prototype.valueOf, 1),
              isNegative: neg
            };
          }
          var out = [];
          var left = n, divmod;
          while (left.isNegative() || left.compareAbs(base) >= 0) {
            divmod = left.divmod(base);
            left = divmod.quotient;
            var digit = divmod.remainder;
            if (digit.isNegative()) {
              digit = base.minus(digit).abs();
              left = left.next();
            }
            out.push(digit.toJSNumber());
          }
          out.push(left.toJSNumber());
          return {
            value: out.reverse(),
            isNegative: neg
          };
        }
        function toBaseString(n, base, alphabet) {
          var arr = toBase(n, base);
          return (arr.isNegative ? '-' : '') + arr.value.map(function (x) {
            return stringify(x, alphabet);
          }).join('');
        }
        BigInteger.prototype.toArray = function (radix) {
          return toBase(this, radix);
        };
        SmallInteger.prototype.toArray = function (radix) {
          return toBase(this, radix);
        };
        NativeBigInt.prototype.toArray = function (radix) {
          return toBase(this, radix);
        };
        BigInteger.prototype.toString = function (radix, alphabet) {
          if (radix === undefined$1)
            radix = 10;
          if (radix !== 10)
            return toBaseString(this, radix, alphabet);
          var v = this.value, l = v.length, str = String(v[--l]), zeros = '0000000', digit;
          while (--l >= 0) {
            digit = String(v[l]);
            str += zeros.slice(digit.length) + digit;
          }
          var sign = this.sign ? '-' : '';
          return sign + str;
        };
        SmallInteger.prototype.toString = function (radix, alphabet) {
          if (radix === undefined$1)
            radix = 10;
          if (radix != 10)
            return toBaseString(this, radix, alphabet);
          return String(this.value);
        };
        NativeBigInt.prototype.toString = SmallInteger.prototype.toString;
        NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () {
          return this.toString();
        };
        BigInteger.prototype.valueOf = function () {
          return parseInt(this.toString(), 10);
        };
        BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;
        SmallInteger.prototype.valueOf = function () {
          return this.value;
        };
        SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;
        NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {
          return parseInt(this.toString(), 10);
        };
        function parseStringValue(v) {
          if (isPrecise(+v)) {
            var x = +v;
            if (x === truncate(x))
              return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);
            throw new Error('Invalid integer: ' + v);
          }
          var sign = v[0] === '-';
          if (sign)
            v = v.slice(1);
          var split = v.split(/e/i);
          if (split.length > 2)
            throw new Error('Invalid integer: ' + split.join('e'));
          if (split.length === 2) {
            var exp = split[1];
            if (exp[0] === '+')
              exp = exp.slice(1);
            exp = +exp;
            if (exp !== truncate(exp) || !isPrecise(exp))
              throw new Error('Invalid integer: ' + exp + ' is not a valid exponent.');
            var text = split[0];
            var decimalPlace = text.indexOf('.');
            if (decimalPlace >= 0) {
              exp -= text.length - decimalPlace - 1;
              text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);
            }
            if (exp < 0)
              throw new Error('Cannot include negative exponent part for integers');
            text += new Array(exp + 1).join('0');
            v = text;
          }
          var isValid = /^([0-9][0-9]*)$/.test(v);
          if (!isValid)
            throw new Error('Invalid integer: ' + v);
          if (supportsNativeBigInt) {
            return new NativeBigInt(BigInt(sign ? '-' + v : v));
          }
          var r = [], max = v.length, l = LOG_BASE, min = max - l;
          while (max > 0) {
            r.push(+v.slice(min, max));
            min -= l;
            if (min < 0)
              min = 0;
            max -= l;
          }
          trim(r);
          return new BigInteger(r, sign);
        }
        function parseNumberValue(v) {
          if (supportsNativeBigInt) {
            return new NativeBigInt(BigInt(v));
          }
          if (isPrecise(v)) {
            if (v !== truncate(v))
              throw new Error(v + ' is not an integer.');
            return new SmallInteger(v);
          }
          return parseStringValue(v.toString());
        }
        function parseValue(v) {
          if (typeof v === 'number') {
            return parseNumberValue(v);
          }
          if (typeof v === 'string') {
            return parseStringValue(v);
          }
          if (typeof v === 'bigint') {
            return new NativeBigInt(v);
          }
          return v;
        }
        for (var i = 0; i < 1000; i++) {
          Integer[i] = parseValue(i);
          if (i > 0)
            Integer[-i] = parseValue(-i);
        }
        Integer.one = Integer[1];
        Integer.zero = Integer[0];
        Integer.minusOne = Integer[-1];
        Integer.max = max;
        Integer.min = min;
        Integer.gcd = gcd;
        Integer.lcm = lcm;
        Integer.isInstance = function (x) {
          return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt;
        };
        Integer.randBetween = randBetween;
        Integer.fromArray = function (digits, base, isNegative) {
          return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);
        };
        return Integer;
      }();
      if (module.hasOwnProperty('exports')) {
        module.exports = bigInt;
      }
    });
    var nodeSqlParser = createCommonjsModule(function (module, exports) {
      !function (r, t) {
        for (var e in t)
          r[e] = t[e];
      }(exports, function (r) {
        var t = {};
        function e(n) {
          if (t[n])
            return t[n].exports;
          var u = t[n] = {
            i: n,
            l: !1,
            exports: {}
          };
          return r[n].call(u.exports, u, u.exports, e), u.l = !0, u.exports;
        }
        return e.m = r, e.c = t, e.d = function (r, t, n) {
          e.o(r, t) || Object.defineProperty(r, t, {
            enumerable: !0,
            get: n
          });
        }, e.r = function (r) {
          'undefined' != typeof Symbol && Symbol.toStringTag && Object.defineProperty(r, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(r, '__esModule', { value: !0 });
        }, e.t = function (r, t) {
          if (1 & t && (r = e(r)), 8 & t)
            return r;
          if (4 & t && 'object' == typeof r && r && r.__esModule)
            return r;
          var n = Object.create(null);
          if (e.r(n), Object.defineProperty(n, 'default', {
              enumerable: !0,
              value: r
            }), 2 & t && 'string' != typeof r)
            for (var u in r)
              e.d(n, u, function (t) {
                return r[t];
              }.bind(null, u));
          return n;
        }, e.n = function (r) {
          var t = r && r.__esModule ? function () {
            return r.default;
          } : function () {
            return r;
          };
          return e.d(t, 'a', t), t;
        }, e.o = function (r, t) {
          return Object.prototype.hasOwnProperty.call(r, t);
        }, e.p = '', e(e.s = 9);
      }([
        function (r, t) {
          r.exports = BigInteger;
        },
        function (r, t, e) {
          var n = e(0);
          function u(r, t, e, n) {
            this.message = r, this.expected = t, this.found = e, this.location = n, this.name = 'SyntaxError', 'function' == typeof Error.captureStackTrace && Error.captureStackTrace(this, u);
          }
          !function (r, t) {
            function e() {
              this.constructor = r;
            }
            e.prototype = t.prototype, r.prototype = new e();
          }(u, Error), u.buildMessage = function (r, t) {
            var e = {
              literal: function (r) {
                return '"' + u(r.text) + '"';
              },
              class: function (r) {
                var t, e = '';
                for (t = 0; t < r.parts.length; t++)
                  e += r.parts[t] instanceof Array ? o(r.parts[t][0]) + '-' + o(r.parts[t][1]) : o(r.parts[t]);
                return '[' + (r.inverted ? '^' : '') + e + ']';
              },
              any: function (r) {
                return 'any character';
              },
              end: function (r) {
                return 'end of input';
              },
              other: function (r) {
                return r.description;
              }
            };
            function n(r) {
              return r.charCodeAt(0).toString(16).toUpperCase();
            }
            function u(r) {
              return r.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            function o(r) {
              return r.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            return 'Expected ' + function (r) {
              var t, n, u, o = new Array(r.length);
              for (t = 0; t < r.length; t++)
                o[t] = (u = r[t], e[u.type](u));
              if (o.sort(), o.length > 0) {
                for (t = 1, n = 1; t < o.length; t++)
                  o[t - 1] !== o[t] && (o[n] = o[t], n++);
                o.length = n;
              }
              switch (o.length) {
              case 1:
                return o[0];
              case 2:
                return o[0] + ' or ' + o[1];
              default:
                return o.slice(0, -1).join(', ') + ', or ' + o[o.length - 1];
              }
            }(r) + ' but ' + function (r) {
              return r ? '"' + u(r) + '"' : 'end of input';
            }(t) + ' found.';
          }, r.exports = {
            SyntaxError: u,
            parse: function (r, t) {
              t = void 0 !== t ? t : {};
              var e, o = {}, s = { start: Ee }, a = Ee, i = be('(', !1), c = be(')', !1), l = be('INTERSECT', !0), f = be('EXCEPT', !0), v = function (r, t) {
                  return hu(r, t);
                }, b = be('FOR', !0), d = be('SYSTEM_TIME', !0), L = be('AS', !0), C = be('OF', !0), p = be('REPLACE', !0), w = be('UNNEST', !0), E = be('RANGE', !0), h = be('UNBOUNDED', !0), A = be('PRECEDING', !0), y = be('CURRENT', !0), T = be('ROW', !1), m = be('ROWS', !0), S = be('FOLLOWING', !0), I = function (r, t) {
                  return Au(r, t);
                }, N = be('!', !1), R = be('=', !1), _ = function (r) {
                  return r[0] + ' ' + r[2];
                }, g = be('>=', !1), O = be('>', !1), U = be('<=', !1), x = be('<>', !1), M = be('<', !1), D = be('!=', !1), k = be('+', !1), $ = be('-', !1), F = be('*', !1), P = be('/', !1), H = be('%', !1), G = function (r) {
                  return !0 === Lu[r.toUpperCase()];
                }, j = be('"', !1), Y = /^[^"]/, B = de(['"'], !0, !1), X = function (r) {
                  return r.join('');
                }, W = be('\'', !1), V = /^[^']/, K = de(['\''], !0, !1), q = be('`', !1), Z = /^[^`]/, z = de(['`'], !0, !1), J = function (r, t) {
                  return r + t.join('');
                }, Q = /^[A-Za-z_]/, rr = de([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  '_'
                ], !1, !1), tr = /^[A-Za-z0-9_]/, er = de([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_'
                ], !1, !1), nr = /^[A-Za-z0-9_:]/, ur = de([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_',
                  ':'
                ], !1, !1), or = be(':', !1), sr = function (r) {
                  return {
                    type: 'string',
                    value: r[1].join('')
                  };
                }, ar = be('ON UPDATE CURRENT_TIMESTAMP', !0), ir = /^[^"\\\0-\x1F\x7F]/, cr = de([
                  '"',
                  '\\',
                  [
                    '\0',
                    '\x1F'
                  ],
                  '\x7F'
                ], !0, !1), lr = /^[^'\\]/, fr = de([
                  '\'',
                  '\\'
                ], !0, !1), vr = be('\\\'', !1), br = be('\\"', !1), dr = be('\\\\', !1), Lr = be('\\/', !1), Cr = be('\\b', !1), pr = be('\\f', !1), wr = be('\\n', !1), Er = be('\\r', !1), hr = be('\\t', !1), Ar = be('\\u', !1), yr = be('\\', !1), Tr = /^[\n\r]/, mr = de([
                  '\n',
                  '\r'
                ], !1, !1), Sr = be('.', !1), Ir = /^[0-9]/, Nr = de([[
                    '0',
                    '9'
                  ]], !1, !1), Rr = /^[0-9a-fA-F]/, _r = de([
                  [
                    '0',
                    '9'
                  ],
                  [
                    'a',
                    'f'
                  ],
                  [
                    'A',
                    'F'
                  ]
                ], !1, !1), gr = /^[eE]/, Or = de([
                  'e',
                  'E'
                ], !1, !1), Ur = /^[+\-]/, xr = de([
                  '+',
                  '-'
                ], !1, !1), Mr = be('NULL', !0), Dr = be('TRUE', !0), kr = be('FALSE', !0), $r = be('SELECT', !0), Fr = be('PARTITION', !0), Pr = be('FROM', !0), Hr = be('ON', !0), Gr = be('LEFT', !0), jr = be('RIGHT', !0), Yr = be('FULL', !0), Br = be('INNER', !0), Xr = be('CROSS', !0), Wr = be('JOIN', !0), Vr = be('OUTER', !0), Kr = be('OVER', !0), qr = be('UNION', !0), Zr = be('VALUE', !0), zr = be('USING', !0), Jr = be('WHERE', !0), Qr = be('WITH', !0), rt = be('GROUP', !0), tt = be('BY', !0), et = be('ORDER', !0), nt = be('HAVING', !0), ut = be('WINDOW', !0), ot = be('LIMIT', !0), st = be('OFFSET', !0), at = be('ASC', !0), it = be('DESC', !0), ct = be('ALL', !0), lt = be('DISTINCT', !0), ft = be('BETWEEN', !0), vt = be('IN', !0), bt = be('IS', !0), dt = be('LIKE', !0), Lt = be('EXISTS', !0), Ct = be('NOT', !0), pt = be('AND', !0), wt = be('OR', !0), Et = be('COUNT', !0), ht = be('MAX', !0), At = be('MIN', !0), yt = be('SUM', !0), Tt = be('AVG', !0), mt = be('ARRAY', !0), St = be('BYTES', !0), It = be('BOOL', !0), Nt = be('GEOGRAPHY', !0), Rt = be('NUMERIC', !0), _t = be('INT64', !0), gt = be('STRING', !0), Ot = be('STRUCT', !0), Ut = be('FLOAT64', !0), xt = be('DATE', !0), Mt = be('DATETIME', !0), Dt = be('TIME', !0), kt = be('TIMESTAMP', !0), $t = be('CURRENT_DATE', !0), Ft = be('INTERVAL', !0), Pt = be('YEAR', !0), Ht = be('MONTH', !0), Gt = be('DAY', !0), jt = be('HOUR', !0), Yt = be('MINUTE', !0), Bt = be('SECOND', !0), Xt = be('CURRENT_TIME', !0), Wt = be('CURRENT_TIMESTAMP', !0), Vt = be(',', !1), Kt = be('[', !1), qt = be(']', !1), Zt = be(';', !1), zt = be('||', !1), Jt = be('&&', !1), Qt = be('/*', !1), re = be('*/', !1), te = be('--', !1), ee = be('#', !1), ne = { type: 'any' }, ue = /^[ \t\n\r]/, oe = de([
                  ' ',
                  '\t',
                  '\n',
                  '\r'
                ], !1, !1), se = function (r) {
                  return { dataType: r };
                }, ae = function (r, t) {
                  return {
                    dataType: r,
                    definition: t,
                    anglebracket: !0
                  };
                }, ie = 0, ce = [{
                    line: 1,
                    column: 1
                  }], le = 0, fe = [], ve = 0;
              if ('startRule' in t) {
                if (!(t.startRule in s))
                  throw new Error('Can\'t start parsing from rule "' + t.startRule + '".');
                a = s[t.startRule];
              }
              function be(r, t) {
                return {
                  type: 'literal',
                  text: r,
                  ignoreCase: t
                };
              }
              function de(r, t, e) {
                return {
                  type: 'class',
                  parts: r,
                  inverted: t,
                  ignoreCase: e
                };
              }
              function Le(t) {
                var e, n = ce[t];
                if (n)
                  return n;
                for (e = t - 1; !ce[e];)
                  e--;
                for (n = {
                    line: (n = ce[e]).line,
                    column: n.column
                  }; e < t;)
                  10 === r.charCodeAt(e) ? (n.line++, n.column = 1) : n.column++, e++;
                return ce[t] = n, n;
              }
              function Ce(r, t) {
                var e = Le(r), n = Le(t);
                return {
                  start: {
                    offset: r,
                    line: e.line,
                    column: e.column
                  },
                  end: {
                    offset: t,
                    line: n.line,
                    column: n.column
                  }
                };
              }
              function pe(r) {
                ie < le || (ie > le && (le = ie, fe = []), fe.push(r));
              }
              function we(r, t, e) {
                return new u(u.buildMessage(r, t), r, t, e);
              }
              function Ee() {
                var r, t;
                return r = ie, ou() !== o ? ((t = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = ie, (t = he()) !== o) {
                    if (e = [], n = ie, (u = ou()) !== o && (s = nu()) !== o && (a = ou()) !== o && (i = he()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (ie = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = ie, (u = ou()) !== o && (s = nu()) !== o && (a = ou()) !== o && (i = he()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (ie = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = function (r, t) {
                      const e = [r && r.ast || r];
                      for (let r = 0; r < t.length; r++)
                        t[r][3] && 0 !== t[r][3].length && e.push(t[r][3] && t[r][3].ast || t[r][3]);
                      return {
                        tableList: Array.from(mu),
                        columnList: Tu(Su),
                        ast: e
                      };
                    }(t, e), r = t) : (ie = r, r = o);
                  } else
                    ie = r, r = o;
                  return r;
                }()) === o && (t = he()), t !== o ? r = t : (ie = r, r = o)) : (ie = r, r = o), r;
              }
              function he() {
                var t, e, n, u, s, a, l;
                return (t = function () {
                  var t, e, n, u, s, a;
                  t = ie, (e = function () {
                    var r, t, e, n, u, s, a, i, c;
                    if (r = ie, (t = _n()) !== o)
                      if (ou() !== o)
                        if ((e = Se()) !== o) {
                          for (n = [], u = ie, (s = ou()) !== o && (a = qn()) !== o && (i = ou()) !== o && (c = Se()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (ie = u, u = o); u !== o;)
                            n.push(u), u = ie, (s = ou()) !== o && (a = qn()) !== o && (i = ou()) !== o && (c = Se()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (ie = u, u = o);
                          n !== o ? (t = v(e, n), r = t) : (ie = r, r = o);
                        } else
                          ie = r, r = o;
                      else
                        ie = r, r = o;
                    else
                      ie = r, r = o;
                    return r;
                  }()) === o && (e = null);
                  e !== o && ou() !== o && (n = ye()) !== o && ou() !== o ? ((u = Fe()) === o && (u = null), u !== o && ou() !== o ? ((s = function () {
                    var t, e, n, u, s, a, i;
                    t = ie, (e = function () {
                      var t, e, n, u;
                      t = ie, 'limit' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(ot));
                      e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                        e,
                        n
                      ] : (ie = t, t = o)) : (ie = t, t = o);
                      return t;
                    }()) !== o && ou() !== o && (n = He()) !== o && ou() !== o ? (u = ie, (s = qn()) === o && (s = On()), s !== o && (a = ou()) !== o && (i = He()) !== o ? u = s = [
                      s,
                      a,
                      i
                    ] : (ie = u, u = o), u === o && (u = null), u !== o ? (e = function (r, t) {
                      const e = [r];
                      return t && e.push(t[2]), {
                        seperator: t && t[0] && t[0].toLowerCase() || '',
                        value: e
                      };
                    }(n, u), t = e) : (ie = t, t = o)) : (ie = t, t = o);
                    return t;
                  }()) === o && (s = null), s !== o && ou() !== o ? ((a = nu()) === o && (a = null), a !== o ? (i = e, c = n, l = u, f = s, e = {
                    tableList: Array.from(mu),
                    columnList: Tu(Su),
                    ast: {
                      type: 'bigquery',
                      with: i,
                      select: c && c.ast,
                      orderby: l,
                      limit: f,
                      parentheses: c && c.parentheses
                    }
                  }, t = e) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o);
                  var i, c, l, f;
                  return t;
                }()) === o && (t = ie, e = ie, 40 === r.charCodeAt(ie) ? (n = '(', ie++) : (n = o, 0 === ve && pe(i)), n !== o && (u = ou()) !== o && (s = me()) !== o && (a = ou()) !== o ? (41 === r.charCodeAt(ie) ? (l = ')', ie++) : (l = o, 0 === ve && pe(c)), l !== o ? e = n = [
                  n,
                  u,
                  s,
                  a,
                  l
                ] : (ie = e, e = o)) : (ie = e, e = o), e !== o && (e = {
                  ...e[2],
                  parentheses: !0
                }), t = e), t;
              }
              function Ae() {
                var t, e, n, u;
                return t = ie, (e = function () {
                  var t, e, n, u;
                  t = ie, 'union' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(qr));
                  e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ie = t, t = o)) : (ie = t, t = o);
                  return t;
                }()) !== o && ou() !== o ? ((n = Un()) === o && (n = xn()), n === o && (n = null), n !== o ? t = e = (u = n) ? 'union ' + u.toLowerCase() : 'union' : (ie = t, t = o)) : (ie = t, t = o), t === o && (t = ie, 'intersect' === r.substr(ie, 9).toLowerCase() ? (e = r.substr(ie, 9), ie += 9) : (e = o, 0 === ve && pe(l)), e === o && ('except' === r.substr(ie, 6).toLowerCase() ? (e = r.substr(ie, 6), ie += 6) : (e = o, 0 === ve && pe(f))), e !== o && ou() !== o && (n = xn()) !== o ? t = e = function (r, t) {
                  return `${ r.toLowerCase() } ${ t.toLowerCase() }`;
                }(e, n) : (ie = t, t = o)), t;
              }
              function ye() {
                var t, e, n, u, s, a, l;
                return (t = Te()) === o && (t = ie, e = ie, 40 === r.charCodeAt(ie) ? (n = '(', ie++) : (n = o, 0 === ve && pe(i)), n !== o && (u = ou()) !== o && (s = Te()) !== o && (a = ou()) !== o ? (41 === r.charCodeAt(ie) ? (l = ')', ie++) : (l = o, 0 === ve && pe(c)), l !== o ? e = n = [
                  n,
                  u,
                  s,
                  a,
                  l
                ] : (ie = e, e = o)) : (ie = e, e = o), e !== o && (e = {
                  ...e[2],
                  parentheses: !0
                }), t = e), t;
              }
              function Te() {
                var r, t, e, n, u, s, a, i;
                if (r = ie, (t = me()) !== o) {
                  for (e = [], n = ie, (u = ou()) !== o ? ((s = Ae()) === o && (s = null), s !== o && (a = ou()) !== o && (i = me()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ie = n, n = o)) : (ie = n, n = o); n !== o;)
                    e.push(n), n = ie, (u = ou()) !== o ? ((s = Ae()) === o && (s = null), s !== o && (a = ou()) !== o && (i = me()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ie = n, n = o)) : (ie = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    let e = r;
                    for (let r = 0; r < t.length; r++)
                      e._next = t[r][3], e.union = t[r][1], e = e._next;
                    return {
                      tableList: Array.from(mu),
                      columnList: Tu(Su),
                      ast: r
                    };
                  }(t, e) : (ie = r, r = o);
                } else
                  ie = r, r = o;
                return r;
              }
              function me() {
                var t, e, n, u, s, a, l;
                return (t = function () {
                  var t, e, n, u, s, a, i, c, l, f, p;
                  t = ie, (e = function () {
                    var t, e, n, u;
                    t = ie, 'select' === r.substr(ie, 6).toLowerCase() ? (e = r.substr(ie, 6), ie += 6) : (e = o, 0 === ve && pe($r));
                    e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ie = t, t = o)) : (ie = t, t = o);
                    return t;
                  }()) !== o && ou() !== o ? ((n = function () {
                    var t, e, n;
                    t = ie, (e = Sn()) !== o && ou() !== o ? ((n = Yn()) === o && (n = function () {
                      var t, e, n, u;
                      t = ie, 'value' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(Zr));
                      e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'VALUE' : (ie = t, t = o)) : (ie = t, t = o);
                      return t;
                    }()), n !== o ? (u = n, e = `${ e[0].toLowerCase() } ${ u.toLowerCase() }`, t = e) : (ie = t, t = o)) : (ie = t, t = o);
                    var u;
                    return t;
                  }()) === o && (n = null), n !== o && ou() !== o ? ((u = Un()) === o && (u = xn()), u === o && (u = null), u !== o && ou() !== o && (s = Ie()) !== o && ou() !== o ? ((a = function () {
                    var t, e, n, u, s;
                    t = ie, mn() !== o && ou() !== o ? ('unnest' === r.substr(ie, 6).toLowerCase() ? (e = r.substr(ie, 6), ie += 6) : (e = o, 0 === ve && pe(w)), e !== o && ou() !== o && zn() !== o && ou() !== o ? ((n = je()) === o && (n = null), n !== o && ou() !== o && Jn() !== o && ou() !== o ? ((u = _e()) === o && (u = null), u !== o && ou() !== o ? ((s = function () {
                      var r, t;
                      r = ie, _n() !== o && ou() !== o && On() !== o && ou() !== o ? ((t = _e()) === o && (t = null), t !== o ? r = {
                        keyword: 'with offset as',
                        as: t
                      } : (ie = r, r = o)) : (ie = r, r = o);
                      return r;
                    }()) === o && (s = null), s !== o ? t = {
                      type: 'unnest',
                      expr: n,
                      parentheses: !0,
                      as: u,
                      with_offset: s
                    } : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o);
                    t === o && (t = ie, mn() !== o && ou() !== o && (e = function () {
                      var r, t, e, n;
                      if (r = ie, (t = Oe()) !== o) {
                        for (e = [], n = ge(); n !== o;)
                          e.push(n), n = ge();
                        e !== o ? (u = t, (s = e).unshift(u), s.forEach(r => {
                          const {
                            table: t,
                            as: e
                          } = r;
                          Iu[t] = t, e && (Iu[e] = t);
                        }), r = t = s) : (ie = r, r = o);
                      } else
                        ie = r, r = o;
                      var u, s;
                      return r;
                    }()) !== o ? t = e : (ie = t, t = o));
                    return t;
                  }()) === o && (a = null), a !== o && ou() !== o ? ((i = function () {
                    var t, e, n, u, s, a;
                    t = ie, 'for' === r.substr(ie, 3).toLowerCase() ? (e = r.substr(ie, 3), ie += 3) : (e = o, 0 === ve && pe(b));
                    e !== o && ou() !== o ? ('system_time' === r.substr(ie, 11).toLowerCase() ? (n = r.substr(ie, 11), ie += 11) : (n = o, 0 === ve && pe(d)), n !== o && ou() !== o ? ('as' === r.substr(ie, 2).toLowerCase() ? (u = r.substr(ie, 2), ie += 2) : (u = o, 0 === ve && pe(L)), u !== o && ou() !== o ? ('of' === r.substr(ie, 2).toLowerCase() ? (s = r.substr(ie, 2), ie += 2) : (s = o, 0 === ve && pe(C)), s !== o && ou() !== o && (a = je()) !== o ? t = e = {
                      keyword: 'for system_time as of',
                      expr: a
                    } : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o);
                    return t;
                  }()) === o && (i = null), i !== o && ou() !== o ? ((c = function () {
                    var t, e;
                    t = ie, function () {
                      var t, e, n, u;
                      t = ie, 'where' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(Jr));
                      e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                        e,
                        n
                      ] : (ie = t, t = o)) : (ie = t, t = o);
                      return t;
                    }() !== o && ou() !== o && (e = je()) !== o ? t = e : (ie = t, t = o);
                    return t;
                  }()) === o && (c = null), c !== o && ou() !== o ? ((l = function () {
                    var t, e, n;
                    t = ie, (e = function () {
                      var t, e, n, u;
                      t = ie, 'group' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(rt));
                      e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                        e,
                        n
                      ] : (ie = t, t = o)) : (ie = t, t = o);
                      return t;
                    }()) !== o && ou() !== o && gn() !== o && ou() !== o && (n = Ge()) !== o ? (e = n.value, t = e) : (ie = t, t = o);
                    return t;
                  }()) === o && (l = null), l !== o && ou() !== o ? ((f = function () {
                    var t, e;
                    t = ie, function () {
                      var t, e, n, u;
                      t = ie, 'having' === r.substr(ie, 6).toLowerCase() ? (e = r.substr(ie, 6), ie += 6) : (e = o, 0 === ve && pe(nt));
                      e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                        e,
                        n
                      ] : (ie = t, t = o)) : (ie = t, t = o);
                      return t;
                    }() !== o && ou() !== o && (e = je()) !== o ? t = e : (ie = t, t = o);
                    return t;
                  }()) === o && (f = null), f !== o && ou() !== o ? ((p = function () {
                    var t, e;
                    t = ie, function () {
                      var t, e, n, u;
                      t = ie, 'window' === r.substr(ie, 6).toLowerCase() ? (e = r.substr(ie, 6), ie += 6) : (e = o, 0 === ve && pe(ut));
                      e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                        e,
                        n
                      ] : (ie = t, t = o)) : (ie = t, t = o);
                      return t;
                    }() !== o && ou() !== o && (e = function () {
                      var r, t, e, n, u, s, a, i;
                      if (r = ie, (t = De()) !== o) {
                        for (e = [], n = ie, (u = ou()) !== o && (s = qn()) !== o && (a = ou()) !== o && (i = De()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (ie = n, n = o); n !== o;)
                          e.push(n), n = ie, (u = ou()) !== o && (s = qn()) !== o && (a = ou()) !== o && (i = De()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (ie = n, n = o);
                        e !== o ? (t = v(t, e), r = t) : (ie = r, r = o);
                      } else
                        ie = r, r = o;
                      return r;
                    }()) !== o ? t = {
                      keyword: 'window',
                      type: 'window',
                      expr: e
                    } : (ie = t, t = o);
                    return t;
                  }()) === o && (p = null), p !== o ? (e = function (r, t, e, n, u, o, s, a, i) {
                    return Array.isArray(n) && n.forEach(r => r.table && mu.add(`select::${ r.db }::${ r.table }`)), {
                      type: 'select',
                      as_struct_val: r,
                      distinct: t,
                      columns: e,
                      from: n,
                      for_sys_time_as_of: u,
                      where: o,
                      groupby: s,
                      having: a,
                      window: i
                    };
                  }(n, u, s, a, i, c, l, f, p), t = e) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o);
                  return t;
                }()) === o && (t = ie, e = ie, 40 === r.charCodeAt(ie) ? (n = '(', ie++) : (n = o, 0 === ve && pe(i)), n !== o && (u = ou()) !== o && (s = me()) !== o && (a = ou()) !== o ? (41 === r.charCodeAt(ie) ? (l = ')', ie++) : (l = o, 0 === ve && pe(c)), l !== o ? e = n = [
                  n,
                  u,
                  s,
                  a,
                  l
                ] : (ie = e, e = o)) : (ie = e, e = o), e !== o && (e = {
                  ...e[2],
                  parentheses_symbol: !0
                }), t = e), t;
              }
              function Se() {
                var r, t, e;
                return r = ie, (t = on()) !== o && ou() !== o && Sn() !== o && ou() !== o && zn() !== o && ou() !== o && (e = ye()) !== o && ou() !== o && Jn() !== o ? r = t = {
                  name: t,
                  stmt: e
                } : (ie = r, r = o), r;
              }
              function Ie() {
                var t, e, n, u, s, a, i, c, l, v, b, d;
                if (t = ie, (e = Zn()) !== o && (n = ou()) !== o ? ('except' === r.substr(ie, 6).toLowerCase() ? (u = r.substr(ie, 6), ie += 6) : (u = o, 0 === ve && pe(f)), u === o && ('replace' === r.substr(ie, 7).toLowerCase() ? (u = r.substr(ie, 7), ie += 7) : (u = o, 0 === ve && pe(p))), u !== o && (s = ou()) !== o && (a = zn()) !== o && (i = ou()) !== o && (c = Ne()) !== o && ou() !== o && Jn() !== o ? (l = u, v = c, Su.add('select::null::(.*)'), t = e = {
                    expr_list: v,
                    parentheses: !0,
                    star: '*',
                    type: l.toLowerCase()
                  }) : (ie = t, t = o)) : (ie = t, t = o), t === o) {
                  if (t = ie, (e = Un()) === o && (e = ie, (n = Zn()) !== o ? (u = ie, ve++, s = sn(), ve--, s === o ? u = void 0 : (ie = u, u = o), u !== o ? e = n = [
                      n,
                      u
                    ] : (ie = e, e = o)) : (ie = e, e = o), e === o && (e = Zn())), e !== o) {
                    for (n = [], u = ie, (s = ou()) !== o && (a = qn()) !== o && (i = ou()) !== o && (c = Re()) !== o ? u = s = [
                        s,
                        a,
                        i,
                        c
                      ] : (ie = u, u = o); u !== o;)
                      n.push(u), u = ie, (s = ou()) !== o && (a = qn()) !== o && (i = ou()) !== o && (c = Re()) !== o ? u = s = [
                        s,
                        a,
                        i,
                        c
                      ] : (ie = u, u = o);
                    n !== o && (u = ou()) !== o ? ((s = qn()) === o && (s = null), s !== o ? (b = e, d = n, Su.add('select::null::(.*)'), t = e = d && d.length > 0 ? (b[0] = {
                      expr: {
                        type: 'column_ref',
                        table: null,
                        column: '*'
                      },
                      as: null
                    }, hu(b[0], d)) : b[0]) : (ie = t, t = o)) : (ie = t, t = o);
                  } else
                    ie = t, t = o;
                  t === o && (t = ie, (e = Ne()) !== o && (n = ou()) !== o ? ((u = qn()) === o && (u = null), u !== o ? t = e = e : (ie = t, t = o)) : (ie = t, t = o));
                }
                return t;
              }
              function Ne() {
                var r, t, e, n, u, s, a, i;
                if (r = ie, (t = Re()) !== o) {
                  for (e = [], n = ie, (u = ou()) !== o && (s = qn()) !== o && (a = ou()) !== o && (i = Re()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ie = n, n = o); n !== o;)
                    e.push(n), n = ie, (u = ou()) !== o && (s = qn()) !== o && (a = ou()) !== o && (i = Re()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ie = n, n = o);
                  e !== o ? r = t = v(t, e) : (ie = r, r = o);
                } else
                  ie = r, r = o;
                return r;
              }
              function Re() {
                var r, t, e, n, u, s, a, i;
                return r = ie, (t = tn()) !== o && ou() !== o && Kn() !== o ? (e = ie, (n = function () {
                  var r, t, e;
                  return r = ie, (t = tn()) !== o && ou() !== o && tu() !== o && ou() !== o && On() !== o && ou() !== o && zn() !== o && ou() !== o && (e = pn()) !== o && ou() !== o && Jn() !== o && ou() !== o && eu() !== o ? r = t = `${ t }[offset(${ e.value })]` : (ie = r, r = o), r === o && (r = tn()), r;
                }()) !== o && (u = ou()) !== o && (s = Kn()) !== o ? e = n = [
                  n,
                  u,
                  s
                ] : (ie = e, e = o), e === o && (e = null), e !== o && (n = ou()) !== o && (u = Zn()) !== o ? (a = t, i = e, Su.add(`select::${ a }::(.*)`), i && (a = `${ a }.${ i[0] }`), r = t = {
                  expr: {
                    type: 'column_ref',
                    table: a,
                    column: '*'
                  },
                  as: null
                }) : (ie = r, r = o)) : (ie = r, r = o), r === o && (r = function () {
                  var r, t, e;
                  return r = ie, (t = je()) !== o && ou() !== o ? ((e = _e()) === o && (e = null), e !== o ? r = t = {
                    expr: t,
                    as: e
                  } : (ie = r, r = o)) : (ie = r, r = o), r;
                }()), r;
              }
              function _e() {
                var r, t, e;
                return r = ie, (t = Sn()) !== o && ou() !== o && (e = function () {
                  var r, t;
                  r = ie, (t = on()) !== o ? (function (r) {
                    if (!0 === Lu[r.toUpperCase()])
                      throw new Error('Error: ' + JSON.stringify(r) + ' is a reserved word, can not as alias clause');
                    return !1;
                  }(t) ? o : void 0) !== o ? r = t = t : (ie = r, r = o) : (ie = r, r = o);
                  r === o && (r = ie, (t = en()) !== o && (t = t), r = t);
                  return r;
                }()) !== o ? r = t = e : (ie = r, r = o), r === o && (r = ie, (t = Sn()) === o && (t = null), t !== o && ou() !== o && (e = tn()) !== o ? r = t = e : (ie = r, r = o)), r;
              }
              function ge() {
                var t, e, n;
                return t = ie, ou() !== o && (e = qn()) !== o && ou() !== o && (n = Oe()) !== o ? t = n : (ie = t, t = o), t === o && (t = ie, ou() !== o && (e = function () {
                  var t, e, n, u, s, a, i, c, l, f, v;
                  if (t = ie, (e = Ue()) !== o)
                    if (ou() !== o)
                      if ((n = Oe()) !== o)
                        if (ou() !== o)
                          if ((u = function () {
                              var t, e, n, u;
                              t = ie, 'using' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(zr));
                              e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                                e,
                                n
                              ] : (ie = t, t = o)) : (ie = t, t = o);
                              return t;
                            }()) !== o)
                            if (ou() !== o)
                              if (zn() !== o)
                                if (ou() !== o)
                                  if ((s = on()) !== o) {
                                    for (a = [], i = ie, (c = ou()) !== o && (l = qn()) !== o && (f = ou()) !== o && (v = on()) !== o ? i = c = [
                                        c,
                                        l,
                                        f,
                                        v
                                      ] : (ie = i, i = o); i !== o;)
                                      a.push(i), i = ie, (c = ou()) !== o && (l = qn()) !== o && (f = ou()) !== o && (v = on()) !== o ? i = c = [
                                        c,
                                        l,
                                        f,
                                        v
                                      ] : (ie = i, i = o);
                                    a !== o && (i = ou()) !== o && (c = Jn()) !== o ? (b = e, L = s, C = a, (d = n).join = b, d.using = hu(L, C), t = e = d) : (ie = t, t = o);
                                  } else
                                    ie = t, t = o;
                                else
                                  ie = t, t = o;
                              else
                                ie = t, t = o;
                            else
                              ie = t, t = o;
                          else
                            ie = t, t = o;
                        else
                          ie = t, t = o;
                      else
                        ie = t, t = o;
                    else
                      ie = t, t = o;
                  else
                    ie = t, t = o;
                  var b, d, L, C;
                  t === o && (t = ie, (e = Ue()) !== o && ou() !== o && (n = Oe()) !== o && ou() !== o ? ((u = Me()) === o && (u = null), u !== o ? (e = function (r, t, e) {
                    return t.join = r, t.on = e, t;
                  }(e, n, u), t = e) : (ie = t, t = o)) : (ie = t, t = o), t === o && (t = ie, (e = Ue()) !== o && ou() !== o && (n = zn()) !== o && ou() !== o && (u = ye()) !== o && ou() !== o && Jn() !== o && ou() !== o ? ((s = _e()) === o && (s = null), s !== o && (a = ou()) !== o ? ((i = Me()) === o && (i = null), i !== o ? (e = function (r, t, e, n) {
                    return t.parentheses = !0, {
                      expr: t,
                      as: e,
                      join: r,
                      on: n
                    };
                  }(e, u, s, i), t = e) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o)));
                  return t;
                }()) !== o ? t = e : (ie = t, t = o)), t;
              }
              function Oe() {
                var r, t, e, n, u, s;
                return r = ie, (t = xe()) !== o && ou() !== o ? ((e = _e()) === o && (e = null), e !== o ? (s = e, r = t = 'var' === (u = t).type ? (u.as = s, u) : {
                  db: u.db,
                  table: u.table,
                  as: s
                }) : (ie = r, r = o)) : (ie = r, r = o), r === o && (r = ie, (t = zn()) !== o && ou() !== o && (e = ye()) !== o && ou() !== o && Jn() !== o && ou() !== o ? ((n = _e()) === o && (n = null), n !== o ? r = t = function (r, t) {
                  return r.parentheses = !0, {
                    expr: r,
                    as: t
                  };
                }(e, n) : (ie = r, r = o)) : (ie = r, r = o)), r;
              }
              function Ue() {
                var t, e, n;
                return t = ie, (e = function () {
                  var t, e, n, u;
                  t = ie, 'left' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(Gr));
                  e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ie = t, t = o)) : (ie = t, t = o);
                  return t;
                }()) !== o && ou() !== o ? ((n = Nn()) === o && (n = null), n !== o && ou() !== o && In() !== o ? t = e = 'LEFT JOIN' : (ie = t, t = o)) : (ie = t, t = o), t === o && (t = ie, (e = function () {
                  var t, e, n, u;
                  t = ie, 'right' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(jr));
                  e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ie = t, t = o)) : (ie = t, t = o);
                  return t;
                }()) !== o && ou() !== o ? ((n = Nn()) === o && (n = null), n !== o && ou() !== o && In() !== o ? t = e = 'RIGHT JOIN' : (ie = t, t = o)) : (ie = t, t = o), t === o && (t = ie, (e = function () {
                  var t, e, n, u;
                  t = ie, 'full' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(Yr));
                  e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ie = t, t = o)) : (ie = t, t = o);
                  return t;
                }()) !== o && ou() !== o ? ((n = Nn()) === o && (n = null), n !== o && ou() !== o && In() !== o ? t = e = 'FULL JOIN' : (ie = t, t = o)) : (ie = t, t = o), t === o && (t = ie, (e = function () {
                  var t, e, n, u;
                  t = ie, 'inner' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(Br));
                  e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ie = t, t = o)) : (ie = t, t = o);
                  return t;
                }()) === o && (e = function () {
                  var t, e, n, u;
                  t = ie, 'cross' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(Xr));
                  e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ie = t, t = o)) : (ie = t, t = o);
                  return t;
                }()), e !== o && ou() !== o && (n = In()) !== o ? t = e = e[0].toUpperCase() + ' JOIN' : (ie = t, t = o)))), t;
              }
              function xe() {
                var r, t, e, n, u, s, a, i;
                return r = ie, (t = tn()) !== o ? (e = ie, (n = ou()) !== o && (u = Kn()) !== o && (s = ou()) !== o && (a = tn()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (ie = e, e = o), e !== o ? (n = ie, (u = ou()) !== o && (s = Kn()) !== o && (a = ou()) !== o && (i = tn()) !== o ? n = u = [
                  u,
                  s,
                  a,
                  i
                ] : (ie = n, n = o), n !== o ? r = t = function (r, t, e) {
                  const n = {
                    db: null,
                    table: r
                  };
                  return null !== e && (n.db = `${ r }.${ t[3] }`, n.table = e[3]), n;
                }(t, e, n) : (ie = r, r = o)) : (ie = r, r = o)) : (ie = r, r = o), r === o && (r = ie, (t = tn()) !== o ? (e = ie, (n = ou()) !== o && (u = Kn()) !== o && (s = ou()) !== o && (a = tn()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (ie = e, e = o), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  const e = {
                    db: null,
                    table: r
                  };
                  return null !== t && (e.db = r, e.table = t[3]), e;
                }(t, e) : (ie = r, r = o)) : (ie = r, r = o)), r;
              }
              function Me() {
                var t, e;
                return t = ie, function () {
                  var t, e, n, u;
                  t = ie, 'on' === r.substr(ie, 2).toLowerCase() ? (e = r.substr(ie, 2), ie += 2) : (e = o, 0 === ve && pe(Hr));
                  e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ie = t, t = o)) : (ie = t, t = o);
                  return t;
                }() !== o && ou() !== o && (e = je()) !== o ? t = e : (ie = t, t = o), t;
              }
              function De() {
                var r, t, e;
                return r = ie, (t = on()) !== o && ou() !== o && Sn() !== o && ou() !== o && (e = ke()) !== o ? r = t = {
                  name: t,
                  as_window_specification: e
                } : (ie = r, r = o), r;
              }
              function ke() {
                var t, e, n;
                return t = ie, (e = on()) !== o && (e = e), (t = e) === o && (t = ie, (e = zn()) !== o && ou() !== o ? ((n = function () {
                  var t, e, n, u, s;
                  t = ie, (e = tn()) === o && (e = null);
                  e !== o && ou() !== o ? ((n = $e()) === o && (n = null), n !== o && ou() !== o ? ((u = Fe()) === o && (u = null), u !== o && ou() !== o ? ((s = function () {
                    var t, e, n, u, s, a, i, c, l, f;
                    t = ie, 'range' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(E));
                    e !== o && ou() !== o && Mn() !== o ? ('unbounded' === r.substr(ie, 9).toLowerCase() ? (n = r.substr(ie, 9), ie += 9) : (n = o, 0 === ve && pe(h)), n !== o && (u = ou()) !== o ? ('preceding' === r.substr(ie, 9).toLowerCase() ? (s = r.substr(ie, 9), ie += 9) : (s = o, 0 === ve && pe(A)), s !== o && (a = ou()) !== o && Hn() !== o && ou() !== o ? ('current' === r.substr(ie, 7).toLowerCase() ? (i = r.substr(ie, 7), ie += 7) : (i = o, 0 === ve && pe(y)), i !== o && (c = ou()) !== o ? ('ROW' === r.substr(ie, 3) ? (l = 'ROW', ie += 3) : (l = o, 0 === ve && pe(T)), l !== o ? t = e = 'range between unbounded preceding and current row' : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o);
                    t === o && (t = ie, 'rows' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(m)), e !== o && ou() !== o && Mn() !== o && (n = ou()) !== o && (u = pn()) !== o && (s = ou()) !== o ? ('preceding' === r.substr(ie, 9).toLowerCase() ? (a = r.substr(ie, 9), ie += 9) : (a = o, 0 === ve && pe(A)), a !== o && ou() !== o && Hn() !== o && (i = ou()) !== o && (c = pn()) !== o && (l = ou()) !== o ? ('following' === r.substr(ie, 9).toLowerCase() ? (f = r.substr(ie, 9), ie += 9) : (f = o, 0 === ve && pe(S)), f !== o ? (v = c, e = `rows between ${ u.value } preceding and ${ v.value } following`, t = e) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o));
                    var v;
                    return t;
                  }()) === o && (s = null), s !== o ? t = e = {
                    name: e,
                    partitionby: n,
                    orderby: u,
                    window_frame_clause: s
                  } : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o);
                  return t;
                }()) === o && (n = null), n !== o && ou() !== o && Jn() !== o ? t = e = {
                  window_specification: n,
                  parentheses: !0
                } : (ie = t, t = o)) : (ie = t, t = o)), t;
              }
              function $e() {
                var t, e;
                return t = ie, function () {
                  var t, e, n, u;
                  t = ie, 'partition' === r.substr(ie, 9).toLowerCase() ? (e = r.substr(ie, 9), ie += 9) : (e = o, 0 === ve && pe(Fr));
                  e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'PARTITION' : (ie = t, t = o)) : (ie = t, t = o);
                  return t;
                }() !== o && ou() !== o && gn() !== o && ou() !== o && (e = Ie()) !== o ? t = e : (ie = t, t = o), t;
              }
              function Fe() {
                var t, e;
                return t = ie, function () {
                  var t, e, n, u;
                  t = ie, 'order' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(et));
                  e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ie = t, t = o)) : (ie = t, t = o);
                  return t;
                }() !== o && ou() !== o && gn() !== o && ou() !== o && (e = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = ie, (t = Pe()) !== o) {
                    for (e = [], n = ie, (u = ou()) !== o && (s = qn()) !== o && (a = ou()) !== o && (i = Pe()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (ie = n, n = o); n !== o;)
                      e.push(n), n = ie, (u = ou()) !== o && (s = qn()) !== o && (a = ou()) !== o && (i = Pe()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (ie = n, n = o);
                    e !== o ? (t = v(t, e), r = t) : (ie = r, r = o);
                  } else
                    ie = r, r = o;
                  return r;
                }()) !== o ? t = e : (ie = t, t = o), t;
              }
              function Pe() {
                var t, e, n;
                return t = ie, (e = je()) !== o && ou() !== o ? ((n = function () {
                  var t, e, n, u;
                  t = ie, 'desc' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(it));
                  e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'DESC' : (ie = t, t = o)) : (ie = t, t = o);
                  return t;
                }()) === o && (n = function () {
                  var t, e, n, u;
                  t = ie, 'asc' === r.substr(ie, 3).toLowerCase() ? (e = r.substr(ie, 3), ie += 3) : (e = o, 0 === ve && pe(at));
                  e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'ASC' : (ie = t, t = o)) : (ie = t, t = o);
                  return t;
                }()), n === o && (n = null), n !== o ? t = e = function (r, t) {
                  const e = {
                    expr: r,
                    type: 'ASC'
                  };
                  return 'DESC' === t && (e.type = 'DESC'), e;
                }(e, n) : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function He() {
                var r;
                return (r = pn()) === o && (r = ln()), r;
              }
              function Ge() {
                var r, t, e, n, u, s, a, i;
                if (r = ie, (t = je()) !== o) {
                  for (e = [], n = ie, (u = ou()) !== o && (s = qn()) !== o && (a = ou()) !== o && (i = je()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ie = n, n = o); n !== o;)
                    e.push(n), n = ie, (u = ou()) !== o && (s = qn()) !== o && (a = ou()) !== o && (i = je()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ie = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    const e = { type: 'expr_list' };
                    return e.value = hu(r, t), e;
                  }(t, e) : (ie = r, r = o);
                } else
                  ie = r, r = o;
                return r;
              }
              function je() {
                var r;
                return (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = ie, (t = Ye()) !== o) {
                    for (e = [], n = ie, (u = ou()) !== o && (s = qn()) !== o && (a = ou()) !== o && (i = Ye()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (ie = n, n = o); n !== o;)
                      e.push(n), n = ie, (u = ou()) !== o && (s = qn()) !== o && (a = ou()) !== o && (i = Ye()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (ie = n, n = o);
                    e !== o ? (t = v(t, e), r = t) : (ie = r, r = o);
                  } else
                    ie = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e;
                  r = ie, (t = du()) === o && (t = Yn());
                  t !== o && ou() !== o && zn() !== o && ou() !== o && (e = Ie()) !== o && ou() !== o && Jn() !== o ? r = t = {
                    definition: n = t,
                    expr_list: e,
                    type: 'struct',
                    keyword: n && 'struct',
                    parentheses: !0
                  } : (ie = r, r = o);
                  var n;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = ie, (t = Qe()) !== o) {
                    if (e = [], n = ie, (u = ou()) !== o && (s = uu()) !== o && (a = ou()) !== o && (i = Qe()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (ie = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = ie, (u = ou()) !== o && (s = uu()) !== o && (a = ou()) !== o && (i = Qe()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (ie = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = Au(t, e), r = t) : (ie = r, r = o);
                  } else
                    ie = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s;
                  if (r = ie, (t = Ze()) !== o) {
                    if (e = [], n = ie, (u = ou()) !== o && (s = Qe()) !== o ? n = u = [
                        u,
                        s
                      ] : (ie = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = ie, (u = ou()) !== o && (s = Qe()) !== o ? n = u = [
                          u,
                          s
                        ] : (ie = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = pu(t, e[0][1]), r = t) : (ie = r, r = o);
                  } else
                    ie = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = ie, (t = Be()) !== o) {
                    for (e = [], n = ie, (u = su()) !== o && (s = Gn()) !== o && (a = ou()) !== o && (i = Be()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (ie = n, n = o); n !== o;)
                      e.push(n), n = ie, (u = su()) !== o && (s = Gn()) !== o && (a = ou()) !== o && (i = Be()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (ie = n, n = o);
                    e !== o ? (t = I(t, e), r = t) : (ie = r, r = o);
                  } else
                    ie = r, r = o;
                  return r;
                }()) === o && (r = me()) === o && (r = function () {
                  var r, t, e, n, u, s;
                  r = ie, (t = tu()) !== o && ou() !== o && (e = Ie()) !== o && (n = ou()) !== o && (u = eu()) !== o ? r = t = {
                    array_path: e,
                    type: 'array',
                    keyword: '',
                    parentheses: !0
                  } : (ie = r, r = o);
                  r === o && (r = ie, (t = bu()) === o && (t = jn()), t === o && (t = null), t !== o && tu() !== o && (e = ou()) !== o && (n = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = ie, (t = vn()) !== o) {
                      for (e = [], n = ie, (u = ou()) !== o && (s = qn()) !== o && (a = ou()) !== o && (i = vn()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (ie = n, n = o); n !== o;)
                        e.push(n), n = ie, (u = ou()) !== o && (s = qn()) !== o && (a = ou()) !== o && (i = vn()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (ie = n, n = o);
                      e !== o ? (t = v(t, e), r = t) : (ie = r, r = o);
                    } else
                      ie = r, r = o;
                    return r;
                  }()) !== o && (u = ou()) !== o && eu() !== o ? (t = function (r, t) {
                    return {
                      definition: r,
                      array_path: t.map(r => ({
                        expr: r,
                        as: null
                      })),
                      type: 'array',
                      keyword: r && 'array',
                      parentheses: !0
                    };
                  }(t, n), r = t) : (ie = r, r = o), r === o && (r = ie, (t = bu()) === o && (t = jn()), t === o && (t = null), t !== o && ou() !== o ? ((e = tu()) === o && (e = zn()), e !== o && (n = ou()) !== o && (u = je()) !== o && ou() !== o ? ((s = eu()) === o && (s = Jn()), s !== o ? (t = function (r, t) {
                    return {
                      definition: r,
                      expr_list: t,
                      type: 'array',
                      keyword: r && 'array',
                      parentheses: !0
                    };
                  }(t, u), r = t) : (ie = r, r = o)) : (ie = r, r = o)) : (ie = r, r = o)));
                  return r;
                }()), r;
              }
              function Ye() {
                var r, t;
                return r = ie, zn() !== o && ou() !== o && (t = Ie()) !== o && ou() !== o && Jn() !== o ? r = t : (ie = r, r = o), r;
              }
              function Be() {
                var r, t, e, n, u, s, a, i;
                if (r = ie, (t = Xe()) !== o) {
                  for (e = [], n = ie, (u = su()) !== o && (s = Hn()) !== o && (a = ou()) !== o && (i = Xe()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ie = n, n = o); n !== o;)
                    e.push(n), n = ie, (u = su()) !== o && (s = Hn()) !== o && (a = ou()) !== o && (i = Xe()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ie = n, n = o);
                  e !== o ? r = t = I(t, e) : (ie = r, r = o);
                } else
                  ie = r, r = o;
                return r;
              }
              function Xe() {
                var t, e, n, u, s;
                return (t = We()) === o && (t = function () {
                  var r, t, e;
                  r = ie, (t = function () {
                    var r, t, e, n, u;
                    r = ie, t = ie, (e = Pn()) !== o && (n = ou()) !== o && (u = Fn()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (ie = t, t = o);
                    t !== o && (t = _(t));
                    (r = t) === o && (r = Fn());
                    return r;
                  }()) !== o && ou() !== o && zn() !== o && ou() !== o && (e = ye()) !== o && ou() !== o && Jn() !== o ? (n = t, (u = e).parentheses = !0, t = pu(n, u), r = t) : (ie = r, r = o);
                  var n, u;
                  return r;
                }()) === o && (t = ie, (e = Pn()) === o && (e = ie, 33 === r.charCodeAt(ie) ? (n = '!', ie++) : (n = o, 0 === ve && pe(N)), n !== o ? (u = ie, ve++, 61 === r.charCodeAt(ie) ? (s = '=', ie++) : (s = o, 0 === ve && pe(R)), ve--, s === o ? u = void 0 : (ie = u, u = o), u !== o ? e = n = [
                  n,
                  u
                ] : (ie = e, e = o)) : (ie = e, e = o)), e !== o && (n = ou()) !== o && (u = Xe()) !== o ? t = e = pu('NOT', u) : (ie = t, t = o)), t;
              }
              function We() {
                var r, t, e, n, u, s, a;
                return r = ie, (t = qe()) !== o && ou() !== o ? (e = ie, ve++, n = Hn(), ve--, n === o ? e = void 0 : (ie = e, e = o), e !== o && (n = ou()) !== o ? ((u = function () {
                  var r;
                  (r = function () {
                    var t, e, n, u, s, a;
                    t = [], e = ie, (n = ou()) !== o && (u = Ve()) !== o && (s = ou()) !== o && (a = qe()) !== o ? e = n = [
                      n,
                      u,
                      s,
                      a
                    ] : (ie = e, e = o);
                    if (e !== o)
                      for (; e !== o;)
                        t.push(e), e = ie, (n = ou()) !== o && (u = Ve()) !== o && (s = ou()) !== o && (a = qe()) !== o ? e = n = [
                          n,
                          u,
                          s,
                          a
                        ] : (ie = e, e = o);
                    else
                      t = o;
                    t !== o && (t = {
                      type: 'arithmetic',
                      tail: t
                    });
                    return t;
                  }()) === o && (r = function () {
                    var r, t, e, n;
                    r = ie, (t = Ke()) !== o && ou() !== o && (e = zn()) !== o && ou() !== o && (n = Ge()) !== o && ou() !== o && Jn() !== o ? r = t = {
                      op: t,
                      right: n
                    } : (ie = r, r = o);
                    r === o && (r = ie, (t = Ke()) !== o && ou() !== o && (e = bn()) !== o ? (t = function (r, t) {
                      return {
                        op: r,
                        right: t
                      };
                    }(t, e), r = t) : (ie = r, r = o));
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e, n;
                    r = ie, (t = function () {
                      var r, t, e, n, u;
                      r = ie, t = ie, (e = Pn()) !== o && (n = ou()) !== o && (u = Mn()) !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (ie = t, t = o);
                      t !== o && (t = _(t));
                      (r = t) === o && (r = Mn());
                      return r;
                    }()) !== o && ou() !== o && (e = qe()) !== o && ou() !== o && Hn() !== o && ou() !== o && (n = qe()) !== o ? r = t = {
                      op: t,
                      right: {
                        type: 'expr_list',
                        value: [
                          e,
                          n
                        ]
                      }
                    } : (ie = r, r = o);
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e, n, u;
                    r = ie, (t = kn()) !== o && (e = ou()) !== o && (n = qe()) !== o ? r = t = {
                      op: 'IS',
                      right: n
                    } : (ie = r, r = o);
                    r === o && (r = ie, t = ie, (e = kn()) !== o && (n = ou()) !== o && (u = Pn()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (ie = t, t = o), t !== o && (e = ou()) !== o && (n = qe()) !== o ? (t = function (r) {
                      return {
                        op: 'IS NOT',
                        right: r
                      };
                    }(n), r = t) : (ie = r, r = o));
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e;
                    r = ie, (t = function () {
                      var r, t, e, n, u;
                      r = ie, t = ie, (e = Pn()) !== o && (n = ou()) !== o && (u = $n()) !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (ie = t, t = o);
                      t !== o && (t = _(t));
                      (r = t) === o && (r = $n());
                      return r;
                    }()) !== o && ou() !== o && (e = We()) !== o ? r = t = {
                      op: t,
                      right: e
                    } : (ie = r, r = o);
                    return r;
                  }());
                  return r;
                }()) === o && (u = null), u !== o ? (s = t, r = t = null === (a = u) ? s : 'arithmetic' === a.type ? Au(s, a.tail) : wu(a.op, s, a.right)) : (ie = r, r = o)) : (ie = r, r = o)) : (ie = r, r = o), r === o && (r = bn()) === o && (r = rn()), r;
              }
              function Ve() {
                var t;
                return '>=' === r.substr(ie, 2) ? (t = '>=', ie += 2) : (t = o, 0 === ve && pe(g)), t === o && (62 === r.charCodeAt(ie) ? (t = '>', ie++) : (t = o, 0 === ve && pe(O)), t === o && ('<=' === r.substr(ie, 2) ? (t = '<=', ie += 2) : (t = o, 0 === ve && pe(U)), t === o && ('<>' === r.substr(ie, 2) ? (t = '<>', ie += 2) : (t = o, 0 === ve && pe(x)), t === o && (60 === r.charCodeAt(ie) ? (t = '<', ie++) : (t = o, 0 === ve && pe(M)), t === o && (61 === r.charCodeAt(ie) ? (t = '=', ie++) : (t = o, 0 === ve && pe(R)), t === o && ('!=' === r.substr(ie, 2) ? (t = '!=', ie += 2) : (t = o, 0 === ve && pe(D)))))))), t;
              }
              function Ke() {
                var r, t, e, n, u;
                return r = ie, t = ie, (e = Pn()) !== o && (n = ou()) !== o && (u = Dn()) !== o ? t = e = [
                  e,
                  n,
                  u
                ] : (ie = t, t = o), t !== o && (t = _(t)), (r = t) === o && (r = Dn()), r;
              }
              function qe() {
                var r, t, e, n, u, s, a, i;
                if (r = ie, (t = ze()) !== o) {
                  for (e = [], n = ie, (u = ou()) !== o && (s = Ze()) !== o && (a = ou()) !== o && (i = ze()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ie = n, n = o); n !== o;)
                    e.push(n), n = ie, (u = ou()) !== o && (s = Ze()) !== o && (a = ou()) !== o && (i = ze()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ie = n, n = o);
                  e !== o ? r = t = I(t, e) : (ie = r, r = o);
                } else
                  ie = r, r = o;
                return r;
              }
              function Ze() {
                var t;
                return 43 === r.charCodeAt(ie) ? (t = '+', ie++) : (t = o, 0 === ve && pe(k)), t === o && (45 === r.charCodeAt(ie) ? (t = '-', ie++) : (t = o, 0 === ve && pe($))), t;
              }
              function ze() {
                var r, t, e, n, u, s, a, i;
                if (r = ie, (t = Qe()) !== o) {
                  for (e = [], n = ie, (u = ou()) !== o && (s = Je()) !== o && (a = ou()) !== o && (i = Qe()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ie = n, n = o); n !== o;)
                    e.push(n), n = ie, (u = ou()) !== o && (s = Je()) !== o && (a = ou()) !== o && (i = Qe()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ie = n, n = o);
                  e !== o ? r = t = Au(t, e) : (ie = r, r = o);
                } else
                  ie = r, r = o;
                return r;
              }
              function Je() {
                var t;
                return 42 === r.charCodeAt(ie) ? (t = '*', ie++) : (t = o, 0 === ve && pe(F)), t === o && (47 === r.charCodeAt(ie) ? (t = '/', ie++) : (t = o, 0 === ve && pe(P)), t === o && (37 === r.charCodeAt(ie) ? (t = '%', ie++) : (t = o, 0 === ve && pe(H)))), t;
              }
              function Qe() {
                var t, e, n, u;
                return (t = vn()) === o && (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u;
                    t = ie, (e = function () {
                      var t, e, n, u;
                      t = ie, 'count' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(Et));
                      e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'COUNT' : (ie = t, t = o)) : (ie = t, t = o);
                      return t;
                    }()) !== o && ou() !== o && zn() !== o && ou() !== o && (n = function () {
                      var t, e, n;
                      t = ie, (e = function () {
                        var e;
                        42 === r.charCodeAt(ie) ? (e = '*', ie++) : (e = o, 0 === ve && pe(F));
                        e !== o && (e = {
                          type: 'star',
                          value: '*'
                        });
                        return e;
                      }()) !== o && (e = { expr: e });
                      (t = e) === o && (t = ie, (e = xn()) === o && (e = null), e !== o && ou() !== o && (n = rn()) !== o ? t = e = {
                        distinct: e,
                        expr: n
                      } : (ie = t, t = o));
                      return t;
                    }()) !== o && ou() !== o && Jn() !== o && ou() !== o ? ((u = fn()) === o && (u = null), u !== o ? t = e = {
                      type: 'aggr_func',
                      name: e,
                      args: n,
                      over: u
                    } : (ie = t, t = o)) : (ie = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n;
                    t = ie, (e = function () {
                      var t;
                      (t = function () {
                        var t, e, n, u;
                        t = ie, 'sum' === r.substr(ie, 3).toLowerCase() ? (e = r.substr(ie, 3), ie += 3) : (e = o, 0 === ve && pe(yt));
                        e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'SUM' : (ie = t, t = o)) : (ie = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = ie, 'max' === r.substr(ie, 3).toLowerCase() ? (e = r.substr(ie, 3), ie += 3) : (e = o, 0 === ve && pe(ht));
                        e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'MAX' : (ie = t, t = o)) : (ie = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = ie, 'min' === r.substr(ie, 3).toLowerCase() ? (e = r.substr(ie, 3), ie += 3) : (e = o, 0 === ve && pe(At));
                        e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'MIN' : (ie = t, t = o)) : (ie = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = ie, 'avg' === r.substr(ie, 3).toLowerCase() ? (e = r.substr(ie, 3), ie += 3) : (e = o, 0 === ve && pe(Tt));
                        e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'AVG' : (ie = t, t = o)) : (ie = t, t = o);
                        return t;
                      }());
                      return t;
                    }()) !== o && ou() !== o && zn() !== o && ou() !== o && (n = qe()) !== o && ou() !== o && Jn() !== o ? t = e = {
                      type: 'aggr_func',
                      name: e,
                      args: { expr: n }
                    } : (ie = t, t = o);
                    return t;
                  }());
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s;
                  t = ie, (e = function () {
                    var r, t, e, n, u, s, a;
                    r = ie, (t = tn()) !== o ? (e = ie, (n = ou()) !== o && (u = Kn()) !== o && (s = ou()) !== o && (a = tn()) !== o ? e = n = [
                      n,
                      u,
                      s,
                      a
                    ] : (ie = e, e = o), e === o && (e = null), e !== o ? (t = function (r, t) {
                      let e = r;
                      return null !== t && (e = `${ r }.${ t[3] }`), e;
                    }(t, e), r = t) : (ie = r, r = o)) : (ie = r, r = o);
                    return r;
                  }()) !== o && ou() !== o && zn() !== o && ou() !== o ? ((n = Ge()) === o && (n = null), n !== o && ou() !== o && (u = Jn()) !== o && ou() !== o ? ((s = fn()) === o && (s = null), s !== o ? t = e = {
                    type: 'function',
                    name: e,
                    args: n || {
                      type: 'expr_list',
                      value: []
                    },
                    over: s
                  } : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o);
                  t === o && (t = ie, (e = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = ie, 'current_date' === r.substr(ie, 12).toLowerCase() ? (e = r.substr(ie, 12), ie += 12) : (e = o, 0 === ve && pe($t));
                      e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'CURRENT_DATE' : (ie = t, t = o)) : (ie = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = ie, 'current_time' === r.substr(ie, 12).toLowerCase() ? (e = r.substr(ie, 12), ie += 12) : (e = o, 0 === ve && pe(Xt));
                      e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'CURRENT_TIME' : (ie = t, t = o)) : (ie = t, t = o);
                      return t;
                    }()) === o && (t = Vn());
                    return t;
                  }()) !== o && ou() !== o && zn() !== o && ou() !== o && (n = Jn()) !== o && ou() !== o ? ((u = fn()) === o && (u = null), u !== o ? (e = function (r, t) {
                    return {
                      type: 'function',
                      name: r,
                      args: {
                        type: 'expr_list',
                        value: []
                      },
                      over: t
                    };
                  }(e, u), t = e) : (ie = t, t = o)) : (ie = t, t = o));
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = ie, (e = function () {
                    var t, e, n, u;
                    t = ie, 'interval' === r.substr(ie, 8).toLowerCase() ? (e = r.substr(ie, 8), ie += 8) : (e = o, 0 === ve && pe(Ft));
                    e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'INTERVAL' : (ie = t, t = o)) : (ie = t, t = o);
                    return t;
                  }()) !== o && ou() !== o && (n = je()) !== o && ou() !== o && (u = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = ie, 'year' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(Pt));
                      e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'YEAR' : (ie = t, t = o)) : (ie = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = ie, 'month' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(Ht));
                      e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'MONTH' : (ie = t, t = o)) : (ie = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = ie, 'day' === r.substr(ie, 3).toLowerCase() ? (e = r.substr(ie, 3), ie += 3) : (e = o, 0 === ve && pe(Gt));
                      e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'DAY' : (ie = t, t = o)) : (ie = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = ie, 'hour' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(jt));
                      e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'HOUR' : (ie = t, t = o)) : (ie = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = ie, 'minute' === r.substr(ie, 6).toLowerCase() ? (e = r.substr(ie, 6), ie += 6) : (e = o, 0 === ve && pe(Yt));
                      e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'MINUTE' : (ie = t, t = o)) : (ie = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = ie, 'second' === r.substr(ie, 6).toLowerCase() ? (e = r.substr(ie, 6), ie += 6) : (e = o, 0 === ve && pe(Bt));
                      e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'SECOND' : (ie = t, t = o)) : (ie = t, t = o);
                      return t;
                    }());
                    return t;
                  }()) !== o ? (e = {
                    type: 'interval',
                    expr: n,
                    unit: u.toLowerCase()
                  }, t = e) : (ie = t, t = o);
                  return t;
                }()) === o && (t = rn()) === o && (t = ln()) === o && (t = ie, zn() !== o && ou() !== o && (e = je()) !== o && ou() !== o && Jn() !== o ? ((u = e).parentheses = !0, t = u) : (ie = t, t = o), t === o && (t = ie, zn() !== o && ou() !== o && (e = Ge()) !== o && ou() !== o && Jn() !== o ? ((n = e).parentheses = !0, t = n) : (ie = t, t = o))), t;
              }
              function rn() {
                var r, t, e, n, u;
                return r = ie, (t = tn()) !== o && ou() !== o && Kn() !== o && ou() !== o && (e = function () {
                  var r, t;
                  r = ie, (t = un()) !== o && (t = t);
                  (r = t) === o && (r = en());
                  return r;
                }()) !== o ? (n = t, u = e, Su.add(`select::${ n }::${ u }`), r = t = {
                  type: 'column_ref',
                  table: n,
                  column: u
                }) : (ie = r, r = o), r === o && (r = ie, (t = nn()) !== o && (t = function (r) {
                  return Su.add('select::null::' + r), {
                    type: 'column_ref',
                    table: null,
                    column: r
                  };
                }(t)), r = t), r;
              }
              function tn() {
                var r, t;
                return r = ie, (t = on()) !== o ? (G(t) ? o : void 0) !== o ? r = t = t : (ie = r, r = o) : (ie = r, r = o), r === o && (r = ie, (t = en()) !== o && (t = t), r = t), r;
              }
              function en() {
                var t;
                return (t = function () {
                  var t, e, n, u;
                  t = ie, 34 === r.charCodeAt(ie) ? (e = '"', ie++) : (e = o, 0 === ve && pe(j));
                  if (e !== o) {
                    if (n = [], Y.test(r.charAt(ie)) ? (u = r.charAt(ie), ie++) : (u = o, 0 === ve && pe(B)), u !== o)
                      for (; u !== o;)
                        n.push(u), Y.test(r.charAt(ie)) ? (u = r.charAt(ie), ie++) : (u = o, 0 === ve && pe(B));
                    else
                      n = o;
                    n !== o ? (34 === r.charCodeAt(ie) ? (u = '"', ie++) : (u = o, 0 === ve && pe(j)), u !== o ? (e = X(n), t = e) : (ie = t, t = o)) : (ie = t, t = o);
                  } else
                    ie = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = ie, 39 === r.charCodeAt(ie) ? (e = '\'', ie++) : (e = o, 0 === ve && pe(W));
                  if (e !== o) {
                    if (n = [], V.test(r.charAt(ie)) ? (u = r.charAt(ie), ie++) : (u = o, 0 === ve && pe(K)), u !== o)
                      for (; u !== o;)
                        n.push(u), V.test(r.charAt(ie)) ? (u = r.charAt(ie), ie++) : (u = o, 0 === ve && pe(K));
                    else
                      n = o;
                    n !== o ? (39 === r.charCodeAt(ie) ? (u = '\'', ie++) : (u = o, 0 === ve && pe(W)), u !== o ? (e = X(n), t = e) : (ie = t, t = o)) : (ie = t, t = o);
                  } else
                    ie = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = ie, 96 === r.charCodeAt(ie) ? (e = '`', ie++) : (e = o, 0 === ve && pe(q));
                  if (e !== o) {
                    if (n = [], Z.test(r.charAt(ie)) ? (u = r.charAt(ie), ie++) : (u = o, 0 === ve && pe(z)), u !== o)
                      for (; u !== o;)
                        n.push(u), Z.test(r.charAt(ie)) ? (u = r.charAt(ie), ie++) : (u = o, 0 === ve && pe(z));
                    else
                      n = o;
                    n !== o ? (96 === r.charCodeAt(ie) ? (u = '`', ie++) : (u = o, 0 === ve && pe(q)), u !== o ? (e = X(n), t = e) : (ie = t, t = o)) : (ie = t, t = o);
                  } else
                    ie = t, t = o;
                  return t;
                }()), t;
              }
              function nn() {
                var r, t;
                return r = ie, (t = un()) !== o ? (G(t) ? o : void 0) !== o ? r = t = t : (ie = r, r = o) : (ie = r, r = o), r === o && (r = en()), r;
              }
              function un() {
                var r, t, e, n;
                if (r = ie, (t = sn()) !== o) {
                  for (e = [], n = cn(); n !== o;)
                    e.push(n), n = cn();
                  e !== o ? r = t = J(t, e) : (ie = r, r = o);
                } else
                  ie = r, r = o;
                return r;
              }
              function on() {
                var r, t, e, n;
                if (r = ie, (t = sn()) !== o) {
                  for (e = [], n = an(); n !== o;)
                    e.push(n), n = an();
                  e !== o ? r = t = J(t, e) : (ie = r, r = o);
                } else
                  ie = r, r = o;
                return r;
              }
              function sn() {
                var t;
                return Q.test(r.charAt(ie)) ? (t = r.charAt(ie), ie++) : (t = o, 0 === ve && pe(rr)), t;
              }
              function an() {
                var t;
                return tr.test(r.charAt(ie)) ? (t = r.charAt(ie), ie++) : (t = o, 0 === ve && pe(er)), t;
              }
              function cn() {
                var t;
                return nr.test(r.charAt(ie)) ? (t = r.charAt(ie), ie++) : (t = o, 0 === ve && pe(ur)), t;
              }
              function ln() {
                var e, n, u;
                return e = ie, 58 === r.charCodeAt(ie) ? (n = ':', ie++) : (n = o, 0 === ve && pe(or)), n !== o && (u = on()) !== o ? e = n = [
                  n,
                  u
                ] : (ie = e, e = o), e !== o && (e = {
                  type: 'param',
                  value: e[1]
                }), e;
              }
              function fn() {
                var r, t, e, n;
                return r = ie, Rn() !== o && ou() !== o && (t = ke()) !== o ? r = {
                  type: 'window',
                  as_window_specification: t
                } : (ie = r, r = o), r === o && (r = ie, Rn() !== o && ou() !== o && (t = zn()) !== o && ou() !== o && (e = $e()) !== o && ou() !== o ? ((n = Fe()) === o && (n = null), n !== o && ou() !== o && Jn() !== o ? r = {
                  partitionby: e,
                  orderby: n
                } : (ie = r, r = o)) : (ie = r, r = o)), r;
              }
              function vn() {
                var t;
                return (t = bn()) === o && (t = pn()) === o && (t = function () {
                  var t, e;
                  t = ie, (e = function () {
                    var t, e, n, u;
                    t = ie, 'true' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(Dr));
                    e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ie = t, t = o)) : (ie = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !0
                  });
                  (t = e) === o && (t = ie, (e = function () {
                    var t, e, n, u;
                    t = ie, 'false' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(kr));
                    e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ie = t, t = o)) : (ie = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !1
                  }), t = e);
                  return t;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    t = ie, 'null' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(Mr));
                    e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ie = t, t = o)) : (ie = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'null',
                    value: null
                  });
                  return e;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, i;
                  t = ie, (e = Xn()) === o && (e = Bn()) === o && (e = Wn());
                  if (e !== o)
                    if (ou() !== o) {
                      if (n = ie, 39 === r.charCodeAt(ie) ? (u = '\'', ie++) : (u = o, 0 === ve && pe(W)), u !== o) {
                        for (s = [], a = Ln(); a !== o;)
                          s.push(a), a = Ln();
                        s !== o ? (39 === r.charCodeAt(ie) ? (a = '\'', ie++) : (a = o, 0 === ve && pe(W)), a !== o ? n = u = [
                          u,
                          s,
                          a
                        ] : (ie = n, n = o)) : (ie = n, n = o);
                      } else
                        ie = n, n = o;
                      n !== o ? (c = n, e = {
                        type: e.toLowerCase(),
                        value: c[1].join('')
                      }, t = e) : (ie = t, t = o);
                    } else
                      ie = t, t = o;
                  else
                    ie = t, t = o;
                  var c;
                  t === o && (t = ie, (e = Vn()) !== o && ou() !== o ? ((n = zn()) === o && (n = null), n !== o && (u = ou()) !== o ? ((s = Jn()) === o && (s = null), s !== o ? (a = (a = function (r, t, e) {
                    if (t && e)
                      return !0;
                  }(0, n, s)) ? o : void 0) !== o && ou() !== o ? ('on update current_timestamp' === r.substr(ie, 27).toLowerCase() ? (i = r.substr(ie, 27), ie += 27) : (i = o, 0 === ve && pe(ar)), i === o && (i = null), i !== o ? (e = function (r, t, e, n) {
                    return {
                      type: 'origin',
                      value: (n ? `${ r } ${ n }` : r).toLowerCase()
                    };
                  }(e, 0, 0, i), t = e) : (ie = t, t = o)) : (ie = t, t = o) : (ie = t, t = o)) : (ie = t, t = o)) : (ie = t, t = o));
                  return t;
                }()), t;
              }
              function bn() {
                var t, e, n, u, s;
                if (t = ie, e = ie, 39 === r.charCodeAt(ie) ? (n = '\'', ie++) : (n = o, 0 === ve && pe(W)), n !== o) {
                  for (u = [], s = Ln(); s !== o;)
                    u.push(s), s = Ln();
                  u !== o ? (39 === r.charCodeAt(ie) ? (s = '\'', ie++) : (s = o, 0 === ve && pe(W)), s !== o ? e = n = [
                    n,
                    u,
                    s
                  ] : (ie = e, e = o)) : (ie = e, e = o);
                } else
                  ie = e, e = o;
                if (e !== o && (e = sr(e)), (t = e) === o) {
                  if (t = ie, e = ie, 34 === r.charCodeAt(ie) ? (n = '"', ie++) : (n = o, 0 === ve && pe(j)), n !== o) {
                    for (u = [], s = dn(); s !== o;)
                      u.push(s), s = dn();
                    u !== o ? (34 === r.charCodeAt(ie) ? (s = '"', ie++) : (s = o, 0 === ve && pe(j)), s !== o ? e = n = [
                      n,
                      u,
                      s
                    ] : (ie = e, e = o)) : (ie = e, e = o);
                  } else
                    ie = e, e = o;
                  e !== o && (e = sr(e)), t = e;
                }
                return t;
              }
              function dn() {
                var t;
                return ir.test(r.charAt(ie)) ? (t = r.charAt(ie), ie++) : (t = o, 0 === ve && pe(cr)), t === o && (t = Cn()), t;
              }
              function Ln() {
                var t;
                return lr.test(r.charAt(ie)) ? (t = r.charAt(ie), ie++) : (t = o, 0 === ve && pe(fr)), t === o && (t = Cn()), t;
              }
              function Cn() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = ie, '\\\'' === r.substr(ie, 2) ? (e = '\\\'', ie += 2) : (e = o, 0 === ve && pe(vr)), e !== o && (e = '\''), (t = e) === o && (t = ie, '\\"' === r.substr(ie, 2) ? (e = '\\"', ie += 2) : (e = o, 0 === ve && pe(br)), e !== o && (e = '"'), (t = e) === o && (t = ie, '\\\\' === r.substr(ie, 2) ? (e = '\\\\', ie += 2) : (e = o, 0 === ve && pe(dr)), e !== o && (e = '\\'), (t = e) === o && (t = ie, '\\/' === r.substr(ie, 2) ? (e = '\\/', ie += 2) : (e = o, 0 === ve && pe(Lr)), e !== o && (e = '/'), (t = e) === o && (t = ie, '\\b' === r.substr(ie, 2) ? (e = '\\b', ie += 2) : (e = o, 0 === ve && pe(Cr)), e !== o && (e = '\b'), (t = e) === o && (t = ie, '\\f' === r.substr(ie, 2) ? (e = '\\f', ie += 2) : (e = o, 0 === ve && pe(pr)), e !== o && (e = '\f'), (t = e) === o && (t = ie, '\\n' === r.substr(ie, 2) ? (e = '\\n', ie += 2) : (e = o, 0 === ve && pe(wr)), e !== o && (e = '\n'), (t = e) === o && (t = ie, '\\r' === r.substr(ie, 2) ? (e = '\\r', ie += 2) : (e = o, 0 === ve && pe(Er)), e !== o && (e = '\r'), (t = e) === o && (t = ie, '\\t' === r.substr(ie, 2) ? (e = '\\t', ie += 2) : (e = o, 0 === ve && pe(hr)), e !== o && (e = '\t'), (t = e) === o && (t = ie, '\\u' === r.substr(ie, 2) ? (e = '\\u', ie += 2) : (e = o, 0 === ve && pe(Ar)), e !== o && (n = Tn()) !== o && (u = Tn()) !== o && (s = Tn()) !== o && (a = Tn()) !== o ? (i = n, c = u, l = s, f = a, t = e = String.fromCharCode(parseInt('0x' + i + c + l + f))) : (ie = t, t = o), t === o && (t = ie, 92 === r.charCodeAt(ie) ? (e = '\\', ie++) : (e = o, 0 === ve && pe(yr)), e !== o && (e = '\\'), t = e)))))))))), t;
              }
              function pn() {
                var t, e;
                return (t = function () {
                  var r, t, e, n;
                  r = ie, (t = wn()) !== o && (e = En()) !== o && (n = hn()) !== o ? r = t = {
                    type: 'bigint',
                    value: t + e + n
                  } : (ie = r, r = o);
                  r === o && (r = ie, (t = wn()) !== o && (e = En()) !== o ? (t = function (r, t) {
                    const e = r + t;
                    return Eu(r) ? {
                      type: 'bigint',
                      value: e
                    } : parseFloat(e);
                  }(t, e), r = t) : (ie = r, r = o), r === o && (r = ie, (t = wn()) !== o && (e = hn()) !== o ? (t = function (r, t) {
                    return {
                      type: 'bigint',
                      value: r + t
                    };
                  }(t, e), r = t) : (ie = r, r = o), r === o && (r = ie, (t = wn()) !== o && (t = function (r) {
                    return Eu(r) ? {
                      type: 'bigint',
                      value: r
                    } : parseFloat(r);
                  }(t)), r = t)));
                  return r;
                }()) !== o && (t = (e = t) && 'bigint' === e.type ? e : {
                  type: 'number',
                  value: e
                }), t;
              }
              function wn() {
                var t, e, n;
                return (t = An()) === o && (t = yn()) === o && (t = ie, 45 === r.charCodeAt(ie) ? (e = '-', ie++) : (e = o, 0 === ve && pe($)), e === o && (43 === r.charCodeAt(ie) ? (e = '+', ie++) : (e = o, 0 === ve && pe(k))), e !== o && (n = An()) !== o ? t = e = '-' + n : (ie = t, t = o), t === o && (t = ie, 45 === r.charCodeAt(ie) ? (e = '-', ie++) : (e = o, 0 === ve && pe($)), e === o && (43 === r.charCodeAt(ie) ? (e = '+', ie++) : (e = o, 0 === ve && pe(k))), e !== o && (n = yn()) !== o ? t = e = '-' + n : (ie = t, t = o))), t;
              }
              function En() {
                var t, e, n;
                return t = ie, 46 === r.charCodeAt(ie) ? (e = '.', ie++) : (e = o, 0 === ve && pe(Sr)), e !== o && (n = An()) !== o ? t = e = '.' + n : (ie = t, t = o), t;
              }
              function hn() {
                var t, e, n;
                return t = ie, (e = function () {
                  var t, e, n;
                  t = ie, gr.test(r.charAt(ie)) ? (e = r.charAt(ie), ie++) : (e = o, 0 === ve && pe(Or));
                  e !== o ? (Ur.test(r.charAt(ie)) ? (n = r.charAt(ie), ie++) : (n = o, 0 === ve && pe(xr)), n === o && (n = null), n !== o ? t = e = e + (null !== (u = n) ? u : '') : (ie = t, t = o)) : (ie = t, t = o);
                  var u;
                  return t;
                }()) !== o && (n = An()) !== o ? t = e = e + n : (ie = t, t = o), t;
              }
              function An() {
                var t, e;
                if (t = [], (e = yn()) !== o)
                  for (; e !== o;)
                    t.push(e), e = yn();
                else
                  t = o;
                return t !== o && (t = t.join('')), t;
              }
              function yn() {
                var t;
                return Ir.test(r.charAt(ie)) ? (t = r.charAt(ie), ie++) : (t = o, 0 === ve && pe(Nr)), t;
              }
              function Tn() {
                var t;
                return Rr.test(r.charAt(ie)) ? (t = r.charAt(ie), ie++) : (t = o, 0 === ve && pe(_r)), t;
              }
              function mn() {
                var t, e, n, u;
                return t = ie, 'from' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(Pr)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Sn() {
                var t, e, n, u;
                return t = ie, 'as' === r.substr(ie, 2).toLowerCase() ? (e = r.substr(ie, 2), ie += 2) : (e = o, 0 === ve && pe(L)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function In() {
                var t, e, n, u;
                return t = ie, 'join' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(Wr)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Nn() {
                var t, e, n, u;
                return t = ie, 'outer' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(Vr)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Rn() {
                var t, e, n, u;
                return t = ie, 'over' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(Kr)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function _n() {
                var t, e, n, u;
                return t = ie, 'with' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(Qr)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function gn() {
                var t, e, n, u;
                return t = ie, 'by' === r.substr(ie, 2).toLowerCase() ? (e = r.substr(ie, 2), ie += 2) : (e = o, 0 === ve && pe(tt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function On() {
                var t, e, n, u;
                return t = ie, 'offset' === r.substr(ie, 6).toLowerCase() ? (e = r.substr(ie, 6), ie += 6) : (e = o, 0 === ve && pe(st)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'OFFSET' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Un() {
                var t, e, n, u;
                return t = ie, 'all' === r.substr(ie, 3).toLowerCase() ? (e = r.substr(ie, 3), ie += 3) : (e = o, 0 === ve && pe(ct)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'ALL' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function xn() {
                var t, e, n, u;
                return t = ie, 'distinct' === r.substr(ie, 8).toLowerCase() ? (e = r.substr(ie, 8), ie += 8) : (e = o, 0 === ve && pe(lt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'DISTINCT' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Mn() {
                var t, e, n, u;
                return t = ie, 'between' === r.substr(ie, 7).toLowerCase() ? (e = r.substr(ie, 7), ie += 7) : (e = o, 0 === ve && pe(ft)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'BETWEEN' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Dn() {
                var t, e, n, u;
                return t = ie, 'in' === r.substr(ie, 2).toLowerCase() ? (e = r.substr(ie, 2), ie += 2) : (e = o, 0 === ve && pe(vt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'IN' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function kn() {
                var t, e, n, u;
                return t = ie, 'is' === r.substr(ie, 2).toLowerCase() ? (e = r.substr(ie, 2), ie += 2) : (e = o, 0 === ve && pe(bt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'IS' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function $n() {
                var t, e, n, u;
                return t = ie, 'like' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(dt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'LIKE' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Fn() {
                var t, e, n, u;
                return t = ie, 'exists' === r.substr(ie, 6).toLowerCase() ? (e = r.substr(ie, 6), ie += 6) : (e = o, 0 === ve && pe(Lt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'EXISTS' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Pn() {
                var t, e, n, u;
                return t = ie, 'not' === r.substr(ie, 3).toLowerCase() ? (e = r.substr(ie, 3), ie += 3) : (e = o, 0 === ve && pe(Ct)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'NOT' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Hn() {
                var t, e, n, u;
                return t = ie, 'and' === r.substr(ie, 3).toLowerCase() ? (e = r.substr(ie, 3), ie += 3) : (e = o, 0 === ve && pe(pt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'AND' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Gn() {
                var t, e, n, u;
                return t = ie, 'or' === r.substr(ie, 2).toLowerCase() ? (e = r.substr(ie, 2), ie += 2) : (e = o, 0 === ve && pe(wt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'OR' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function jn() {
                var t, e, n, u;
                return t = ie, 'array' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(mt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'ARRAY' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Yn() {
                var t, e, n, u;
                return t = ie, 'struct' === r.substr(ie, 6).toLowerCase() ? (e = r.substr(ie, 6), ie += 6) : (e = o, 0 === ve && pe(Ot)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'STRUCT' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Bn() {
                var t, e, n, u;
                return t = ie, 'date' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(xt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'DATE' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Xn() {
                var t, e, n, u;
                return t = ie, 'time' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(Dt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'TIME' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Wn() {
                var t, e, n, u;
                return t = ie, 'timestamp' === r.substr(ie, 9).toLowerCase() ? (e = r.substr(ie, 9), ie += 9) : (e = o, 0 === ve && pe(kt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'TIMESTAMP' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Vn() {
                var t, e, n, u;
                return t = ie, 'current_timestamp' === r.substr(ie, 17).toLowerCase() ? (e = r.substr(ie, 17), ie += 17) : (e = o, 0 === ve && pe(Wt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'CURRENT_TIMESTAMP' : (ie = t, t = o)) : (ie = t, t = o), t;
              }
              function Kn() {
                var t;
                return 46 === r.charCodeAt(ie) ? (t = '.', ie++) : (t = o, 0 === ve && pe(Sr)), t;
              }
              function qn() {
                var t;
                return 44 === r.charCodeAt(ie) ? (t = ',', ie++) : (t = o, 0 === ve && pe(Vt)), t;
              }
              function Zn() {
                var t;
                return 42 === r.charCodeAt(ie) ? (t = '*', ie++) : (t = o, 0 === ve && pe(F)), t;
              }
              function zn() {
                var t;
                return 40 === r.charCodeAt(ie) ? (t = '(', ie++) : (t = o, 0 === ve && pe(i)), t;
              }
              function Jn() {
                var t;
                return 41 === r.charCodeAt(ie) ? (t = ')', ie++) : (t = o, 0 === ve && pe(c)), t;
              }
              function Qn() {
                var t;
                return 60 === r.charCodeAt(ie) ? (t = '<', ie++) : (t = o, 0 === ve && pe(M)), t;
              }
              function ru() {
                var t;
                return 62 === r.charCodeAt(ie) ? (t = '>', ie++) : (t = o, 0 === ve && pe(O)), t;
              }
              function tu() {
                var t;
                return 91 === r.charCodeAt(ie) ? (t = '[', ie++) : (t = o, 0 === ve && pe(Kt)), t;
              }
              function eu() {
                var t;
                return 93 === r.charCodeAt(ie) ? (t = ']', ie++) : (t = o, 0 === ve && pe(qt)), t;
              }
              function nu() {
                var t;
                return 59 === r.charCodeAt(ie) ? (t = ';', ie++) : (t = o, 0 === ve && pe(Zt)), t;
              }
              function uu() {
                var t;
                return (t = function () {
                  var t;
                  return '||' === r.substr(ie, 2) ? (t = '||', ie += 2) : (t = o, 0 === ve && pe(zt)), t;
                }()) === o && (t = function () {
                  var t;
                  return '&&' === r.substr(ie, 2) ? (t = '&&', ie += 2) : (t = o, 0 === ve && pe(Jt)), t;
                }()), t;
              }
              function ou() {
                var r, t;
                for (r = [], (t = cu()) === o && (t = au()); t !== o;)
                  r.push(t), (t = cu()) === o && (t = au());
                return r;
              }
              function su() {
                var r, t;
                if (r = [], (t = cu()) === o && (t = au()), t !== o)
                  for (; t !== o;)
                    r.push(t), (t = cu()) === o && (t = au());
                else
                  r = o;
                return r;
              }
              function au() {
                var t;
                return (t = function () {
                  var t, e, n, u, s, a;
                  t = ie, '/*' === r.substr(ie, 2) ? (e = '/*', ie += 2) : (e = o, 0 === ve && pe(Qt));
                  if (e !== o) {
                    for (n = [], u = ie, s = ie, ve++, '*/' === r.substr(ie, 2) ? (a = '*/', ie += 2) : (a = o, 0 === ve && pe(re)), ve--, a === o ? s = void 0 : (ie = s, s = o), s !== o && (a = iu()) !== o ? u = s = [
                        s,
                        a
                      ] : (ie = u, u = o); u !== o;)
                      n.push(u), u = ie, s = ie, ve++, '*/' === r.substr(ie, 2) ? (a = '*/', ie += 2) : (a = o, 0 === ve && pe(re)), ve--, a === o ? s = void 0 : (ie = s, s = o), s !== o && (a = iu()) !== o ? u = s = [
                        s,
                        a
                      ] : (ie = u, u = o);
                    n !== o ? ('*/' === r.substr(ie, 2) ? (u = '*/', ie += 2) : (u = o, 0 === ve && pe(re)), u !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (ie = t, t = o)) : (ie = t, t = o);
                  } else
                    ie = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = ie, '--' === r.substr(ie, 2) ? (e = '--', ie += 2) : (e = o, 0 === ve && pe(te));
                  if (e !== o) {
                    for (n = [], u = ie, s = ie, ve++, a = lu(), ve--, a === o ? s = void 0 : (ie = s, s = o), s !== o && (a = iu()) !== o ? u = s = [
                        s,
                        a
                      ] : (ie = u, u = o); u !== o;)
                      n.push(u), u = ie, s = ie, ve++, a = lu(), ve--, a === o ? s = void 0 : (ie = s, s = o), s !== o && (a = iu()) !== o ? u = s = [
                        s,
                        a
                      ] : (ie = u, u = o);
                    n !== o ? t = e = [
                      e,
                      n
                    ] : (ie = t, t = o);
                  } else
                    ie = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = ie, 35 === r.charCodeAt(ie) ? (e = '#', ie++) : (e = o, 0 === ve && pe(ee));
                  if (e !== o) {
                    for (n = [], u = ie, s = ie, ve++, a = lu(), ve--, a === o ? s = void 0 : (ie = s, s = o), s !== o && (a = iu()) !== o ? u = s = [
                        s,
                        a
                      ] : (ie = u, u = o); u !== o;)
                      n.push(u), u = ie, s = ie, ve++, a = lu(), ve--, a === o ? s = void 0 : (ie = s, s = o), s !== o && (a = iu()) !== o ? u = s = [
                        s,
                        a
                      ] : (ie = u, u = o);
                    n !== o ? t = e = [
                      e,
                      n
                    ] : (ie = t, t = o);
                  } else
                    ie = t, t = o;
                  return t;
                }()), t;
              }
              function iu() {
                var t;
                return r.length > ie ? (t = r.charAt(ie), ie++) : (t = o, 0 === ve && pe(ne)), t;
              }
              function cu() {
                var t;
                return ue.test(r.charAt(ie)) ? (t = r.charAt(ie), ie++) : (t = o, 0 === ve && pe(oe)), t;
              }
              function lu() {
                var t, e;
                if ((t = function () {
                    var t, e;
                    t = ie, ve++, r.length > ie ? (e = r.charAt(ie), ie++) : (e = o, 0 === ve && pe(ne));
                    ve--, e === o ? t = void 0 : (ie = t, t = o);
                    return t;
                  }()) === o)
                  if (t = [], Tr.test(r.charAt(ie)) ? (e = r.charAt(ie), ie++) : (e = o, 0 === ve && pe(mr)), e !== o)
                    for (; e !== o;)
                      t.push(e), Tr.test(r.charAt(ie)) ? (e = r.charAt(ie), ie++) : (e = o, 0 === ve && pe(mr));
                  else
                    t = o;
                return t;
              }
              function fu() {
                var r, t, e, n, u, s, a, i;
                if (r = ie, (t = vu()) !== o) {
                  for (e = [], n = ie, (u = ou()) !== o && (s = qn()) !== o && (a = ou()) !== o && (i = vu()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ie = n, n = o); n !== o;)
                    e.push(n), n = ie, (u = ou()) !== o && (s = qn()) !== o && (a = ou()) !== o && (i = vu()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ie = n, n = o);
                  e !== o ? r = t = v(t, e) : (ie = r, r = o);
                } else
                  ie = r, r = o;
                return r;
              }
              function vu() {
                var t, e, n, u;
                return t = ie, e = ie, (n = on()) !== o ? (u = (u = !0 === Cu[n.toUpperCase()]) ? o : void 0) !== o ? e = n = n : (ie = e, e = o) : (ie = e, e = o), e === o && (e = null), e !== o && (n = ou()) !== o && (u = function () {
                  var t;
                  (t = du()) === o && (t = bu()) === o && (t = function () {
                    var e;
                    (e = function () {
                      var t, e, n, u;
                      return t = ie, 'string' === r.substr(ie, 6).toLowerCase() ? (e = r.substr(ie, 6), ie += 6) : (e = o, 0 === ve && pe(gt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'STRING' : (ie = t, t = o)) : (ie = t, t = o), t;
                    }()) !== o && (e = se(e));
                    return e;
                  }()) === o && (t = function () {
                    var e;
                    (e = function () {
                      var t, e, n, u;
                      return t = ie, 'numeric' === r.substr(ie, 7).toLowerCase() ? (e = r.substr(ie, 7), ie += 7) : (e = o, 0 === ve && pe(Rt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'NUMERIC' : (ie = t, t = o)) : (ie = t, t = o), t;
                    }()) === o && (e = function () {
                      var t, e, n, u;
                      return t = ie, 'int64' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(_t)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'INT64' : (ie = t, t = o)) : (ie = t, t = o), t;
                    }()) === o && (e = function () {
                      var t, e, n, u;
                      return t = ie, 'float64' === r.substr(ie, 7).toLowerCase() ? (e = r.substr(ie, 7), ie += 7) : (e = o, 0 === ve && pe(Ut)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'FLOAT64' : (ie = t, t = o)) : (ie = t, t = o), t;
                    }());
                    e !== o && (e = se(e));
                    return e;
                  }()) === o && (t = function () {
                    var e;
                    (e = Bn()) === o && (e = Xn()) === o && (e = Wn()) === o && (e = function () {
                      var t, e, n, u;
                      return t = ie, 'datetime' === r.substr(ie, 8).toLowerCase() ? (e = r.substr(ie, 8), ie += 8) : (e = o, 0 === ve && pe(Mt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'DATETIME' : (ie = t, t = o)) : (ie = t, t = o), t;
                    }());
                    e !== o && (e = se(e));
                    return e;
                  }()) === o && (t = function () {
                    var e;
                    (e = function () {
                      var t, e, n, u;
                      return t = ie, 'bytes' === r.substr(ie, 5).toLowerCase() ? (e = r.substr(ie, 5), ie += 5) : (e = o, 0 === ve && pe(St)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'BYTES' : (ie = t, t = o)) : (ie = t, t = o), t;
                    }()) === o && (e = function () {
                      var t, e, n, u;
                      return t = ie, 'bool' === r.substr(ie, 4).toLowerCase() ? (e = r.substr(ie, 4), ie += 4) : (e = o, 0 === ve && pe(It)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'BOOL' : (ie = t, t = o)) : (ie = t, t = o), t;
                    }()) === o && (e = function () {
                      var t, e, n, u;
                      return t = ie, 'geography' === r.substr(ie, 9).toLowerCase() ? (e = r.substr(ie, 9), ie += 9) : (e = o, 0 === ve && pe(Nt)), e !== o ? (n = ie, ve++, u = sn(), ve--, u === o ? n = void 0 : (ie = n, n = o), n !== o ? t = e = 'GEOGRAPHY' : (ie = t, t = o)) : (ie = t, t = o), t;
                    }());
                    e !== o && (e = se(e));
                    return e;
                  }());
                  return t;
                }()) !== o ? t = e = function (r, t) {
                  return {
                    field_name: r,
                    field_type: t
                  };
                }(e, u) : (ie = t, t = o), t;
              }
              function bu() {
                var r, t, e;
                return r = ie, (t = jn()) !== o && ou() !== o && Qn() !== o && ou() !== o && (e = fu()) !== o && ou() !== o && ru() !== o ? r = t = ae(t, e) : (ie = r, r = o), r;
              }
              function du() {
                var r, t, e;
                return r = ie, (t = Yn()) !== o && ou() !== o && Qn() !== o && ou() !== o && (e = fu()) !== o && ou() !== o && ru() !== o ? r = t = ae(t, e) : (ie = r, r = o), r;
              }
              const Lu = {
                  ARRAY: !0,
                  ALTER: !0,
                  ALL: !0,
                  ADD: !0,
                  AND: !0,
                  AS: !0,
                  ASC: !0,
                  BETWEEN: !0,
                  BY: !0,
                  CALL: !0,
                  CASE: !0,
                  CREATE: !0,
                  CROSS: !0,
                  CONTAINS: !0,
                  CURRENT_DATE: !0,
                  CURRENT_TIME: !0,
                  CURRENT_TIMESTAMP: !0,
                  CURRENT_USER: !0,
                  DELETE: !0,
                  DESC: !0,
                  DISTINCT: !0,
                  DROP: !0,
                  ELSE: !0,
                  END: !0,
                  EXISTS: !0,
                  EXPLAIN: !0,
                  FALSE: !0,
                  FROM: !0,
                  FULL: !0,
                  FOR: !0,
                  GROUP: !0,
                  HAVING: !0,
                  IN: !0,
                  INNER: !0,
                  INSERT: !0,
                  INTO: !0,
                  IS: !0,
                  JOIN: !0,
                  JSON: !0,
                  KEY: !0,
                  LEFT: !0,
                  LIKE: !0,
                  LIMIT: !0,
                  LOW_PRIORITY: !0,
                  NOT: !0,
                  NULL: !0,
                  ON: !0,
                  OR: !0,
                  ORDER: !0,
                  OUTER: !0,
                  PARTITION: !0,
                  RECURSIVE: !0,
                  RENAME: !0,
                  READ: !0,
                  RIGHT: !0,
                  SELECT: !0,
                  SESSION_USER: !0,
                  SET: !0,
                  SHOW: !0,
                  SYSTEM_USER: !0,
                  TABLE: !0,
                  THEN: !0,
                  TRUE: !0,
                  TRUNCATE: !0,
                  TYPE: !0,
                  UNION: !0,
                  UPDATE: !0,
                  USING: !0,
                  VALUES: !0,
                  WINDOW: !0,
                  WITH: !0,
                  WHEN: !0,
                  WHERE: !0,
                  WRITE: !0,
                  GLOBAL: !0,
                  SESSION: !0,
                  LOCAL: !0,
                  PERSIST: !0,
                  PERSIST_ONLY: !0
                }, Cu = {
                  BOOL: !0,
                  BYTE: !0,
                  DATE: !0,
                  DATETIME: !0,
                  FLOAT64: !0,
                  INT64: !0,
                  NUMERIC: !0,
                  STRING: !0,
                  TIME: !0,
                  TIMESTAMP: !0,
                  ARRAY: !0,
                  STRUCT: !0
                };
              function pu(r, t) {
                return {
                  type: 'unary_expr',
                  operator: r,
                  expr: t
                };
              }
              function wu(r, t, e) {
                return {
                  type: 'binary_expr',
                  operator: r,
                  left: t,
                  right: e
                };
              }
              function Eu(r) {
                const t = n(Number.MAX_SAFE_INTEGER);
                return !(n(r) < t);
              }
              function hu(r, t) {
                const e = [r];
                for (let r = 0; r < t.length; r++)
                  e.push(t[r][3]);
                return e;
              }
              function Au(r, t) {
                let e = r;
                for (let r = 0; r < t.length; r++)
                  e = wu(t[r][1], e, t[r][3]);
                return e;
              }
              function yu(r) {
                const t = Iu[r];
                return t || (r || null);
              }
              function Tu(r) {
                const t = [];
                for (let e of r.keys()) {
                  const r = e.split('::');
                  if (!r) {
                    t.push(e);
                    break;
                  }
                  r && r[1] && (r[1] = yu(r[1])), t.push(r.join('::'));
                }
                return t;
              }
              const mu = new Set(), Su = new Set(), Iu = {};
              if ((e = a()) !== o && ie === r.length)
                return e;
              throw e !== o && ie < r.length && pe({ type: 'end' }), we(fe, le < r.length ? r.charAt(le) : null, le < r.length ? Ce(le, le + 1) : Ce(le, le));
            }
          };
        },
        function (r, t, e) {
          var n = e(0);
          function u(r, t, e, n) {
            this.message = r, this.expected = t, this.found = e, this.location = n, this.name = 'SyntaxError', 'function' == typeof Error.captureStackTrace && Error.captureStackTrace(this, u);
          }
          !function (r, t) {
            function e() {
              this.constructor = r;
            }
            e.prototype = t.prototype, r.prototype = new e();
          }(u, Error), u.buildMessage = function (r, t) {
            var e = {
              literal: function (r) {
                return '"' + u(r.text) + '"';
              },
              class: function (r) {
                var t, e = '';
                for (t = 0; t < r.parts.length; t++)
                  e += r.parts[t] instanceof Array ? o(r.parts[t][0]) + '-' + o(r.parts[t][1]) : o(r.parts[t]);
                return '[' + (r.inverted ? '^' : '') + e + ']';
              },
              any: function (r) {
                return 'any character';
              },
              end: function (r) {
                return 'end of input';
              },
              other: function (r) {
                return r.description;
              }
            };
            function n(r) {
              return r.charCodeAt(0).toString(16).toUpperCase();
            }
            function u(r) {
              return r.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            function o(r) {
              return r.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            return 'Expected ' + function (r) {
              var t, n, u, o = new Array(r.length);
              for (t = 0; t < r.length; t++)
                o[t] = (u = r[t], e[u.type](u));
              if (o.sort(), o.length > 0) {
                for (t = 1, n = 1; t < o.length; t++)
                  o[t - 1] !== o[t] && (o[n] = o[t], n++);
                o.length = n;
              }
              switch (o.length) {
              case 1:
                return o[0];
              case 2:
                return o[0] + ' or ' + o[1];
              default:
                return o.slice(0, -1).join(', ') + ', or ' + o[o.length - 1];
              }
            }(r) + ' but ' + function (r) {
              return r ? '"' + u(r) + '"' : 'end of input';
            }(t) + ' found.';
          }, r.exports = {
            SyntaxError: u,
            parse: function (r, t) {
              t = void 0 !== t ? t : {};
              var e, o = {}, s = { start: Iu }, a = Iu, i = function (r, t) {
                  return Ya(r, t);
                }, c = hu('AUTO_INCREMENT', !0), l = hu('UNIQUE', !0), f = hu('PRIMARY', !0), v = hu('KEY', !0), b = hu('COLUMN_FORMAT', !0), d = hu('FIXED', !0), L = hu('DYNAMIC', !0), C = hu('DEFAULT', !0), p = hu('STORAGE', !0), w = hu('DISK', !0), E = hu('MEMORY', !0), h = hu('ALGORITHM', !0), A = hu('INSTANT', !0), y = hu('INPLACE', !0), T = hu('COPY', !0), m = hu('LOCK', !0), S = hu('NONE', !0), I = hu('SHARED', !0), N = hu('EXCLUSIVE', !0), R = hu('CHECK', !0), _ = hu('NOCHECK', !0), g = hu('PRIMARY KEY', !0), O = hu('NOT', !0), U = hu('FOR', !0), x = hu('REPLICATION', !0), M = hu('FOREIGN KEY', !0), D = hu('MATCH FULL', !0), k = hu('MATCH PARTIAL', !0), $ = hu('MATCH SIMPLE', !0), F = hu('ON DELETE', !0), P = hu('ON UPDATE', !0), H = hu('RESTRICT', !0), G = hu('CASCADE', !0), j = hu('SET NULL', !0), Y = hu('NO ACTION', !0), B = hu('SET DEFAULT', !0), X = hu('AVG_ROW_LENGTH', !0), W = hu('KEY_BLOCK_SIZE', !0), V = hu('MAX_ROWS', !0), K = hu('MIN_ROWS', !0), q = hu('STATS_SAMPLE_PAGES', !0), Z = hu('CHARACTER SET', !0), z = hu('CHARSET', !0), J = hu('COLLATE', !0), Q = hu('CONNECTION', !0), rr = hu('COMPRESSION', !0), tr = hu('\'', !1), er = hu('ZLIB', !0), nr = hu('LZ4', !0), ur = hu('ENGINE', !0), or = hu('READ', !0), sr = hu('LOCAL', !0), ar = hu('LOW_PRIORITY', !0), ir = hu('WRITE', !0), cr = hu('(', !1), lr = hu(')', !1), fr = hu('BTREE', !0), vr = hu('HASH', !0), br = hu('WITH', !0), dr = hu('PARSER', !0), Lr = hu('VISIBLE', !0), Cr = hu('INVISIBLE', !0), pr = hu('FIRST', !0), wr = hu('ROWS', !0), Er = hu('ONLY', !0), hr = hu('NEXT', !0), Ar = hu('=', !1), yr = hu('DUPLICATE', !0), Tr = function (r, t) {
                  return Ba(r, t);
                }, mr = hu('!', !1), Sr = function (r) {
                  return r[0] + ' ' + r[2];
                }, Ir = hu('>=', !1), Nr = hu('>', !1), Rr = hu('<=', !1), _r = hu('<>', !1), gr = hu('<', !1), Or = hu('!=', !1), Ur = hu('+', !1), xr = hu('-', !1), Mr = hu('*', !1), Dr = hu('/', !1), kr = hu('%', !1), $r = function (r) {
                  return r.parentheses = !0, r;
                }, Fr = function (r) {
                  return !0 === Pa[r.toUpperCase()];
                }, Pr = hu('"', !1), Hr = /^[^"]/, Gr = Au(['"'], !0, !1), jr = function (r) {
                  return r.join('');
                }, Yr = /^[^']/, Br = Au(['\''], !0, !1), Xr = hu('`', !1), Wr = /^[^`]/, Vr = Au(['`'], !0, !1), Kr = function (r, t) {
                  return r + t.join('');
                }, qr = /^[A-Za-z_]/, Zr = Au([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  '_'
                ], !1, !1), zr = /^[A-Za-z0-9_]/, Jr = Au([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_'
                ], !1, !1), Qr = /^[A-Za-z0-9_:]/, rt = Au([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_',
                  ':'
                ], !1, !1), tt = hu(':', !1), et = function (r) {
                  return {
                    type: 'string',
                    value: r[1].join('')
                  };
                }, nt = hu('ON UPDATE CURRENT_TIMESTAMP', !0), ut = /^[^"\\\0-\x1F\x7F]/, ot = Au([
                  '"',
                  '\\',
                  [
                    '\0',
                    '\x1F'
                  ],
                  '\x7F'
                ], !0, !1), st = /^[^'\\]/, at = Au([
                  '\'',
                  '\\'
                ], !0, !1), it = hu('\\\'', !1), ct = hu('\\"', !1), lt = hu('\\\\', !1), ft = hu('\\/', !1), vt = hu('\\b', !1), bt = hu('\\f', !1), dt = hu('\\n', !1), Lt = hu('\\r', !1), Ct = hu('\\t', !1), pt = hu('\\u', !1), wt = hu('\\', !1), Et = /^[\n\r]/, ht = Au([
                  '\n',
                  '\r'
                ], !1, !1), At = hu('.', !1), yt = /^[0-9]/, Tt = Au([[
                    '0',
                    '9'
                  ]], !1, !1), mt = /^[0-9a-fA-F]/, St = Au([
                  [
                    '0',
                    '9'
                  ],
                  [
                    'a',
                    'f'
                  ],
                  [
                    'A',
                    'F'
                  ]
                ], !1, !1), It = /^[eE]/, Nt = Au([
                  'e',
                  'E'
                ], !1, !1), Rt = /^[+\-]/, _t = Au([
                  '+',
                  '-'
                ], !1, !1), gt = hu('NULL', !0), Ot = hu('NOT NULL', !0), Ut = hu('TRUE', !0), xt = hu('TO', !0), Mt = hu('FALSE', !0), Dt = hu('DROP', !0), kt = hu('USE', !0), $t = hu('ALTER', !0), Ft = hu('SELECT', !0), Pt = hu('UPDATE', !0), Ht = hu('CREATE', !0), Gt = hu('TEMPORARY', !0), jt = hu('IF NOT EXISTS', !0), Yt = hu('DELETE', !0), Bt = hu('INSERT', !0), Xt = hu('RECURSIVE', !1), Wt = hu('REPLACE', !0), Vt = hu('RENAME', !0), Kt = hu('IGNORE', !0), qt = hu('PARTITION', !0), Zt = hu('INTO', !0), zt = hu('FROM', !0), Jt = hu('SET', !0), Qt = hu('UNLOCK', !0), re = hu('AS', !0), te = hu('TABLE', !0), ee = hu('TABLES', !0), ne = hu('ON', !0), ue = hu('LEFT', !0), oe = hu('RIGHT', !0), se = hu('FULL', !0), ae = hu('INNER', !0), ie = hu('JOIN', !0), ce = hu('OUTER', !0), le = hu('OVER', !0), fe = hu('UNION', !0), ve = hu('VALUES', !0), be = hu('USING', !0), de = hu('WHERE', !0), Le = hu('GROUP', !0), Ce = hu('BY', !0), pe = hu('ORDER', !0), we = hu('HAVING', !0), Ee = hu('FETCH', !0), he = hu('OFFSET', !0), Ae = hu('ASC', !0), ye = hu('DESC', !0), Te = hu('ALL', !0), me = hu('DISTINCT', !0), Se = hu('BETWEEN', !0), Ie = hu('IN', !0), Ne = hu('IS', !0), Re = hu('LIKE', !0), _e = hu('EXISTS', !0), ge = hu('AND', !0), Oe = hu('OR', !0), Ue = hu('COUNT', !0), xe = hu('MAX', !0), Me = hu('MIN', !0), De = hu('SUM', !0), ke = hu('AVG', !0), $e = hu('CALL', !0), Fe = hu('CASE', !0), Pe = hu('WHEN', !0), He = hu('THEN', !0), Ge = hu('ELSE', !0), je = hu('END', !0), Ye = hu('CAST', !0), Be = hu('CHAR', !0), Xe = hu('VARCHAR', !0), We = hu('NUMERIC', !0), Ve = hu('DECIMAL', !0), Ke = hu('SIGNED', !0), qe = hu('UNSIGNED', !0), Ze = hu('INT', !0), ze = hu('ZEROFILL', !0), Je = hu('INTEGER', !0), Qe = hu('JSON', !0), rn = hu('SMALLINT', !0), tn = hu('TINYINT', !0), en = hu('TINYTEXT', !0), nn = hu('TEXT', !0), un = hu('MEDIUMTEXT', !0), on = hu('LONGTEXT', !0), sn = hu('BIGINT', !0), an = hu('FLOAT', !0), cn = hu('DOUBLE', !0), ln = hu('DATE', !0), fn = hu('DATETIME', !0), vn = hu('TIME', !0), bn = hu('TIMESTAMP', !0), dn = hu('TRUNCATE', !0), Ln = hu('USER', !0), Cn = hu('CURRENT_DATE', !0), pn = hu('INTERVAL', !0), wn = hu('YEAR', !0), En = hu('MONTH', !0), hn = hu('DAY', !0), An = hu('HOUR', !0), yn = hu('MINUTE', !0), Tn = hu('SECOND', !0), mn = hu('CURRENT_TIME', !0), Sn = hu('CURRENT_TIMESTAMP', !0), In = hu('CURRENT_USER', !0), Nn = hu('SESSION_USER', !0), Rn = hu('SYSTEM_USER', !0), _n = hu('GLOBAL', !0), gn = hu('SESSION', !0), On = hu('PERSIST', !0), Un = hu('PERSIST_ONLY', !0), xn = hu('@', !1), Mn = hu('@@', !1), Dn = hu('$', !1), kn = hu('return', !0), $n = hu(':=', !1), Fn = hu('DUAL', !0), Pn = hu('ADD', !0), Hn = hu('COLUMN', !0), Gn = hu('INDEX', !0), jn = hu('FULLTEXT', !0), Yn = hu('SPATIAL', !0), Bn = hu('COMMENT', !0), Xn = hu('CONSTRAINT', !0), Wn = hu('REFERENCES', !0), Vn = hu('SQL_CALC_FOUND_ROWS', !0), Kn = hu('SQL_CACHE', !0), qn = hu('SQL_NO_CACHE', !0), Zn = hu('SQL_SMALL_RESULT', !0), zn = hu('SQL_BIG_RESULT', !0), Jn = hu('SQL_BUFFER_RESULT', !0), Qn = hu(',', !1), ru = hu('[', !1), tu = hu(']', !1), eu = hu(';', !1), nu = hu('->', !1), uu = hu('->>', !1), ou = hu('||', !1), su = hu('&&', !1), au = hu('/*', !1), iu = hu('*/', !1), cu = hu('--', !1), lu = hu('#', !1), fu = { type: 'any' }, vu = /^[ \t\n\r]/, bu = Au([
                  ' ',
                  '\t',
                  '\n',
                  '\r'
                ], !1, !1), du = function (r) {
                  return { dataType: r };
                }, Lu = 0, Cu = [{
                    line: 1,
                    column: 1
                  }], pu = 0, wu = [], Eu = 0;
              if ('startRule' in t) {
                if (!(t.startRule in s))
                  throw new Error('Can\'t start parsing from rule "' + t.startRule + '".');
                a = s[t.startRule];
              }
              function hu(r, t) {
                return {
                  type: 'literal',
                  text: r,
                  ignoreCase: t
                };
              }
              function Au(r, t, e) {
                return {
                  type: 'class',
                  parts: r,
                  inverted: t,
                  ignoreCase: e
                };
              }
              function yu(t) {
                var e, n = Cu[t];
                if (n)
                  return n;
                for (e = t - 1; !Cu[e];)
                  e--;
                for (n = {
                    line: (n = Cu[e]).line,
                    column: n.column
                  }; e < t;)
                  10 === r.charCodeAt(e) ? (n.line++, n.column = 1) : n.column++, e++;
                return Cu[t] = n, n;
              }
              function Tu(r, t) {
                var e = yu(r), n = yu(t);
                return {
                  start: {
                    offset: r,
                    line: e.line,
                    column: e.column
                  },
                  end: {
                    offset: t,
                    line: n.line,
                    column: n.column
                  }
                };
              }
              function mu(r) {
                Lu < pu || (Lu > pu && (pu = Lu, wu = []), wu.push(r));
              }
              function Su(r, t, e) {
                return new u(u.buildMessage(r, t), r, t, e);
              }
              function Iu() {
                var r, t;
                return r = Lu, Ea() !== o ? ((t = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = Lu, (t = Ru()) !== o) {
                    if (e = [], n = Lu, (u = Ea()) !== o && (s = pa()) !== o && (a = Ea()) !== o && (i = Ru()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (Lu = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = Lu, (u = Ea()) !== o && (s = pa()) !== o && (a = Ea()) !== o && (i = Ru()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Lu = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = function (r, t) {
                      const e = [r && r.ast || r];
                      for (let r = 0; r < t.length; r++)
                        t[r][3] && 0 !== t[r][3].length && e.push(t[r][3] && t[r][3].ast || t[r][3]);
                      return {
                        tableList: Array.from(Ka),
                        columnList: Wa(qa),
                        ast: e
                      };
                    }(t, e), r = t) : (Lu = r, r = o);
                  } else
                    Lu = r, r = o;
                  return r;
                }()) === o && (t = Nu()) === o && (t = Ru()), t !== o ? r = t : (Lu = r, r = o)) : (Lu = r, r = o), r;
              }
              function Nu() {
                var t;
                return (t = function () {
                  var r, t, e, n;
                  r = Lu, (t = is()) !== o && Ea() !== o && (e = Es()) !== o && Ea() !== o && (n = eo()) !== o ? (u = t, s = e, (a = n) && a.forEach(r => Ka.add(`${ u }::${ r.db }::${ r.table }`)), t = {
                    tableList: Array.from(Ka),
                    columnList: Wa(qa),
                    ast: {
                      type: u.toLowerCase(),
                      keyword: s.toLowerCase(),
                      name: a
                    }
                  }, r = t) : (Lu = r, r = o);
                  var u, s, a;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, c, l, f, v;
                  t = Lu, (e = ls()) !== o && Ea() !== o ? ((n = fs()) === o && (n = null), n !== o && Ea() !== o && Es() !== o && Ea() !== o ? ((u = vs()) === o && (u = null), u !== o && Ea() !== o && (s = eo()) !== o && Ea() !== o && (a = function () {
                    var r, t, e, n, u, s, a, c, l;
                    if (r = Lu, (t = La()) !== o)
                      if (Ea() !== o)
                        if ((e = gu()) !== o) {
                          for (n = [], u = Lu, (s = Ea()) !== o && (a = ba()) !== o && (c = Ea()) !== o && (l = gu()) !== o ? u = s = [
                              s,
                              a,
                              c,
                              l
                            ] : (Lu = u, u = o); u !== o;)
                            n.push(u), u = Lu, (s = Ea()) !== o && (a = ba()) !== o && (c = Ea()) !== o && (l = gu()) !== o ? u = s = [
                              s,
                              a,
                              c,
                              l
                            ] : (Lu = u, u = o);
                          n !== o && (u = Ea()) !== o && (s = Ca()) !== o ? (t = i(e, n), r = t) : (Lu = r, r = o);
                        } else
                          Lu = r, r = o;
                      else
                        Lu = r, r = o;
                    else
                      Lu = r, r = o;
                    return r;
                  }()) !== o && Ea() !== o ? ((c = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = Lu, (t = Hu()) !== o) {
                      for (e = [], n = Lu, (u = Ea()) !== o ? ((s = ba()) === o && (s = null), s !== o && (a = Ea()) !== o && (i = Hu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Lu = n, n = o)) : (Lu = n, n = o); n !== o;)
                        e.push(n), n = Lu, (u = Ea()) !== o ? ((s = ba()) === o && (s = null), s !== o && (a = Ea()) !== o && (i = Hu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Lu = n, n = o)) : (Lu = n, n = o);
                      e !== o ? (t = Ya(t, e), r = t) : (Lu = r, r = o);
                    } else
                      Lu = r, r = o;
                    return r;
                  }()) === o && (c = null), c !== o && Ea() !== o ? ((l = function () {
                    var t, e, n, u;
                    t = Lu, 'ignore' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(Kt));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) === o && (l = bs()), l === o && (l = null), l !== o && Ea() !== o ? ((f = ws()) === o && (f = null), f !== o && Ea() !== o ? ((v = _u()) === o && (v = null), v !== o ? (b = e, d = n, L = u, p = a, w = c, E = l, h = f, A = v, (C = s) && C.forEach(r => Ka.add(`create::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(Ka),
                    columnList: Wa(qa),
                    ast: {
                      type: b[0].toLowerCase(),
                      keyword: 'table',
                      temporary: d && d[0].toLowerCase(),
                      if_not_exists: L && L[0].toLowerCase(),
                      table: C,
                      ignore_replace: E && E[0].toLowerCase(),
                      as: h && h[0].toLowerCase(),
                      query_expr: A && A.ast,
                      create_definitions: p,
                      table_options: w
                    }
                  }, t = e) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o);
                  var b, d, L, C, p, w, E, h, A;
                  t === o && (t = Lu, (e = ls()) !== o && Ea() !== o ? ((n = fs()) === o && (n = null), n !== o && Ea() !== o && Es() !== o && Ea() !== o ? ((u = vs()) === o && (u = null), u !== o && Ea() !== o && (s = eo()) !== o && Ea() !== o && (a = function r() {
                    var t, e;
                    (t = function () {
                      var r, t;
                      r = Lu, Ms() !== o && Ea() !== o && (t = eo()) !== o ? r = {
                        type: 'like',
                        table: t
                      } : (Lu = r, r = o);
                      return r;
                    }()) === o && (t = Lu, La() !== o && Ea() !== o && (e = r()) !== o && Ea() !== o && Ca() !== o ? ((n = e).parentheses = !0, t = n) : (Lu = t, t = o));
                    var n;
                    return t;
                  }()) !== o ? (e = function (r, t, e, n, u) {
                    return n && n.forEach(r => Ka.add(`create::${ r.db }::${ r.table }`)), {
                      tableList: Array.from(Ka),
                      columnList: Wa(qa),
                      ast: {
                        type: r[0].toLowerCase(),
                        keyword: 'table',
                        temporary: t && t[0].toLowerCase(),
                        if_not_exists: e && e[0].toLowerCase(),
                        table: n,
                        like: u
                      }
                    };
                  }(e, n, u, s, a), t = e) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o));
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Lu, (e = function () {
                    var t, e, n, u;
                    t = Lu, 'truncate' === r.substr(Lu, 8).toLowerCase() ? (e = r.substr(Lu, 8), Lu += 8) : (e = o, 0 === Eu && mu(dn));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'TRUNCATE' : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) !== o && Ea() !== o ? ((n = Es()) === o && (n = null), n !== o && Ea() !== o && (u = eo()) !== o ? (s = e, a = n, (i = u) && i.forEach(r => Ka.add(`${ s }::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(Ka),
                    columnList: Wa(qa),
                    ast: {
                      type: s.toLowerCase(),
                      keyword: a && a.toLowerCase() || 'table',
                      name: i
                    }
                  }, t = e) : (Lu = t, t = o)) : (Lu = t, t = o);
                  var s, a, i;
                  return t;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = Lu, (t = ds()) !== o && Ea() !== o && Es() !== o && Ea() !== o && (e = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = Lu, (t = Ju()) !== o) {
                      for (e = [], n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = Ju()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (Lu = n, n = o); n !== o;)
                        e.push(n), n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = Ju()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (Lu = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (Lu = r, r = o);
                    } else
                      Lu = r, r = o;
                    return r;
                  }()) !== o ? ((n = e).forEach(r => r.forEach(r => r.table && Ka.add(`rename::${ r.db }::${ r.table }`))), t = {
                    tableList: Array.from(Ka),
                    columnList: Wa(qa),
                    ast: {
                      type: 'rename',
                      table: n
                    }
                  }, r = t) : (Lu = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = Lu, (e = function () {
                    var t, e, n, u;
                    t = Lu, 'call' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu($e));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'CALL' : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) !== o && Ea() !== o && (n = xa()) !== o ? (u = n, e = {
                    tableList: Array.from(Ka),
                    columnList: Wa(qa),
                    ast: {
                      type: 'call',
                      expr: u
                    }
                  }, t = e) : (Lu = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = Lu, (e = function () {
                    var t, e, n, u;
                    t = Lu, 'use' === r.substr(Lu, 3).toLowerCase() ? (e = r.substr(Lu, 3), Lu += 3) : (e = o, 0 === Eu && mu(kt));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) !== o && Ea() !== o && (n = $o()) !== o ? (u = n, Ka.add(`use::${ u }::null`), e = {
                    tableList: Array.from(Ka),
                    columnList: Wa(qa),
                    ast: {
                      type: 'use',
                      db: u
                    }
                  }, t = e) : (Lu = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Lu, (e = function () {
                    var t, e, n, u;
                    t = Lu, 'alter' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu($t));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) !== o && Ea() !== o && Es() !== o && Ea() !== o && (n = eo()) !== o && Ea() !== o && (u = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = Lu, (t = xu()) !== o) {
                      for (e = [], n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = xu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (Lu = n, n = o); n !== o;)
                        e.push(n), n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = xu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (Lu = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (Lu = r, r = o);
                    } else
                      Lu = r, r = o;
                    return r;
                  }()) !== o ? (a = u, (s = n) && s.length > 0 && s.forEach(r => Ka.add(`alter::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(Ka),
                    columnList: Wa(qa),
                    ast: {
                      type: 'alter',
                      table: s,
                      expr: a
                    }
                  }, t = e) : (Lu = t, t = o);
                  var s, a;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Lu, (e = ps()) !== o && Ea() !== o ? ((n = function () {
                    var t, e, n, u;
                    t = Lu, 'global' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(_n));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'GLOBAL' : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = Lu, 'session' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(gn));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'SESSION' : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = Lu, 'local' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(sr));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'LOCAL' : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = Lu, 'persist' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(On));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'PERSIST' : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = Lu, 'persist_only' === r.substr(Lu, 12).toLowerCase() ? (e = r.substr(Lu, 12), Lu += 12) : (e = o, 0 === Eu && mu(Un));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'PERSIST_ONLY' : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()), n === o && (n = null), n !== o && Ea() !== o && (u = Na()) !== o ? (s = n, (a = u).keyword = s, e = {
                    tableList: Array.from(Ka),
                    columnList: Wa(qa),
                    ast: {
                      type: 'set',
                      expr: a
                    }
                  }, t = e) : (Lu = t, t = o)) : (Lu = t, t = o);
                  var s, a;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = Lu, (e = function () {
                    var t, e, n, u;
                    t = Lu, 'lock' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(m));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) !== o && Ea() !== o && hs() !== o && Ea() !== o && (n = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = Lu, (t = Gu()) !== o) {
                      for (e = [], n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (i = Gu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Lu = n, n = o); n !== o;)
                        e.push(n), n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (i = Gu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Lu = n, n = o);
                      e !== o ? (t = Ya(t, e), r = t) : (Lu = r, r = o);
                    } else
                      Lu = r, r = o;
                    return r;
                  }()) !== o ? (u = n, e = {
                    tableList: Array.from(Ka),
                    columnList: Wa(qa),
                    ast: {
                      type: 'lock',
                      keyword: 'tables',
                      tables: u
                    }
                  }, t = e) : (Lu = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e;
                  t = Lu, (e = function () {
                    var t, e, n, u;
                    t = Lu, 'unlock' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(Qt));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) !== o && Ea() !== o && hs() !== o ? (e = {
                    tableList: Array.from(Ka),
                    columnList: Wa(qa),
                    ast: {
                      type: 'unlock',
                      keyword: 'tables'
                    }
                  }, t = e) : (Lu = t, t = o);
                  return t;
                }()), t;
              }
              function Ru() {
                var t;
                return (t = _u()) === o && (t = function () {
                  var r, t, e, n, u;
                  r = Lu, (t = cs()) !== o && Ea() !== o && (e = eo()) !== o && Ea() !== o && ps() !== o && Ea() !== o && (n = bo()) !== o && Ea() !== o ? ((u = io()) === o && (u = null), u !== o ? (a = n, i = u, (s = e) && s.forEach(r => {
                    const {
                      db: t,
                      as: e,
                      table: n
                    } = r;
                    Ka.add(`update::${ t }::${ n }`);
                  }), a && a.forEach(r => qa.add(`update::${ r.table }::${ r.column }`)), t = {
                    tableList: Array.from(Ka),
                    columnList: Wa(qa),
                    ast: {
                      type: 'update',
                      table: s,
                      set: a,
                      where: i
                    }
                  }, r = t) : (Lu = r, r = o)) : (Lu = r, r = o);
                  var s, a, i;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n, u, s, a, c;
                  r = Lu, (t = Eo()) !== o && Ea() !== o ? ((e = Cs()) === o && (e = null), e !== o && Ea() !== o && (n = so()) !== o && Ea() !== o ? ((u = po()) === o && (u = null), u !== o && Ea() !== o && La() !== o && Ea() !== o && (s = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = Lu, (t = Po()) !== o) {
                      for (e = [], n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = Po()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (Lu = n, n = o); n !== o;)
                        e.push(n), n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = Po()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (Lu = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (Lu = r, r = o);
                    } else
                      Lu = r, r = o;
                    return r;
                  }()) !== o && Ea() !== o && Ca() !== o && Ea() !== o && (a = Co()) !== o && Ea() !== o ? ((c = wo()) === o && (c = null), c !== o ? (t = function (r, t, e, n, u, o) {
                    if (t && (Ka.add(`insert::${ t.db }::${ t.table }`), t.as = null), n) {
                      let r = t && t.table || null;
                      n.forEach(t => qa.add(`insert::${ r }::${ t }`));
                    }
                    return {
                      tableList: Array.from(Ka),
                      columnList: Wa(qa),
                      ast: {
                        type: r,
                        table: [t],
                        columns: n,
                        values: u,
                        partition: e,
                        on_duplicate_update: o
                      }
                    };
                  }(t, n, u, s, a, c), r = t) : (Lu = r, r = o)) : (Lu = r, r = o)) : (Lu = r, r = o)) : (Lu = r, r = o);
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n, u, s;
                  r = Lu, (t = Eo()) !== o && Ea() !== o && Cs() !== o && Ea() !== o && (e = so()) !== o && Ea() !== o ? ((n = po()) === o && (n = null), n !== o && Ea() !== o && (u = Co()) !== o && Ea() !== o ? ((s = wo()) === o && (s = null), s !== o ? (a = t, c = n, l = u, f = s, (i = e) && (Ka.add(`insert::${ i.db }::${ i.table }`), qa.add(`insert::${ i.table }::(.*)`), i.as = null), t = {
                    tableList: Array.from(Ka),
                    columnList: Wa(qa),
                    ast: {
                      type: a,
                      table: [i],
                      columns: null,
                      values: l,
                      partition: c,
                      on_duplicate_update: f
                    }
                  }, r = t) : (Lu = r, r = o)) : (Lu = r, r = o)) : (Lu = r, r = o);
                  var a, i, c, l, f;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n, u, s;
                  r = Lu, (t = Eo()) !== o && Ea() !== o && Cs() !== o && Ea() !== o && (e = so()) !== o && Ea() !== o ? ((n = po()) === o && (n = null), n !== o && Ea() !== o && ps() !== o && Ea() !== o && (u = bo()) !== o && Ea() !== o ? ((s = wo()) === o && (s = null), s !== o ? (a = t, c = n, l = u, f = s, (i = e) && (Ka.add(`insert::${ i.db }::${ i.table }`), qa.add(`insert::${ i.table }::(.*)`), i.as = null), t = {
                    tableList: Array.from(Ka),
                    columnList: Wa(qa),
                    ast: {
                      type: a,
                      table: [i],
                      columns: null,
                      partition: c,
                      set: l,
                      on_duplicate_update: f
                    }
                  }, r = t) : (Lu = r, r = o)) : (Lu = r, r = o)) : (Lu = r, r = o);
                  var a, i, c, l, f;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n, u, s;
                  t = Lu, (e = function () {
                    var t, e, n, u;
                    t = Lu, 'delete' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(Yt));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) !== o && Ea() !== o ? ((n = eo()) === o && (n = null), n !== o && Ea() !== o && (u = zu()) !== o && Ea() !== o ? ((s = io()) === o && (s = null), s !== o ? (e = function (r, t, e) {
                    if (t && t.forEach(r => {
                        r.table && Ka.add(`delete::${ r.db }::${ r.table }`), qa.add(`delete::${ r.table }::(.*)`);
                      }), null === r && 1 === t.length) {
                      const e = t[0];
                      r = [{
                          db: e.db,
                          table: e.table,
                          as: e.as,
                          addition: !0
                        }];
                    }
                    return {
                      tableList: Array.from(Ka),
                      columnList: Wa(qa),
                      ast: {
                        type: 'delete',
                        table: r,
                        from: t,
                        where: e
                      }
                    };
                  }(n, u, s), t = e) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) === o && (t = Nu()) === o && (t = function () {
                  var r, t;
                  r = [], t = Ia();
                  for (; t !== o;)
                    r.push(t), t = Ia();
                  return r;
                }()), t;
              }
              function _u() {
                var r, t, e, n, u, s, a, i, c, l;
                if (r = Lu, (t = ju()) !== o) {
                  for (e = [], n = Lu, (u = Ea()) !== o && (s = ms()) !== o && (a = Ea()) !== o ? ((i = _s()) === o && (i = null), i !== o && (c = Ea()) !== o && (l = ju()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c,
                      l
                    ] : (Lu = n, n = o)) : (Lu = n, n = o); n !== o;)
                    e.push(n), n = Lu, (u = Ea()) !== o && (s = ms()) !== o && (a = Ea()) !== o ? ((i = _s()) === o && (i = null), i !== o && (c = Ea()) !== o && (l = ju()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c,
                      l
                    ] : (Lu = n, n = o)) : (Lu = n, n = o);
                  e !== o && (n = Ea()) !== o ? ((u = co()) === o && (u = null), u !== o && (s = Ea()) !== o ? ((a = vo()) === o && (a = null), a !== o ? r = t = function (r, t, e, n) {
                    let u = r;
                    for (let r = 0; r < t.length; r++)
                      u._next = t[r][5], u.union = t[r][3] ? 'union all' : 'union', u = u._next;
                    return e && (r._orderby = e), n && (r._limit = n), {
                      tableList: Array.from(Ka),
                      columnList: Wa(qa),
                      ast: r
                    };
                  }(t, e, u, a) : (Lu = r, r = o)) : (Lu = r, r = o)) : (Lu = r, r = o);
                } else
                  Lu = r, r = o;
                return r;
              }
              function gu() {
                var t;
                return (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u, s, a;
                    t = Lu, (e = ku()) === o && (e = null);
                    e !== o && Ea() !== o ? ('primary key' === r.substr(Lu, 11).toLowerCase() ? (n = r.substr(Lu, 11), Lu += 11) : (n = o, 0 === Eu && mu(g)), n !== o && Ea() !== o ? ((u = Qu()) === o && (u = null), u !== o && Ea() !== o && (s = Xu()) !== o && Ea() !== o ? ((a = ro()) === o && (a = null), a !== o ? (c = n, l = u, f = s, v = a, e = {
                      constraint: (i = e) && i.constraint,
                      definition: f,
                      constraint_type: c.toLowerCase(),
                      keyword: i && i.keyword,
                      index_type: l,
                      resource: 'constraint',
                      index_options: v
                    }, t = e) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o);
                    var i, c, l, f, v;
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a, i, c;
                    t = Lu, (e = ku()) === o && (e = null);
                    e !== o && Ea() !== o && (n = function () {
                      var t, e, n, u;
                      t = Lu, 'unique' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(l));
                      e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'UNIQUE' : (Lu = t, t = o)) : (Lu = t, t = o);
                      return t;
                    }()) !== o && Ea() !== o ? ((u = ia()) === o && (u = ca()), u === o && (u = null), u !== o && Ea() !== o ? ((s = Po()) === o && (s = null), s !== o && Ea() !== o ? ((a = Qu()) === o && (a = null), a !== o && Ea() !== o && (i = Xu()) !== o && Ea() !== o ? ((c = ro()) === o && (c = null), c !== o ? (v = n, b = u, d = s, L = a, C = i, p = c, e = {
                      constraint: (f = e) && f.constraint,
                      definition: C,
                      constraint_type: b && `${ v.toLowerCase() } ${ b.toLowerCase() }` || v.toLowerCase(),
                      keyword: f && f.keyword,
                      index_type: L,
                      index: d,
                      resource: 'constraint',
                      index_options: p
                    }, t = e) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o);
                    var f, v, b, d, L, C, p;
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a;
                    t = Lu, (e = ku()) === o && (e = null);
                    e !== o && Ea() !== o ? ('foreign key' === r.substr(Lu, 11).toLowerCase() ? (n = r.substr(Lu, 11), Lu += 11) : (n = o, 0 === Eu && mu(M)), n !== o && Ea() !== o ? ((u = Po()) === o && (u = null), u !== o && Ea() !== o && (s = Xu()) !== o && Ea() !== o ? ((a = Fu()) === o && (a = null), a !== o ? (c = n, l = u, f = s, v = a, e = {
                      constraint: (i = e) && i.constraint,
                      definition: f,
                      constraint_type: c,
                      keyword: i && i.keyword,
                      index: l,
                      resource: 'constraint',
                      reference_definition: v
                    }, t = e) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o);
                    var i, c, l, f, v;
                    return t;
                  }()) === o && (t = $u());
                  return t;
                }()) === o && (t = Ou()) === o && (t = Mu()) === o && (t = Du()), t;
              }
              function Ou() {
                var t, e, n, u, s, a, i, h, A, y, T, m, S, I, N, R, _, g, O, U, x, M, D, k, $;
                return t = Lu, (e = ko()) !== o && Ea() !== o && (n = $a()) !== o && Ea() !== o ? ((u = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    t = Lu, 'not null' === r.substr(Lu, 8).toLowerCase() ? (e = r.substr(Lu, 8), Lu += 8) : (e = o, 0 === Eu && mu(Ot));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'not null',
                    value: 'not null'
                  });
                  return e;
                }()) === o && (u = Ko()), u === o && (u = null), u !== o && Ea() !== o ? ((s = function () {
                  var r, t;
                  r = Lu, ss() !== o && Ea() !== o ? ((t = Vo()) === o && (t = So()), t !== o ? r = {
                    type: 'default',
                    value: t
                  } : (Lu = r, r = o)) : (Lu = r, r = o);
                  return r;
                }()) === o && (s = null), s !== o && Ea() !== o ? ('auto_increment' === r.substr(Lu, 14).toLowerCase() ? (a = r.substr(Lu, 14), Lu += 14) : (a = o, 0 === Eu && mu(c)), a === o && (a = null), a !== o && Ea() !== o ? (i = Lu, 'unique' === r.substr(Lu, 6).toLowerCase() ? (h = r.substr(Lu, 6), Lu += 6) : (h = o, 0 === Eu && mu(l)), h === o && ('primary' === r.substr(Lu, 7).toLowerCase() ? (h = r.substr(Lu, 7), Lu += 7) : (h = o, 0 === Eu && mu(f))), h === o && (h = null), h !== o && (A = Ea()) !== o ? ('key' === r.substr(Lu, 3).toLowerCase() ? (y = r.substr(Lu, 3), Lu += 3) : (y = o, 0 === Eu && mu(v)), y !== o ? i = h = [
                  h,
                  A,
                  y
                ] : (Lu = i, i = o)) : (Lu = i, i = o), i === o && (i = null), i !== o && (h = Ea()) !== o ? ((A = ya()) === o && (A = null), A !== o && (y = Ea()) !== o ? ((T = Uu()) === o && (T = null), T !== o && Ea() !== o ? ((m = function () {
                  var t, e, n;
                  t = Lu, 'column_format' === r.substr(Lu, 13).toLowerCase() ? (e = r.substr(Lu, 13), Lu += 13) : (e = o, 0 === Eu && mu(b));
                  e !== o && Ea() !== o ? ('fixed' === r.substr(Lu, 5).toLowerCase() ? (n = r.substr(Lu, 5), Lu += 5) : (n = o, 0 === Eu && mu(d)), n === o && ('dynamic' === r.substr(Lu, 7).toLowerCase() ? (n = r.substr(Lu, 7), Lu += 7) : (n = o, 0 === Eu && mu(L)), n === o && ('default' === r.substr(Lu, 7).toLowerCase() ? (n = r.substr(Lu, 7), Lu += 7) : (n = o, 0 === Eu && mu(C)))), n !== o ? (e = function (r, t) {
                    return {
                      type: 'column_format',
                      value: t.toLowerCase()
                    };
                  }(0, n), t = e) : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) === o && (m = null), m !== o && Ea() !== o ? ((S = function () {
                  var t, e, n;
                  t = Lu, 'storage' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(p));
                  e !== o && Ea() !== o ? ('disk' === r.substr(Lu, 4).toLowerCase() ? (n = r.substr(Lu, 4), Lu += 4) : (n = o, 0 === Eu && mu(w)), n === o && ('memory' === r.substr(Lu, 6).toLowerCase() ? (n = r.substr(Lu, 6), Lu += 6) : (n = o, 0 === Eu && mu(E))), n !== o ? (e = {
                    type: 'storage',
                    value: n.toLowerCase()
                  }, t = e) : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) === o && (S = null), S !== o && Ea() !== o ? ((I = Fu()) === o && (I = null), I !== o ? (N = e, R = n, _ = u, g = s, O = a, U = i, x = A, M = T, D = m, k = S, $ = I, qa.add(`create::${ N.table }::${ N.column }`), _ && !_.value && (_.value = 'null'), t = e = {
                  column: N,
                  definition: R,
                  nullable: _,
                  default_val: g,
                  auto_increment: O && O.toLowerCase(),
                  unique_or_primary: U && `${ U[0].toLowerCase() } ${ U[2].toLowerCase() }`,
                  comment: x,
                  collate: M,
                  column_format: D,
                  storage: k,
                  reference_definition: $,
                  resource: 'column'
                }) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Uu() {
                var t, e;
                return t = Lu, function () {
                  var t, e, n, u;
                  t = Lu, 'collate' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(J));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'COLLATE' : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }() !== o && Ea() !== o && (e = Go()) !== o ? t = {
                  type: 'collate',
                  value: e
                } : (Lu = t, t = o), t;
              }
              function xu() {
                var t;
                return (t = function () {
                  var r, t, e;
                  r = Lu, (t = sa()) !== o && Ea() !== o && (e = $u()) !== o ? (n = e, t = {
                    action: 'add',
                    ...n,
                    type: 'alter'
                  }, r = t) : (Lu = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Lu, (e = is()) !== o && Ea() !== o ? ('check' === r.substr(Lu, 5).toLowerCase() ? (n = r.substr(Lu, 5), Lu += 5) : (n = o, 0 === Eu && mu(R)), n !== o && Ea() !== o && (u = Go()) !== o ? (e = {
                    action: 'drop',
                    constraint: u,
                    keyword: n.toLowerCase(),
                    resource: 'constraint',
                    type: 'alter'
                  }, t = e) : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Lu, Is() !== o && Ea() !== o ? ('check' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(R)), e !== o && Ea() !== o ? ('check' === r.substr(Lu, 5).toLowerCase() ? (n = r.substr(Lu, 5), Lu += 5) : (n = o, 0 === Eu && mu(R)), n !== o && Ea() !== o && fa() !== o && Ea() !== o && (u = Go()) !== o ? t = {
                    action: 'with',
                    constraint: u,
                    keyword: 'check check',
                    resource: 'constraint',
                    type: 'alter'
                  } : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = Lu, 'nocheck' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(_));
                  e !== o && Ea() !== o && fa() !== o && Ea() !== o && (n = Go()) !== o ? t = e = {
                    action: 'nocheck',
                    constraint: n,
                    resource: 'constraint',
                    type: 'alter'
                  } : (Lu = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var r, t, e, n;
                  r = Lu, (t = sa()) !== o && Ea() !== o ? ((e = aa()) === o && (e = null), e !== o && Ea() !== o && (n = Ou()) !== o ? (u = e, s = n, t = {
                    action: 'add',
                    ...s,
                    keyword: u,
                    resource: 'column',
                    type: 'alter'
                  }, r = t) : (Lu = r, r = o)) : (Lu = r, r = o);
                  var u, s;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = Lu, is() !== o && Ea() !== o ? ((t = aa()) === o && (t = null), t !== o && Ea() !== o && (e = ko()) !== o ? r = {
                    action: 'drop',
                    column: e,
                    keyword: t,
                    resource: 'column',
                    type: 'alter'
                  } : (Lu = r, r = o)) : (Lu = r, r = o);
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = Lu, (t = sa()) !== o && Ea() !== o && (e = Mu()) !== o ? (n = e, t = {
                    action: 'add',
                    type: 'alter',
                    ...n
                  }, r = t) : (Lu = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = Lu, (t = sa()) !== o && Ea() !== o && (e = Du()) !== o ? (n = e, t = {
                    action: 'add',
                    type: 'alter',
                    ...n
                  }, r = t) : (Lu = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n;
                  r = Lu, (t = ds()) !== o && Ea() !== o ? ((e = as()) === o && (e = ws()), e === o && (e = null), e !== o && Ea() !== o && (n = $o()) !== o ? (s = n, t = {
                    action: 'rename',
                    type: 'alter',
                    resource: 'table',
                    keyword: (u = e) && u[0].toLowerCase(),
                    table: s
                  }, r = t) : (Lu = r, r = o)) : (Lu = r, r = o);
                  var u, s;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = Lu, 'algorithm' === r.substr(Lu, 9).toLowerCase() ? (e = r.substr(Lu, 9), Lu += 9) : (e = o, 0 === Eu && mu(h));
                  e !== o && Ea() !== o && oa() !== o && Ea() !== o ? ('default' === r.substr(Lu, 7).toLowerCase() ? (n = r.substr(Lu, 7), Lu += 7) : (n = o, 0 === Eu && mu(C)), n === o && ('instant' === r.substr(Lu, 7).toLowerCase() ? (n = r.substr(Lu, 7), Lu += 7) : (n = o, 0 === Eu && mu(A)), n === o && ('inplace' === r.substr(Lu, 7).toLowerCase() ? (n = r.substr(Lu, 7), Lu += 7) : (n = o, 0 === Eu && mu(y)), n === o && ('copy' === r.substr(Lu, 4).toLowerCase() ? (n = r.substr(Lu, 4), Lu += 4) : (n = o, 0 === Eu && mu(T))))), n !== o ? t = e = {
                    type: 'alter',
                    keyword: 'algorithm',
                    resource: 'algorithm',
                    algorithm: n
                  } : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = Lu, 'lock' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(m));
                  e !== o && Ea() !== o && oa() !== o && Ea() !== o ? ('default' === r.substr(Lu, 7).toLowerCase() ? (n = r.substr(Lu, 7), Lu += 7) : (n = o, 0 === Eu && mu(C)), n === o && ('none' === r.substr(Lu, 4).toLowerCase() ? (n = r.substr(Lu, 4), Lu += 4) : (n = o, 0 === Eu && mu(S)), n === o && ('shared' === r.substr(Lu, 6).toLowerCase() ? (n = r.substr(Lu, 6), Lu += 6) : (n = o, 0 === Eu && mu(I)), n === o && ('exclusive' === r.substr(Lu, 9).toLowerCase() ? (n = r.substr(Lu, 9), Lu += 9) : (n = o, 0 === Eu && mu(N))))), n !== o ? t = e = {
                    type: 'alter',
                    keyword: 'lock',
                    resource: 'lock',
                    lock: n
                  } : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()), t;
              }
              function Mu() {
                var r, t, e, n, u, s, a, i;
                return r = Lu, (t = ia()) === o && (t = ca()), t !== o && Ea() !== o ? ((e = Po()) === o && (e = null), e !== o && Ea() !== o ? ((n = Qu()) === o && (n = null), n !== o && Ea() !== o && (u = Xu()) !== o && Ea() !== o ? ((s = ro()) === o && (s = null), s !== o && Ea() !== o ? (a = n, i = s, r = t = {
                  index: e,
                  definition: u,
                  keyword: t.toLowerCase(),
                  index_type: a,
                  resource: 'index',
                  index_options: i
                }) : (Lu = r, r = o)) : (Lu = r, r = o)) : (Lu = r, r = o)) : (Lu = r, r = o), r;
              }
              function Du() {
                var t, e, n, u, s, a, i, c, l;
                return t = Lu, (e = function () {
                  var t, e, n, u;
                  t = Lu, 'fulltext' === r.substr(Lu, 8).toLowerCase() ? (e = r.substr(Lu, 8), Lu += 8) : (e = o, 0 === Eu && mu(jn));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'FULLTEXT' : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) === o && (e = function () {
                  var t, e, n, u;
                  t = Lu, 'spatial' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(Yn));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'SPATIAL' : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()), e !== o && Ea() !== o ? ((n = ia()) === o && (n = ca()), n === o && (n = null), n !== o && Ea() !== o ? ((u = Po()) === o && (u = null), u !== o && Ea() !== o && (s = Xu()) !== o && Ea() !== o ? ((a = ro()) === o && (a = null), a !== o && Ea() !== o ? (i = e, l = a, t = e = {
                  index: u,
                  definition: s,
                  keyword: (c = n) && `${ i.toLowerCase() } ${ c.toLowerCase() }` || i.toLowerCase(),
                  index_options: l,
                  resource: 'index'
                }) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function ku() {
                var r, t, e, n;
                return r = Lu, (t = fa()) !== o && Ea() !== o ? ((e = $o()) === o && (e = null), e !== o ? (n = e, r = t = {
                  keyword: t.toLowerCase(),
                  constraint: n
                }) : (Lu = r, r = o)) : (Lu = r, r = o), r;
              }
              function $u() {
                var t, e, n, u, s, a, i, c, l, f, v, b, d;
                return t = Lu, (e = ku()) === o && (e = null), e !== o && Ea() !== o ? ('check' === r.substr(Lu, 5).toLowerCase() ? (n = r.substr(Lu, 5), Lu += 5) : (n = o, 0 === Eu && mu(R)), n !== o && Ea() !== o ? (u = Lu, 'not' === r.substr(Lu, 3).toLowerCase() ? (s = r.substr(Lu, 3), Lu += 3) : (s = o, 0 === Eu && mu(O)), s !== o && (a = Ea()) !== o ? ('for' === r.substr(Lu, 3).toLowerCase() ? (i = r.substr(Lu, 3), Lu += 3) : (i = o, 0 === Eu && mu(U)), i !== o && (c = Ea()) !== o ? ('replication' === r.substr(Lu, 11).toLowerCase() ? (l = r.substr(Lu, 11), Lu += 11) : (l = o, 0 === Eu && mu(x)), l !== o && (f = Ea()) !== o ? u = s = [
                  s,
                  a,
                  i,
                  c,
                  l,
                  f
                ] : (Lu = u, u = o)) : (Lu = u, u = o)) : (Lu = u, u = o), u === o && (u = null), u !== o && (s = La()) !== o && (a = Ea()) !== o && (i = So()) !== o && (c = Ea()) !== o && (l = Ca()) !== o ? (v = e, b = u, d = i, t = e = {
                  constraint_type: n.toLowerCase(),
                  keyword: v && v.keyword,
                  constraint: v && v.constraint,
                  index_type: b && { keyword: 'not for replication' },
                  definition: [d],
                  resource: 'constraint'
                }) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Fu() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = Lu, (e = function () {
                  var t, e, n, u;
                  t = Lu, 'references' === r.substr(Lu, 10).toLowerCase() ? (e = r.substr(Lu, 10), Lu += 10) : (e = o, 0 === Eu && mu(Wn));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'REFERENCES' : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) !== o && Ea() !== o && (n = eo()) !== o && Ea() !== o && (u = Xu()) !== o && Ea() !== o ? ('match full' === r.substr(Lu, 10).toLowerCase() ? (s = r.substr(Lu, 10), Lu += 10) : (s = o, 0 === Eu && mu(D)), s === o && ('match partial' === r.substr(Lu, 13).toLowerCase() ? (s = r.substr(Lu, 13), Lu += 13) : (s = o, 0 === Eu && mu(k)), s === o && ('match simple' === r.substr(Lu, 12).toLowerCase() ? (s = r.substr(Lu, 12), Lu += 12) : (s = o, 0 === Eu && mu($)))), s === o && (s = null), s !== o && Ea() !== o ? ((a = Pu()) === o && (a = null), a !== o && Ea() !== o ? ((i = Pu()) === o && (i = null), i !== o ? (c = s, l = a, f = i, t = e = {
                  definition: u,
                  table: n,
                  keyword: e.toLowerCase(),
                  match: c && c.toLowerCase(),
                  on_delete: l,
                  on_update: f
                }) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Pu() {
                var t, e, n, u;
                return t = Lu, 'on delete' === r.substr(Lu, 9).toLowerCase() ? (e = r.substr(Lu, 9), Lu += 9) : (e = o, 0 === Eu && mu(F)), e === o && ('on update' === r.substr(Lu, 9).toLowerCase() ? (e = r.substr(Lu, 9), Lu += 9) : (e = o, 0 === Eu && mu(P))), e !== o && Ea() !== o && (n = function () {
                  var e;
                  'restrict' === r.substr(Lu, 8).toLowerCase() ? (e = r.substr(Lu, 8), Lu += 8) : (e = o, 0 === Eu && mu(H));
                  e === o && ('cascade' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(G)), e === o && ('set null' === r.substr(Lu, 8).toLowerCase() ? (e = r.substr(Lu, 8), Lu += 8) : (e = o, 0 === Eu && mu(j)), e === o && ('no action' === r.substr(Lu, 9).toLowerCase() ? (e = r.substr(Lu, 9), Lu += 9) : (e = o, 0 === Eu && mu(Y)), e === o && ('set default' === r.substr(Lu, 11).toLowerCase() ? (e = r.substr(Lu, 11), Lu += 11) : (e = o, 0 === Eu && mu(B))))));
                  e !== o && (e = e.toLowerCase());
                  return e;
                }()) !== o ? (u = n, t = e = {
                  type: e.toLowerCase(),
                  value: u
                }) : (Lu = t, t = o), t;
              }
              function Hu() {
                var t, e, n, u, s, a, i, l, f;
                return t = Lu, 'auto_increment' === r.substr(Lu, 14).toLowerCase() ? (e = r.substr(Lu, 14), Lu += 14) : (e = o, 0 === Eu && mu(c)), e === o && ('avg_row_length' === r.substr(Lu, 14).toLowerCase() ? (e = r.substr(Lu, 14), Lu += 14) : (e = o, 0 === Eu && mu(X)), e === o && ('key_block_size' === r.substr(Lu, 14).toLowerCase() ? (e = r.substr(Lu, 14), Lu += 14) : (e = o, 0 === Eu && mu(W)), e === o && ('max_rows' === r.substr(Lu, 8).toLowerCase() ? (e = r.substr(Lu, 8), Lu += 8) : (e = o, 0 === Eu && mu(V)), e === o && ('min_rows' === r.substr(Lu, 8).toLowerCase() ? (e = r.substr(Lu, 8), Lu += 8) : (e = o, 0 === Eu && mu(K)), e === o && ('stats_sample_pages' === r.substr(Lu, 18).toLowerCase() ? (e = r.substr(Lu, 18), Lu += 18) : (e = o, 0 === Eu && mu(q))))))), e !== o && Ea() !== o ? ((n = oa()) === o && (n = null), n !== o && Ea() !== o && (u = Qo()) !== o ? (l = n, f = u, t = e = {
                  keyword: e.toLowerCase(),
                  symbol: l,
                  value: f.value
                }) : (Lu = t, t = o)) : (Lu = t, t = o), t === o && (t = Lu, (e = ss()) === o && (e = null), e !== o && Ea() !== o ? ('character set' === r.substr(Lu, 13).toLowerCase() ? (n = r.substr(Lu, 13), Lu += 13) : (n = o, 0 === Eu && mu(Z)), n === o && ('charset' === r.substr(Lu, 7).toLowerCase() ? (n = r.substr(Lu, 7), Lu += 7) : (n = o, 0 === Eu && mu(z)), n === o && ('collate' === r.substr(Lu, 7).toLowerCase() ? (n = r.substr(Lu, 7), Lu += 7) : (n = o, 0 === Eu && mu(J)))), n !== o && Ea() !== o ? ((u = oa()) === o && (u = null), u !== o && (s = Ea()) !== o && (a = Go()) !== o ? t = e = function (r, t, e, n) {
                  return {
                    keyword: r && `${ r[0].toLowerCase() } ${ t.toLowerCase() }` || t.toLowerCase(),
                    symbol: e,
                    value: n
                  };
                }(e, n, u, a) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o), t === o && (t = Lu, (e = la()) === o && ('connection' === r.substr(Lu, 10).toLowerCase() ? (e = r.substr(Lu, 10), Lu += 10) : (e = o, 0 === Eu && mu(Q))), e !== o && Ea() !== o ? ((n = oa()) === o && (n = null), n !== o && Ea() !== o && (u = qo()) !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: `'${ e.value }'`
                  };
                }(e, n, u) : (Lu = t, t = o)) : (Lu = t, t = o), t === o && (t = Lu, 'compression' === r.substr(Lu, 11).toLowerCase() ? (e = r.substr(Lu, 11), Lu += 11) : (e = o, 0 === Eu && mu(rr)), e !== o && Ea() !== o ? ((n = oa()) === o && (n = null), n !== o && Ea() !== o ? (u = Lu, 39 === r.charCodeAt(Lu) ? (s = '\'', Lu++) : (s = o, 0 === Eu && mu(tr)), s !== o ? ('zlib' === r.substr(Lu, 4).toLowerCase() ? (a = r.substr(Lu, 4), Lu += 4) : (a = o, 0 === Eu && mu(er)), a === o && ('lz4' === r.substr(Lu, 3).toLowerCase() ? (a = r.substr(Lu, 3), Lu += 3) : (a = o, 0 === Eu && mu(nr)), a === o && ('none' === r.substr(Lu, 4).toLowerCase() ? (a = r.substr(Lu, 4), Lu += 4) : (a = o, 0 === Eu && mu(S)))), a !== o ? (39 === r.charCodeAt(Lu) ? (i = '\'', Lu++) : (i = o, 0 === Eu && mu(tr)), i !== o ? u = s = [
                  s,
                  a,
                  i
                ] : (Lu = u, u = o)) : (Lu = u, u = o)) : (Lu = u, u = o), u !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: e.join('').toUpperCase()
                  };
                }(e, n, u) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o), t === o && (t = Lu, 'engine' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(ur)), e !== o && Ea() !== o ? ((n = oa()) === o && (n = null), n !== o && Ea() !== o && (u = Go()) !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: e.toUpperCase()
                  };
                }(e, n, u) : (Lu = t, t = o)) : (Lu = t, t = o))))), t;
              }
              function Gu() {
                var t, e, n, u, s;
                return t = Lu, (e = uo()) !== o && Ea() !== o && (n = function () {
                  var t, e, n;
                  return t = Lu, 'read' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(or)), e !== o && Ea() !== o ? ('local' === r.substr(Lu, 5).toLowerCase() ? (n = r.substr(Lu, 5), Lu += 5) : (n = o, 0 === Eu && mu(sr)), n === o && (n = null), n !== o ? t = e = {
                    type: 'read',
                    suffix: n && 'local'
                  } : (Lu = t, t = o)) : (Lu = t, t = o), t === o && (t = Lu, 'low_priority' === r.substr(Lu, 12).toLowerCase() ? (e = r.substr(Lu, 12), Lu += 12) : (e = o, 0 === Eu && mu(ar)), e === o && (e = null), e !== o && Ea() !== o ? ('write' === r.substr(Lu, 5).toLowerCase() ? (n = r.substr(Lu, 5), Lu += 5) : (n = o, 0 === Eu && mu(ir)), n !== o ? t = e = {
                    type: 'write',
                    prefix: e && 'low_priority'
                  } : (Lu = t, t = o)) : (Lu = t, t = o)), t;
                }()) !== o ? (u = e, s = n, Ka.add(`lock::${ u.db }::${ u.table }`), t = e = {
                  table: u,
                  lock_type: s
                }) : (Lu = t, t = o), t;
              }
              function ju() {
                var t, e, n, u, s, a, i;
                return (t = Wu()) === o && (t = Lu, e = Lu, 40 === r.charCodeAt(Lu) ? (n = '(', Lu++) : (n = o, 0 === Eu && mu(cr)), n !== o && (u = Ea()) !== o && (s = ju()) !== o && (a = Ea()) !== o ? (41 === r.charCodeAt(Lu) ? (i = ')', Lu++) : (i = o, 0 === Eu && mu(lr)), i !== o ? e = n = [
                  n,
                  u,
                  s,
                  a,
                  i
                ] : (Lu = e, e = o)) : (Lu = e, e = o), e !== o && (e = {
                  ...e[2],
                  parentheses_symbol: !0
                }), t = e), t;
              }
              function Yu() {
                var t, e, n, u, s, a, c, l, f;
                if (t = Lu, Is() !== o)
                  if (Ea() !== o)
                    if ((e = Bu()) !== o) {
                      for (n = [], u = Lu, (s = Ea()) !== o && (a = ba()) !== o && (c = Ea()) !== o && (l = Bu()) !== o ? u = s = [
                          s,
                          a,
                          c,
                          l
                        ] : (Lu = u, u = o); u !== o;)
                        n.push(u), u = Lu, (s = Ea()) !== o && (a = ba()) !== o && (c = Ea()) !== o && (l = Bu()) !== o ? u = s = [
                          s,
                          a,
                          c,
                          l
                        ] : (Lu = u, u = o);
                      n !== o ? t = i(e, n) : (Lu = t, t = o);
                    } else
                      Lu = t, t = o;
                  else
                    Lu = t, t = o;
                else
                  Lu = t, t = o;
                return t === o && (t = Lu, Ea() !== o && Is() !== o && (e = Ea()) !== o && (n = function () {
                  var t, e, n, u;
                  t = Lu, 'RECURSIVE' === r.substr(Lu, 9) ? (e = 'RECURSIVE', Lu += 9) : (e = o, 0 === Eu && mu(Xt));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) !== o && (u = Ea()) !== o && (s = Bu()) !== o ? ((f = s).recursive = !0, t = [f]) : (Lu = t, t = o)), t;
              }
              function Bu() {
                var r, t, e, n;
                return r = Lu, (t = Go()) !== o && Ea() !== o ? ((e = Xu()) === o && (e = null), e !== o && Ea() !== o && ws() !== o && Ea() !== o && La() !== o && Ea() !== o && (n = _u()) !== o && Ea() !== o && Ca() !== o ? r = t = {
                  name: t,
                  stmt: n,
                  columns: e
                } : (Lu = r, r = o)) : (Lu = r, r = o), r;
              }
              function Xu() {
                var r, t, e, n, u, s, a, c;
                if (r = Lu, La() !== o)
                  if (Ea() !== o)
                    if ((t = Po()) !== o) {
                      for (e = [], n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = Po()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (Lu = n, n = o); n !== o;)
                        e.push(n), n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = Po()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (Lu = n, n = o);
                      e !== o && (n = Ea()) !== o && (u = Ca()) !== o ? r = i(t, e) : (Lu = r, r = o);
                    } else
                      Lu = r, r = o;
                  else
                    Lu = r, r = o;
                else
                  Lu = r, r = o;
                return r;
              }
              function Wu() {
                var t, e, n, u, s, a, i, c, l, f, v;
                return t = Lu, Ea() !== o ? ((e = Yu()) === o && (e = null), e !== o && Ea() !== o && function () {
                  var t, e, n, u;
                  t = Lu, 'select' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(Ft));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }() !== o && Ea() !== o ? ((n = function () {
                  var r, t, e, n, u, s;
                  if (r = Lu, (t = Vu()) !== o) {
                    for (e = [], n = Lu, (u = Ea()) !== o && (s = Vu()) !== o ? n = u = [
                        u,
                        s
                      ] : (Lu = n, n = o); n !== o;)
                      e.push(n), n = Lu, (u = Ea()) !== o && (s = Vu()) !== o ? n = u = [
                        u,
                        s
                      ] : (Lu = n, n = o);
                    e !== o ? (t = function (r, t) {
                      const e = [r];
                      for (let r = 0, n = t.length; r < n; ++r)
                        e.push(t[r][1]);
                      return e;
                    }(t, e), r = t) : (Lu = r, r = o);
                  } else
                    Lu = r, r = o;
                  return r;
                }()) === o && (n = null), n !== o && Ea() !== o ? ((u = gs()) === o && (u = null), u !== o && Ea() !== o && (s = Ku()) !== o && Ea() !== o ? ((a = zu()) === o && (a = null), a !== o && Ea() !== o ? ((i = io()) === o && (i = null), i !== o && Ea() !== o ? ((c = function () {
                  var t, e, n;
                  t = Lu, (e = function () {
                    var t, e, n, u;
                    t = Lu, 'group' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(Le));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) !== o && Ea() !== o && Ns() !== o && Ea() !== o && (n = Ao()) !== o ? (e = n.value, t = e) : (Lu = t, t = o);
                  return t;
                }()) === o && (c = null), c !== o && Ea() !== o ? ((l = function () {
                  var t, e;
                  t = Lu, function () {
                    var t, e, n, u;
                    t = Lu, 'having' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(we));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }() !== o && Ea() !== o && (e = So()) !== o ? t = e : (Lu = t, t = o);
                  return t;
                }()) === o && (l = null), l !== o && Ea() !== o ? ((f = co()) === o && (f = null), f !== o && Ea() !== o ? ((v = vo()) === o && (v = null), v !== o ? t = function (r, t, e, n, u, o, s, a, i, c) {
                  return u && u.forEach(r => r.table && Ka.add(`select::${ r.db }::${ r.table }`)), {
                    with: r,
                    type: 'select',
                    options: t,
                    distinct: e,
                    columns: n,
                    from: u,
                    where: o,
                    groupby: s,
                    having: a,
                    orderby: i,
                    limit: c
                  };
                }(e, n, u, s, a, i, c, l, f, v) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Vu() {
                var e;
                return (e = function () {
                  var t;
                  'sql_calc_found_rows' === r.substr(Lu, 19).toLowerCase() ? (t = r.substr(Lu, 19), Lu += 19) : (t = o, 0 === Eu && mu(Vn));
                  return t;
                }()) === o && ((e = function () {
                  var t;
                  'sql_cache' === r.substr(Lu, 9).toLowerCase() ? (t = r.substr(Lu, 9), Lu += 9) : (t = o, 0 === Eu && mu(Kn));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_no_cache' === r.substr(Lu, 12).toLowerCase() ? (t = r.substr(Lu, 12), Lu += 12) : (t = o, 0 === Eu && mu(qn));
                  return t;
                }()), e === o && (e = function () {
                  var t;
                  'sql_big_result' === r.substr(Lu, 14).toLowerCase() ? (t = r.substr(Lu, 14), Lu += 14) : (t = o, 0 === Eu && mu(zn));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_small_result' === r.substr(Lu, 16).toLowerCase() ? (t = r.substr(Lu, 16), Lu += 16) : (t = o, 0 === Eu && mu(Zn));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_buffer_result' === r.substr(Lu, 17).toLowerCase() ? (t = r.substr(Lu, 17), Lu += 17) : (t = o, 0 === Eu && mu(Jn));
                  return t;
                }())), e !== o && (e = e), e;
              }
              function Ku() {
                var r, t, e, n, u, s, a, c, l, f;
                if (r = Lu, (t = _s()) === o && (t = Lu, (e = da()) !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Lu = t, t = o)) : (Lu = t, t = o), t === o && (t = da())), t !== o) {
                  for (e = [], n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = qu()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (Lu = n, n = o); n !== o;)
                    e.push(n), n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = qu()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (Lu = n, n = o);
                  e !== o ? (l = t, f = e, qa.add('select::null::(.*)'), r = t = f && f.length > 0 ? (l[0] = {
                    expr: {
                      type: 'column_ref',
                      table: null,
                      column: '*'
                    },
                    as: null
                  }, Ya(l[0], f)) : l[0]) : (Lu = r, r = o);
                } else
                  Lu = r, r = o;
                if (r === o)
                  if (r = Lu, (t = qu()) !== o) {
                    for (e = [], n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = qu()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (Lu = n, n = o); n !== o;)
                      e.push(n), n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = qu()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (Lu = n, n = o);
                    e !== o ? r = t = i(t, e) : (Lu = r, r = o);
                  } else
                    Lu = r, r = o;
                return r;
              }
              function qu() {
                var r, t, e, n;
                return r = Lu, (t = $o()) !== o && Ea() !== o && (e = va()) !== o && Ea() !== o && da() !== o ? (n = t, qa.add(`select::${ n }::(.*)`), r = t = {
                  expr: {
                    type: 'column_ref',
                    table: n,
                    column: '*'
                  },
                  as: null
                }) : (Lu = r, r = o), r === o && (r = Lu, (t = So()) !== o && Ea() !== o ? ((e = Zu()) === o && (e = null), e !== o ? r = t = {
                  expr: t,
                  as: e
                } : (Lu = r, r = o)) : (Lu = r, r = o)), r;
              }
              function Zu() {
                var r, t, e;
                return r = Lu, (t = ws()) !== o && Ea() !== o && (e = function () {
                  var r, t;
                  r = Lu, (t = Go()) !== o ? (function (r) {
                    if (!0 === Pa[r.toUpperCase()])
                      throw new Error('Error: ' + JSON.stringify(r) + ' is a reserved word, can not as alias clause');
                    return !1;
                  }(t) ? o : void 0) !== o ? r = t = t : (Lu = r, r = o) : (Lu = r, r = o);
                  r === o && (r = Lu, (t = Fo()) !== o && (t = t), r = t);
                  return r;
                }()) !== o ? r = t = e : (Lu = r, r = o), r === o && (r = Lu, (t = ws()) === o && (t = null), t !== o && Ea() !== o && (e = $o()) !== o ? r = t = e : (Lu = r, r = o)), r;
              }
              function zu() {
                var t, e;
                return t = Lu, function () {
                  var t, e, n, u;
                  t = Lu, 'from' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(zt));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }() !== o && Ea() !== o && (e = eo()) !== o ? t = e : (Lu = t, t = o), t;
              }
              function Ju() {
                var r, t, e;
                return r = Lu, (t = so()) !== o && Ea() !== o && as() !== o && Ea() !== o && (e = so()) !== o ? r = t = [
                  t,
                  e
                ] : (Lu = r, r = o), r;
              }
              function Qu() {
                var t, e;
                return t = Lu, Ss() !== o && Ea() !== o ? ('btree' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(fr)), e === o && ('hash' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(vr))), e !== o ? t = {
                  keyword: 'using',
                  type: e.toLowerCase()
                } : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function ro() {
                var r, t, e, n, u, s;
                if (r = Lu, (t = to()) !== o) {
                  for (e = [], n = Lu, (u = Ea()) !== o && (s = to()) !== o ? n = u = [
                      u,
                      s
                    ] : (Lu = n, n = o); n !== o;)
                    e.push(n), n = Lu, (u = Ea()) !== o && (s = to()) !== o ? n = u = [
                      u,
                      s
                    ] : (Lu = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    const e = [r];
                    for (let r = 0; r < t.length; r++)
                      e.push(t[r][1]);
                    return e;
                  }(t, e) : (Lu = r, r = o);
                } else
                  Lu = r, r = o;
                return r;
              }
              function to() {
                var t, e, n, u, s, a;
                return t = Lu, (e = function () {
                  var t, e, n, u;
                  t = Lu, 'key_block_size' === r.substr(Lu, 14).toLowerCase() ? (e = r.substr(Lu, 14), Lu += 14) : (e = o, 0 === Eu && mu(W));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'KEY_BLOCK_SIZE' : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) !== o && Ea() !== o ? ((n = oa()) === o && (n = null), n !== o && Ea() !== o && (u = Qo()) !== o ? (s = n, a = u, t = e = {
                  type: e.toLowerCase(),
                  symbol: s,
                  expr: a
                }) : (Lu = t, t = o)) : (Lu = t, t = o), t === o && (t = Qu()) === o && (t = Lu, 'with' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(br)), e !== o && Ea() !== o ? ('parser' === r.substr(Lu, 6).toLowerCase() ? (n = r.substr(Lu, 6), Lu += 6) : (n = o, 0 === Eu && mu(dr)), n !== o && Ea() !== o && (u = Go()) !== o ? t = e = {
                  type: 'with parser',
                  expr: u
                } : (Lu = t, t = o)) : (Lu = t, t = o), t === o && (t = Lu, 'visible' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(Lr)), e === o && ('invisible' === r.substr(Lu, 9).toLowerCase() ? (e = r.substr(Lu, 9), Lu += 9) : (e = o, 0 === Eu && mu(Cr))), e !== o && (e = function (r) {
                  return {
                    type: r.toLowerCase(),
                    expr: r.toLowerCase()
                  };
                }(e)), (t = e) === o && (t = ya()))), t;
              }
              function eo() {
                var r, t, e, n, u, s;
                if (r = Lu, (t = uo()) !== o) {
                  for (e = [], n = no(); n !== o;)
                    e.push(n), n = no();
                  e !== o ? (u = t, (s = e).unshift(u), s.forEach(r => {
                    const {
                      table: t,
                      as: e
                    } = r;
                    Za[t] = t, e && (Za[e] = t);
                  }), r = t = s) : (Lu = r, r = o);
                } else
                  Lu = r, r = o;
                return r;
              }
              function no() {
                var r, t, e;
                return r = Lu, Ea() !== o && (t = ba()) !== o && Ea() !== o && (e = uo()) !== o ? r = e : (Lu = r, r = o), r === o && (r = Lu, Ea() !== o && (t = function () {
                  var r, t, e, n, u, s, a, i, c, l, f;
                  if (r = Lu, (t = oo()) !== o)
                    if (Ea() !== o)
                      if ((e = uo()) !== o)
                        if (Ea() !== o)
                          if ((n = Ss()) !== o)
                            if (Ea() !== o)
                              if (La() !== o)
                                if (Ea() !== o)
                                  if ((u = Go()) !== o) {
                                    for (s = [], a = Lu, (i = Ea()) !== o && (c = ba()) !== o && (l = Ea()) !== o && (f = Go()) !== o ? a = i = [
                                        i,
                                        c,
                                        l,
                                        f
                                      ] : (Lu = a, a = o); a !== o;)
                                      s.push(a), a = Lu, (i = Ea()) !== o && (c = ba()) !== o && (l = Ea()) !== o && (f = Go()) !== o ? a = i = [
                                        i,
                                        c,
                                        l,
                                        f
                                      ] : (Lu = a, a = o);
                                    s !== o && (a = Ea()) !== o && (i = Ca()) !== o ? (v = t, d = u, L = s, (b = e).join = v, b.using = Ya(d, L), r = t = b) : (Lu = r, r = o);
                                  } else
                                    Lu = r, r = o;
                                else
                                  Lu = r, r = o;
                              else
                                Lu = r, r = o;
                            else
                              Lu = r, r = o;
                          else
                            Lu = r, r = o;
                        else
                          Lu = r, r = o;
                      else
                        Lu = r, r = o;
                    else
                      Lu = r, r = o;
                  else
                    Lu = r, r = o;
                  var v, b, d, L;
                  r === o && (r = Lu, (t = oo()) !== o && Ea() !== o && (e = uo()) !== o && Ea() !== o ? ((n = ao()) === o && (n = null), n !== o ? (t = function (r, t, e) {
                    return t.join = r, t.on = e, t;
                  }(t, e, n), r = t) : (Lu = r, r = o)) : (Lu = r, r = o), r === o && (r = Lu, (t = oo()) !== o && Ea() !== o && (e = La()) !== o && Ea() !== o && (n = _u()) !== o && Ea() !== o && Ca() !== o && Ea() !== o ? ((u = Zu()) === o && (u = null), u !== o && (s = Ea()) !== o ? ((a = ao()) === o && (a = null), a !== o ? (t = function (r, t, e, n) {
                    return t.parentheses = !0, {
                      expr: t,
                      as: e,
                      join: r,
                      on: n
                    };
                  }(t, n, u, a), r = t) : (Lu = r, r = o)) : (Lu = r, r = o)) : (Lu = r, r = o)));
                  return r;
                }()) !== o ? r = t : (Lu = r, r = o)), r;
              }
              function uo() {
                var t, e, n, u, s, a;
                return t = Lu, (e = function () {
                  var t;
                  'dual' === r.substr(Lu, 4).toLowerCase() ? (t = r.substr(Lu, 4), Lu += 4) : (t = o, 0 === Eu && mu(Fn));
                  return t;
                }()) !== o && (e = { type: 'dual' }), (t = e) === o && (t = Lu, (e = so()) !== o && Ea() !== o ? ((n = Zu()) === o && (n = null), n !== o ? (a = n, t = e = 'var' === (s = e).type ? (s.as = a, s) : {
                  db: s.db,
                  table: s.table,
                  as: a
                }) : (Lu = t, t = o)) : (Lu = t, t = o), t === o && (t = Lu, (e = La()) !== o && Ea() !== o && (n = _u()) !== o && Ea() !== o && Ca() !== o && Ea() !== o ? ((u = Zu()) === o && (u = null), u !== o ? t = e = function (r, t) {
                  return r.parentheses = !0, {
                    expr: r,
                    as: t
                  };
                }(n, u) : (Lu = t, t = o)) : (Lu = t, t = o))), t;
              }
              function oo() {
                var t, e, n, u;
                return t = Lu, (e = function () {
                  var t, e, n, u;
                  t = Lu, 'left' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(ue));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) !== o && (n = Ea()) !== o ? ((u = Ts()) === o && (u = null), u !== o && Ea() !== o && ys() !== o ? t = e = 'LEFT JOIN' : (Lu = t, t = o)) : (Lu = t, t = o), t === o && (t = Lu, (e = function () {
                  var t, e, n, u;
                  t = Lu, 'right' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(oe));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) !== o && (n = Ea()) !== o ? ((u = Ts()) === o && (u = null), u !== o && Ea() !== o && ys() !== o ? t = e = 'RIGHT JOIN' : (Lu = t, t = o)) : (Lu = t, t = o), t === o && (t = Lu, (e = function () {
                  var t, e, n, u;
                  t = Lu, 'full' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(se));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) !== o && (n = Ea()) !== o ? ((u = Ts()) === o && (u = null), u !== o && Ea() !== o && ys() !== o ? t = e = 'FULL JOIN' : (Lu = t, t = o)) : (Lu = t, t = o), t === o && (t = Lu, e = Lu, (n = function () {
                  var t, e, n, u;
                  t = Lu, 'inner' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(ae));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) !== o && (u = Ea()) !== o ? e = n = [
                  n,
                  u
                ] : (Lu = e, e = o), e === o && (e = null), e !== o && (n = ys()) !== o ? t = e = 'INNER JOIN' : (Lu = t, t = o)))), t;
              }
              function so() {
                var r, t, e, n, u, s, a, i;
                return r = Lu, (t = $o()) !== o ? (e = Lu, (n = Ea()) !== o && (u = va()) !== o && (s = Ea()) !== o && (a = $o()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (Lu = e, e = o), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  const e = {
                    db: null,
                    table: r
                  };
                  return null !== t && (e.db = r, e.table = t[3]), e;
                }(t, e) : (Lu = r, r = o)) : (Lu = r, r = o), r === o && (r = Lu, (t = Da()) !== o && ((i = t).db = null, i.table = i.name, t = i), r = t), r;
              }
              function ao() {
                var r, t;
                return r = Lu, As() !== o && Ea() !== o && (t = So()) !== o ? r = t : (Lu = r, r = o), r;
              }
              function io() {
                var t, e;
                return t = Lu, function () {
                  var t, e, n, u;
                  t = Lu, 'where' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(de));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }() !== o && Ea() !== o && (e = So()) !== o ? t = e : (Lu = t, t = o), t;
              }
              function co() {
                var t, e;
                return t = Lu, function () {
                  var t, e, n, u;
                  t = Lu, 'order' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(pe));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }() !== o && Ea() !== o && Ns() !== o && Ea() !== o && (e = function () {
                  var r, t, e, n, u, s, a, c;
                  if (r = Lu, (t = lo()) !== o) {
                    for (e = [], n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = lo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (Lu = n, n = o); n !== o;)
                      e.push(n), n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = lo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (Lu = n, n = o);
                    e !== o ? (t = i(t, e), r = t) : (Lu = r, r = o);
                  } else
                    Lu = r, r = o;
                  return r;
                }()) !== o ? t = e : (Lu = t, t = o), t;
              }
              function lo() {
                var t, e, n;
                return t = Lu, (e = So()) !== o && Ea() !== o ? ((n = function () {
                  var t, e, n, u;
                  t = Lu, 'desc' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(ye));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'DESC' : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) === o && (n = function () {
                  var t, e, n, u;
                  t = Lu, 'asc' === r.substr(Lu, 3).toLowerCase() ? (e = r.substr(Lu, 3), Lu += 3) : (e = o, 0 === Eu && mu(Ae));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'ASC' : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()), n === o && (n = null), n !== o ? t = e = function (r, t) {
                  const e = {
                    expr: r,
                    type: 'ASC'
                  };
                  return 'DESC' === t && (e.type = 'DESC'), e;
                }(e, n) : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function fo() {
                var r;
                return (r = Qo()) === o && (r = Xo()), r;
              }
              function vo() {
                var t, e, n, u, s, a, i, c;
                return t = Lu, Rs() !== o && Ea() !== o ? ('first' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(pr)), e !== o && Ea() !== o && (n = fo()) !== o && Ea() !== o ? ('rows' === r.substr(Lu, 4).toLowerCase() ? (u = r.substr(Lu, 4), Lu += 4) : (u = o, 0 === Eu && mu(wr)), u !== o && Ea() !== o ? ('only' === r.substr(Lu, 4).toLowerCase() ? (s = r.substr(Lu, 4), Lu += 4) : (s = o, 0 === Eu && mu(Er)), s !== o ? t = {
                  fetch: {
                    prefix: 'fetch first',
                    value: n,
                    suffix: 'rows only'
                  }
                } : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o), t === o && (t = Lu, function () {
                  var t, e, n, u;
                  t = Lu, 'offset' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(he));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'OFFSET' : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }() !== o && Ea() !== o && (e = fo()) !== o && Ea() !== o ? ('rows' === r.substr(Lu, 4).toLowerCase() ? (n = r.substr(Lu, 4), Lu += 4) : (n = o, 0 === Eu && mu(wr)), n !== o && Ea() !== o && (u = Rs()) !== o && Ea() !== o ? ('next' === r.substr(Lu, 4).toLowerCase() ? (s = r.substr(Lu, 4), Lu += 4) : (s = o, 0 === Eu && mu(hr)), s !== o && Ea() !== o && (a = fo()) !== o && Ea() !== o ? ('rows' === r.substr(Lu, 4).toLowerCase() ? (i = r.substr(Lu, 4), Lu += 4) : (i = o, 0 === Eu && mu(wr)), i !== o && Ea() !== o ? ('only' === r.substr(Lu, 4).toLowerCase() ? (c = r.substr(Lu, 4), Lu += 4) : (c = o, 0 === Eu && mu(Er)), c !== o ? t = function (r, t) {
                  return {
                    offset: {
                      prefix: 'offset',
                      value: r,
                      suffix: 'rows'
                    },
                    fetch: {
                      prefix: 'fetch next',
                      value: t,
                      suffix: 'rows only'
                    }
                  };
                }(e, a) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)), t;
              }
              function bo() {
                var r, t, e, n, u, s, a, c;
                if (r = Lu, (t = Lo()) !== o) {
                  for (e = [], n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = Lo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (Lu = n, n = o); n !== o;)
                    e.push(n), n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = Lo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (Lu = n, n = o);
                  e !== o ? r = t = i(t, e) : (Lu = r, r = o);
                } else
                  Lu = r, r = o;
                return r;
              }
              function Lo() {
                var t, e, n, u, s, a, i, c;
                return t = Lu, e = Lu, (n = $o()) !== o && (u = Ea()) !== o && (s = va()) !== o ? e = n = [
                  n,
                  u,
                  s
                ] : (Lu = e, e = o), e === o && (e = null), e !== o && (n = Ea()) !== o && (u = Po()) !== o && (s = Ea()) !== o ? (61 === r.charCodeAt(Lu) ? (a = '=', Lu++) : (a = o, 0 === Eu && mu(Ar)), a !== o && Ea() !== o && (i = Oo()) !== o ? t = e = {
                  column: u,
                  value: i,
                  table: (c = e) && c[0]
                } : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Co() {
                var t;
                return (t = function () {
                  var t, e;
                  t = Lu, function () {
                    var t, e, n, u;
                    t = Lu, 'values' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(ve));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }() !== o && Ea() !== o && (e = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = Lu, (t = ho()) !== o) {
                      for (e = [], n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = ho()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (Lu = n, n = o); n !== o;)
                        e.push(n), n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = ho()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (Lu = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (Lu = r, r = o);
                    } else
                      Lu = r, r = o;
                    return r;
                  }()) !== o ? t = e : (Lu = t, t = o);
                  return t;
                }()) === o && (t = Wu()), t;
              }
              function po() {
                var r, t, e, n, u, s, a, i, c;
                if (r = Lu, Ls() !== o)
                  if (Ea() !== o)
                    if ((t = La()) !== o)
                      if (Ea() !== o)
                        if ((e = Go()) !== o) {
                          for (n = [], u = Lu, (s = Ea()) !== o && (a = ba()) !== o && (i = Ea()) !== o && (c = Go()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (Lu = u, u = o); u !== o;)
                            n.push(u), u = Lu, (s = Ea()) !== o && (a = ba()) !== o && (i = Ea()) !== o && (c = Go()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (Lu = u, u = o);
                          n !== o && (u = Ea()) !== o && (s = Ca()) !== o ? r = Ya(e, n) : (Lu = r, r = o);
                        } else
                          Lu = r, r = o;
                      else
                        Lu = r, r = o;
                    else
                      Lu = r, r = o;
                  else
                    Lu = r, r = o;
                else
                  Lu = r, r = o;
                return r === o && (r = Lu, Ls() !== o && Ea() !== o && (t = ho()) !== o ? r = t : (Lu = r, r = o)), r;
              }
              function wo() {
                var t, e, n;
                return t = Lu, As() !== o && Ea() !== o ? ('duplicate' === r.substr(Lu, 9).toLowerCase() ? (e = r.substr(Lu, 9), Lu += 9) : (e = o, 0 === Eu && mu(yr)), e !== o && Ea() !== o && ca() !== o && Ea() !== o && cs() !== o && Ea() !== o && (n = bo()) !== o ? t = {
                  keyword: 'on duplicate key update',
                  set: n
                } : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Eo() {
                var t, e;
                return t = Lu, (e = function () {
                  var t, e, n, u;
                  t = Lu, 'insert' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(Bt));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) !== o && (e = 'insert'), (t = e) === o && (t = Lu, (e = bs()) !== o && (e = 'replace'), t = e), t;
              }
              function ho() {
                var r, t;
                return r = Lu, La() !== o && Ea() !== o && (t = Ao()) !== o && Ea() !== o && Ca() !== o ? r = t : (Lu = r, r = o), r;
              }
              function Ao() {
                var r, t, e, n, u, s, a, i;
                if (r = Lu, (t = So()) !== o) {
                  for (e = [], n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (i = So()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Lu = n, n = o); n !== o;)
                    e.push(n), n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (i = So()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Lu = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    const e = { type: 'expr_list' };
                    return e.value = Ya(r, t), e;
                  }(t, e) : (Lu = r, r = o);
                } else
                  Lu = r, r = o;
                return r;
              }
              function yo() {
                var t, e, n;
                return t = Lu, function () {
                  var t, e, n, u;
                  t = Lu, 'interval' === r.substr(Lu, 8).toLowerCase() ? (e = r.substr(Lu, 8), Lu += 8) : (e = o, 0 === Eu && mu(pn));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'INTERVAL' : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }() !== o && Ea() !== o && (e = So()) !== o && Ea() !== o && (n = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u;
                    t = Lu, 'year' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(wn));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'YEAR' : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = Lu, 'month' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(En));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'MONTH' : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = Lu, 'day' === r.substr(Lu, 3).toLowerCase() ? (e = r.substr(Lu, 3), Lu += 3) : (e = o, 0 === Eu && mu(hn));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'DAY' : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = Lu, 'hour' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(An));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'HOUR' : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = Lu, 'minute' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(yn));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'MINUTE' : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = Lu, 'second' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(Tn));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'SECOND' : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }());
                  return t;
                }()) !== o ? t = {
                  type: 'interval',
                  expr: e,
                  unit: n.toLowerCase()
                } : (Lu = t, t = o), t;
              }
              function To() {
                var t, e, n, u, s, a, i, c, l;
                if (t = Lu, Ps() !== o)
                  if (Ea() !== o)
                    if ((e = So()) === o && (e = null), e !== o)
                      if (Ea() !== o) {
                        if (n = [], (u = mo()) !== o)
                          for (; u !== o;)
                            n.push(u), u = mo();
                        else
                          n = o;
                        n !== o && (u = Ea()) !== o ? ((s = function () {
                          var t, e;
                          t = Lu, function () {
                            var t, e, n, u;
                            t = Lu, 'else' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(Ge));
                            e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                              e,
                              n
                            ] : (Lu = t, t = o)) : (Lu = t, t = o);
                            return t;
                          }() !== o && Ea() !== o && (e = So()) !== o ? t = {
                            type: 'else',
                            result: e
                          } : (Lu = t, t = o);
                          return t;
                        }()) === o && (s = null), s !== o && Ea() !== o && function () {
                          var t, e, n, u;
                          t = Lu, 'end' === r.substr(Lu, 3).toLowerCase() ? (e = r.substr(Lu, 3), Lu += 3) : (e = o, 0 === Eu && mu(je));
                          e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                            e,
                            n
                          ] : (Lu = t, t = o)) : (Lu = t, t = o);
                          return t;
                        }() !== o && Ea() !== o ? ((a = Ps()) === o && (a = null), a !== o ? (i = e, c = n, (l = s) && c.push(l), t = {
                          type: 'case',
                          expr: i || null,
                          args: c
                        }) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o);
                      } else
                        Lu = t, t = o;
                    else
                      Lu = t, t = o;
                  else
                    Lu = t, t = o;
                else
                  Lu = t, t = o;
                return t;
              }
              function mo() {
                var t, e, n;
                return t = Lu, function () {
                  var t, e, n, u;
                  t = Lu, 'when' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(Pe));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }() !== o && Ea() !== o && (e = So()) !== o && Ea() !== o && function () {
                  var t, e, n, u;
                  t = Lu, 'then' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(He));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }() !== o && Ea() !== o && (n = So()) !== o ? t = {
                  type: 'when',
                  cond: e,
                  result: n
                } : (Lu = t, t = o), t;
              }
              function So() {
                var r;
                return (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = Lu, (t = Do()) !== o) {
                    if (e = [], n = Lu, (u = Ea()) !== o && (s = wa()) !== o && (a = Ea()) !== o && (i = Do()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (Lu = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = Lu, (u = Ea()) !== o && (s = wa()) !== o && (a = Ea()) !== o && (i = Do()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Lu = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = Ba(t, e), r = t) : (Lu = r, r = o);
                  } else
                    Lu = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s;
                  if (r = Lu, (t = Uo()) !== o) {
                    if (e = [], n = Lu, (u = Ea()) !== o && (s = Do()) !== o ? n = u = [
                        u,
                        s
                      ] : (Lu = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = Lu, (u = Ea()) !== o && (s = Do()) !== o ? n = u = [
                          u,
                          s
                        ] : (Lu = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = Ha(t, e[0][1]), r = t) : (Lu = r, r = o);
                  } else
                    Lu = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = Lu, (t = Io()) !== o) {
                    for (e = [], n = Lu, (u = ha()) !== o && (s = Fs()) !== o && (a = Ea()) !== o && (i = Io()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (Lu = n, n = o); n !== o;)
                      e.push(n), n = Lu, (u = ha()) !== o && (s = Fs()) !== o && (a = Ea()) !== o && (i = Io()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (Lu = n, n = o);
                    e !== o ? (t = Tr(t, e), r = t) : (Lu = r, r = o);
                  } else
                    Lu = r, r = o;
                  return r;
                }()) === o && (r = ju()), r;
              }
              function Io() {
                var r, t, e, n, u, s, a, i;
                if (r = Lu, (t = No()) !== o) {
                  for (e = [], n = Lu, (u = ha()) !== o && (s = $s()) !== o && (a = Ea()) !== o && (i = No()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Lu = n, n = o); n !== o;)
                    e.push(n), n = Lu, (u = ha()) !== o && (s = $s()) !== o && (a = Ea()) !== o && (i = No()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Lu = n, n = o);
                  e !== o ? r = t = Tr(t, e) : (Lu = r, r = o);
                } else
                  Lu = r, r = o;
                return r;
              }
              function No() {
                var t, e, n, u, s;
                return (t = Ro()) === o && (t = function () {
                  var r, t, e;
                  r = Lu, (t = function () {
                    var r, t, e, n, u;
                    r = Lu, t = Lu, (e = ks()) !== o && (n = Ea()) !== o && (u = Ds()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (Lu = t, t = o);
                    t !== o && (t = Sr(t));
                    (r = t) === o && (r = Ds());
                    return r;
                  }()) !== o && Ea() !== o && La() !== o && Ea() !== o && (e = _u()) !== o && Ea() !== o && Ca() !== o ? (n = t, (u = e).parentheses = !0, t = Ha(n, u), r = t) : (Lu = r, r = o);
                  var n, u;
                  return r;
                }()) === o && (t = Lu, (e = ks()) === o && (e = Lu, 33 === r.charCodeAt(Lu) ? (n = '!', Lu++) : (n = o, 0 === Eu && mu(mr)), n !== o ? (u = Lu, Eu++, 61 === r.charCodeAt(Lu) ? (s = '=', Lu++) : (s = o, 0 === Eu && mu(Ar)), Eu--, s === o ? u = void 0 : (Lu = u, u = o), u !== o ? e = n = [
                  n,
                  u
                ] : (Lu = e, e = o)) : (Lu = e, e = o)), e !== o && (n = Ea()) !== o && (u = No()) !== o ? t = e = Ha('NOT', u) : (Lu = t, t = o)), t;
              }
              function Ro() {
                var r, t, e, n, u, s, a;
                return r = Lu, (t = Oo()) !== o && Ea() !== o ? (e = Lu, Eu++, n = $s(), Eu--, n === o ? e = void 0 : (Lu = e, e = o), e !== o && (n = Ea()) !== o ? ((u = function () {
                  var r;
                  (r = function () {
                    var t, e, n, u, s, a;
                    t = [], e = Lu, (n = Ea()) !== o && (u = _o()) !== o && (s = Ea()) !== o && (a = Oo()) !== o ? e = n = [
                      n,
                      u,
                      s,
                      a
                    ] : (Lu = e, e = o);
                    if (e !== o)
                      for (; e !== o;)
                        t.push(e), e = Lu, (n = Ea()) !== o && (u = _o()) !== o && (s = Ea()) !== o && (a = Oo()) !== o ? e = n = [
                          n,
                          u,
                          s,
                          a
                        ] : (Lu = e, e = o);
                    else
                      t = o;
                    t !== o && (t = {
                      type: 'arithmetic',
                      tail: t
                    });
                    return t;
                  }()) === o && (r = function () {
                    var r, t, e, n;
                    r = Lu, (t = go()) !== o && Ea() !== o && (e = La()) !== o && Ea() !== o && (n = Ao()) !== o && Ea() !== o && Ca() !== o ? r = t = {
                      op: t,
                      right: n
                    } : (Lu = r, r = o);
                    r === o && (r = Lu, (t = go()) !== o && Ea() !== o ? ((e = Da()) === o && (e = qo()), e !== o ? (t = function (r, t) {
                      return {
                        op: r,
                        right: t
                      };
                    }(t, e), r = t) : (Lu = r, r = o)) : (Lu = r, r = o));
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e, n;
                    r = Lu, (t = function () {
                      var r, t, e, n, u;
                      r = Lu, t = Lu, (e = ks()) !== o && (n = Ea()) !== o && (u = Os()) !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (Lu = t, t = o);
                      t !== o && (t = Sr(t));
                      (r = t) === o && (r = Os());
                      return r;
                    }()) !== o && Ea() !== o && (e = Oo()) !== o && Ea() !== o && $s() !== o && Ea() !== o && (n = Oo()) !== o ? r = t = {
                      op: t,
                      right: {
                        type: 'expr_list',
                        value: [
                          e,
                          n
                        ]
                      }
                    } : (Lu = r, r = o);
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e, n, u;
                    r = Lu, (t = xs()) !== o && (e = Ea()) !== o && (n = Oo()) !== o ? r = t = {
                      op: 'IS',
                      right: n
                    } : (Lu = r, r = o);
                    r === o && (r = Lu, t = Lu, (e = xs()) !== o && (n = Ea()) !== o && (u = ks()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (Lu = t, t = o), t !== o && (e = Ea()) !== o && (n = Oo()) !== o ? (t = function (r) {
                      return {
                        op: 'IS NOT',
                        right: r
                      };
                    }(n), r = t) : (Lu = r, r = o));
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e;
                    r = Lu, (t = function () {
                      var r, t, e, n, u;
                      r = Lu, t = Lu, (e = ks()) !== o && (n = Ea()) !== o && (u = Ms()) !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (Lu = t, t = o);
                      t !== o && (t = Sr(t));
                      (r = t) === o && (r = Ms());
                      return r;
                    }()) !== o && Ea() !== o && (e = Ro()) !== o ? r = t = {
                      op: t,
                      right: e
                    } : (Lu = r, r = o);
                    return r;
                  }());
                  return r;
                }()) === o && (u = null), u !== o ? (s = t, r = t = null === (a = u) ? s : 'arithmetic' === a.type ? Ba(s, a.tail) : Ga(a.op, s, a.right)) : (Lu = r, r = o)) : (Lu = r, r = o)) : (Lu = r, r = o), r === o && (r = qo()) === o && (r = ko()), r;
              }
              function _o() {
                var t;
                return '>=' === r.substr(Lu, 2) ? (t = '>=', Lu += 2) : (t = o, 0 === Eu && mu(Ir)), t === o && (62 === r.charCodeAt(Lu) ? (t = '>', Lu++) : (t = o, 0 === Eu && mu(Nr)), t === o && ('<=' === r.substr(Lu, 2) ? (t = '<=', Lu += 2) : (t = o, 0 === Eu && mu(Rr)), t === o && ('<>' === r.substr(Lu, 2) ? (t = '<>', Lu += 2) : (t = o, 0 === Eu && mu(_r)), t === o && (60 === r.charCodeAt(Lu) ? (t = '<', Lu++) : (t = o, 0 === Eu && mu(gr)), t === o && (61 === r.charCodeAt(Lu) ? (t = '=', Lu++) : (t = o, 0 === Eu && mu(Ar)), t === o && ('!=' === r.substr(Lu, 2) ? (t = '!=', Lu += 2) : (t = o, 0 === Eu && mu(Or)))))))), t;
              }
              function go() {
                var r, t, e, n, u;
                return r = Lu, t = Lu, (e = ks()) !== o && (n = Ea()) !== o && (u = Us()) !== o ? t = e = [
                  e,
                  n,
                  u
                ] : (Lu = t, t = o), t !== o && (t = Sr(t)), (r = t) === o && (r = Us()), r;
              }
              function Oo() {
                var r, t, e, n, u, s, a, i;
                if (r = Lu, (t = xo()) !== o) {
                  for (e = [], n = Lu, (u = Ea()) !== o && (s = Uo()) !== o && (a = Ea()) !== o && (i = xo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Lu = n, n = o); n !== o;)
                    e.push(n), n = Lu, (u = Ea()) !== o && (s = Uo()) !== o && (a = Ea()) !== o && (i = xo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Lu = n, n = o);
                  e !== o ? r = t = Tr(t, e) : (Lu = r, r = o);
                } else
                  Lu = r, r = o;
                return r;
              }
              function Uo() {
                var t;
                return 43 === r.charCodeAt(Lu) ? (t = '+', Lu++) : (t = o, 0 === Eu && mu(Ur)), t === o && (45 === r.charCodeAt(Lu) ? (t = '-', Lu++) : (t = o, 0 === Eu && mu(xr))), t;
              }
              function xo() {
                var r, t, e, n, u, s, a, i;
                if (r = Lu, (t = Do()) !== o) {
                  for (e = [], n = Lu, (u = Ea()) !== o && (s = Mo()) !== o && (a = Ea()) !== o && (i = Do()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Lu = n, n = o); n !== o;)
                    e.push(n), n = Lu, (u = Ea()) !== o && (s = Mo()) !== o && (a = Ea()) !== o && (i = Do()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Lu = n, n = o);
                  e !== o ? r = t = Ba(t, e) : (Lu = r, r = o);
                } else
                  Lu = r, r = o;
                return r;
              }
              function Mo() {
                var t;
                return 42 === r.charCodeAt(Lu) ? (t = '*', Lu++) : (t = o, 0 === Eu && mu(Mr)), t === o && (47 === r.charCodeAt(Lu) ? (t = '/', Lu++) : (t = o, 0 === Eu && mu(Dr)), t === o && (37 === r.charCodeAt(Lu) ? (t = '%', Lu++) : (t = o, 0 === Eu && mu(kr)))), t;
              }
              function Do() {
                var t, e, n;
                return (t = function () {
                  var t, e, n, u, s, a, i;
                  t = Lu, (e = Hs()) !== o && Ea() !== o && La() !== o && Ea() !== o && (n = So()) !== o && Ea() !== o && ws() !== o && Ea() !== o && (u = $a()) !== o && Ea() !== o && (s = Ca()) !== o ? t = e = {
                    type: 'cast',
                    expr: n,
                    symbol: 'as',
                    target: u
                  } : (Lu = t, t = o);
                  t === o && (t = Lu, (e = Hs()) !== o && Ea() !== o && La() !== o && Ea() !== o && (n = So()) !== o && Ea() !== o && ws() !== o && Ea() !== o && (u = Bs()) !== o && Ea() !== o && (s = La()) !== o && Ea() !== o && (a = rs()) !== o && Ea() !== o && Ca() !== o && Ea() !== o && (i = Ca()) !== o ? (e = function (r, t) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: 'DECIMAL(' + t + ')' }
                    };
                  }(n, a), t = e) : (Lu = t, t = o), t === o && (t = Lu, (e = Hs()) !== o && Ea() !== o && La() !== o && Ea() !== o && (n = So()) !== o && Ea() !== o && ws() !== o && Ea() !== o && (u = Bs()) !== o && Ea() !== o && (s = La()) !== o && Ea() !== o && (a = rs()) !== o && Ea() !== o && ba() !== o && Ea() !== o && (i = rs()) !== o && Ea() !== o && Ca() !== o && Ea() !== o && Ca() !== o ? (e = function (r, t, e) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: 'DECIMAL(' + t + ', ' + e + ')' }
                    };
                  }(n, a, i), t = e) : (Lu = t, t = o), t === o && (t = Lu, (e = Hs()) !== o && Ea() !== o && La() !== o && Ea() !== o && (n = So()) !== o && Ea() !== o && ws() !== o && Ea() !== o && (u = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = Lu, 'signed' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(Ke));
                      e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'SIGNED' : (Lu = t, t = o)) : (Lu = t, t = o);
                      return t;
                    }()) === o && (t = Xs());
                    return t;
                  }()) !== o && Ea() !== o ? ((s = Vs()) === o && (s = null), s !== o && Ea() !== o && (a = Ca()) !== o ? (e = function (r, t, e) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: t + (e ? ' ' + e : '') }
                    };
                  }(n, u, s), t = e) : (Lu = t, t = o)) : (Lu = t, t = o))));
                  return t;
                }()) === o && (t = Vo()) === o && (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u;
                    t = Lu, (e = function () {
                      var t, e, n, u;
                      t = Lu, 'count' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(Ue));
                      e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'COUNT' : (Lu = t, t = o)) : (Lu = t, t = o);
                      return t;
                    }()) !== o && Ea() !== o && La() !== o && Ea() !== o && (n = function () {
                      var t, e, n;
                      t = Lu, (e = function () {
                        var e;
                        42 === r.charCodeAt(Lu) ? (e = '*', Lu++) : (e = o, 0 === Eu && mu(Mr));
                        e !== o && (e = {
                          type: 'star',
                          value: '*'
                        });
                        return e;
                      }()) !== o && (e = { expr: e });
                      (t = e) === o && (t = Lu, (e = gs()) === o && (e = null), e !== o && Ea() !== o && (n = ko()) !== o ? t = e = {
                        distinct: e,
                        expr: n
                      } : (Lu = t, t = o));
                      return t;
                    }()) !== o && Ea() !== o && Ca() !== o && Ea() !== o ? ((u = Wo()) === o && (u = null), u !== o ? t = e = {
                      type: 'aggr_func',
                      name: e,
                      args: n,
                      over: u
                    } : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n;
                    t = Lu, (e = function () {
                      var t;
                      (t = function () {
                        var t, e, n, u;
                        t = Lu, 'sum' === r.substr(Lu, 3).toLowerCase() ? (e = r.substr(Lu, 3), Lu += 3) : (e = o, 0 === Eu && mu(De));
                        e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'SUM' : (Lu = t, t = o)) : (Lu = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = Lu, 'max' === r.substr(Lu, 3).toLowerCase() ? (e = r.substr(Lu, 3), Lu += 3) : (e = o, 0 === Eu && mu(xe));
                        e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'MAX' : (Lu = t, t = o)) : (Lu = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = Lu, 'min' === r.substr(Lu, 3).toLowerCase() ? (e = r.substr(Lu, 3), Lu += 3) : (e = o, 0 === Eu && mu(Me));
                        e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'MIN' : (Lu = t, t = o)) : (Lu = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = Lu, 'avg' === r.substr(Lu, 3).toLowerCase() ? (e = r.substr(Lu, 3), Lu += 3) : (e = o, 0 === Eu && mu(ke));
                        e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'AVG' : (Lu = t, t = o)) : (Lu = t, t = o);
                        return t;
                      }());
                      return t;
                    }()) !== o && Ea() !== o && La() !== o && Ea() !== o && (n = Oo()) !== o && Ea() !== o && Ca() !== o ? t = e = {
                      type: 'aggr_func',
                      name: e,
                      args: { expr: n }
                    } : (Lu = t, t = o);
                    return t;
                  }());
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s;
                  t = Lu, (e = Ua()) !== o && Ea() !== o && La() !== o && Ea() !== o ? ((n = Ao()) === o && (n = null), n !== o && Ea() !== o && (u = Ca()) !== o && Ea() !== o ? ((s = Wo()) === o && (s = null), s !== o ? t = e = {
                    type: 'function',
                    name: e,
                    args: n || {
                      type: 'expr_list',
                      value: []
                    },
                    over: s
                  } : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o);
                  t === o && (t = Lu, (e = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = Lu, 'current_date' === r.substr(Lu, 12).toLowerCase() ? (e = r.substr(Lu, 12), Lu += 12) : (e = o, 0 === Eu && mu(Cn));
                      e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'CURRENT_DATE' : (Lu = t, t = o)) : (Lu = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = Lu, 'current_time' === r.substr(Lu, 12).toLowerCase() ? (e = r.substr(Lu, 12), Lu += 12) : (e = o, 0 === Eu && mu(mn));
                      e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'CURRENT_TIME' : (Lu = t, t = o)) : (Lu = t, t = o);
                      return t;
                    }()) === o && (t = na()) === o && (t = function () {
                      var t, e, n, u;
                      t = Lu, 'current_user' === r.substr(Lu, 12).toLowerCase() ? (e = r.substr(Lu, 12), Lu += 12) : (e = o, 0 === Eu && mu(In));
                      e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'CURRENT_USER' : (Lu = t, t = o)) : (Lu = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = Lu, 'user' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(Ln));
                      e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'USER' : (Lu = t, t = o)) : (Lu = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = Lu, 'session_user' === r.substr(Lu, 12).toLowerCase() ? (e = r.substr(Lu, 12), Lu += 12) : (e = o, 0 === Eu && mu(Nn));
                      e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'SESSION_USER' : (Lu = t, t = o)) : (Lu = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = Lu, 'system_user' === r.substr(Lu, 11).toLowerCase() ? (e = r.substr(Lu, 11), Lu += 11) : (e = o, 0 === Eu && mu(Rn));
                      e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'SYSTEM_USER' : (Lu = t, t = o)) : (Lu = t, t = o);
                      return t;
                    }());
                    return t;
                  }()) !== o && Ea() !== o && La() !== o && Ea() !== o && (n = Ca()) !== o && Ea() !== o ? ((u = Wo()) === o && (u = null), u !== o ? (e = function (r, t) {
                    return {
                      type: 'function',
                      name: r,
                      args: {
                        type: 'expr_list',
                        value: []
                      },
                      over: t
                    };
                  }(e, u), t = e) : (Lu = t, t = o)) : (Lu = t, t = o));
                  return t;
                }()) === o && (t = To()) === o && (t = yo()) === o && (t = ko()) === o && (t = Xo()) === o && (t = Lu, La() !== o && Ea() !== o && (e = So()) !== o && Ea() !== o && Ca() !== o ? t = $r(e) : (Lu = t, t = o), t === o && (t = Lu, La() !== o && Ea() !== o && (e = Ao()) !== o && Ea() !== o && Ca() !== o ? ((n = e).parentheses = !0, t = n) : (Lu = t, t = o), t === o && (t = Da()))), t;
              }
              function ko() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = Lu, e = Lu, (n = $o()) !== o && (u = Ea()) !== o && (s = va()) !== o && (a = Ea()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (Lu = e, e = o), e === o && (e = null), e !== o && (n = Po()) !== o && (u = Ea()) !== o ? ((s = function () {
                  var t;
                  '->>' === r.substr(Lu, 3) ? (t = '->>', Lu += 3) : (t = o, 0 === Eu && mu(uu));
                  return t;
                }()) === o && (s = function () {
                  var t;
                  '->' === r.substr(Lu, 2) ? (t = '->', Lu += 2) : (t = o, 0 === Eu && mu(nu));
                  return t;
                }()), s !== o && (a = Ea()) !== o ? ((i = qo()) === o && (i = Qo()), i !== o && Ea() !== o ? ((c = Uu()) === o && (c = null), c !== o ? t = e = function (r, t, e, n, u) {
                  const o = r && r[0] || null;
                  return qa.add(`select::${ o }::${ t }`), {
                    type: 'column_ref',
                    table: o,
                    column: t,
                    collate: u,
                    arrow: e,
                    property: n
                  };
                }(e, n, s, i, c) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o), t === o && (t = Lu, (e = $o()) !== o && (n = Ea()) !== o && (u = va()) !== o && (s = Ea()) !== o && (a = function () {
                  var r, t;
                  r = Lu, (t = Ho()) !== o && (t = t);
                  (r = t) === o && (r = Fo());
                  return r;
                }()) !== o ? (l = e, f = a, qa.add(`select::${ l }::${ f }`), t = e = {
                  type: 'column_ref',
                  table: l,
                  column: f
                }) : (Lu = t, t = o), t === o && (t = Lu, (e = Po()) !== o && (e = function (r) {
                  return qa.add('select::null::' + r), {
                    type: 'column_ref',
                    table: null,
                    column: r
                  };
                }(e)), t = e)), t;
              }
              function $o() {
                var r, t;
                return r = Lu, (t = Go()) !== o ? (Fr(t) ? o : void 0) !== o ? r = t = t : (Lu = r, r = o) : (Lu = r, r = o), r === o && (r = Lu, (t = Fo()) !== o && (t = t), r = t), r;
              }
              function Fo() {
                var t;
                return (t = function () {
                  var t, e, n, u;
                  t = Lu, 34 === r.charCodeAt(Lu) ? (e = '"', Lu++) : (e = o, 0 === Eu && mu(Pr));
                  if (e !== o) {
                    if (n = [], Hr.test(r.charAt(Lu)) ? (u = r.charAt(Lu), Lu++) : (u = o, 0 === Eu && mu(Gr)), u !== o)
                      for (; u !== o;)
                        n.push(u), Hr.test(r.charAt(Lu)) ? (u = r.charAt(Lu), Lu++) : (u = o, 0 === Eu && mu(Gr));
                    else
                      n = o;
                    n !== o ? (34 === r.charCodeAt(Lu) ? (u = '"', Lu++) : (u = o, 0 === Eu && mu(Pr)), u !== o ? (e = jr(n), t = e) : (Lu = t, t = o)) : (Lu = t, t = o);
                  } else
                    Lu = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Lu, 39 === r.charCodeAt(Lu) ? (e = '\'', Lu++) : (e = o, 0 === Eu && mu(tr));
                  if (e !== o) {
                    if (n = [], Yr.test(r.charAt(Lu)) ? (u = r.charAt(Lu), Lu++) : (u = o, 0 === Eu && mu(Br)), u !== o)
                      for (; u !== o;)
                        n.push(u), Yr.test(r.charAt(Lu)) ? (u = r.charAt(Lu), Lu++) : (u = o, 0 === Eu && mu(Br));
                    else
                      n = o;
                    n !== o ? (39 === r.charCodeAt(Lu) ? (u = '\'', Lu++) : (u = o, 0 === Eu && mu(tr)), u !== o ? (e = jr(n), t = e) : (Lu = t, t = o)) : (Lu = t, t = o);
                  } else
                    Lu = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Lu, 96 === r.charCodeAt(Lu) ? (e = '`', Lu++) : (e = o, 0 === Eu && mu(Xr));
                  if (e !== o) {
                    if (n = [], Wr.test(r.charAt(Lu)) ? (u = r.charAt(Lu), Lu++) : (u = o, 0 === Eu && mu(Vr)), u !== o)
                      for (; u !== o;)
                        n.push(u), Wr.test(r.charAt(Lu)) ? (u = r.charAt(Lu), Lu++) : (u = o, 0 === Eu && mu(Vr));
                    else
                      n = o;
                    n !== o ? (96 === r.charCodeAt(Lu) ? (u = '`', Lu++) : (u = o, 0 === Eu && mu(Xr)), u !== o ? (e = jr(n), t = e) : (Lu = t, t = o)) : (Lu = t, t = o);
                  } else
                    Lu = t, t = o;
                  return t;
                }()), t;
              }
              function Po() {
                var r, t;
                return r = Lu, (t = Ho()) !== o ? (Fr(t) ? o : void 0) !== o ? r = t = t : (Lu = r, r = o) : (Lu = r, r = o), r === o && (r = Fo()), r;
              }
              function Ho() {
                var r, t, e, n;
                if (r = Lu, (t = jo()) !== o) {
                  for (e = [], n = Bo(); n !== o;)
                    e.push(n), n = Bo();
                  e !== o ? r = t = Kr(t, e) : (Lu = r, r = o);
                } else
                  Lu = r, r = o;
                return r;
              }
              function Go() {
                var r, t, e, n;
                if (r = Lu, (t = jo()) !== o) {
                  for (e = [], n = Yo(); n !== o;)
                    e.push(n), n = Yo();
                  e !== o ? r = t = Kr(t, e) : (Lu = r, r = o);
                } else
                  Lu = r, r = o;
                return r;
              }
              function jo() {
                var t;
                return qr.test(r.charAt(Lu)) ? (t = r.charAt(Lu), Lu++) : (t = o, 0 === Eu && mu(Zr)), t;
              }
              function Yo() {
                var t;
                return zr.test(r.charAt(Lu)) ? (t = r.charAt(Lu), Lu++) : (t = o, 0 === Eu && mu(Jr)), t;
              }
              function Bo() {
                var t;
                return Qr.test(r.charAt(Lu)) ? (t = r.charAt(Lu), Lu++) : (t = o, 0 === Eu && mu(rt)), t;
              }
              function Xo() {
                var e, n, u;
                return e = Lu, 58 === r.charCodeAt(Lu) ? (n = ':', Lu++) : (n = o, 0 === Eu && mu(tt)), n !== o && (u = Go()) !== o ? e = n = [
                  n,
                  u
                ] : (Lu = e, e = o), e !== o && (e = {
                  type: 'param',
                  value: e[1]
                }), e;
              }
              function Wo() {
                var t, e, n;
                return t = Lu, function () {
                  var t, e, n, u;
                  t = Lu, 'over' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(le));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }() !== o && Ea() !== o && La() !== o && Ea() !== o && Ls() !== o && Ea() !== o && Ns() !== o && Ea() !== o && (e = Ku()) !== o && Ea() !== o ? ((n = co()) === o && (n = null), n !== o && Ea() !== o && Ca() !== o ? t = {
                  partitionby: e,
                  orderby: n
                } : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Vo() {
                var t;
                return (t = qo()) === o && (t = Qo()) === o && (t = function () {
                  var t, e;
                  t = Lu, (e = function () {
                    var t, e, n, u;
                    t = Lu, 'true' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(Ut));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !0
                  });
                  (t = e) === o && (t = Lu, (e = function () {
                    var t, e, n, u;
                    t = Lu, 'false' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(Mt));
                    e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Lu = t, t = o)) : (Lu = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !1
                  }), t = e);
                  return t;
                }()) === o && (t = Ko()) === o && (t = function () {
                  var t, e, n, u, s, a, i;
                  t = Lu, (e = ta()) === o && (e = Qs()) === o && (e = ea()) === o && (e = ra());
                  if (e !== o)
                    if (Ea() !== o) {
                      if (n = Lu, 39 === r.charCodeAt(Lu) ? (u = '\'', Lu++) : (u = o, 0 === Eu && mu(tr)), u !== o) {
                        for (s = [], a = zo(); a !== o;)
                          s.push(a), a = zo();
                        s !== o ? (39 === r.charCodeAt(Lu) ? (a = '\'', Lu++) : (a = o, 0 === Eu && mu(tr)), a !== o ? n = u = [
                          u,
                          s,
                          a
                        ] : (Lu = n, n = o)) : (Lu = n, n = o);
                      } else
                        Lu = n, n = o;
                      n !== o ? (c = n, e = {
                        type: e.toLowerCase(),
                        value: c[1].join('')
                      }, t = e) : (Lu = t, t = o);
                    } else
                      Lu = t, t = o;
                  else
                    Lu = t, t = o;
                  var c;
                  t === o && (t = Lu, (e = na()) !== o && Ea() !== o ? ((n = La()) === o && (n = null), n !== o && (u = Ea()) !== o ? ((s = Ca()) === o && (s = null), s !== o ? (a = (a = function (r, t, e) {
                    if (t && e)
                      return !0;
                  }(0, n, s)) ? o : void 0) !== o && Ea() !== o ? ('on update current_timestamp' === r.substr(Lu, 27).toLowerCase() ? (i = r.substr(Lu, 27), Lu += 27) : (i = o, 0 === Eu && mu(nt)), i === o && (i = null), i !== o ? (e = function (r, t, e, n) {
                    return {
                      type: 'origin',
                      value: (n ? `${ r } ${ n }` : r).toLowerCase()
                    };
                  }(e, 0, 0, i), t = e) : (Lu = t, t = o)) : (Lu = t, t = o) : (Lu = t, t = o)) : (Lu = t, t = o)) : (Lu = t, t = o));
                  return t;
                }()), t;
              }
              function Ko() {
                var e;
                return (e = function () {
                  var t, e, n, u;
                  t = Lu, 'null' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(gt));
                  e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Lu = t, t = o)) : (Lu = t, t = o);
                  return t;
                }()) !== o && (e = {
                  type: 'null',
                  value: null
                }), e;
              }
              function qo() {
                var t, e, n, u, s;
                if (t = Lu, e = Lu, 39 === r.charCodeAt(Lu) ? (n = '\'', Lu++) : (n = o, 0 === Eu && mu(tr)), n !== o) {
                  for (u = [], s = zo(); s !== o;)
                    u.push(s), s = zo();
                  u !== o ? (39 === r.charCodeAt(Lu) ? (s = '\'', Lu++) : (s = o, 0 === Eu && mu(tr)), s !== o ? e = n = [
                    n,
                    u,
                    s
                  ] : (Lu = e, e = o)) : (Lu = e, e = o);
                } else
                  Lu = e, e = o;
                if (e !== o && (e = et(e)), (t = e) === o) {
                  if (t = Lu, e = Lu, 34 === r.charCodeAt(Lu) ? (n = '"', Lu++) : (n = o, 0 === Eu && mu(Pr)), n !== o) {
                    for (u = [], s = Zo(); s !== o;)
                      u.push(s), s = Zo();
                    u !== o ? (34 === r.charCodeAt(Lu) ? (s = '"', Lu++) : (s = o, 0 === Eu && mu(Pr)), s !== o ? e = n = [
                      n,
                      u,
                      s
                    ] : (Lu = e, e = o)) : (Lu = e, e = o);
                  } else
                    Lu = e, e = o;
                  e !== o && (e = et(e)), t = e;
                }
                return t;
              }
              function Zo() {
                var t;
                return ut.test(r.charAt(Lu)) ? (t = r.charAt(Lu), Lu++) : (t = o, 0 === Eu && mu(ot)), t === o && (t = Jo()), t;
              }
              function zo() {
                var t;
                return st.test(r.charAt(Lu)) ? (t = r.charAt(Lu), Lu++) : (t = o, 0 === Eu && mu(at)), t === o && (t = Jo()), t;
              }
              function Jo() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = Lu, '\\\'' === r.substr(Lu, 2) ? (e = '\\\'', Lu += 2) : (e = o, 0 === Eu && mu(it)), e !== o && (e = '\''), (t = e) === o && (t = Lu, '\\"' === r.substr(Lu, 2) ? (e = '\\"', Lu += 2) : (e = o, 0 === Eu && mu(ct)), e !== o && (e = '"'), (t = e) === o && (t = Lu, '\\\\' === r.substr(Lu, 2) ? (e = '\\\\', Lu += 2) : (e = o, 0 === Eu && mu(lt)), e !== o && (e = '\\'), (t = e) === o && (t = Lu, '\\/' === r.substr(Lu, 2) ? (e = '\\/', Lu += 2) : (e = o, 0 === Eu && mu(ft)), e !== o && (e = '/'), (t = e) === o && (t = Lu, '\\b' === r.substr(Lu, 2) ? (e = '\\b', Lu += 2) : (e = o, 0 === Eu && mu(vt)), e !== o && (e = '\b'), (t = e) === o && (t = Lu, '\\f' === r.substr(Lu, 2) ? (e = '\\f', Lu += 2) : (e = o, 0 === Eu && mu(bt)), e !== o && (e = '\f'), (t = e) === o && (t = Lu, '\\n' === r.substr(Lu, 2) ? (e = '\\n', Lu += 2) : (e = o, 0 === Eu && mu(dt)), e !== o && (e = '\n'), (t = e) === o && (t = Lu, '\\r' === r.substr(Lu, 2) ? (e = '\\r', Lu += 2) : (e = o, 0 === Eu && mu(Lt)), e !== o && (e = '\r'), (t = e) === o && (t = Lu, '\\t' === r.substr(Lu, 2) ? (e = '\\t', Lu += 2) : (e = o, 0 === Eu && mu(Ct)), e !== o && (e = '\t'), (t = e) === o && (t = Lu, '\\u' === r.substr(Lu, 2) ? (e = '\\u', Lu += 2) : (e = o, 0 === Eu && mu(pt)), e !== o && (n = os()) !== o && (u = os()) !== o && (s = os()) !== o && (a = os()) !== o ? (i = n, c = u, l = s, f = a, t = e = String.fromCharCode(parseInt('0x' + i + c + l + f))) : (Lu = t, t = o), t === o && (t = Lu, 92 === r.charCodeAt(Lu) ? (e = '\\', Lu++) : (e = o, 0 === Eu && mu(wt)), e !== o && (e = '\\'), t = e)))))))))), t;
              }
              function Qo() {
                var t, e;
                return (t = function () {
                  var r, t, e, n;
                  r = Lu, (t = rs()) !== o && (e = ts()) !== o && (n = es()) !== o ? r = t = {
                    type: 'bigint',
                    value: t + e + n
                  } : (Lu = r, r = o);
                  r === o && (r = Lu, (t = rs()) !== o && (e = ts()) !== o ? (t = function (r, t) {
                    const e = r + t;
                    return ja(r) ? {
                      type: 'bigint',
                      value: e
                    } : parseFloat(e);
                  }(t, e), r = t) : (Lu = r, r = o), r === o && (r = Lu, (t = rs()) !== o && (e = es()) !== o ? (t = function (r, t) {
                    return {
                      type: 'bigint',
                      value: r + t
                    };
                  }(t, e), r = t) : (Lu = r, r = o), r === o && (r = Lu, (t = rs()) !== o && (t = function (r) {
                    return ja(r) ? {
                      type: 'bigint',
                      value: r
                    } : parseFloat(r);
                  }(t)), r = t)));
                  return r;
                }()) !== o && (t = (e = t) && 'bigint' === e.type ? e : {
                  type: 'number',
                  value: e
                }), t;
              }
              function rs() {
                var t, e, n;
                return (t = ns()) === o && (t = us()) === o && (t = Lu, 45 === r.charCodeAt(Lu) ? (e = '-', Lu++) : (e = o, 0 === Eu && mu(xr)), e === o && (43 === r.charCodeAt(Lu) ? (e = '+', Lu++) : (e = o, 0 === Eu && mu(Ur))), e !== o && (n = ns()) !== o ? t = e = '-' + n : (Lu = t, t = o), t === o && (t = Lu, 45 === r.charCodeAt(Lu) ? (e = '-', Lu++) : (e = o, 0 === Eu && mu(xr)), e === o && (43 === r.charCodeAt(Lu) ? (e = '+', Lu++) : (e = o, 0 === Eu && mu(Ur))), e !== o && (n = us()) !== o ? t = e = '-' + n : (Lu = t, t = o))), t;
              }
              function ts() {
                var t, e, n;
                return t = Lu, 46 === r.charCodeAt(Lu) ? (e = '.', Lu++) : (e = o, 0 === Eu && mu(At)), e !== o && (n = ns()) !== o ? t = e = '.' + n : (Lu = t, t = o), t;
              }
              function es() {
                var t, e, n;
                return t = Lu, (e = function () {
                  var t, e, n;
                  t = Lu, It.test(r.charAt(Lu)) ? (e = r.charAt(Lu), Lu++) : (e = o, 0 === Eu && mu(Nt));
                  e !== o ? (Rt.test(r.charAt(Lu)) ? (n = r.charAt(Lu), Lu++) : (n = o, 0 === Eu && mu(_t)), n === o && (n = null), n !== o ? t = e = e + (null !== (u = n) ? u : '') : (Lu = t, t = o)) : (Lu = t, t = o);
                  var u;
                  return t;
                }()) !== o && (n = ns()) !== o ? t = e = e + n : (Lu = t, t = o), t;
              }
              function ns() {
                var t, e;
                if (t = [], (e = us()) !== o)
                  for (; e !== o;)
                    t.push(e), e = us();
                else
                  t = o;
                return t !== o && (t = t.join('')), t;
              }
              function us() {
                var t;
                return yt.test(r.charAt(Lu)) ? (t = r.charAt(Lu), Lu++) : (t = o, 0 === Eu && mu(Tt)), t;
              }
              function os() {
                var t;
                return mt.test(r.charAt(Lu)) ? (t = r.charAt(Lu), Lu++) : (t = o, 0 === Eu && mu(St)), t;
              }
              function ss() {
                var t, e, n, u;
                return t = Lu, 'default' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(C)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function as() {
                var t, e, n, u;
                return t = Lu, 'to' === r.substr(Lu, 2).toLowerCase() ? (e = r.substr(Lu, 2), Lu += 2) : (e = o, 0 === Eu && mu(xt)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function is() {
                var t, e, n, u;
                return t = Lu, 'drop' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(Dt)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'DROP' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function cs() {
                var t, e, n, u;
                return t = Lu, 'update' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(Pt)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function ls() {
                var t, e, n, u;
                return t = Lu, 'create' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(Ht)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function fs() {
                var t, e, n, u;
                return t = Lu, 'temporary' === r.substr(Lu, 9).toLowerCase() ? (e = r.substr(Lu, 9), Lu += 9) : (e = o, 0 === Eu && mu(Gt)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function vs() {
                var t, e, n, u;
                return t = Lu, 'if not exists' === r.substr(Lu, 13).toLowerCase() ? (e = r.substr(Lu, 13), Lu += 13) : (e = o, 0 === Eu && mu(jt)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function bs() {
                var t, e, n, u;
                return t = Lu, 'replace' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(Wt)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function ds() {
                var t, e, n, u;
                return t = Lu, 'rename' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(Vt)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Ls() {
                var t, e, n, u;
                return t = Lu, 'partition' === r.substr(Lu, 9).toLowerCase() ? (e = r.substr(Lu, 9), Lu += 9) : (e = o, 0 === Eu && mu(qt)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'PARTITION' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Cs() {
                var t, e, n, u;
                return t = Lu, 'into' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(Zt)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function ps() {
                var t, e, n, u;
                return t = Lu, 'set' === r.substr(Lu, 3).toLowerCase() ? (e = r.substr(Lu, 3), Lu += 3) : (e = o, 0 === Eu && mu(Jt)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function ws() {
                var t, e, n, u;
                return t = Lu, 'as' === r.substr(Lu, 2).toLowerCase() ? (e = r.substr(Lu, 2), Lu += 2) : (e = o, 0 === Eu && mu(re)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Es() {
                var t, e, n, u;
                return t = Lu, 'table' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(te)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'TABLE' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function hs() {
                var t, e, n, u;
                return t = Lu, 'tables' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(ee)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'TABLES' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function As() {
                var t, e, n, u;
                return t = Lu, 'on' === r.substr(Lu, 2).toLowerCase() ? (e = r.substr(Lu, 2), Lu += 2) : (e = o, 0 === Eu && mu(ne)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function ys() {
                var t, e, n, u;
                return t = Lu, 'join' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(ie)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Ts() {
                var t, e, n, u;
                return t = Lu, 'outer' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(ce)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function ms() {
                var t, e, n, u;
                return t = Lu, 'union' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(fe)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Ss() {
                var t, e, n, u;
                return t = Lu, 'using' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(be)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Is() {
                var t, e, n, u;
                return t = Lu, 'with' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(br)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Ns() {
                var t, e, n, u;
                return t = Lu, 'by' === r.substr(Lu, 2).toLowerCase() ? (e = r.substr(Lu, 2), Lu += 2) : (e = o, 0 === Eu && mu(Ce)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Rs() {
                var t, e, n, u;
                return t = Lu, 'fetch' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(Ee)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'FETCH' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function _s() {
                var t, e, n, u;
                return t = Lu, 'all' === r.substr(Lu, 3).toLowerCase() ? (e = r.substr(Lu, 3), Lu += 3) : (e = o, 0 === Eu && mu(Te)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'ALL' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function gs() {
                var t, e, n, u;
                return t = Lu, 'distinct' === r.substr(Lu, 8).toLowerCase() ? (e = r.substr(Lu, 8), Lu += 8) : (e = o, 0 === Eu && mu(me)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'DISTINCT' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Os() {
                var t, e, n, u;
                return t = Lu, 'between' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(Se)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'BETWEEN' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Us() {
                var t, e, n, u;
                return t = Lu, 'in' === r.substr(Lu, 2).toLowerCase() ? (e = r.substr(Lu, 2), Lu += 2) : (e = o, 0 === Eu && mu(Ie)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'IN' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function xs() {
                var t, e, n, u;
                return t = Lu, 'is' === r.substr(Lu, 2).toLowerCase() ? (e = r.substr(Lu, 2), Lu += 2) : (e = o, 0 === Eu && mu(Ne)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'IS' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Ms() {
                var t, e, n, u;
                return t = Lu, 'like' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(Re)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'LIKE' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Ds() {
                var t, e, n, u;
                return t = Lu, 'exists' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(_e)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'EXISTS' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function ks() {
                var t, e, n, u;
                return t = Lu, 'not' === r.substr(Lu, 3).toLowerCase() ? (e = r.substr(Lu, 3), Lu += 3) : (e = o, 0 === Eu && mu(O)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'NOT' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function $s() {
                var t, e, n, u;
                return t = Lu, 'and' === r.substr(Lu, 3).toLowerCase() ? (e = r.substr(Lu, 3), Lu += 3) : (e = o, 0 === Eu && mu(ge)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'AND' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Fs() {
                var t, e, n, u;
                return t = Lu, 'or' === r.substr(Lu, 2).toLowerCase() ? (e = r.substr(Lu, 2), Lu += 2) : (e = o, 0 === Eu && mu(Oe)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'OR' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Ps() {
                var t, e, n, u;
                return t = Lu, 'case' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(Fe)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Hs() {
                var t, e, n, u;
                return t = Lu, 'cast' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(Ye)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Gs() {
                var t, e, n, u;
                return t = Lu, 'char' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(Be)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'CHAR' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function js() {
                var t, e, n, u;
                return t = Lu, 'varchar' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(Xe)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'VARCHAR' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Ys() {
                var t, e, n, u;
                return t = Lu, 'numeric' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(We)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'NUMERIC' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Bs() {
                var t, e, n, u;
                return t = Lu, 'decimal' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(Ve)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'DECIMAL' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Xs() {
                var t, e, n, u;
                return t = Lu, 'unsigned' === r.substr(Lu, 8).toLowerCase() ? (e = r.substr(Lu, 8), Lu += 8) : (e = o, 0 === Eu && mu(qe)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'UNSIGNED' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Ws() {
                var t, e, n, u;
                return t = Lu, 'int' === r.substr(Lu, 3).toLowerCase() ? (e = r.substr(Lu, 3), Lu += 3) : (e = o, 0 === Eu && mu(Ze)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'INT' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Vs() {
                var t, e, n, u;
                return t = Lu, 'integer' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(Je)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'INTEGER' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Ks() {
                var t, e, n, u;
                return t = Lu, 'smallint' === r.substr(Lu, 8).toLowerCase() ? (e = r.substr(Lu, 8), Lu += 8) : (e = o, 0 === Eu && mu(rn)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'SMALLINT' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function qs() {
                var t, e, n, u;
                return t = Lu, 'tinyint' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(tn)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'TINYINT' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Zs() {
                var t, e, n, u;
                return t = Lu, 'bigint' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(sn)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'BIGINT' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function zs() {
                var t, e, n, u;
                return t = Lu, 'float' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(an)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'FLOAT' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Js() {
                var t, e, n, u;
                return t = Lu, 'double' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(cn)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'DOUBLE' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Qs() {
                var t, e, n, u;
                return t = Lu, 'date' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(ln)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'DATE' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function ra() {
                var t, e, n, u;
                return t = Lu, 'datetime' === r.substr(Lu, 8).toLowerCase() ? (e = r.substr(Lu, 8), Lu += 8) : (e = o, 0 === Eu && mu(fn)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'DATETIME' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function ta() {
                var t, e, n, u;
                return t = Lu, 'time' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(vn)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'TIME' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function ea() {
                var t, e, n, u;
                return t = Lu, 'timestamp' === r.substr(Lu, 9).toLowerCase() ? (e = r.substr(Lu, 9), Lu += 9) : (e = o, 0 === Eu && mu(bn)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'TIMESTAMP' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function na() {
                var t, e, n, u;
                return t = Lu, 'current_timestamp' === r.substr(Lu, 17).toLowerCase() ? (e = r.substr(Lu, 17), Lu += 17) : (e = o, 0 === Eu && mu(Sn)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'CURRENT_TIMESTAMP' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function ua() {
                var t;
                return (t = function () {
                  var t;
                  return '@@' === r.substr(Lu, 2) ? (t = '@@', Lu += 2) : (t = o, 0 === Eu && mu(Mn)), t;
                }()) === o && (t = function () {
                  var t;
                  return 64 === r.charCodeAt(Lu) ? (t = '@', Lu++) : (t = o, 0 === Eu && mu(xn)), t;
                }()) === o && (t = function () {
                  var t;
                  return 36 === r.charCodeAt(Lu) ? (t = '$', Lu++) : (t = o, 0 === Eu && mu(Dn)), t;
                }()), t;
              }
              function oa() {
                var t;
                return 61 === r.charCodeAt(Lu) ? (t = '=', Lu++) : (t = o, 0 === Eu && mu(Ar)), t;
              }
              function sa() {
                var t, e, n, u;
                return t = Lu, 'add' === r.substr(Lu, 3).toLowerCase() ? (e = r.substr(Lu, 3), Lu += 3) : (e = o, 0 === Eu && mu(Pn)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'ADD' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function aa() {
                var t, e, n, u;
                return t = Lu, 'column' === r.substr(Lu, 6).toLowerCase() ? (e = r.substr(Lu, 6), Lu += 6) : (e = o, 0 === Eu && mu(Hn)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'COLUMN' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function ia() {
                var t, e, n, u;
                return t = Lu, 'index' === r.substr(Lu, 5).toLowerCase() ? (e = r.substr(Lu, 5), Lu += 5) : (e = o, 0 === Eu && mu(Gn)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'INDEX' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function ca() {
                var t, e, n, u;
                return t = Lu, 'key' === r.substr(Lu, 3).toLowerCase() ? (e = r.substr(Lu, 3), Lu += 3) : (e = o, 0 === Eu && mu(v)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'KEY' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function la() {
                var t, e, n, u;
                return t = Lu, 'comment' === r.substr(Lu, 7).toLowerCase() ? (e = r.substr(Lu, 7), Lu += 7) : (e = o, 0 === Eu && mu(Bn)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'COMMENT' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function fa() {
                var t, e, n, u;
                return t = Lu, 'constraint' === r.substr(Lu, 10).toLowerCase() ? (e = r.substr(Lu, 10), Lu += 10) : (e = o, 0 === Eu && mu(Xn)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'CONSTRAINT' : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function va() {
                var t;
                return 46 === r.charCodeAt(Lu) ? (t = '.', Lu++) : (t = o, 0 === Eu && mu(At)), t;
              }
              function ba() {
                var t;
                return 44 === r.charCodeAt(Lu) ? (t = ',', Lu++) : (t = o, 0 === Eu && mu(Qn)), t;
              }
              function da() {
                var t;
                return 42 === r.charCodeAt(Lu) ? (t = '*', Lu++) : (t = o, 0 === Eu && mu(Mr)), t;
              }
              function La() {
                var t;
                return 40 === r.charCodeAt(Lu) ? (t = '(', Lu++) : (t = o, 0 === Eu && mu(cr)), t;
              }
              function Ca() {
                var t;
                return 41 === r.charCodeAt(Lu) ? (t = ')', Lu++) : (t = o, 0 === Eu && mu(lr)), t;
              }
              function pa() {
                var t;
                return 59 === r.charCodeAt(Lu) ? (t = ';', Lu++) : (t = o, 0 === Eu && mu(eu)), t;
              }
              function wa() {
                var t;
                return (t = function () {
                  var t;
                  return '||' === r.substr(Lu, 2) ? (t = '||', Lu += 2) : (t = o, 0 === Eu && mu(ou)), t;
                }()) === o && (t = function () {
                  var t;
                  return '&&' === r.substr(Lu, 2) ? (t = '&&', Lu += 2) : (t = o, 0 === Eu && mu(su)), t;
                }()), t;
              }
              function Ea() {
                var r, t;
                for (r = [], (t = ma()) === o && (t = Aa()); t !== o;)
                  r.push(t), (t = ma()) === o && (t = Aa());
                return r;
              }
              function ha() {
                var r, t;
                if (r = [], (t = ma()) === o && (t = Aa()), t !== o)
                  for (; t !== o;)
                    r.push(t), (t = ma()) === o && (t = Aa());
                else
                  r = o;
                return r;
              }
              function Aa() {
                var t;
                return (t = function () {
                  var t, e, n, u, s, a;
                  t = Lu, '/*' === r.substr(Lu, 2) ? (e = '/*', Lu += 2) : (e = o, 0 === Eu && mu(au));
                  if (e !== o) {
                    for (n = [], u = Lu, s = Lu, Eu++, '*/' === r.substr(Lu, 2) ? (a = '*/', Lu += 2) : (a = o, 0 === Eu && mu(iu)), Eu--, a === o ? s = void 0 : (Lu = s, s = o), s !== o && (a = Ta()) !== o ? u = s = [
                        s,
                        a
                      ] : (Lu = u, u = o); u !== o;)
                      n.push(u), u = Lu, s = Lu, Eu++, '*/' === r.substr(Lu, 2) ? (a = '*/', Lu += 2) : (a = o, 0 === Eu && mu(iu)), Eu--, a === o ? s = void 0 : (Lu = s, s = o), s !== o && (a = Ta()) !== o ? u = s = [
                        s,
                        a
                      ] : (Lu = u, u = o);
                    n !== o ? ('*/' === r.substr(Lu, 2) ? (u = '*/', Lu += 2) : (u = o, 0 === Eu && mu(iu)), u !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (Lu = t, t = o)) : (Lu = t, t = o);
                  } else
                    Lu = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = Lu, '--' === r.substr(Lu, 2) ? (e = '--', Lu += 2) : (e = o, 0 === Eu && mu(cu));
                  if (e !== o) {
                    for (n = [], u = Lu, s = Lu, Eu++, a = Sa(), Eu--, a === o ? s = void 0 : (Lu = s, s = o), s !== o && (a = Ta()) !== o ? u = s = [
                        s,
                        a
                      ] : (Lu = u, u = o); u !== o;)
                      n.push(u), u = Lu, s = Lu, Eu++, a = Sa(), Eu--, a === o ? s = void 0 : (Lu = s, s = o), s !== o && (a = Ta()) !== o ? u = s = [
                        s,
                        a
                      ] : (Lu = u, u = o);
                    n !== o ? t = e = [
                      e,
                      n
                    ] : (Lu = t, t = o);
                  } else
                    Lu = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = Lu, 35 === r.charCodeAt(Lu) ? (e = '#', Lu++) : (e = o, 0 === Eu && mu(lu));
                  if (e !== o) {
                    for (n = [], u = Lu, s = Lu, Eu++, a = Sa(), Eu--, a === o ? s = void 0 : (Lu = s, s = o), s !== o && (a = Ta()) !== o ? u = s = [
                        s,
                        a
                      ] : (Lu = u, u = o); u !== o;)
                      n.push(u), u = Lu, s = Lu, Eu++, a = Sa(), Eu--, a === o ? s = void 0 : (Lu = s, s = o), s !== o && (a = Ta()) !== o ? u = s = [
                        s,
                        a
                      ] : (Lu = u, u = o);
                    n !== o ? t = e = [
                      e,
                      n
                    ] : (Lu = t, t = o);
                  } else
                    Lu = t, t = o;
                  return t;
                }()), t;
              }
              function ya() {
                var r, t, e, n, u, s, a;
                return r = Lu, (t = la()) !== o && Ea() !== o ? ((e = oa()) === o && (e = null), e !== o && Ea() !== o && (n = qo()) !== o ? (s = e, a = n, r = t = {
                  type: (u = t).toLowerCase(),
                  keyword: u.toLowerCase(),
                  symbol: s,
                  value: a
                }) : (Lu = r, r = o)) : (Lu = r, r = o), r;
              }
              function Ta() {
                var t;
                return r.length > Lu ? (t = r.charAt(Lu), Lu++) : (t = o, 0 === Eu && mu(fu)), t;
              }
              function ma() {
                var t;
                return vu.test(r.charAt(Lu)) ? (t = r.charAt(Lu), Lu++) : (t = o, 0 === Eu && mu(bu)), t;
              }
              function Sa() {
                var t, e;
                if ((t = function () {
                    var t, e;
                    t = Lu, Eu++, r.length > Lu ? (e = r.charAt(Lu), Lu++) : (e = o, 0 === Eu && mu(fu));
                    Eu--, e === o ? t = void 0 : (Lu = t, t = o);
                    return t;
                  }()) === o)
                  if (t = [], Et.test(r.charAt(Lu)) ? (e = r.charAt(Lu), Lu++) : (e = o, 0 === Eu && mu(ht)), e !== o)
                    for (; e !== o;)
                      t.push(e), Et.test(r.charAt(Lu)) ? (e = r.charAt(Lu), Lu++) : (e = o, 0 === Eu && mu(ht));
                  else
                    t = o;
                return t;
              }
              function Ia() {
                var t, e;
                return t = Lu, Va = [], void 0 !== o && Ea() !== o ? ((e = Na()) === o && (e = function () {
                  var t, e;
                  t = Lu, function () {
                    var t;
                    return 'return' === r.substr(Lu, 6).toLowerCase() ? (t = r.substr(Lu, 6), Lu += 6) : (t = o, 0 === Eu && mu(kn)), t;
                  }() !== o && Ea() !== o && (e = Ra()) !== o ? t = {
                    type: 'return',
                    expr: e
                  } : (Lu = t, t = o);
                  return t;
                }()), e !== o ? t = {
                  stmt: e,
                  vars: Va
                } : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Na() {
                var t, e, n, u;
                return t = Lu, (e = Da()) === o && (e = ka()), e !== o && Ea() !== o ? ((n = function () {
                  var t;
                  return ':=' === r.substr(Lu, 2) ? (t = ':=', Lu += 2) : (t = o, 0 === Eu && mu($n)), t;
                }()) === o && (n = oa()), n !== o && Ea() !== o && (u = Ra()) !== o ? t = e = {
                  type: 'assign',
                  left: e,
                  symbol: n,
                  right: u
                } : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              function Ra() {
                var t;
                return (t = ju()) === o && (t = function () {
                  var r, t, e, n, u;
                  r = Lu, (t = Da()) !== o && Ea() !== o && (e = oo()) !== o && Ea() !== o && (n = Da()) !== o && Ea() !== o && (u = ao()) !== o ? r = t = {
                    type: 'join',
                    ltable: t,
                    rtable: n,
                    op: e,
                    on: u
                  } : (Lu = r, r = o);
                  return r;
                }()) === o && (t = _a()) === o && (t = function () {
                  var t, e;
                  t = Lu, function () {
                    var t;
                    return 91 === r.charCodeAt(Lu) ? (t = '[', Lu++) : (t = o, 0 === Eu && mu(ru)), t;
                  }() !== o && Ea() !== o && (e = Ma()) !== o && Ea() !== o && function () {
                    var t;
                    return 93 === r.charCodeAt(Lu) ? (t = ']', Lu++) : (t = o, 0 === Eu && mu(tu)), t;
                  }() !== o ? t = {
                    type: 'array',
                    value: e
                  } : (Lu = t, t = o);
                  return t;
                }()), t;
              }
              function _a() {
                var r, t, e, n, u, s, a, i;
                if (r = Lu, (t = ga()) !== o) {
                  for (e = [], n = Lu, (u = Ea()) !== o && (s = Uo()) !== o && (a = Ea()) !== o && (i = ga()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Lu = n, n = o); n !== o;)
                    e.push(n), n = Lu, (u = Ea()) !== o && (s = Uo()) !== o && (a = Ea()) !== o && (i = ga()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Lu = n, n = o);
                  e !== o ? r = t = Tr(t, e) : (Lu = r, r = o);
                } else
                  Lu = r, r = o;
                return r;
              }
              function ga() {
                var r, t, e, n, u, s, a, i;
                if (r = Lu, (t = Oa()) !== o) {
                  for (e = [], n = Lu, (u = Ea()) !== o && (s = Mo()) !== o && (a = Ea()) !== o && (i = Oa()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Lu = n, n = o); n !== o;)
                    e.push(n), n = Lu, (u = Ea()) !== o && (s = Mo()) !== o && (a = Ea()) !== o && (i = Oa()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Lu = n, n = o);
                  e !== o ? r = t = Tr(t, e) : (Lu = r, r = o);
                } else
                  Lu = r, r = o;
                return r;
              }
              function Oa() {
                var r, t;
                return (r = Vo()) === o && (r = Da()) === o && (r = xa()) === o && (r = Xo()) === o && (r = Lu, La() !== o && Ea() !== o && (t = _a()) !== o && Ea() !== o && Ca() !== o ? r = $r(t) : (Lu = r, r = o)), r;
              }
              function Ua() {
                var r, t, e, n, u, s, a;
                return r = Lu, (t = $o()) !== o ? (e = Lu, (n = Ea()) !== o && (u = va()) !== o && (s = Ea()) !== o && (a = $o()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (Lu = e, e = o), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  let e = r;
                  return null !== t && (e = `${ r }.${ t[3] }`), e;
                }(t, e) : (Lu = r, r = o)) : (Lu = r, r = o), r;
              }
              function xa() {
                var r, t, e;
                return r = Lu, (t = Ua()) !== o && Ea() !== o && La() !== o && Ea() !== o ? ((e = Ma()) === o && (e = null), e !== o && Ea() !== o && Ca() !== o ? r = t = {
                  type: 'function',
                  name: t,
                  args: {
                    type: 'expr_list',
                    value: e
                  }
                } : (Lu = r, r = o)) : (Lu = r, r = o), r === o && (r = Lu, (t = Ua()) !== o && (t = function (r) {
                  return {
                    type: 'function',
                    name: r,
                    args: null
                  };
                }(t)), r = t), r;
              }
              function Ma() {
                var r, t, e, n, u, s, a, c;
                if (r = Lu, (t = Oa()) !== o) {
                  for (e = [], n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = Oa()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (Lu = n, n = o); n !== o;)
                    e.push(n), n = Lu, (u = Ea()) !== o && (s = ba()) !== o && (a = Ea()) !== o && (c = Oa()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (Lu = n, n = o);
                  e !== o ? r = t = i(t, e) : (Lu = r, r = o);
                } else
                  Lu = r, r = o;
                return r;
              }
              function Da() {
                var r, t, e, n, u;
                return r = Lu, (t = ua()) !== o && (e = ka()) !== o ? (n = t, u = e, r = t = {
                  type: 'var',
                  ...u,
                  prefix: n
                }) : (Lu = r, r = o), r;
              }
              function ka() {
                var t, e, n, u, s;
                return t = Lu, (e = Go()) !== o && (n = function () {
                  var e, n, u, s;
                  e = [], n = Lu, 46 === r.charCodeAt(Lu) ? (u = '.', Lu++) : (u = o, 0 === Eu && mu(At));
                  u !== o && (s = Go()) !== o ? n = u = [
                    u,
                    s
                  ] : (Lu = n, n = o);
                  for (; n !== o;)
                    e.push(n), n = Lu, 46 === r.charCodeAt(Lu) ? (u = '.', Lu++) : (u = o, 0 === Eu && mu(At)), u !== o && (s = Go()) !== o ? n = u = [
                      u,
                      s
                    ] : (Lu = n, n = o);
                  e !== o && (e = function (r) {
                    const t = [];
                    for (let e = 0; e < r.length; e++)
                      t.push(r[e][1]);
                    return t;
                  }(e));
                  return e;
                }()) !== o ? (u = e, s = n, Va.push(u), t = e = {
                  type: 'var',
                  name: u,
                  members: s,
                  prefix: null
                }) : (Lu = t, t = o), t;
              }
              function $a() {
                var t;
                return (t = function () {
                  var t, e, n, u;
                  t = Lu, (e = Gs()) === o && (e = js());
                  if (e !== o)
                    if (Ea() !== o)
                      if (La() !== o)
                        if (Ea() !== o) {
                          if (n = [], yt.test(r.charAt(Lu)) ? (u = r.charAt(Lu), Lu++) : (u = o, 0 === Eu && mu(Tt)), u !== o)
                            for (; u !== o;)
                              n.push(u), yt.test(r.charAt(Lu)) ? (u = r.charAt(Lu), Lu++) : (u = o, 0 === Eu && mu(Tt));
                          else
                            n = o;
                          n !== o && (u = Ea()) !== o && Ca() !== o ? (e = {
                            dataType: e,
                            length: parseInt(n.join(''), 10)
                          }, t = e) : (Lu = t, t = o);
                        } else
                          Lu = t, t = o;
                      else
                        Lu = t, t = o;
                    else
                      Lu = t, t = o;
                  else
                    Lu = t, t = o;
                  t === o && (t = Lu, (e = Gs()) !== o && (e = du(e)), (t = e) === o && (t = Lu, (e = js()) !== o && (e = du(e)), t = e));
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, i, c, l, f, v, b;
                  t = Lu, (e = Ys()) === o && (e = Bs()) === o && (e = Ws()) === o && (e = Vs()) === o && (e = Ks()) === o && (e = qs()) === o && (e = Zs()) === o && (e = zs()) === o && (e = Js());
                  if (e !== o)
                    if ((n = Ea()) !== o)
                      if ((u = La()) !== o)
                        if ((s = Ea()) !== o) {
                          if (a = [], yt.test(r.charAt(Lu)) ? (i = r.charAt(Lu), Lu++) : (i = o, 0 === Eu && mu(Tt)), i !== o)
                            for (; i !== o;)
                              a.push(i), yt.test(r.charAt(Lu)) ? (i = r.charAt(Lu), Lu++) : (i = o, 0 === Eu && mu(Tt));
                          else
                            a = o;
                          if (a !== o)
                            if ((i = Ea()) !== o) {
                              if (c = Lu, (l = ba()) !== o)
                                if ((f = Ea()) !== o) {
                                  if (v = [], yt.test(r.charAt(Lu)) ? (b = r.charAt(Lu), Lu++) : (b = o, 0 === Eu && mu(Tt)), b !== o)
                                    for (; b !== o;)
                                      v.push(b), yt.test(r.charAt(Lu)) ? (b = r.charAt(Lu), Lu++) : (b = o, 0 === Eu && mu(Tt));
                                  else
                                    v = o;
                                  v !== o ? c = l = [
                                    l,
                                    f,
                                    v
                                  ] : (Lu = c, c = o);
                                } else
                                  Lu = c, c = o;
                              else
                                Lu = c, c = o;
                              c === o && (c = null), c !== o && (l = Ea()) !== o && (f = Ca()) !== o && (v = Ea()) !== o ? ((b = Fa()) === o && (b = null), b !== o ? (d = c, L = b, e = {
                                dataType: e,
                                length: parseInt(a.join(''), 10),
                                scale: d && parseInt(d[2].join(''), 10),
                                parentheses: !0,
                                suffix: L
                              }, t = e) : (Lu = t, t = o)) : (Lu = t, t = o);
                            } else
                              Lu = t, t = o;
                          else
                            Lu = t, t = o;
                        } else
                          Lu = t, t = o;
                      else
                        Lu = t, t = o;
                    else
                      Lu = t, t = o;
                  else
                    Lu = t, t = o;
                  var d, L;
                  if (t === o) {
                    if (t = Lu, (e = Ys()) === o && (e = Bs()) === o && (e = Ws()) === o && (e = Vs()) === o && (e = Ks()) === o && (e = qs()) === o && (e = Zs()) === o && (e = zs()) === o && (e = Js()), e !== o) {
                      if (n = [], yt.test(r.charAt(Lu)) ? (u = r.charAt(Lu), Lu++) : (u = o, 0 === Eu && mu(Tt)), u !== o)
                        for (; u !== o;)
                          n.push(u), yt.test(r.charAt(Lu)) ? (u = r.charAt(Lu), Lu++) : (u = o, 0 === Eu && mu(Tt));
                      else
                        n = o;
                      n !== o && (u = Ea()) !== o ? ((s = Fa()) === o && (s = null), s !== o ? (e = function (r, t, e) {
                        return {
                          dataType: r,
                          length: parseInt(t.join(''), 10),
                          suffix: e
                        };
                      }(e, n, s), t = e) : (Lu = t, t = o)) : (Lu = t, t = o);
                    } else
                      Lu = t, t = o;
                    t === o && (t = Lu, (e = Ys()) === o && (e = Bs()) === o && (e = Ws()) === o && (e = Vs()) === o && (e = Ks()) === o && (e = qs()) === o && (e = Zs()) === o && (e = zs()) === o && (e = Js()), e !== o && (n = Ea()) !== o ? ((u = Fa()) === o && (u = null), u !== o && (s = Ea()) !== o ? (e = function (r, t) {
                      return {
                        dataType: r,
                        suffix: t
                      };
                    }(e, u), t = e) : (Lu = t, t = o)) : (Lu = t, t = o));
                  }
                  return t;
                }()) === o && (t = function () {
                  var t;
                  (t = Qs()) === o && (t = ra()) === o && (t = ta()) === o && (t = ea());
                  t !== o && (t = du(t));
                  return t;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = Lu, 'json' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(Qe)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'JSON' : (Lu = t, t = o)) : (Lu = t, t = o), t;
                  }()) !== o && (e = du(e));
                  return e;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = Lu, 'tinytext' === r.substr(Lu, 8).toLowerCase() ? (e = r.substr(Lu, 8), Lu += 8) : (e = o, 0 === Eu && mu(en)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'TINYTEXT' : (Lu = t, t = o)) : (Lu = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = Lu, 'text' === r.substr(Lu, 4).toLowerCase() ? (e = r.substr(Lu, 4), Lu += 4) : (e = o, 0 === Eu && mu(nn)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'TEXT' : (Lu = t, t = o)) : (Lu = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = Lu, 'mediumtext' === r.substr(Lu, 10).toLowerCase() ? (e = r.substr(Lu, 10), Lu += 10) : (e = o, 0 === Eu && mu(un)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'MEDIUMTEXT' : (Lu = t, t = o)) : (Lu = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = Lu, 'longtext' === r.substr(Lu, 8).toLowerCase() ? (e = r.substr(Lu, 8), Lu += 8) : (e = o, 0 === Eu && mu(on)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'LONGTEXT' : (Lu = t, t = o)) : (Lu = t, t = o), t;
                  }());
                  e !== o && (e = { dataType: e });
                  return e;
                }()), t;
              }
              function Fa() {
                var t, e, n;
                return t = Lu, (e = Xs()) === o && (e = null), e !== o && Ea() !== o ? ((n = function () {
                  var t, e, n, u;
                  return t = Lu, 'zerofill' === r.substr(Lu, 8).toLowerCase() ? (e = r.substr(Lu, 8), Lu += 8) : (e = o, 0 === Eu && mu(ze)), e !== o ? (n = Lu, Eu++, u = jo(), Eu--, u === o ? n = void 0 : (Lu = n, n = o), n !== o ? t = e = 'ZEROFILL' : (Lu = t, t = o)) : (Lu = t, t = o), t;
                }()) === o && (n = null), n !== o ? t = e = function (r, t) {
                  const e = [];
                  return r && e.push(r), t && e.push(t), e;
                }(e, n) : (Lu = t, t = o)) : (Lu = t, t = o), t;
              }
              const Pa = {
                ALTER: !0,
                ALL: !0,
                ADD: !0,
                AND: !0,
                AS: !0,
                ASC: !0,
                BETWEEN: !0,
                BY: !0,
                CALL: !0,
                CASE: !0,
                CREATE: !0,
                CONTAINS: !0,
                CURRENT_DATE: !0,
                CURRENT_TIME: !0,
                CURRENT_TIMESTAMP: !0,
                CURRENT_USER: !0,
                DELETE: !0,
                DESC: !0,
                DISTINCT: !0,
                DROP: !0,
                ELSE: !0,
                END: !0,
                EXISTS: !0,
                EXPLAIN: !0,
                FALSE: !0,
                FROM: !0,
                FULL: !0,
                GROUP: !0,
                HAVING: !0,
                IN: !0,
                INNER: !0,
                INSERT: !0,
                INTO: !0,
                IS: !0,
                JOIN: !0,
                JSON: !0,
                KEY: !0,
                LEFT: !0,
                LIKE: !0,
                LIMIT: !0,
                LOW_PRIORITY: !0,
                NOT: !0,
                NULL: !0,
                ON: !0,
                OR: !0,
                ORDER: !0,
                OUTER: !0,
                RECURSIVE: !0,
                RENAME: !0,
                READ: !0,
                RIGHT: !0,
                SELECT: !0,
                SESSION_USER: !0,
                SET: !0,
                SHOW: !0,
                SYSTEM_USER: !0,
                TABLE: !0,
                THEN: !0,
                TRUE: !0,
                TRUNCATE: !0,
                TYPE: !0,
                UNION: !0,
                UPDATE: !0,
                USING: !0,
                VALUES: !0,
                WITH: !0,
                WHEN: !0,
                WHERE: !0,
                WRITE: !0,
                GLOBAL: !0,
                SESSION: !0,
                LOCAL: !0,
                PERSIST: !0,
                PERSIST_ONLY: !0
              };
              function Ha(r, t) {
                return {
                  type: 'unary_expr',
                  operator: r,
                  expr: t
                };
              }
              function Ga(r, t, e) {
                return {
                  type: 'binary_expr',
                  operator: r,
                  left: t,
                  right: e
                };
              }
              function ja(r) {
                const t = n(Number.MAX_SAFE_INTEGER);
                return !(n(r) < t);
              }
              function Ya(r, t) {
                const e = [r];
                for (let r = 0; r < t.length; r++)
                  e.push(t[r][3]);
                return e;
              }
              function Ba(r, t) {
                let e = r;
                for (let r = 0; r < t.length; r++)
                  e = Ga(t[r][1], e, t[r][3]);
                return e;
              }
              function Xa(r) {
                const t = Za[r];
                return t || (r || null);
              }
              function Wa(r) {
                const t = [];
                for (let e of r.keys()) {
                  const r = e.split('::');
                  if (!r) {
                    t.push(e);
                    break;
                  }
                  r && r[1] && (r[1] = Xa(r[1])), t.push(r.join('::'));
                }
                return t;
              }
              let Va = [];
              const Ka = new Set(), qa = new Set(), Za = {};
              if ((e = a()) !== o && Lu === r.length)
                return e;
              throw e !== o && Lu < r.length && mu({ type: 'end' }), Su(wu, pu < r.length ? r.charAt(pu) : null, pu < r.length ? Tu(pu, pu + 1) : Tu(pu, pu));
            }
          };
        },
        function (r, t, e) {
          var n = e(0);
          function u(r, t, e, n) {
            this.message = r, this.expected = t, this.found = e, this.location = n, this.name = 'SyntaxError', 'function' == typeof Error.captureStackTrace && Error.captureStackTrace(this, u);
          }
          !function (r, t) {
            function e() {
              this.constructor = r;
            }
            e.prototype = t.prototype, r.prototype = new e();
          }(u, Error), u.buildMessage = function (r, t) {
            var e = {
              literal: function (r) {
                return '"' + u(r.text) + '"';
              },
              class: function (r) {
                var t, e = '';
                for (t = 0; t < r.parts.length; t++)
                  e += r.parts[t] instanceof Array ? o(r.parts[t][0]) + '-' + o(r.parts[t][1]) : o(r.parts[t]);
                return '[' + (r.inverted ? '^' : '') + e + ']';
              },
              any: function (r) {
                return 'any character';
              },
              end: function (r) {
                return 'end of input';
              },
              other: function (r) {
                return r.description;
              }
            };
            function n(r) {
              return r.charCodeAt(0).toString(16).toUpperCase();
            }
            function u(r) {
              return r.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            function o(r) {
              return r.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            return 'Expected ' + function (r) {
              var t, n, u, o = new Array(r.length);
              for (t = 0; t < r.length; t++)
                o[t] = (u = r[t], e[u.type](u));
              if (o.sort(), o.length > 0) {
                for (t = 1, n = 1; t < o.length; t++)
                  o[t - 1] !== o[t] && (o[n] = o[t], n++);
                o.length = n;
              }
              switch (o.length) {
              case 1:
                return o[0];
              case 2:
                return o[0] + ' or ' + o[1];
              default:
                return o.slice(0, -1).join(', ') + ', or ' + o[o.length - 1];
              }
            }(r) + ' but ' + function (r) {
              return r ? '"' + u(r) + '"' : 'end of input';
            }(t) + ' found.';
          }, r.exports = {
            SyntaxError: u,
            parse: function (r, t) {
              t = void 0 !== t ? t : {};
              var e, o = {}, s = { start: pu }, a = pu, i = function (r, t) {
                  return Sa(r, t);
                }, c = fu('AUTO_INCREMENT', !0), l = fu('UNIQUE', !0), f = fu('PRIMARY', !0), v = fu('KEY', !0), b = fu('COLUMN_FORMAT', !0), d = fu('FIXED', !0), L = fu('DYNAMIC', !0), C = fu('DEFAULT', !0), p = fu('STORAGE', !0), w = fu('DISK', !0), E = fu('MEMORY', !0), h = fu('ALGORITHM', !0), A = fu('INSTANT', !0), y = fu('INPLACE', !0), T = fu('COPY', !0), m = fu('LOCK', !0), S = fu('NONE', !0), I = fu('SHARED', !0), N = fu('EXCLUSIVE', !0), R = fu('PRIMARY KEY', !0), _ = fu('FOREIGN KEY', !0), g = fu('MATCH FULL', !0), O = fu('MATCH PARTIAL', !0), U = fu('MATCH SIMPLE', !0), x = fu('ON DELETE', !0), M = fu('ON UPDATE', !0), D = fu('RESTRICT', !0), k = fu('CASCADE', !0), $ = fu('SET NULL', !0), F = fu('NO ACTION', !0), P = fu('SET DEFAULT', !0), H = fu('AVG_ROW_LENGTH', !0), G = fu('KEY_BLOCK_SIZE', !0), j = fu('MAX_ROWS', !0), Y = fu('MIN_ROWS', !0), B = fu('STATS_SAMPLE_PAGES', !0), X = fu('CHARACTER SET', !0), W = fu('CHARSET', !0), V = fu('COLLATE', !0), K = fu('CONNECTION', !0), q = fu('COMPRESSION', !0), Z = fu('\'', !1), z = fu('ZLIB', !0), J = fu('LZ4', !0), Q = fu('ENGINE', !0), rr = fu('READ', !0), tr = fu('LOCAL', !0), er = fu('LOW_PRIORITY', !0), nr = fu('WRITE', !0), ur = fu('(', !1), or = fu(')', !1), sr = fu('BTREE', !0), ar = fu('HASH', !0), ir = fu('WITH', !0), cr = fu('PARSER', !0), lr = fu('VISIBLE', !0), fr = fu('INVISIBLE', !0), vr = fu('=', !1), br = function (r, t) {
                  return Ia(r, t);
                }, dr = function (r, t) {
                  return Ia(r, t);
                }, Lr = fu('!', !1), Cr = function (r) {
                  return r[0] + ' ' + r[2];
                }, pr = fu('>=', !1), wr = fu('>', !1), Er = fu('<=', !1), hr = fu('<>', !1), Ar = fu('<', !1), yr = fu('!=', !1), Tr = fu('+', !1), mr = fu('-', !1), Sr = fu('*', !1), Ir = fu('/', !1), Nr = fu('%', !1), Rr = function (r) {
                  return r.parentheses = !0, r;
                }, _r = function (r) {
                  return !0 === Aa[r.toUpperCase()];
                }, gr = fu('"', !1), Or = /^[^"]/, Ur = vu(['"'], !0, !1), xr = function (r) {
                  return r.join('');
                }, Mr = /^[^']/, Dr = vu(['\''], !0, !1), kr = fu('`', !1), $r = /^[^`]/, Fr = vu(['`'], !0, !1), Pr = function (r, t) {
                  return r + t.join('');
                }, Hr = /^[A-Za-z_]/, Gr = vu([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  '_'
                ], !1, !1), jr = /^[A-Za-z0-9_]/, Yr = vu([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_'
                ], !1, !1), Br = /^[A-Za-z0-9_:]/, Xr = vu([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_',
                  ':'
                ], !1, !1), Wr = fu(':', !1), Vr = function (r) {
                  return {
                    type: 'string',
                    value: r[1].join('')
                  };
                }, Kr = fu('ON UPDATE CURRENT_TIMESTAMP', !0), qr = /^[^"\\\0-\x1F\x7F]/, Zr = vu([
                  '"',
                  '\\',
                  [
                    '\0',
                    '\x1F'
                  ],
                  '\x7F'
                ], !0, !1), zr = /^[^'\\]/, Jr = vu([
                  '\'',
                  '\\'
                ], !0, !1), Qr = fu('\\\'', !1), rt = fu('\\"', !1), tt = fu('\\\\', !1), et = fu('\\/', !1), nt = fu('\\b', !1), ut = fu('\\f', !1), ot = fu('\\n', !1), st = fu('\\r', !1), at = fu('\\t', !1), it = fu('\\u', !1), ct = fu('\\', !1), lt = /^[\n\r]/, ft = vu([
                  '\n',
                  '\r'
                ], !1, !1), vt = fu('.', !1), bt = /^[0-9]/, dt = vu([[
                    '0',
                    '9'
                  ]], !1, !1), Lt = /^[0-9a-fA-F]/, Ct = vu([
                  [
                    '0',
                    '9'
                  ],
                  [
                    'a',
                    'f'
                  ],
                  [
                    'A',
                    'F'
                  ]
                ], !1, !1), pt = /^[eE]/, wt = vu([
                  'e',
                  'E'
                ], !1, !1), Et = /^[+\-]/, ht = vu([
                  '+',
                  '-'
                ], !1, !1), At = fu('NULL', !0), yt = fu('NOT NULL', !0), Tt = fu('TRUE', !0), mt = fu('TO', !0), St = fu('FALSE', !0), It = fu('DROP', !0), Nt = fu('USE', !0), Rt = fu('ALTER', !0), _t = fu('SELECT', !0), gt = fu('UPDATE', !0), Ot = fu('CREATE', !0), Ut = fu('TEMPORARY', !0), xt = fu('IF NOT EXISTS', !0), Mt = fu('DELETE', !0), Dt = fu('INSERT', !0), kt = fu('RECURSIVE', !1), $t = fu('REPLACE', !0), Ft = fu('RENAME', !0), Pt = fu('IGNORE', !0), Ht = fu('PARTITION', !0), Gt = fu('INTO', !0), jt = fu('OVERWRITE', !0), Yt = fu('FROM', !0), Bt = fu('SET', !0), Xt = fu('UNLOCK', !0), Wt = fu('AS', !0), Vt = fu('TABLE', !0), Kt = fu('TABLES', !0), qt = fu('ON', !0), Zt = fu('LEFT', !0), zt = fu('RIGHT', !0), Jt = fu('FULL', !0), Qt = fu('INNER', !0), re = fu('JOIN', !0), te = fu('OUTER', !0), ee = fu('OVER', !0), ne = fu('UNION', !0), ue = fu('VALUES', !0), oe = fu('USING', !0), se = fu('WHERE', !0), ae = fu('GROUP', !0), ie = fu('BY', !0), ce = fu('ORDER', !0), le = fu('HAVING', !0), fe = fu('LIMIT', !0), ve = fu('OFFSET', !0), be = fu('ASC', !0), de = fu('DESC', !0), Le = fu('ALL', !0), Ce = fu('DISTINCT', !0), pe = fu('BETWEEN', !0), we = fu('IN', !0), Ee = fu('IS', !0), he = fu('LIKE', !0), Ae = fu('EXISTS', !0), ye = fu('NOT', !0), Te = fu('AND', !0), me = fu('OR', !0), Se = fu('COUNT', !0), Ie = fu('MAX', !0), Ne = fu('MIN', !0), Re = fu('SUM', !0), _e = fu('AVG', !0), ge = fu('CALL', !0), Oe = fu('CASE', !0), Ue = fu('WHEN', !0), xe = fu('THEN', !0), Me = fu('ELSE', !0), De = fu('END', !0), ke = fu('CAST', !0), $e = fu('CHAR', !0), Fe = fu('VARCHAR', !0), Pe = fu('NUMERIC', !0), He = fu('DECIMAL', !0), Ge = fu('SIGNED', !0), je = fu('UNSIGNED', !0), Ye = fu('INT', !0), Be = fu('ZEROFILL', !0), Xe = fu('INTEGER', !0), We = fu('JSON', !0), Ve = fu('SMALLINT', !0), Ke = fu('TINYINT', !0), qe = fu('TINYTEXT', !0), Ze = fu('TEXT', !0), ze = fu('MEDIUMTEXT', !0), Je = fu('LONGTEXT', !0), Qe = fu('BIGINT', !0), rn = fu('FLOAT', !0), tn = fu('DOUBLE', !0), en = fu('DATE', !0), nn = fu('DATETIME', !0), un = fu('TIME', !0), on = fu('TIMESTAMP', !0), sn = fu('TRUNCATE', !0), an = fu('USER', !0), cn = fu('CURRENT_DATE', !0), ln = fu('INTERVAL', !0), fn = fu('YEAR', !0), vn = fu('MONTH', !0), bn = fu('DAY', !0), dn = fu('HOUR', !0), Ln = fu('MINUTE', !0), Cn = fu('SECOND', !0), pn = fu('CURRENT_TIME', !0), wn = fu('CURRENT_TIMESTAMP', !0), En = fu('CURRENT_USER', !0), hn = fu('SESSION_USER', !0), An = fu('SYSTEM_USER', !0), yn = fu('GLOBAL', !0), Tn = fu('SESSION', !0), mn = fu('PERSIST', !0), Sn = fu('PERSIST_ONLY', !0), In = fu('@', !1), Nn = fu('@@', !1), Rn = fu('$', !1), _n = fu('return', !0), gn = fu(':=', !1), On = fu('DUAL', !0), Un = fu('ADD', !0), xn = fu('COLUMN', !0), Mn = fu('INDEX', !0), Dn = fu('FULLTEXT', !0), kn = fu('SPATIAL', !0), $n = fu('COMMENT', !0), Fn = fu('CONSTRAINT', !0), Pn = fu('REFERENCES', !0), Hn = fu('SQL_CALC_FOUND_ROWS', !0), Gn = fu('SQL_CACHE', !0), jn = fu('SQL_NO_CACHE', !0), Yn = fu('SQL_SMALL_RESULT', !0), Bn = fu('SQL_BIG_RESULT', !0), Xn = fu('SQL_BUFFER_RESULT', !0), Wn = fu(',', !1), Vn = fu('[', !1), Kn = fu(']', !1), qn = fu(';', !1), Zn = fu('||', !1), zn = fu('&&', !1), Jn = fu('/*', !1), Qn = fu('*/', !1), ru = fu('--', !1), tu = fu('#', !1), eu = { type: 'any' }, nu = /^[ \t\n\r]/, uu = vu([
                  ' ',
                  '\t',
                  '\n',
                  '\r'
                ], !1, !1), ou = function (r) {
                  return { dataType: r };
                }, su = 0, au = [{
                    line: 1,
                    column: 1
                  }], iu = 0, cu = [], lu = 0;
              if ('startRule' in t) {
                if (!(t.startRule in s))
                  throw new Error('Can\'t start parsing from rule "' + t.startRule + '".');
                a = s[t.startRule];
              }
              function fu(r, t) {
                return {
                  type: 'literal',
                  text: r,
                  ignoreCase: t
                };
              }
              function vu(r, t, e) {
                return {
                  type: 'class',
                  parts: r,
                  inverted: t,
                  ignoreCase: e
                };
              }
              function bu(t) {
                var e, n = au[t];
                if (n)
                  return n;
                for (e = t - 1; !au[e];)
                  e--;
                for (n = {
                    line: (n = au[e]).line,
                    column: n.column
                  }; e < t;)
                  10 === r.charCodeAt(e) ? (n.line++, n.column = 1) : n.column++, e++;
                return au[t] = n, n;
              }
              function du(r, t) {
                var e = bu(r), n = bu(t);
                return {
                  start: {
                    offset: r,
                    line: e.line,
                    column: e.column
                  },
                  end: {
                    offset: t,
                    line: n.line,
                    column: n.column
                  }
                };
              }
              function Lu(r) {
                su < iu || (su > iu && (iu = su, cu = []), cu.push(r));
              }
              function Cu(r, t, e) {
                return new u(u.buildMessage(r, t), r, t, e);
              }
              function pu() {
                var r, t;
                return r = su, ta() !== o ? ((t = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = su, (t = Eu()) !== o) {
                    if (e = [], n = su, (u = ta()) !== o && (s = Qs()) !== o && (a = ta()) !== o && (i = Eu()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (su = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = su, (u = ta()) !== o && (s = Qs()) !== o && (a = ta()) !== o && (i = Eu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (su = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = function (r, t) {
                      const e = [r && r.ast || r];
                      for (let r = 0; r < t.length; r++)
                        t[r][3] && 0 !== t[r][3].length && e.push(t[r][3] && t[r][3].ast || t[r][3]);
                      return {
                        tableList: Array.from(ga),
                        columnList: Ra(Oa),
                        ast: e
                      };
                    }(t, e), r = t) : (su = r, r = o);
                  } else
                    su = r, r = o;
                  return r;
                }()) === o && (t = wu()) === o && (t = Eu()), t !== o ? r = t : (su = r, r = o)) : (su = r, r = o), r;
              }
              function wu() {
                var t;
                return (t = function () {
                  var r, t, e, n;
                  r = su, (t = Ko()) !== o && ta() !== o && (e = us()) !== o && ta() !== o && (n = Xu()) !== o ? (u = t, s = e, (a = n) && a.forEach(r => ga.add(`${ u }::${ r.db }::${ r.table }`)), t = {
                    tableList: Array.from(ga),
                    columnList: Ra(Oa),
                    ast: {
                      type: u.toLowerCase(),
                      keyword: s.toLowerCase(),
                      name: a
                    }
                  }, r = t) : (su = r, r = o);
                  var u, s, a;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, c, l, f, v;
                  t = su, (e = qo()) !== o && ta() !== o ? ((n = Zo()) === o && (n = null), n !== o && ta() !== o && us() !== o && ta() !== o ? ((u = zo()) === o && (u = null), u !== o && ta() !== o && (s = Xu()) !== o && ta() !== o && (a = function () {
                    var r, t, e, n, u, s, a, c, l;
                    if (r = su, (t = zs()) !== o)
                      if (ta() !== o)
                        if ((e = Au()) !== o) {
                          for (n = [], u = su, (s = ta()) !== o && (a = qs()) !== o && (c = ta()) !== o && (l = Au()) !== o ? u = s = [
                              s,
                              a,
                              c,
                              l
                            ] : (su = u, u = o); u !== o;)
                            n.push(u), u = su, (s = ta()) !== o && (a = qs()) !== o && (c = ta()) !== o && (l = Au()) !== o ? u = s = [
                              s,
                              a,
                              c,
                              l
                            ] : (su = u, u = o);
                          n !== o && (u = ta()) !== o && (s = Js()) !== o ? (t = i(e, n), r = t) : (su = r, r = o);
                        } else
                          su = r, r = o;
                      else
                        su = r, r = o;
                    else
                      su = r, r = o;
                    return r;
                  }()) !== o && ta() !== o ? ((c = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = su, (t = _u()) !== o) {
                      for (e = [], n = su, (u = ta()) !== o ? ((s = qs()) === o && (s = null), s !== o && (a = ta()) !== o && (i = _u()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (su = n, n = o)) : (su = n, n = o); n !== o;)
                        e.push(n), n = su, (u = ta()) !== o ? ((s = qs()) === o && (s = null), s !== o && (a = ta()) !== o && (i = _u()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (su = n, n = o)) : (su = n, n = o);
                      e !== o ? (t = Sa(t, e), r = t) : (su = r, r = o);
                    } else
                      su = r, r = o;
                    return r;
                  }()) === o && (c = null), c !== o && ta() !== o ? ((l = function () {
                    var t, e, n, u;
                    t = su, 'ignore' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(Pt));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) === o && (l = Jo()), l === o && (l = null), l !== o && ta() !== o ? ((f = ns()) === o && (f = null), f !== o && ta() !== o ? ((v = hu()) === o && (v = null), v !== o ? (b = e, d = n, L = u, p = a, w = c, E = l, h = f, A = v, (C = s) && C.forEach(r => ga.add(`create::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(ga),
                    columnList: Ra(Oa),
                    ast: {
                      type: b[0].toLowerCase(),
                      keyword: 'table',
                      temporary: d && d[0].toLowerCase(),
                      if_not_exists: L && L[0].toLowerCase(),
                      table: C,
                      ignore_replace: E && E[0].toLowerCase(),
                      as: h && h[0].toLowerCase(),
                      query_expr: A && A.ast,
                      create_definitions: p,
                      table_options: w
                    }
                  }, t = e) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o);
                  var b, d, L, C, p, w, E, h, A;
                  t === o && (t = su, (e = qo()) !== o && ta() !== o ? ((n = Zo()) === o && (n = null), n !== o && ta() !== o && us() !== o && ta() !== o ? ((u = zo()) === o && (u = null), u !== o && ta() !== o && (s = Xu()) !== o && ta() !== o && (a = function r() {
                    var t, e;
                    (t = function () {
                      var r, t;
                      r = su, ps() !== o && ta() !== o && (t = Xu()) !== o ? r = {
                        type: 'like',
                        table: t
                      } : (su = r, r = o);
                      return r;
                    }()) === o && (t = su, zs() !== o && ta() !== o && (e = r()) !== o && ta() !== o && Js() !== o ? ((n = e).parentheses = !0, t = n) : (su = t, t = o));
                    var n;
                    return t;
                  }()) !== o ? (e = function (r, t, e, n, u) {
                    return n && n.forEach(r => ga.add(`create::${ r.db }::${ r.table }`)), {
                      tableList: Array.from(ga),
                      columnList: Ra(Oa),
                      ast: {
                        type: r[0].toLowerCase(),
                        keyword: 'table',
                        temporary: t && t[0].toLowerCase(),
                        if_not_exists: e && e[0].toLowerCase(),
                        table: n,
                        like: u
                      }
                    };
                  }(e, n, u, s, a), t = e) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o));
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = su, (e = function () {
                    var t, e, n, u;
                    t = su, 'truncate' === r.substr(su, 8).toLowerCase() ? (e = r.substr(su, 8), su += 8) : (e = o, 0 === lu && Lu(sn));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'TRUNCATE' : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) !== o && ta() !== o ? ((n = us()) === o && (n = null), n !== o && ta() !== o && (u = Xu()) !== o ? (s = e, a = n, (i = u) && i.forEach(r => ga.add(`${ s }::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(ga),
                    columnList: Ra(Oa),
                    ast: {
                      type: s.toLowerCase(),
                      keyword: a && a.toLowerCase() || 'table',
                      name: i
                    }
                  }, t = e) : (su = t, t = o)) : (su = t, t = o);
                  var s, a, i;
                  return t;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = su, (t = Qo()) !== o && ta() !== o && us() !== o && ta() !== o && (e = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = su, (t = Gu()) !== o) {
                      for (e = [], n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = Gu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (su = n, n = o); n !== o;)
                        e.push(n), n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = Gu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (su = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (su = r, r = o);
                    } else
                      su = r, r = o;
                    return r;
                  }()) !== o ? ((n = e).forEach(r => r.forEach(r => r.table && ga.add(`rename::${ r.db }::${ r.table }`))), t = {
                    tableList: Array.from(ga),
                    columnList: Ra(Oa),
                    ast: {
                      type: 'rename',
                      table: n
                    }
                  }, r = t) : (su = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = su, (e = function () {
                    var t, e, n, u;
                    t = su, 'call' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(ge));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'CALL' : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) !== o && ta() !== o && (n = La()) !== o ? (u = n, e = {
                    tableList: Array.from(ga),
                    columnList: Ra(Oa),
                    ast: {
                      type: 'call',
                      expr: u
                    }
                  }, t = e) : (su = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = su, (e = function () {
                    var t, e, n, u;
                    t = su, 'use' === r.substr(su, 3).toLowerCase() ? (e = r.substr(su, 3), su += 3) : (e = o, 0 === lu && Lu(Nt));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) !== o && ta() !== o && (n = mo()) !== o ? (u = n, ga.add(`use::${ u }::null`), e = {
                    tableList: Array.from(ga),
                    columnList: Ra(Oa),
                    ast: {
                      type: 'use',
                      db: u
                    }
                  }, t = e) : (su = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = su, (e = function () {
                    var t, e, n, u;
                    t = su, 'alter' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(Rt));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) !== o && ta() !== o && us() !== o && ta() !== o && (n = Xu()) !== o && ta() !== o && (u = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = su, (t = Tu()) !== o) {
                      for (e = [], n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = Tu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (su = n, n = o); n !== o;)
                        e.push(n), n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = Tu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (su = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (su = r, r = o);
                    } else
                      su = r, r = o;
                    return r;
                  }()) !== o ? (a = u, (s = n) && s.length > 0 && s.forEach(r => ga.add(`alter::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(ga),
                    columnList: Ra(Oa),
                    ast: {
                      type: 'alter',
                      table: s,
                      expr: a
                    }
                  }, t = e) : (su = t, t = o);
                  var s, a;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = su, (e = es()) !== o && ta() !== o ? ((n = function () {
                    var t, e, n, u;
                    t = su, 'global' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(yn));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'GLOBAL' : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = su, 'session' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu(Tn));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'SESSION' : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = su, 'local' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(tr));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'LOCAL' : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = su, 'persist' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu(mn));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'PERSIST' : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = su, 'persist_only' === r.substr(su, 12).toLowerCase() ? (e = r.substr(su, 12), su += 12) : (e = o, 0 === lu && Lu(Sn));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'PERSIST_ONLY' : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()), n === o && (n = null), n !== o && ta() !== o && (u = ca()) !== o ? (s = n, (a = u).keyword = s, e = {
                    tableList: Array.from(ga),
                    columnList: Ra(Oa),
                    ast: {
                      type: 'set',
                      expr: a
                    }
                  }, t = e) : (su = t, t = o)) : (su = t, t = o);
                  var s, a;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = su, (e = function () {
                    var t, e, n, u;
                    t = su, 'lock' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(m));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) !== o && ta() !== o && os() !== o && ta() !== o && (n = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = su, (t = gu()) !== o) {
                      for (e = [], n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (i = gu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (su = n, n = o); n !== o;)
                        e.push(n), n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (i = gu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (su = n, n = o);
                      e !== o ? (t = Sa(t, e), r = t) : (su = r, r = o);
                    } else
                      su = r, r = o;
                    return r;
                  }()) !== o ? (u = n, e = {
                    tableList: Array.from(ga),
                    columnList: Ra(Oa),
                    ast: {
                      type: 'lock',
                      keyword: 'tables',
                      tables: u
                    }
                  }, t = e) : (su = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e;
                  t = su, (e = function () {
                    var t, e, n, u;
                    t = su, 'unlock' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(Xt));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) !== o && ta() !== o && os() !== o ? (e = {
                    tableList: Array.from(ga),
                    columnList: Ra(Oa),
                    ast: {
                      type: 'unlock',
                      keyword: 'tables'
                    }
                  }, t = e) : (su = t, t = o);
                  return t;
                }()), t;
              }
              function Eu() {
                var t;
                return (t = hu()) === o && (t = function () {
                  var t, e, n, u, s;
                  t = su, (e = function () {
                    var t, e, n, u;
                    t = su, 'update' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(gt));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) !== o && ta() !== o && (n = Xu()) !== o && ta() !== o && es() !== o && ta() !== o && (u = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = su, (t = eo()) !== o) {
                      for (e = [], n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = eo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (su = n, n = o); n !== o;)
                        e.push(n), n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = eo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (su = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (su = r, r = o);
                    } else
                      su = r, r = o;
                    return r;
                  }()) !== o && ta() !== o ? ((s = zu()) === o && (s = null), s !== o ? (c = u, l = s, (a = n) && a.forEach(r => {
                    const {
                      db: t,
                      as: e,
                      table: n
                    } = r;
                    ga.add(`update::${ t }::${ n }`);
                  }), c && c.forEach(r => Oa.add(`update::${ r.table }::${ r.column }`)), e = {
                    tableList: Array.from(ga),
                    columnList: Ra(Oa),
                    ast: {
                      type: 'update',
                      table: a,
                      set: c,
                      where: l
                    }
                  }, t = e) : (su = t, t = o)) : (su = t, t = o);
                  var a, c, l;
                  return t;
                }()) === o && (t = function () {
                  var r, t, e, n, u, s, a, c;
                  r = su, (t = oo()) !== o && ta() !== o && (e = ts()) !== o && ta() !== o ? ((n = us()) === o && (n = null), n !== o && ta() !== o && (u = qu()) !== o ? ((s = uo()) === o && (s = null), s !== o && ta() !== o && zs() !== o && ta() !== o && (a = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = su, (t = Io()) !== o) {
                      for (e = [], n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = Io()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (su = n, n = o); n !== o;)
                        e.push(n), n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = Io()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (su = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (su = r, r = o);
                    } else
                      su = r, r = o;
                    return r;
                  }()) !== o && ta() !== o && Js() !== o && ta() !== o && (c = no()) !== o ? (t = function (r, t, e, n, u, o, s) {
                    if (n && (ga.add(`insert::${ n.db }::${ n.table }`), n.as = null), o) {
                      let r = n && n.table || null;
                      o.forEach(t => Oa.add(`insert::${ r }::${ t }`));
                    }
                    const a = e ? ' ' + e.toLowerCase() : '';
                    return {
                      tableList: Array.from(ga),
                      columnList: Ra(Oa),
                      ast: {
                        type: r,
                        prefix: `${ t.toLowerCase() }${ a }`,
                        table: [n],
                        columns: o,
                        values: s,
                        partition: u
                      }
                    };
                  }(t, e, n, u, s, a, c), r = t) : (su = r, r = o)) : (su = r, r = o)) : (su = r, r = o);
                  return r;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, i;
                  t = su, (e = oo()) !== o && ta() !== o ? ((n = ts()) === o && (n = function () {
                    var t, e, n, u;
                    t = su, 'overwrite' === r.substr(su, 9).toLowerCase() ? (e = r.substr(su, 9), su += 9) : (e = o, 0 === lu && Lu(jt));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'OVERWRITE' : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()), n !== o && ta() !== o ? ((u = us()) === o && (u = null), u !== o && ta() !== o && (s = qu()) !== o && ta() !== o ? ((a = uo()) === o && (a = null), a !== o && ta() !== o && (i = no()) !== o ? (e = function (r, t, e, n, u, o) {
                    n && (ga.add(`insert::${ n.db }::${ n.table }`), Oa.add(`insert::${ n.table }::(.*)`), n.as = null);
                    const s = e ? ' ' + e.toLowerCase() : '';
                    return {
                      tableList: Array.from(ga),
                      columnList: Ra(Oa),
                      ast: {
                        type: r,
                        prefix: `${ t.toLowerCase() }${ s }`,
                        table: [n],
                        columns: null,
                        values: o,
                        partition: u
                      }
                    };
                  }(e, n, u, s, a, i), t = e) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s;
                  t = su, (e = function () {
                    var t, e, n, u;
                    t = su, 'delete' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(Mt));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) !== o && ta() !== o ? ((n = Xu()) === o && (n = null), n !== o && ta() !== o && (u = Hu()) !== o && ta() !== o ? ((s = zu()) === o && (s = null), s !== o ? (e = function (r, t, e) {
                    if (t && t.forEach(r => {
                        r.table && ga.add(`delete::${ r.db }::${ r.table }`), Oa.add(`delete::${ r.table }::(.*)`);
                      }), null === r && 1 === t.length) {
                      const e = t[0];
                      r = [{
                          db: e.db,
                          table: e.table,
                          as: e.as,
                          addition: !0
                        }];
                    }
                    return {
                      tableList: Array.from(ga),
                      columnList: Ra(Oa),
                      ast: {
                        type: 'delete',
                        table: r,
                        from: t,
                        where: e
                      }
                    };
                  }(n, u, s), t = e) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) === o && (t = wu()) === o && (t = function () {
                  var r, t;
                  r = [], t = ia();
                  for (; t !== o;)
                    r.push(t), t = ia();
                  return r;
                }()), t;
              }
              function hu() {
                var r, t, e, n, u, s, a, i, c, l;
                if (r = su, (t = Ou()) !== o) {
                  for (e = [], n = su, (u = ta()) !== o && (s = is()) !== o && (a = ta()) !== o ? ((i = vs()) === o && (i = null), i !== o && (c = ta()) !== o && (l = Ou()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c,
                      l
                    ] : (su = n, n = o)) : (su = n, n = o); n !== o;)
                    e.push(n), n = su, (u = ta()) !== o && (s = is()) !== o && (a = ta()) !== o ? ((i = vs()) === o && (i = null), i !== o && (c = ta()) !== o && (l = Ou()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c,
                      l
                    ] : (su = n, n = o)) : (su = n, n = o);
                  e !== o && (n = ta()) !== o ? ((u = Ju()) === o && (u = null), u !== o && (s = ta()) !== o ? ((a = to()) === o && (a = null), a !== o ? r = t = function (r, t, e, n) {
                    t.forEach(r => r.slice(1, 1));
                    let u = r;
                    for (let r = 0; r < t.length; r++)
                      u._next = t[r][5], u.union = t[r][3] ? 'union all' : 'union', u = u._next;
                    return e && (r._orderby = e), n && (r._limit = n), {
                      tableList: Array.from(ga),
                      columnList: Ra(Oa),
                      ast: r
                    };
                  }(t, e, u, a) : (su = r, r = o)) : (su = r, r = o)) : (su = r, r = o);
                } else
                  su = r, r = o;
                return r;
              }
              function Au() {
                var t;
                return (t = yu()) === o && (t = mu()) === o && (t = Su()) === o && (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u, s, a;
                    t = su, (e = Iu()) === o && (e = null);
                    e !== o && ta() !== o ? ('primary key' === r.substr(su, 11).toLowerCase() ? (n = r.substr(su, 11), su += 11) : (n = o, 0 === lu && Lu(R)), n !== o && ta() !== o ? ((u = ju()) === o && (u = null), u !== o && ta() !== o && (s = Mu()) !== o && ta() !== o ? ((a = Yu()) === o && (a = null), a !== o ? (c = n, l = u, f = s, v = a, e = {
                      constraint: (i = e) && i.constraint,
                      definition: f,
                      constraint_type: c.toLowerCase(),
                      keyword: i && i.keyword,
                      index_type: l,
                      resource: 'constraint',
                      index_options: v
                    }, t = e) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o);
                    var i, c, l, f, v;
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a, i, c;
                    t = su, (e = Iu()) === o && (e = null);
                    e !== o && ta() !== o && (n = function () {
                      var t, e, n, u;
                      t = su, 'unique' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(l));
                      e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'UNIQUE' : (su = t, t = o)) : (su = t, t = o);
                      return t;
                    }()) !== o && ta() !== o ? ((u = Xs()) === o && (u = Ws()), u === o && (u = null), u !== o && ta() !== o ? ((s = Io()) === o && (s = null), s !== o && ta() !== o ? ((a = ju()) === o && (a = null), a !== o && ta() !== o && (i = Mu()) !== o && ta() !== o ? ((c = Yu()) === o && (c = null), c !== o ? (v = n, b = u, d = s, L = a, C = i, p = c, e = {
                      constraint: (f = e) && f.constraint,
                      definition: C,
                      constraint_type: b && `${ v.toLowerCase() } ${ b.toLowerCase() }` || v.toLowerCase(),
                      keyword: f && f.keyword,
                      index_type: L,
                      index: d,
                      resource: 'constraint',
                      index_options: p
                    }, t = e) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o);
                    var f, v, b, d, L, C, p;
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a;
                    t = su, (e = Iu()) === o && (e = null);
                    e !== o && ta() !== o ? ('foreign key' === r.substr(su, 11).toLowerCase() ? (n = r.substr(su, 11), su += 11) : (n = o, 0 === lu && Lu(_)), n !== o && ta() !== o ? ((u = Io()) === o && (u = null), u !== o && ta() !== o && (s = Mu()) !== o && ta() !== o ? ((a = Nu()) === o && (a = null), a !== o ? (c = n, l = u, f = s, v = a, e = {
                      constraint: (i = e) && i.constraint,
                      definition: f,
                      constraint_type: c,
                      keyword: i && i.keyword,
                      index: l,
                      resource: 'constraint',
                      reference_definition: v
                    }, t = e) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o);
                    var i, c, l, f, v;
                    return t;
                  }());
                  return t;
                }()), t;
              }
              function yu() {
                var t, e, n, u, s, a, i, h, A, y, T, m, S, I, N, R, _, g, O, U, x, M, D, k, $;
                return t = su, (e = To()) !== o && ta() !== o && (n = Ea()) !== o && ta() !== o ? ((u = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    t = su, 'not null' === r.substr(su, 8).toLowerCase() ? (e = r.substr(su, 8), su += 8) : (e = o, 0 === lu && Lu(yt));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'not null',
                    value: 'not null'
                  });
                  return e;
                }()) === o && (u = Mo()), u === o && (u = null), u !== o && ta() !== o ? ((s = function () {
                  var r, t;
                  r = su, Wo() !== o && ta() !== o ? ((t = xo()) === o && (t = fo()), t !== o ? r = {
                    type: 'default',
                    value: t
                  } : (su = r, r = o)) : (su = r, r = o);
                  return r;
                }()) === o && (s = null), s !== o && ta() !== o ? ('auto_increment' === r.substr(su, 14).toLowerCase() ? (a = r.substr(su, 14), su += 14) : (a = o, 0 === lu && Lu(c)), a === o && (a = null), a !== o && ta() !== o ? (i = su, 'unique' === r.substr(su, 6).toLowerCase() ? (h = r.substr(su, 6), su += 6) : (h = o, 0 === lu && Lu(l)), h === o && ('primary' === r.substr(su, 7).toLowerCase() ? (h = r.substr(su, 7), su += 7) : (h = o, 0 === lu && Lu(f))), h === o && (h = null), h !== o && (A = ta()) !== o ? ('key' === r.substr(su, 3).toLowerCase() ? (y = r.substr(su, 3), su += 3) : (y = o, 0 === lu && Lu(v)), y !== o ? i = h = [
                  h,
                  A,
                  y
                ] : (su = i, i = o)) : (su = i, i = o), i === o && (i = null), i !== o && (h = ta()) !== o ? ((A = ua()) === o && (A = null), A !== o && (y = ta()) !== o ? ((T = function () {
                  var t, e;
                  t = su, function () {
                    var t, e, n, u;
                    t = su, 'collate' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu(V));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'COLLATE' : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }() !== o && ta() !== o && (e = No()) !== o ? t = {
                    type: 'collate',
                    value: e
                  } : (su = t, t = o);
                  return t;
                }()) === o && (T = null), T !== o && ta() !== o ? ((m = function () {
                  var t, e, n;
                  t = su, 'column_format' === r.substr(su, 13).toLowerCase() ? (e = r.substr(su, 13), su += 13) : (e = o, 0 === lu && Lu(b));
                  e !== o && ta() !== o ? ('fixed' === r.substr(su, 5).toLowerCase() ? (n = r.substr(su, 5), su += 5) : (n = o, 0 === lu && Lu(d)), n === o && ('dynamic' === r.substr(su, 7).toLowerCase() ? (n = r.substr(su, 7), su += 7) : (n = o, 0 === lu && Lu(L)), n === o && ('default' === r.substr(su, 7).toLowerCase() ? (n = r.substr(su, 7), su += 7) : (n = o, 0 === lu && Lu(C)))), n !== o ? (e = function (r, t) {
                    return {
                      type: 'column_format',
                      value: t.toLowerCase()
                    };
                  }(0, n), t = e) : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) === o && (m = null), m !== o && ta() !== o ? ((S = function () {
                  var t, e, n;
                  t = su, 'storage' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu(p));
                  e !== o && ta() !== o ? ('disk' === r.substr(su, 4).toLowerCase() ? (n = r.substr(su, 4), su += 4) : (n = o, 0 === lu && Lu(w)), n === o && ('memory' === r.substr(su, 6).toLowerCase() ? (n = r.substr(su, 6), su += 6) : (n = o, 0 === lu && Lu(E))), n !== o ? (e = {
                    type: 'storage',
                    value: n.toLowerCase()
                  }, t = e) : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) === o && (S = null), S !== o && ta() !== o ? ((I = Nu()) === o && (I = null), I !== o ? (N = e, R = n, _ = u, g = s, O = a, U = i, x = A, M = T, D = m, k = S, $ = I, Oa.add(`create::${ N.table }::${ N.column }`), _ && !_.value && (_.value = 'null'), t = e = {
                  column: N,
                  definition: R,
                  nullable: _,
                  default_val: g,
                  auto_increment: O && O.toLowerCase(),
                  unique_or_primary: U && `${ U[0].toLowerCase() } ${ U[2].toLowerCase() }`,
                  comment: x,
                  collate: M,
                  column_format: D,
                  storage: k,
                  reference_definition: $,
                  resource: 'column'
                }) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Tu() {
                var t;
                return (t = function () {
                  var r, t, e, n;
                  r = su, (t = Ys()) !== o && ta() !== o ? ((e = Bs()) === o && (e = null), e !== o && ta() !== o && (n = yu()) !== o ? (u = e, s = n, t = {
                    action: 'add',
                    ...s,
                    keyword: u,
                    resource: 'column',
                    type: 'alter'
                  }, r = t) : (su = r, r = o)) : (su = r, r = o);
                  var u, s;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = su, Ko() !== o && ta() !== o ? ((t = Bs()) === o && (t = null), t !== o && ta() !== o && (e = To()) !== o ? r = {
                    action: 'drop',
                    column: e,
                    keyword: t,
                    resource: 'column',
                    type: 'alter'
                  } : (su = r, r = o)) : (su = r, r = o);
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = su, (t = Ys()) !== o && ta() !== o && (e = mu()) !== o ? (n = e, t = {
                    action: 'add',
                    type: 'alter',
                    ...n
                  }, r = t) : (su = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = su, (t = Ys()) !== o && ta() !== o && (e = Su()) !== o ? (n = e, t = {
                    action: 'add',
                    type: 'alter',
                    ...n
                  }, r = t) : (su = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n;
                  r = su, (t = Qo()) !== o && ta() !== o ? ((e = Vo()) === o && (e = ns()), e === o && (e = null), e !== o && ta() !== o && (n = mo()) !== o ? (s = n, t = {
                    action: 'rename',
                    type: 'alter',
                    resource: 'table',
                    keyword: (u = e) && u[0].toLowerCase(),
                    table: s
                  }, r = t) : (su = r, r = o)) : (su = r, r = o);
                  var u, s;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = su, 'algorithm' === r.substr(su, 9).toLowerCase() ? (e = r.substr(su, 9), su += 9) : (e = o, 0 === lu && Lu(h));
                  e !== o && ta() !== o && js() !== o && ta() !== o ? ('default' === r.substr(su, 7).toLowerCase() ? (n = r.substr(su, 7), su += 7) : (n = o, 0 === lu && Lu(C)), n === o && ('instant' === r.substr(su, 7).toLowerCase() ? (n = r.substr(su, 7), su += 7) : (n = o, 0 === lu && Lu(A)), n === o && ('inplace' === r.substr(su, 7).toLowerCase() ? (n = r.substr(su, 7), su += 7) : (n = o, 0 === lu && Lu(y)), n === o && ('copy' === r.substr(su, 4).toLowerCase() ? (n = r.substr(su, 4), su += 4) : (n = o, 0 === lu && Lu(T))))), n !== o ? t = e = {
                    type: 'alter',
                    keyword: 'algorithm',
                    resource: 'algorithm',
                    algorithm: n
                  } : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = su, 'lock' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(m));
                  e !== o && ta() !== o && js() !== o && ta() !== o ? ('default' === r.substr(su, 7).toLowerCase() ? (n = r.substr(su, 7), su += 7) : (n = o, 0 === lu && Lu(C)), n === o && ('none' === r.substr(su, 4).toLowerCase() ? (n = r.substr(su, 4), su += 4) : (n = o, 0 === lu && Lu(S)), n === o && ('shared' === r.substr(su, 6).toLowerCase() ? (n = r.substr(su, 6), su += 6) : (n = o, 0 === lu && Lu(I)), n === o && ('exclusive' === r.substr(su, 9).toLowerCase() ? (n = r.substr(su, 9), su += 9) : (n = o, 0 === lu && Lu(N))))), n !== o ? t = e = {
                    type: 'alter',
                    keyword: 'lock',
                    resource: 'lock',
                    lock: n
                  } : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()), t;
              }
              function mu() {
                var r, t, e, n, u, s, a, i;
                return r = su, (t = Xs()) === o && (t = Ws()), t !== o && ta() !== o ? ((e = Io()) === o && (e = null), e !== o && ta() !== o ? ((n = ju()) === o && (n = null), n !== o && ta() !== o && (u = Mu()) !== o && ta() !== o ? ((s = Yu()) === o && (s = null), s !== o && ta() !== o ? (a = n, i = s, r = t = {
                  index: e,
                  definition: u,
                  keyword: t.toLowerCase(),
                  index_type: a,
                  resource: 'index',
                  index_options: i
                }) : (su = r, r = o)) : (su = r, r = o)) : (su = r, r = o)) : (su = r, r = o), r;
              }
              function Su() {
                var t, e, n, u, s, a, i, c, l;
                return t = su, (e = function () {
                  var t, e, n, u;
                  t = su, 'fulltext' === r.substr(su, 8).toLowerCase() ? (e = r.substr(su, 8), su += 8) : (e = o, 0 === lu && Lu(Dn));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'FULLTEXT' : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) === o && (e = function () {
                  var t, e, n, u;
                  t = su, 'spatial' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu(kn));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'SPATIAL' : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()), e !== o && ta() !== o ? ((n = Xs()) === o && (n = Ws()), n === o && (n = null), n !== o && ta() !== o ? ((u = Io()) === o && (u = null), u !== o && ta() !== o && (s = Mu()) !== o && ta() !== o ? ((a = Yu()) === o && (a = null), a !== o && ta() !== o ? (i = e, l = a, t = e = {
                  index: u,
                  definition: s,
                  keyword: (c = n) && `${ i.toLowerCase() } ${ c.toLowerCase() }` || i.toLowerCase(),
                  index_options: l,
                  resource: 'index'
                }) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Iu() {
                var t, e, n, u;
                return t = su, (e = function () {
                  var t, e, n, u;
                  t = su, 'constraint' === r.substr(su, 10).toLowerCase() ? (e = r.substr(su, 10), su += 10) : (e = o, 0 === lu && Lu(Fn));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'CONSTRAINT' : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) !== o && ta() !== o ? ((n = mo()) === o && (n = null), n !== o ? (u = n, t = e = {
                  keyword: e.toLowerCase(),
                  constraint: u
                }) : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Nu() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = su, (e = function () {
                  var t, e, n, u;
                  t = su, 'references' === r.substr(su, 10).toLowerCase() ? (e = r.substr(su, 10), su += 10) : (e = o, 0 === lu && Lu(Pn));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'REFERENCES' : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) !== o && ta() !== o && (n = Xu()) !== o && ta() !== o && (u = Mu()) !== o && ta() !== o ? ('match full' === r.substr(su, 10).toLowerCase() ? (s = r.substr(su, 10), su += 10) : (s = o, 0 === lu && Lu(g)), s === o && ('match partial' === r.substr(su, 13).toLowerCase() ? (s = r.substr(su, 13), su += 13) : (s = o, 0 === lu && Lu(O)), s === o && ('match simple' === r.substr(su, 12).toLowerCase() ? (s = r.substr(su, 12), su += 12) : (s = o, 0 === lu && Lu(U)))), s === o && (s = null), s !== o && ta() !== o ? ((a = Ru()) === o && (a = null), a !== o && ta() !== o ? ((i = Ru()) === o && (i = null), i !== o ? (c = s, l = a, f = i, t = e = {
                  definition: u,
                  table: n,
                  keyword: e.toLowerCase(),
                  match: c && c.toLowerCase(),
                  on_delete: l,
                  on_update: f
                }) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Ru() {
                var t, e, n, u;
                return t = su, 'on delete' === r.substr(su, 9).toLowerCase() ? (e = r.substr(su, 9), su += 9) : (e = o, 0 === lu && Lu(x)), e === o && ('on update' === r.substr(su, 9).toLowerCase() ? (e = r.substr(su, 9), su += 9) : (e = o, 0 === lu && Lu(M))), e !== o && ta() !== o && (n = function () {
                  var e;
                  'restrict' === r.substr(su, 8).toLowerCase() ? (e = r.substr(su, 8), su += 8) : (e = o, 0 === lu && Lu(D));
                  e === o && ('cascade' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu(k)), e === o && ('set null' === r.substr(su, 8).toLowerCase() ? (e = r.substr(su, 8), su += 8) : (e = o, 0 === lu && Lu($)), e === o && ('no action' === r.substr(su, 9).toLowerCase() ? (e = r.substr(su, 9), su += 9) : (e = o, 0 === lu && Lu(F)), e === o && ('set default' === r.substr(su, 11).toLowerCase() ? (e = r.substr(su, 11), su += 11) : (e = o, 0 === lu && Lu(P))))));
                  e !== o && (e = e.toLowerCase());
                  return e;
                }()) !== o ? (u = n, t = e = {
                  type: e.toLowerCase(),
                  value: u
                }) : (su = t, t = o), t;
              }
              function _u() {
                var t, e, n, u, s, a, i, l, f;
                return t = su, 'auto_increment' === r.substr(su, 14).toLowerCase() ? (e = r.substr(su, 14), su += 14) : (e = o, 0 === lu && Lu(c)), e === o && ('avg_row_length' === r.substr(su, 14).toLowerCase() ? (e = r.substr(su, 14), su += 14) : (e = o, 0 === lu && Lu(H)), e === o && ('key_block_size' === r.substr(su, 14).toLowerCase() ? (e = r.substr(su, 14), su += 14) : (e = o, 0 === lu && Lu(G)), e === o && ('max_rows' === r.substr(su, 8).toLowerCase() ? (e = r.substr(su, 8), su += 8) : (e = o, 0 === lu && Lu(j)), e === o && ('min_rows' === r.substr(su, 8).toLowerCase() ? (e = r.substr(su, 8), su += 8) : (e = o, 0 === lu && Lu(Y)), e === o && ('stats_sample_pages' === r.substr(su, 18).toLowerCase() ? (e = r.substr(su, 18), su += 18) : (e = o, 0 === lu && Lu(B))))))), e !== o && ta() !== o ? ((n = js()) === o && (n = null), n !== o && ta() !== o && (u = Po()) !== o ? (l = n, f = u, t = e = {
                  keyword: e.toLowerCase(),
                  symbol: l,
                  value: f.value
                }) : (su = t, t = o)) : (su = t, t = o), t === o && (t = su, (e = Wo()) === o && (e = null), e !== o && ta() !== o ? ('character set' === r.substr(su, 13).toLowerCase() ? (n = r.substr(su, 13), su += 13) : (n = o, 0 === lu && Lu(X)), n === o && ('charset' === r.substr(su, 7).toLowerCase() ? (n = r.substr(su, 7), su += 7) : (n = o, 0 === lu && Lu(W)), n === o && ('collate' === r.substr(su, 7).toLowerCase() ? (n = r.substr(su, 7), su += 7) : (n = o, 0 === lu && Lu(V)))), n !== o && ta() !== o ? ((u = js()) === o && (u = null), u !== o && (s = ta()) !== o && (a = No()) !== o ? t = e = function (r, t, e, n) {
                  return {
                    keyword: r && `${ r[0].toLowerCase() } ${ t.toLowerCase() }` || t.toLowerCase(),
                    symbol: e,
                    value: n
                  };
                }(e, n, u, a) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o), t === o && (t = su, (e = Vs()) === o && ('connection' === r.substr(su, 10).toLowerCase() ? (e = r.substr(su, 10), su += 10) : (e = o, 0 === lu && Lu(K))), e !== o && ta() !== o ? ((n = js()) === o && (n = null), n !== o && ta() !== o && (u = Do()) !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: `'${ e.value }'`
                  };
                }(e, n, u) : (su = t, t = o)) : (su = t, t = o), t === o && (t = su, 'compression' === r.substr(su, 11).toLowerCase() ? (e = r.substr(su, 11), su += 11) : (e = o, 0 === lu && Lu(q)), e !== o && ta() !== o ? ((n = js()) === o && (n = null), n !== o && ta() !== o ? (u = su, 39 === r.charCodeAt(su) ? (s = '\'', su++) : (s = o, 0 === lu && Lu(Z)), s !== o ? ('zlib' === r.substr(su, 4).toLowerCase() ? (a = r.substr(su, 4), su += 4) : (a = o, 0 === lu && Lu(z)), a === o && ('lz4' === r.substr(su, 3).toLowerCase() ? (a = r.substr(su, 3), su += 3) : (a = o, 0 === lu && Lu(J)), a === o && ('none' === r.substr(su, 4).toLowerCase() ? (a = r.substr(su, 4), su += 4) : (a = o, 0 === lu && Lu(S)))), a !== o ? (39 === r.charCodeAt(su) ? (i = '\'', su++) : (i = o, 0 === lu && Lu(Z)), i !== o ? u = s = [
                  s,
                  a,
                  i
                ] : (su = u, u = o)) : (su = u, u = o)) : (su = u, u = o), u !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: e.join('').toUpperCase()
                  };
                }(e, n, u) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o), t === o && (t = su, 'engine' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(Q)), e !== o && ta() !== o ? ((n = js()) === o && (n = null), n !== o && ta() !== o && (u = No()) !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: e.toUpperCase()
                  };
                }(e, n, u) : (su = t, t = o)) : (su = t, t = o))))), t;
              }
              function gu() {
                var t, e, n, u, s;
                return t = su, (e = Vu()) !== o && ta() !== o && (n = function () {
                  var t, e, n;
                  return t = su, 'read' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(rr)), e !== o && ta() !== o ? ('local' === r.substr(su, 5).toLowerCase() ? (n = r.substr(su, 5), su += 5) : (n = o, 0 === lu && Lu(tr)), n === o && (n = null), n !== o ? t = e = {
                    type: 'read',
                    suffix: n && 'local'
                  } : (su = t, t = o)) : (su = t, t = o), t === o && (t = su, 'low_priority' === r.substr(su, 12).toLowerCase() ? (e = r.substr(su, 12), su += 12) : (e = o, 0 === lu && Lu(er)), e === o && (e = null), e !== o && ta() !== o ? ('write' === r.substr(su, 5).toLowerCase() ? (n = r.substr(su, 5), su += 5) : (n = o, 0 === lu && Lu(nr)), n !== o ? t = e = {
                    type: 'write',
                    prefix: e && 'low_priority'
                  } : (su = t, t = o)) : (su = t, t = o)), t;
                }()) !== o ? (u = e, s = n, ga.add(`lock::${ u.db }::${ u.table }`), t = e = {
                  table: u,
                  lock_type: s
                }) : (su = t, t = o), t;
              }
              function Ou() {
                var t, e, n, u, s, a, i;
                return (t = Du()) === o && (t = su, e = su, 40 === r.charCodeAt(su) ? (n = '(', su++) : (n = o, 0 === lu && Lu(ur)), n !== o && (u = ta()) !== o && (s = Ou()) !== o && (a = ta()) !== o ? (41 === r.charCodeAt(su) ? (i = ')', su++) : (i = o, 0 === lu && Lu(or)), i !== o ? e = n = [
                  n,
                  u,
                  s,
                  a,
                  i
                ] : (su = e, e = o)) : (su = e, e = o), e !== o && (e = {
                  ...e[2],
                  parentheses_symbol: !0
                }), t = e), t;
              }
              function Uu() {
                var t, e, n, u, s, a, c, l, f;
                if (t = su, ls() !== o)
                  if (ta() !== o)
                    if ((e = xu()) !== o) {
                      for (n = [], u = su, (s = ta()) !== o && (a = qs()) !== o && (c = ta()) !== o && (l = xu()) !== o ? u = s = [
                          s,
                          a,
                          c,
                          l
                        ] : (su = u, u = o); u !== o;)
                        n.push(u), u = su, (s = ta()) !== o && (a = qs()) !== o && (c = ta()) !== o && (l = xu()) !== o ? u = s = [
                          s,
                          a,
                          c,
                          l
                        ] : (su = u, u = o);
                      n !== o ? t = i(e, n) : (su = t, t = o);
                    } else
                      su = t, t = o;
                  else
                    su = t, t = o;
                else
                  su = t, t = o;
                return t === o && (t = su, ta() !== o && ls() !== o && (e = ta()) !== o && (n = function () {
                  var t, e, n, u;
                  t = su, 'RECURSIVE' === r.substr(su, 9) ? (e = 'RECURSIVE', su += 9) : (e = o, 0 === lu && Lu(kt));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) !== o && (u = ta()) !== o && (s = xu()) !== o ? ((f = s).recursive = !0, t = [f]) : (su = t, t = o)), t;
              }
              function xu() {
                var r, t, e, n;
                return r = su, (t = No()) !== o && ta() !== o ? ((e = Mu()) === o && (e = null), e !== o && ta() !== o && ns() !== o && ta() !== o && zs() !== o && ta() !== o && (n = hu()) !== o && ta() !== o && Js() !== o ? r = t = {
                  name: t,
                  stmt: n,
                  columns: e
                } : (su = r, r = o)) : (su = r, r = o), r;
              }
              function Mu() {
                var r, t, e, n, u, s, a, c;
                if (r = su, zs() !== o)
                  if (ta() !== o)
                    if ((t = Io()) !== o) {
                      for (e = [], n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = Io()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (su = n, n = o); n !== o;)
                        e.push(n), n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = Io()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (su = n, n = o);
                      e !== o && (n = ta()) !== o && (u = Js()) !== o ? r = i(t, e) : (su = r, r = o);
                    } else
                      su = r, r = o;
                  else
                    su = r, r = o;
                else
                  su = r, r = o;
                return r;
              }
              function Du() {
                var t, e, n, u, s, a, i, c, l, f, v;
                return t = su, ta() !== o ? ((e = Uu()) === o && (e = null), e !== o && ta() !== o && function () {
                  var t, e, n, u;
                  t = su, 'select' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(_t));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }() !== o && ta() !== o ? ((n = function () {
                  var r, t, e, n, u, s;
                  if (r = su, (t = ku()) !== o) {
                    for (e = [], n = su, (u = ta()) !== o && (s = ku()) !== o ? n = u = [
                        u,
                        s
                      ] : (su = n, n = o); n !== o;)
                      e.push(n), n = su, (u = ta()) !== o && (s = ku()) !== o ? n = u = [
                        u,
                        s
                      ] : (su = n, n = o);
                    e !== o ? (t = function (r, t) {
                      const e = [r];
                      for (let r = 0, n = t.length; r < n; ++r)
                        e.push(t[r][1]);
                      return e;
                    }(t, e), r = t) : (su = r, r = o);
                  } else
                    su = r, r = o;
                  return r;
                }()) === o && (n = null), n !== o && ta() !== o ? ((u = bs()) === o && (u = null), u !== o && ta() !== o && (s = $u()) !== o && ta() !== o ? ((a = Hu()) === o && (a = null), a !== o && ta() !== o ? ((i = zu()) === o && (i = null), i !== o && ta() !== o ? ((c = function () {
                  var t, e, n;
                  t = su, (e = function () {
                    var t, e, n, u;
                    t = su, 'group' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(ae));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) !== o && ta() !== o && fs() !== o && ta() !== o && (n = ao()) !== o ? (e = n.value, t = e) : (su = t, t = o);
                  return t;
                }()) === o && (c = null), c !== o && ta() !== o ? ((l = function () {
                  var t, e;
                  t = su, function () {
                    var t, e, n, u;
                    t = su, 'having' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(le));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }() !== o && ta() !== o && (e = fo()) !== o ? t = e : (su = t, t = o);
                  return t;
                }()) === o && (l = null), l !== o && ta() !== o ? ((f = Ju()) === o && (f = null), f !== o && ta() !== o ? ((v = to()) === o && (v = null), v !== o ? t = function (r, t, e, n, u, o, s, a, i, c) {
                  return u && u.forEach(r => r.table && ga.add(`select::${ r.db }::${ r.table }`)), {
                    with: r,
                    type: 'select',
                    options: t,
                    distinct: e,
                    columns: n,
                    from: u,
                    where: o,
                    groupby: s,
                    having: a,
                    orderby: i,
                    limit: c
                  };
                }(e, n, u, s, a, i, c, l, f, v) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o), t;
              }
              function ku() {
                var e;
                return (e = function () {
                  var t;
                  'sql_calc_found_rows' === r.substr(su, 19).toLowerCase() ? (t = r.substr(su, 19), su += 19) : (t = o, 0 === lu && Lu(Hn));
                  return t;
                }()) === o && ((e = function () {
                  var t;
                  'sql_cache' === r.substr(su, 9).toLowerCase() ? (t = r.substr(su, 9), su += 9) : (t = o, 0 === lu && Lu(Gn));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_no_cache' === r.substr(su, 12).toLowerCase() ? (t = r.substr(su, 12), su += 12) : (t = o, 0 === lu && Lu(jn));
                  return t;
                }()), e === o && (e = function () {
                  var t;
                  'sql_big_result' === r.substr(su, 14).toLowerCase() ? (t = r.substr(su, 14), su += 14) : (t = o, 0 === lu && Lu(Bn));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_small_result' === r.substr(su, 16).toLowerCase() ? (t = r.substr(su, 16), su += 16) : (t = o, 0 === lu && Lu(Yn));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_buffer_result' === r.substr(su, 17).toLowerCase() ? (t = r.substr(su, 17), su += 17) : (t = o, 0 === lu && Lu(Xn));
                  return t;
                }())), e !== o && (e = e), e;
              }
              function $u() {
                var r, t, e, n, u, s, a, c, l, f;
                if (r = su, (t = vs()) === o && (t = su, (e = Zs()) !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o), t === o && (t = Zs())), t !== o) {
                  for (e = [], n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = Fu()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (su = n, n = o); n !== o;)
                    e.push(n), n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = Fu()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (su = n, n = o);
                  e !== o ? (l = t, f = e, Oa.add('select::null::(.*)'), r = t = f && f.length > 0 ? (l[0] = {
                    expr: {
                      type: 'column_ref',
                      table: null,
                      column: '*'
                    },
                    as: null
                  }, Sa(l[0], f)) : l[0]) : (su = r, r = o);
                } else
                  su = r, r = o;
                if (r === o)
                  if (r = su, (t = Fu()) !== o) {
                    for (e = [], n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = Fu()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (su = n, n = o); n !== o;)
                      e.push(n), n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = Fu()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (su = n, n = o);
                    e !== o ? r = t = i(t, e) : (su = r, r = o);
                  } else
                    su = r, r = o;
                return r;
              }
              function Fu() {
                var r, t, e, n;
                return r = su, (t = mo()) !== o && ta() !== o && (e = Ks()) !== o && ta() !== o && Zs() !== o ? (n = t, Oa.add(`select::${ n }::(.*)`), r = t = {
                  expr: {
                    type: 'column_ref',
                    table: n,
                    column: '*'
                  },
                  as: null
                }) : (su = r, r = o), r === o && (r = su, (t = fo()) !== o && ta() !== o ? ((e = Pu()) === o && (e = null), e !== o ? r = t = {
                  expr: t,
                  as: e
                } : (su = r, r = o)) : (su = r, r = o)), r;
              }
              function Pu() {
                var r, t, e;
                return r = su, (t = ns()) !== o && ta() !== o && (e = function () {
                  var r, t;
                  r = su, (t = No()) !== o ? (function (r) {
                    if (!0 === Aa[r.toUpperCase()])
                      throw new Error('Error: ' + JSON.stringify(r) + ' is a reserved word, can not as alias clause');
                    return !1;
                  }(t) ? o : void 0) !== o ? r = t = t : (su = r, r = o) : (su = r, r = o);
                  r === o && (r = su, (t = So()) !== o && (t = t), r = t);
                  return r;
                }()) !== o ? r = t = e : (su = r, r = o), r === o && (r = su, (t = ns()) === o && (t = null), t !== o && ta() !== o && (e = mo()) !== o ? r = t = e : (su = r, r = o)), r;
              }
              function Hu() {
                var t, e;
                return t = su, function () {
                  var t, e, n, u;
                  t = su, 'from' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(Yt));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }() !== o && ta() !== o && (e = Xu()) !== o ? t = e : (su = t, t = o), t;
              }
              function Gu() {
                var r, t, e;
                return r = su, (t = qu()) !== o && ta() !== o && Vo() !== o && ta() !== o && (e = qu()) !== o ? r = t = [
                  t,
                  e
                ] : (su = r, r = o), r;
              }
              function ju() {
                var t, e;
                return t = su, cs() !== o && ta() !== o ? ('btree' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(sr)), e === o && ('hash' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(ar))), e !== o ? t = {
                  keyword: 'using',
                  type: e.toLowerCase()
                } : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Yu() {
                var r, t, e, n, u, s;
                if (r = su, (t = Bu()) !== o) {
                  for (e = [], n = su, (u = ta()) !== o && (s = Bu()) !== o ? n = u = [
                      u,
                      s
                    ] : (su = n, n = o); n !== o;)
                    e.push(n), n = su, (u = ta()) !== o && (s = Bu()) !== o ? n = u = [
                      u,
                      s
                    ] : (su = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    const e = [r];
                    for (let r = 0; r < t.length; r++)
                      e.push(t[r][1]);
                    return e;
                  }(t, e) : (su = r, r = o);
                } else
                  su = r, r = o;
                return r;
              }
              function Bu() {
                var t, e, n, u, s, a;
                return t = su, (e = function () {
                  var t, e, n, u;
                  t = su, 'key_block_size' === r.substr(su, 14).toLowerCase() ? (e = r.substr(su, 14), su += 14) : (e = o, 0 === lu && Lu(G));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'KEY_BLOCK_SIZE' : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) !== o && ta() !== o ? ((n = js()) === o && (n = null), n !== o && ta() !== o && (u = Po()) !== o ? (s = n, a = u, t = e = {
                  type: e.toLowerCase(),
                  symbol: s,
                  expr: a
                }) : (su = t, t = o)) : (su = t, t = o), t === o && (t = ju()) === o && (t = su, 'with' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(ir)), e !== o && ta() !== o ? ('parser' === r.substr(su, 6).toLowerCase() ? (n = r.substr(su, 6), su += 6) : (n = o, 0 === lu && Lu(cr)), n !== o && ta() !== o && (u = No()) !== o ? t = e = {
                  type: 'with parser',
                  expr: u
                } : (su = t, t = o)) : (su = t, t = o), t === o && (t = su, 'visible' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu(lr)), e === o && ('invisible' === r.substr(su, 9).toLowerCase() ? (e = r.substr(su, 9), su += 9) : (e = o, 0 === lu && Lu(fr))), e !== o && (e = function (r) {
                  return {
                    type: r.toLowerCase(),
                    expr: r.toLowerCase()
                  };
                }(e)), (t = e) === o && (t = ua()))), t;
              }
              function Xu() {
                var r, t, e, n, u, s;
                if (r = su, (t = Vu()) !== o) {
                  for (e = [], n = Wu(); n !== o;)
                    e.push(n), n = Wu();
                  e !== o ? (u = t, (s = e).unshift(u), s.forEach(r => {
                    const {
                      table: t,
                      as: e
                    } = r;
                    Ua[t] = t, e && (Ua[e] = t);
                  }), r = t = s) : (su = r, r = o);
                } else
                  su = r, r = o;
                return r;
              }
              function Wu() {
                var r, t, e;
                return r = su, ta() !== o && (t = qs()) !== o && ta() !== o && (e = Vu()) !== o ? r = e : (su = r, r = o), r === o && (r = su, ta() !== o && (t = function () {
                  var r, t, e, n, u, s, a, i, c, l, f;
                  if (r = su, (t = Ku()) !== o)
                    if (ta() !== o)
                      if ((e = Vu()) !== o)
                        if (ta() !== o)
                          if ((n = cs()) !== o)
                            if (ta() !== o)
                              if (zs() !== o)
                                if (ta() !== o)
                                  if ((u = No()) !== o) {
                                    for (s = [], a = su, (i = ta()) !== o && (c = qs()) !== o && (l = ta()) !== o && (f = No()) !== o ? a = i = [
                                        i,
                                        c,
                                        l,
                                        f
                                      ] : (su = a, a = o); a !== o;)
                                      s.push(a), a = su, (i = ta()) !== o && (c = qs()) !== o && (l = ta()) !== o && (f = No()) !== o ? a = i = [
                                        i,
                                        c,
                                        l,
                                        f
                                      ] : (su = a, a = o);
                                    s !== o && (a = ta()) !== o && (i = Js()) !== o ? (v = t, d = u, L = s, (b = e).join = v, b.using = Sa(d, L), r = t = b) : (su = r, r = o);
                                  } else
                                    su = r, r = o;
                                else
                                  su = r, r = o;
                              else
                                su = r, r = o;
                            else
                              su = r, r = o;
                          else
                            su = r, r = o;
                        else
                          su = r, r = o;
                      else
                        su = r, r = o;
                    else
                      su = r, r = o;
                  else
                    su = r, r = o;
                  var v, b, d, L;
                  r === o && (r = su, (t = Ku()) !== o && ta() !== o && (e = Vu()) !== o && ta() !== o ? ((n = Zu()) === o && (n = null), n !== o ? (t = function (r, t, e) {
                    return t.join = r, t.on = e, t;
                  }(t, e, n), r = t) : (su = r, r = o)) : (su = r, r = o), r === o && (r = su, (t = Ku()) !== o && ta() !== o && (e = zs()) !== o && ta() !== o && (n = hu()) !== o && ta() !== o && Js() !== o && ta() !== o ? ((u = Pu()) === o && (u = null), u !== o && (s = ta()) !== o ? ((a = Zu()) === o && (a = null), a !== o ? (t = function (r, t, e, n) {
                    return t.parentheses = !0, {
                      expr: t,
                      as: e,
                      join: r,
                      on: n
                    };
                  }(t, n, u, a), r = t) : (su = r, r = o)) : (su = r, r = o)) : (su = r, r = o)));
                  return r;
                }()) !== o ? r = t : (su = r, r = o)), r;
              }
              function Vu() {
                var t, e, n, u, s, a;
                return t = su, (e = function () {
                  var t;
                  'dual' === r.substr(su, 4).toLowerCase() ? (t = r.substr(su, 4), su += 4) : (t = o, 0 === lu && Lu(On));
                  return t;
                }()) !== o && (e = { type: 'dual' }), (t = e) === o && (t = su, (e = qu()) !== o && ta() !== o ? ((n = Pu()) === o && (n = null), n !== o ? (a = n, t = e = 'var' === (s = e).type ? (s.as = a, s) : {
                  db: s.db,
                  table: s.table,
                  as: a
                }) : (su = t, t = o)) : (su = t, t = o), t === o && (t = su, (e = zs()) !== o && ta() !== o && (n = hu()) !== o && ta() !== o && Js() !== o && ta() !== o ? ((u = Pu()) === o && (u = null), u !== o ? t = e = function (r, t) {
                  return r.parentheses = !0, {
                    expr: r,
                    as: t
                  };
                }(n, u) : (su = t, t = o)) : (su = t, t = o))), t;
              }
              function Ku() {
                var t, e, n, u;
                return t = su, (e = function () {
                  var t, e, n, u;
                  t = su, 'left' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(Zt));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) !== o && (n = ta()) !== o ? ((u = as()) === o && (u = null), u !== o && ta() !== o && ss() !== o ? t = e = 'LEFT JOIN' : (su = t, t = o)) : (su = t, t = o), t === o && (t = su, (e = function () {
                  var t, e, n, u;
                  t = su, 'right' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(zt));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) !== o && (n = ta()) !== o ? ((u = as()) === o && (u = null), u !== o && ta() !== o && ss() !== o ? t = e = 'RIGHT JOIN' : (su = t, t = o)) : (su = t, t = o), t === o && (t = su, (e = function () {
                  var t, e, n, u;
                  t = su, 'full' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(Jt));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) !== o && (n = ta()) !== o ? ((u = as()) === o && (u = null), u !== o && ta() !== o && ss() !== o ? t = e = 'FULL JOIN' : (su = t, t = o)) : (su = t, t = o), t === o && (t = su, e = su, (n = function () {
                  var t, e, n, u;
                  t = su, 'inner' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(Qt));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) !== o && (u = ta()) !== o ? e = n = [
                  n,
                  u
                ] : (su = e, e = o), e === o && (e = null), e !== o && (n = ss()) !== o ? t = e = 'INNER JOIN' : (su = t, t = o)))), t;
              }
              function qu() {
                var r, t, e, n, u, s, a, i;
                return r = su, (t = mo()) !== o ? (e = su, (n = ta()) !== o && (u = Ks()) !== o && (s = ta()) !== o && (a = mo()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (su = e, e = o), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  const e = {
                    db: null,
                    table: r
                  };
                  return null !== t && (e.db = r, e.table = t[3]), e;
                }(t, e) : (su = r, r = o)) : (su = r, r = o), r === o && (r = su, (t = pa()) !== o && ((i = t).db = null, i.table = i.name, t = i), r = t), r;
              }
              function Zu() {
                var t, e;
                return t = su, function () {
                  var t, e, n, u;
                  t = su, 'on' === r.substr(su, 2).toLowerCase() ? (e = r.substr(su, 2), su += 2) : (e = o, 0 === lu && Lu(qt));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }() !== o && ta() !== o && (e = fo()) !== o ? t = e : (su = t, t = o), t;
              }
              function zu() {
                var t, e;
                return t = su, function () {
                  var t, e, n, u;
                  t = su, 'where' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(se));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }() !== o && ta() !== o && (e = fo()) !== o ? t = e : (su = t, t = o), t;
              }
              function Ju() {
                var t, e;
                return t = su, function () {
                  var t, e, n, u;
                  t = su, 'order' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(ce));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }() !== o && ta() !== o && fs() !== o && ta() !== o && (e = function () {
                  var r, t, e, n, u, s, a, c;
                  if (r = su, (t = Qu()) !== o) {
                    for (e = [], n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = Qu()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (su = n, n = o); n !== o;)
                      e.push(n), n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = Qu()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (su = n, n = o);
                    e !== o ? (t = i(t, e), r = t) : (su = r, r = o);
                  } else
                    su = r, r = o;
                  return r;
                }()) !== o ? t = e : (su = t, t = o), t;
              }
              function Qu() {
                var t, e, n;
                return t = su, (e = fo()) !== o && ta() !== o ? ((n = function () {
                  var t, e, n, u;
                  t = su, 'desc' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(de));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'DESC' : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) === o && (n = function () {
                  var t, e, n, u;
                  t = su, 'asc' === r.substr(su, 3).toLowerCase() ? (e = r.substr(su, 3), su += 3) : (e = o, 0 === lu && Lu(be));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'ASC' : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()), n === o && (n = null), n !== o ? t = e = function (r, t) {
                  const e = {
                    expr: r,
                    type: 'ASC'
                  };
                  return 'DESC' === t && (e.type = 'DESC'), e;
                }(e, n) : (su = t, t = o)) : (su = t, t = o), t;
              }
              function ro() {
                var r;
                return (r = Po()) === o && (r = Oo()), r;
              }
              function to() {
                var t, e, n, u, s, a;
                return t = su, function () {
                  var t, e, n, u;
                  t = su, 'limit' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(fe));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }() !== o && ta() !== o && (e = ro()) !== o && ta() !== o ? (n = su, (u = qs()) === o && (u = function () {
                  var t, e, n, u;
                  t = su, 'offset' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(ve));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'OFFSET' : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()), u !== o && (s = ta()) !== o && (a = ro()) !== o ? n = u = [
                  u,
                  s,
                  a
                ] : (su = n, n = o), n === o && (n = null), n !== o ? t = function (r, t) {
                  const e = [r];
                  return t && e.push(t[2]), {
                    seperator: t && t[0] && t[0].toLowerCase() || '',
                    value: e
                  };
                }(e, n) : (su = t, t = o)) : (su = t, t = o), t;
              }
              function eo() {
                var t, e, n, u, s, a, i, c;
                return t = su, e = su, (n = mo()) !== o && (u = ta()) !== o && (s = Ks()) !== o ? e = n = [
                  n,
                  u,
                  s
                ] : (su = e, e = o), e === o && (e = null), e !== o && (n = ta()) !== o && (u = Io()) !== o && (s = ta()) !== o ? (61 === r.charCodeAt(su) ? (a = '=', su++) : (a = o, 0 === lu && Lu(vr)), a !== o && ta() !== o && (i = wo()) !== o ? t = e = {
                  column: u,
                  value: i,
                  table: (c = e) && c[0]
                } : (su = t, t = o)) : (su = t, t = o), t;
              }
              function no() {
                var t;
                return (t = function () {
                  var t, e;
                  t = su, function () {
                    var t, e, n, u;
                    t = su, 'values' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(ue));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }() !== o && ta() !== o && (e = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = su, (t = so()) !== o) {
                      for (e = [], n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = so()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (su = n, n = o); n !== o;)
                        e.push(n), n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = so()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (su = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (su = r, r = o);
                    } else
                      su = r, r = o;
                    return r;
                  }()) !== o ? t = e : (su = t, t = o);
                  return t;
                }()) === o && (t = Du()), t;
              }
              function uo() {
                var r, t, e, n, u, s, a, i, c;
                if (r = su, rs() !== o)
                  if (ta() !== o)
                    if ((t = zs()) !== o)
                      if (ta() !== o)
                        if ((e = No()) !== o) {
                          for (n = [], u = su, (s = ta()) !== o && (a = qs()) !== o && (i = ta()) !== o && (c = No()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (su = u, u = o); u !== o;)
                            n.push(u), u = su, (s = ta()) !== o && (a = qs()) !== o && (i = ta()) !== o && (c = No()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (su = u, u = o);
                          n !== o && (u = ta()) !== o && (s = Js()) !== o ? r = Sa(e, n) : (su = r, r = o);
                        } else
                          su = r, r = o;
                      else
                        su = r, r = o;
                    else
                      su = r, r = o;
                  else
                    su = r, r = o;
                else
                  su = r, r = o;
                return r === o && (r = su, rs() !== o && ta() !== o && (t = so()) !== o ? r = t : (su = r, r = o)), r;
              }
              function oo() {
                var t, e;
                return t = su, (e = function () {
                  var t, e, n, u;
                  t = su, 'insert' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(Dt));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) !== o && (e = 'insert'), (t = e) === o && (t = su, (e = Jo()) !== o && (e = 'replace'), t = e), t;
              }
              function so() {
                var r, t;
                return r = su, zs() !== o && ta() !== o && (t = ao()) !== o && ta() !== o && Js() !== o ? r = t : (su = r, r = o), r;
              }
              function ao() {
                var r, t, e, n, u, s, a, i;
                if (r = su, (t = fo()) !== o) {
                  for (e = [], n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (i = fo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (su = n, n = o); n !== o;)
                    e.push(n), n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (i = fo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (su = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    const e = { type: 'expr_list' };
                    return e.value = Sa(r, t), e;
                  }(t, e) : (su = r, r = o);
                } else
                  su = r, r = o;
                return r;
              }
              function io() {
                var t, e, n;
                return t = su, function () {
                  var t, e, n, u;
                  t = su, 'interval' === r.substr(su, 8).toLowerCase() ? (e = r.substr(su, 8), su += 8) : (e = o, 0 === lu && Lu(ln));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'INTERVAL' : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }() !== o && ta() !== o && (e = fo()) !== o && ta() !== o && (n = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u;
                    t = su, 'year' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(fn));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'YEAR' : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = su, 'month' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(vn));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'MONTH' : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = su, 'day' === r.substr(su, 3).toLowerCase() ? (e = r.substr(su, 3), su += 3) : (e = o, 0 === lu && Lu(bn));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'DAY' : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = su, 'hour' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(dn));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'HOUR' : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = su, 'minute' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(Ln));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'MINUTE' : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = su, 'second' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(Cn));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'SECOND' : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }());
                  return t;
                }()) !== o ? t = {
                  type: 'interval',
                  expr: e,
                  unit: n.toLowerCase()
                } : (su = t, t = o), t;
              }
              function co() {
                var t, e, n, u, s, a, i, c, l;
                if (t = su, ys() !== o)
                  if (ta() !== o)
                    if ((e = fo()) === o && (e = null), e !== o)
                      if (ta() !== o) {
                        if (n = [], (u = lo()) !== o)
                          for (; u !== o;)
                            n.push(u), u = lo();
                        else
                          n = o;
                        n !== o && (u = ta()) !== o ? ((s = function () {
                          var t, e;
                          t = su, function () {
                            var t, e, n, u;
                            t = su, 'else' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(Me));
                            e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                              e,
                              n
                            ] : (su = t, t = o)) : (su = t, t = o);
                            return t;
                          }() !== o && ta() !== o && (e = fo()) !== o ? t = {
                            type: 'else',
                            result: e
                          } : (su = t, t = o);
                          return t;
                        }()) === o && (s = null), s !== o && ta() !== o && function () {
                          var t, e, n, u;
                          t = su, 'end' === r.substr(su, 3).toLowerCase() ? (e = r.substr(su, 3), su += 3) : (e = o, 0 === lu && Lu(De));
                          e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                            e,
                            n
                          ] : (su = t, t = o)) : (su = t, t = o);
                          return t;
                        }() !== o && ta() !== o ? ((a = ys()) === o && (a = null), a !== o ? (i = e, c = n, (l = s) && c.push(l), t = {
                          type: 'case',
                          expr: i || null,
                          args: c
                        }) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o);
                      } else
                        su = t, t = o;
                    else
                      su = t, t = o;
                  else
                    su = t, t = o;
                else
                  su = t, t = o;
                return t;
              }
              function lo() {
                var t, e, n;
                return t = su, function () {
                  var t, e, n, u;
                  t = su, 'when' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(Ue));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }() !== o && ta() !== o && (e = fo()) !== o && ta() !== o && function () {
                  var t, e, n, u;
                  t = su, 'then' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(xe));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }() !== o && ta() !== o && (n = fo()) !== o ? t = {
                  type: 'when',
                  cond: e,
                  result: n
                } : (su = t, t = o), t;
              }
              function fo() {
                var r;
                return (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = su, (t = yo()) !== o) {
                    if (e = [], n = su, (u = ta()) !== o && (s = ra()) !== o && (a = ta()) !== o && (i = yo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (su = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = su, (u = ta()) !== o && (s = ra()) !== o && (a = ta()) !== o && (i = yo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (su = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = br(t, e), r = t) : (su = r, r = o);
                  } else
                    su = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s;
                  if (r = su, (t = Eo()) !== o) {
                    if (e = [], n = su, (u = ta()) !== o && (s = yo()) !== o ? n = u = [
                        u,
                        s
                      ] : (su = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = su, (u = ta()) !== o && (s = yo()) !== o ? n = u = [
                          u,
                          s
                        ] : (su = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = ya(t, e[0][1]), r = t) : (su = r, r = o);
                  } else
                    su = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = su, (t = vo()) !== o) {
                    for (e = [], n = su, (u = ea()) !== o && (s = As()) !== o && (a = ta()) !== o && (i = vo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (su = n, n = o); n !== o;)
                      e.push(n), n = su, (u = ea()) !== o && (s = As()) !== o && (a = ta()) !== o && (i = vo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (su = n, n = o);
                    e !== o ? (t = dr(t, e), r = t) : (su = r, r = o);
                  } else
                    su = r, r = o;
                  return r;
                }()) === o && (r = Ou()), r;
              }
              function vo() {
                var r, t, e, n, u, s, a, i;
                if (r = su, (t = bo()) !== o) {
                  for (e = [], n = su, (u = ea()) !== o && (s = hs()) !== o && (a = ta()) !== o && (i = bo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (su = n, n = o); n !== o;)
                    e.push(n), n = su, (u = ea()) !== o && (s = hs()) !== o && (a = ta()) !== o && (i = bo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (su = n, n = o);
                  e !== o ? r = t = br(t, e) : (su = r, r = o);
                } else
                  su = r, r = o;
                return r;
              }
              function bo() {
                var t, e, n, u, s;
                return (t = Lo()) === o && (t = function () {
                  var r, t, e;
                  r = su, (t = function () {
                    var r, t, e, n, u;
                    r = su, t = su, (e = Es()) !== o && (n = ta()) !== o && (u = ws()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (su = t, t = o);
                    t !== o && (t = Cr(t));
                    (r = t) === o && (r = ws());
                    return r;
                  }()) !== o && ta() !== o && zs() !== o && ta() !== o && (e = hu()) !== o && ta() !== o && Js() !== o ? (n = t, (u = e).parentheses = !0, t = ya(n, u), r = t) : (su = r, r = o);
                  var n, u;
                  return r;
                }()) === o && (t = su, (e = Es()) === o && (e = su, 33 === r.charCodeAt(su) ? (n = '!', su++) : (n = o, 0 === lu && Lu(Lr)), n !== o ? (u = su, lu++, 61 === r.charCodeAt(su) ? (s = '=', su++) : (s = o, 0 === lu && Lu(vr)), lu--, s === o ? u = void 0 : (su = u, u = o), u !== o ? e = n = [
                  n,
                  u
                ] : (su = e, e = o)) : (su = e, e = o)), e !== o && (n = ta()) !== o && (u = bo()) !== o ? t = e = ya('NOT', u) : (su = t, t = o)), t;
              }
              function Lo() {
                var r, t, e, n, u, s, a;
                return r = su, (t = wo()) !== o && ta() !== o ? (e = su, lu++, n = hs(), lu--, n === o ? e = void 0 : (su = e, e = o), e !== o && (n = ta()) !== o ? ((u = function () {
                  var r;
                  (r = function () {
                    var t, e, n, u, s, a;
                    t = [], e = su, (n = ta()) !== o && (u = Co()) !== o && (s = ta()) !== o && (a = wo()) !== o ? e = n = [
                      n,
                      u,
                      s,
                      a
                    ] : (su = e, e = o);
                    if (e !== o)
                      for (; e !== o;)
                        t.push(e), e = su, (n = ta()) !== o && (u = Co()) !== o && (s = ta()) !== o && (a = wo()) !== o ? e = n = [
                          n,
                          u,
                          s,
                          a
                        ] : (su = e, e = o);
                    else
                      t = o;
                    t !== o && (t = {
                      type: 'arithmetic',
                      tail: t
                    });
                    return t;
                  }()) === o && (r = function () {
                    var r, t, e, n;
                    r = su, (t = po()) !== o && ta() !== o && (e = zs()) !== o && ta() !== o && (n = ao()) !== o && ta() !== o && Js() !== o ? r = t = {
                      op: t,
                      right: n
                    } : (su = r, r = o);
                    r === o && (r = su, (t = po()) !== o && ta() !== o ? ((e = pa()) === o && (e = Do()), e !== o ? (t = function (r, t) {
                      return {
                        op: r,
                        right: t
                      };
                    }(t, e), r = t) : (su = r, r = o)) : (su = r, r = o));
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e, n;
                    r = su, (t = function () {
                      var r, t, e, n, u;
                      r = su, t = su, (e = Es()) !== o && (n = ta()) !== o && (u = ds()) !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (su = t, t = o);
                      t !== o && (t = Cr(t));
                      (r = t) === o && (r = ds());
                      return r;
                    }()) !== o && ta() !== o && (e = wo()) !== o && ta() !== o && hs() !== o && ta() !== o && (n = wo()) !== o ? r = t = {
                      op: t,
                      right: {
                        type: 'expr_list',
                        value: [
                          e,
                          n
                        ]
                      }
                    } : (su = r, r = o);
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e, n, u;
                    r = su, (t = Cs()) !== o && (e = ta()) !== o && (n = wo()) !== o ? r = t = {
                      op: 'IS',
                      right: n
                    } : (su = r, r = o);
                    r === o && (r = su, t = su, (e = Cs()) !== o && (n = ta()) !== o && (u = Es()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (su = t, t = o), t !== o && (e = ta()) !== o && (n = wo()) !== o ? (t = function (r) {
                      return {
                        op: 'IS NOT',
                        right: r
                      };
                    }(n), r = t) : (su = r, r = o));
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e;
                    r = su, (t = function () {
                      var r, t, e, n, u;
                      r = su, t = su, (e = Es()) !== o && (n = ta()) !== o && (u = ps()) !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (su = t, t = o);
                      t !== o && (t = Cr(t));
                      (r = t) === o && (r = ps());
                      return r;
                    }()) !== o && ta() !== o && (e = Lo()) !== o ? r = t = {
                      op: t,
                      right: e
                    } : (su = r, r = o);
                    return r;
                  }());
                  return r;
                }()) === o && (u = null), u !== o ? (s = t, r = t = null === (a = u) ? s : 'arithmetic' === a.type ? Ia(s, a.tail) : Ta(a.op, s, a.right)) : (su = r, r = o)) : (su = r, r = o)) : (su = r, r = o), r === o && (r = Do()) === o && (r = To()), r;
              }
              function Co() {
                var t;
                return '>=' === r.substr(su, 2) ? (t = '>=', su += 2) : (t = o, 0 === lu && Lu(pr)), t === o && (62 === r.charCodeAt(su) ? (t = '>', su++) : (t = o, 0 === lu && Lu(wr)), t === o && ('<=' === r.substr(su, 2) ? (t = '<=', su += 2) : (t = o, 0 === lu && Lu(Er)), t === o && ('<>' === r.substr(su, 2) ? (t = '<>', su += 2) : (t = o, 0 === lu && Lu(hr)), t === o && (60 === r.charCodeAt(su) ? (t = '<', su++) : (t = o, 0 === lu && Lu(Ar)), t === o && (61 === r.charCodeAt(su) ? (t = '=', su++) : (t = o, 0 === lu && Lu(vr)), t === o && ('!=' === r.substr(su, 2) ? (t = '!=', su += 2) : (t = o, 0 === lu && Lu(yr)))))))), t;
              }
              function po() {
                var r, t, e, n, u;
                return r = su, t = su, (e = Es()) !== o && (n = ta()) !== o && (u = Ls()) !== o ? t = e = [
                  e,
                  n,
                  u
                ] : (su = t, t = o), t !== o && (t = Cr(t)), (r = t) === o && (r = Ls()), r;
              }
              function wo() {
                var r, t, e, n, u, s, a, i;
                if (r = su, (t = ho()) !== o) {
                  for (e = [], n = su, (u = ta()) !== o && (s = Eo()) !== o && (a = ta()) !== o && (i = ho()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (su = n, n = o); n !== o;)
                    e.push(n), n = su, (u = ta()) !== o && (s = Eo()) !== o && (a = ta()) !== o && (i = ho()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (su = n, n = o);
                  e !== o ? r = t = dr(t, e) : (su = r, r = o);
                } else
                  su = r, r = o;
                return r;
              }
              function Eo() {
                var t;
                return 43 === r.charCodeAt(su) ? (t = '+', su++) : (t = o, 0 === lu && Lu(Tr)), t === o && (45 === r.charCodeAt(su) ? (t = '-', su++) : (t = o, 0 === lu && Lu(mr))), t;
              }
              function ho() {
                var r, t, e, n, u, s, a, i;
                if (r = su, (t = yo()) !== o) {
                  for (e = [], n = su, (u = ta()) !== o && (s = Ao()) !== o && (a = ta()) !== o && (i = yo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (su = n, n = o); n !== o;)
                    e.push(n), n = su, (u = ta()) !== o && (s = Ao()) !== o && (a = ta()) !== o && (i = yo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (su = n, n = o);
                  e !== o ? r = t = Ia(t, e) : (su = r, r = o);
                } else
                  su = r, r = o;
                return r;
              }
              function Ao() {
                var t;
                return 42 === r.charCodeAt(su) ? (t = '*', su++) : (t = o, 0 === lu && Lu(Sr)), t === o && (47 === r.charCodeAt(su) ? (t = '/', su++) : (t = o, 0 === lu && Lu(Ir)), t === o && (37 === r.charCodeAt(su) ? (t = '%', su++) : (t = o, 0 === lu && Lu(Nr)))), t;
              }
              function yo() {
                var t, e, n;
                return (t = function () {
                  var t, e, n, u, s, a, i;
                  t = su, (e = Ts()) !== o && ta() !== o && zs() !== o && ta() !== o && (n = fo()) !== o && ta() !== o && ns() !== o && ta() !== o && (u = Ea()) !== o && ta() !== o && (s = Js()) !== o ? t = e = {
                    type: 'cast',
                    expr: n,
                    symbol: 'as',
                    target: u
                  } : (su = t, t = o);
                  t === o && (t = su, (e = Ts()) !== o && ta() !== o && zs() !== o && ta() !== o && (n = fo()) !== o && ta() !== o && ns() !== o && ta() !== o && (u = Ns()) !== o && ta() !== o && (s = zs()) !== o && ta() !== o && (a = Ho()) !== o && ta() !== o && Js() !== o && ta() !== o && (i = Js()) !== o ? (e = function (r, t) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: 'DECIMAL(' + t + ')' }
                    };
                  }(n, a), t = e) : (su = t, t = o), t === o && (t = su, (e = Ts()) !== o && ta() !== o && zs() !== o && ta() !== o && (n = fo()) !== o && ta() !== o && ns() !== o && ta() !== o && (u = Ns()) !== o && ta() !== o && (s = zs()) !== o && ta() !== o && (a = Ho()) !== o && ta() !== o && qs() !== o && ta() !== o && (i = Ho()) !== o && ta() !== o && Js() !== o && ta() !== o && Js() !== o ? (e = function (r, t, e) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: 'DECIMAL(' + t + ', ' + e + ')' }
                    };
                  }(n, a, i), t = e) : (su = t, t = o), t === o && (t = su, (e = Ts()) !== o && ta() !== o && zs() !== o && ta() !== o && (n = fo()) !== o && ta() !== o && ns() !== o && ta() !== o && (u = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = su, 'signed' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(Ge));
                      e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'SIGNED' : (su = t, t = o)) : (su = t, t = o);
                      return t;
                    }()) === o && (t = Rs());
                    return t;
                  }()) !== o && ta() !== o ? ((s = gs()) === o && (s = null), s !== o && ta() !== o && (a = Js()) !== o ? (e = function (r, t, e) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: t + (e ? ' ' + e : '') }
                    };
                  }(n, u, s), t = e) : (su = t, t = o)) : (su = t, t = o))));
                  return t;
                }()) === o && (t = xo()) === o && (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u;
                    t = su, (e = function () {
                      var t, e, n, u;
                      t = su, 'count' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(Se));
                      e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'COUNT' : (su = t, t = o)) : (su = t, t = o);
                      return t;
                    }()) !== o && ta() !== o && zs() !== o && ta() !== o && (n = function () {
                      var t, e, n;
                      t = su, (e = function () {
                        var e;
                        42 === r.charCodeAt(su) ? (e = '*', su++) : (e = o, 0 === lu && Lu(Sr));
                        e !== o && (e = {
                          type: 'star',
                          value: '*'
                        });
                        return e;
                      }()) !== o && (e = { expr: e });
                      (t = e) === o && (t = su, (e = bs()) === o && (e = null), e !== o && ta() !== o && (n = To()) !== o ? t = e = {
                        distinct: e,
                        expr: n
                      } : (su = t, t = o));
                      return t;
                    }()) !== o && ta() !== o && Js() !== o && ta() !== o ? ((u = Uo()) === o && (u = null), u !== o ? t = e = {
                      type: 'aggr_func',
                      name: e,
                      args: n,
                      over: u
                    } : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n;
                    t = su, (e = function () {
                      var t;
                      (t = function () {
                        var t, e, n, u;
                        t = su, 'sum' === r.substr(su, 3).toLowerCase() ? (e = r.substr(su, 3), su += 3) : (e = o, 0 === lu && Lu(Re));
                        e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'SUM' : (su = t, t = o)) : (su = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = su, 'max' === r.substr(su, 3).toLowerCase() ? (e = r.substr(su, 3), su += 3) : (e = o, 0 === lu && Lu(Ie));
                        e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'MAX' : (su = t, t = o)) : (su = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = su, 'min' === r.substr(su, 3).toLowerCase() ? (e = r.substr(su, 3), su += 3) : (e = o, 0 === lu && Lu(Ne));
                        e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'MIN' : (su = t, t = o)) : (su = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = su, 'avg' === r.substr(su, 3).toLowerCase() ? (e = r.substr(su, 3), su += 3) : (e = o, 0 === lu && Lu(_e));
                        e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'AVG' : (su = t, t = o)) : (su = t, t = o);
                        return t;
                      }());
                      return t;
                    }()) !== o && ta() !== o && zs() !== o && ta() !== o && (n = wo()) !== o && ta() !== o && Js() !== o ? t = e = {
                      type: 'aggr_func',
                      name: e,
                      args: { expr: n }
                    } : (su = t, t = o);
                    return t;
                  }());
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s;
                  t = su, (e = da()) !== o && ta() !== o && zs() !== o && ta() !== o ? ((n = ao()) === o && (n = null), n !== o && ta() !== o && (u = Js()) !== o && ta() !== o ? ((s = Uo()) === o && (s = null), s !== o ? t = e = {
                    type: 'function',
                    name: e,
                    args: n || {
                      type: 'expr_list',
                      value: []
                    },
                    over: s
                  } : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o);
                  t === o && (t = su, (e = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = su, 'current_date' === r.substr(su, 12).toLowerCase() ? (e = r.substr(su, 12), su += 12) : (e = o, 0 === lu && Lu(cn));
                      e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'CURRENT_DATE' : (su = t, t = o)) : (su = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = su, 'current_time' === r.substr(su, 12).toLowerCase() ? (e = r.substr(su, 12), su += 12) : (e = o, 0 === lu && Lu(pn));
                      e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'CURRENT_TIME' : (su = t, t = o)) : (su = t, t = o);
                      return t;
                    }()) === o && (t = Hs()) === o && (t = function () {
                      var t, e, n, u;
                      t = su, 'current_user' === r.substr(su, 12).toLowerCase() ? (e = r.substr(su, 12), su += 12) : (e = o, 0 === lu && Lu(En));
                      e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'CURRENT_USER' : (su = t, t = o)) : (su = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = su, 'user' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(an));
                      e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'USER' : (su = t, t = o)) : (su = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = su, 'session_user' === r.substr(su, 12).toLowerCase() ? (e = r.substr(su, 12), su += 12) : (e = o, 0 === lu && Lu(hn));
                      e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'SESSION_USER' : (su = t, t = o)) : (su = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = su, 'system_user' === r.substr(su, 11).toLowerCase() ? (e = r.substr(su, 11), su += 11) : (e = o, 0 === lu && Lu(An));
                      e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'SYSTEM_USER' : (su = t, t = o)) : (su = t, t = o);
                      return t;
                    }());
                    return t;
                  }()) !== o && ta() !== o && zs() !== o && ta() !== o && (n = Js()) !== o && ta() !== o ? ((u = Uo()) === o && (u = null), u !== o ? (e = function (r, t) {
                    return {
                      type: 'function',
                      name: r,
                      args: {
                        type: 'expr_list',
                        value: []
                      },
                      over: t
                    };
                  }(e, u), t = e) : (su = t, t = o)) : (su = t, t = o));
                  return t;
                }()) === o && (t = co()) === o && (t = io()) === o && (t = To()) === o && (t = Oo()) === o && (t = su, zs() !== o && ta() !== o && (e = fo()) !== o && ta() !== o && Js() !== o ? t = Rr(e) : (su = t, t = o), t === o && (t = su, zs() !== o && ta() !== o && (e = ao()) !== o && ta() !== o && Js() !== o ? ((n = e).parentheses = !0, t = n) : (su = t, t = o), t === o && (t = pa()))), t;
              }
              function To() {
                var r, t, e, n, u;
                return r = su, (t = mo()) !== o && ta() !== o && Ks() !== o && ta() !== o && (e = Io()) !== o ? (n = t, u = e, Oa.add(`select::${ n }::${ u }`), r = t = {
                  type: 'column_ref',
                  table: n,
                  column: u
                }) : (su = r, r = o), r === o && (r = su, (t = Io()) !== o && (t = function (r) {
                  return Oa.add('select::null::' + r), {
                    type: 'column_ref',
                    table: null,
                    column: r
                  };
                }(t)), r = t), r;
              }
              function mo() {
                var r, t;
                return r = su, (t = No()) !== o ? (_r(t) ? o : void 0) !== o ? r = t = t : (su = r, r = o) : (su = r, r = o), r === o && (r = su, (t = So()) !== o && (t = t), r = t), r;
              }
              function So() {
                var t;
                return (t = function () {
                  var t, e, n, u;
                  t = su, 34 === r.charCodeAt(su) ? (e = '"', su++) : (e = o, 0 === lu && Lu(gr));
                  if (e !== o) {
                    if (n = [], Or.test(r.charAt(su)) ? (u = r.charAt(su), su++) : (u = o, 0 === lu && Lu(Ur)), u !== o)
                      for (; u !== o;)
                        n.push(u), Or.test(r.charAt(su)) ? (u = r.charAt(su), su++) : (u = o, 0 === lu && Lu(Ur));
                    else
                      n = o;
                    n !== o ? (34 === r.charCodeAt(su) ? (u = '"', su++) : (u = o, 0 === lu && Lu(gr)), u !== o ? (e = xr(n), t = e) : (su = t, t = o)) : (su = t, t = o);
                  } else
                    su = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = su, 39 === r.charCodeAt(su) ? (e = '\'', su++) : (e = o, 0 === lu && Lu(Z));
                  if (e !== o) {
                    if (n = [], Mr.test(r.charAt(su)) ? (u = r.charAt(su), su++) : (u = o, 0 === lu && Lu(Dr)), u !== o)
                      for (; u !== o;)
                        n.push(u), Mr.test(r.charAt(su)) ? (u = r.charAt(su), su++) : (u = o, 0 === lu && Lu(Dr));
                    else
                      n = o;
                    n !== o ? (39 === r.charCodeAt(su) ? (u = '\'', su++) : (u = o, 0 === lu && Lu(Z)), u !== o ? (e = xr(n), t = e) : (su = t, t = o)) : (su = t, t = o);
                  } else
                    su = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = su, 96 === r.charCodeAt(su) ? (e = '`', su++) : (e = o, 0 === lu && Lu(kr));
                  if (e !== o) {
                    if (n = [], $r.test(r.charAt(su)) ? (u = r.charAt(su), su++) : (u = o, 0 === lu && Lu(Fr)), u !== o)
                      for (; u !== o;)
                        n.push(u), $r.test(r.charAt(su)) ? (u = r.charAt(su), su++) : (u = o, 0 === lu && Lu(Fr));
                    else
                      n = o;
                    n !== o ? (96 === r.charCodeAt(su) ? (u = '`', su++) : (u = o, 0 === lu && Lu(kr)), u !== o ? (e = xr(n), t = e) : (su = t, t = o)) : (su = t, t = o);
                  } else
                    su = t, t = o;
                  return t;
                }()), t;
              }
              function Io() {
                var r, t;
                return r = su, (t = function () {
                  var r, t, e, n;
                  if (r = su, (t = Ro()) !== o) {
                    for (e = [], n = go(); n !== o;)
                      e.push(n), n = go();
                    e !== o ? (t = Pr(t, e), r = t) : (su = r, r = o);
                  } else
                    su = r, r = o;
                  return r;
                }()) !== o ? (_r(t) ? o : void 0) !== o ? r = t = t : (su = r, r = o) : (su = r, r = o), r === o && (r = So()), r;
              }
              function No() {
                var r, t, e, n;
                if (r = su, (t = Ro()) !== o) {
                  for (e = [], n = _o(); n !== o;)
                    e.push(n), n = _o();
                  e !== o ? r = t = Pr(t, e) : (su = r, r = o);
                } else
                  su = r, r = o;
                return r;
              }
              function Ro() {
                var t;
                return Hr.test(r.charAt(su)) ? (t = r.charAt(su), su++) : (t = o, 0 === lu && Lu(Gr)), t;
              }
              function _o() {
                var t;
                return jr.test(r.charAt(su)) ? (t = r.charAt(su), su++) : (t = o, 0 === lu && Lu(Yr)), t;
              }
              function go() {
                var t;
                return Br.test(r.charAt(su)) ? (t = r.charAt(su), su++) : (t = o, 0 === lu && Lu(Xr)), t;
              }
              function Oo() {
                var e, n, u;
                return e = su, 58 === r.charCodeAt(su) ? (n = ':', su++) : (n = o, 0 === lu && Lu(Wr)), n !== o && (u = No()) !== o ? e = n = [
                  n,
                  u
                ] : (su = e, e = o), e !== o && (e = {
                  type: 'param',
                  value: e[1]
                }), e;
              }
              function Uo() {
                var t, e, n;
                return t = su, function () {
                  var t, e, n, u;
                  t = su, 'over' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(ee));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }() !== o && ta() !== o && zs() !== o && ta() !== o && rs() !== o && ta() !== o && fs() !== o && ta() !== o && (e = $u()) !== o && ta() !== o ? ((n = Ju()) === o && (n = null), n !== o && ta() !== o && Js() !== o ? t = {
                  partitionby: e,
                  orderby: n
                } : (su = t, t = o)) : (su = t, t = o), t;
              }
              function xo() {
                var t;
                return (t = Do()) === o && (t = Po()) === o && (t = function () {
                  var t, e;
                  t = su, (e = function () {
                    var t, e, n, u;
                    t = su, 'true' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(Tt));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !0
                  });
                  (t = e) === o && (t = su, (e = function () {
                    var t, e, n, u;
                    t = su, 'false' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(St));
                    e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (su = t, t = o)) : (su = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !1
                  }), t = e);
                  return t;
                }()) === o && (t = Mo()) === o && (t = function () {
                  var t, e, n, u, s, a, i;
                  t = su, (e = Fs()) === o && (e = ks()) === o && (e = Ps()) === o && (e = $s());
                  if (e !== o)
                    if (ta() !== o) {
                      if (n = su, 39 === r.charCodeAt(su) ? (u = '\'', su++) : (u = o, 0 === lu && Lu(Z)), u !== o) {
                        for (s = [], a = $o(); a !== o;)
                          s.push(a), a = $o();
                        s !== o ? (39 === r.charCodeAt(su) ? (a = '\'', su++) : (a = o, 0 === lu && Lu(Z)), a !== o ? n = u = [
                          u,
                          s,
                          a
                        ] : (su = n, n = o)) : (su = n, n = o);
                      } else
                        su = n, n = o;
                      n !== o ? (c = n, e = {
                        type: e.toLowerCase(),
                        value: c[1].join('')
                      }, t = e) : (su = t, t = o);
                    } else
                      su = t, t = o;
                  else
                    su = t, t = o;
                  var c;
                  t === o && (t = su, (e = Hs()) !== o && ta() !== o ? ((n = zs()) === o && (n = null), n !== o && (u = ta()) !== o ? ((s = Js()) === o && (s = null), s !== o ? (a = (a = function (r, t, e) {
                    if (t && e)
                      return !0;
                  }(0, n, s)) ? o : void 0) !== o && ta() !== o ? ('on update current_timestamp' === r.substr(su, 27).toLowerCase() ? (i = r.substr(su, 27), su += 27) : (i = o, 0 === lu && Lu(Kr)), i === o && (i = null), i !== o ? (e = function (r, t, e, n) {
                    return {
                      type: 'origin',
                      value: (n ? `${ r } ${ n }` : r).toLowerCase()
                    };
                  }(e, 0, 0, i), t = e) : (su = t, t = o)) : (su = t, t = o) : (su = t, t = o)) : (su = t, t = o)) : (su = t, t = o));
                  return t;
                }()), t;
              }
              function Mo() {
                var e;
                return (e = function () {
                  var t, e, n, u;
                  t = su, 'null' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(At));
                  e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (su = t, t = o)) : (su = t, t = o);
                  return t;
                }()) !== o && (e = {
                  type: 'null',
                  value: null
                }), e;
              }
              function Do() {
                var t, e, n, u, s;
                if (t = su, e = su, 39 === r.charCodeAt(su) ? (n = '\'', su++) : (n = o, 0 === lu && Lu(Z)), n !== o) {
                  for (u = [], s = $o(); s !== o;)
                    u.push(s), s = $o();
                  u !== o ? (39 === r.charCodeAt(su) ? (s = '\'', su++) : (s = o, 0 === lu && Lu(Z)), s !== o ? e = n = [
                    n,
                    u,
                    s
                  ] : (su = e, e = o)) : (su = e, e = o);
                } else
                  su = e, e = o;
                if (e !== o && (e = Vr(e)), (t = e) === o) {
                  if (t = su, e = su, 34 === r.charCodeAt(su) ? (n = '"', su++) : (n = o, 0 === lu && Lu(gr)), n !== o) {
                    for (u = [], s = ko(); s !== o;)
                      u.push(s), s = ko();
                    u !== o ? (34 === r.charCodeAt(su) ? (s = '"', su++) : (s = o, 0 === lu && Lu(gr)), s !== o ? e = n = [
                      n,
                      u,
                      s
                    ] : (su = e, e = o)) : (su = e, e = o);
                  } else
                    su = e, e = o;
                  e !== o && (e = Vr(e)), t = e;
                }
                return t;
              }
              function ko() {
                var t;
                return qr.test(r.charAt(su)) ? (t = r.charAt(su), su++) : (t = o, 0 === lu && Lu(Zr)), t === o && (t = Fo()), t;
              }
              function $o() {
                var t;
                return zr.test(r.charAt(su)) ? (t = r.charAt(su), su++) : (t = o, 0 === lu && Lu(Jr)), t === o && (t = Fo()), t;
              }
              function Fo() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = su, '\\\'' === r.substr(su, 2) ? (e = '\\\'', su += 2) : (e = o, 0 === lu && Lu(Qr)), e !== o && (e = '\''), (t = e) === o && (t = su, '\\"' === r.substr(su, 2) ? (e = '\\"', su += 2) : (e = o, 0 === lu && Lu(rt)), e !== o && (e = '"'), (t = e) === o && (t = su, '\\\\' === r.substr(su, 2) ? (e = '\\\\', su += 2) : (e = o, 0 === lu && Lu(tt)), e !== o && (e = '\\'), (t = e) === o && (t = su, '\\/' === r.substr(su, 2) ? (e = '\\/', su += 2) : (e = o, 0 === lu && Lu(et)), e !== o && (e = '/'), (t = e) === o && (t = su, '\\b' === r.substr(su, 2) ? (e = '\\b', su += 2) : (e = o, 0 === lu && Lu(nt)), e !== o && (e = '\b'), (t = e) === o && (t = su, '\\f' === r.substr(su, 2) ? (e = '\\f', su += 2) : (e = o, 0 === lu && Lu(ut)), e !== o && (e = '\f'), (t = e) === o && (t = su, '\\n' === r.substr(su, 2) ? (e = '\\n', su += 2) : (e = o, 0 === lu && Lu(ot)), e !== o && (e = '\n'), (t = e) === o && (t = su, '\\r' === r.substr(su, 2) ? (e = '\\r', su += 2) : (e = o, 0 === lu && Lu(st)), e !== o && (e = '\r'), (t = e) === o && (t = su, '\\t' === r.substr(su, 2) ? (e = '\\t', su += 2) : (e = o, 0 === lu && Lu(at)), e !== o && (e = '\t'), (t = e) === o && (t = su, '\\u' === r.substr(su, 2) ? (e = '\\u', su += 2) : (e = o, 0 === lu && Lu(it)), e !== o && (n = Xo()) !== o && (u = Xo()) !== o && (s = Xo()) !== o && (a = Xo()) !== o ? (i = n, c = u, l = s, f = a, t = e = String.fromCharCode(parseInt('0x' + i + c + l + f))) : (su = t, t = o), t === o && (t = su, 92 === r.charCodeAt(su) ? (e = '\\', su++) : (e = o, 0 === lu && Lu(ct)), e !== o && (e = '\\'), t = e)))))))))), t;
              }
              function Po() {
                var t, e;
                return (t = function () {
                  var r, t, e, n;
                  r = su, (t = Ho()) !== o && (e = Go()) !== o && (n = jo()) !== o ? r = t = {
                    type: 'bigint',
                    value: t + e + n
                  } : (su = r, r = o);
                  r === o && (r = su, (t = Ho()) !== o && (e = Go()) !== o ? (t = function (r, t) {
                    const e = r + t;
                    return ma(r) ? {
                      type: 'bigint',
                      value: e
                    } : parseFloat(e);
                  }(t, e), r = t) : (su = r, r = o), r === o && (r = su, (t = Ho()) !== o && (e = jo()) !== o ? (t = function (r, t) {
                    return {
                      type: 'bigint',
                      value: r + t
                    };
                  }(t, e), r = t) : (su = r, r = o), r === o && (r = su, (t = Ho()) !== o && (t = function (r) {
                    return ma(r) ? {
                      type: 'bigint',
                      value: r
                    } : parseFloat(r);
                  }(t)), r = t)));
                  return r;
                }()) !== o && (t = (e = t) && 'bigint' === e.type ? e : {
                  type: 'number',
                  value: e
                }), t;
              }
              function Ho() {
                var t, e, n;
                return (t = Yo()) === o && (t = Bo()) === o && (t = su, 45 === r.charCodeAt(su) ? (e = '-', su++) : (e = o, 0 === lu && Lu(mr)), e === o && (43 === r.charCodeAt(su) ? (e = '+', su++) : (e = o, 0 === lu && Lu(Tr))), e !== o && (n = Yo()) !== o ? t = e = '-' + n : (su = t, t = o), t === o && (t = su, 45 === r.charCodeAt(su) ? (e = '-', su++) : (e = o, 0 === lu && Lu(mr)), e === o && (43 === r.charCodeAt(su) ? (e = '+', su++) : (e = o, 0 === lu && Lu(Tr))), e !== o && (n = Bo()) !== o ? t = e = '-' + n : (su = t, t = o))), t;
              }
              function Go() {
                var t, e, n;
                return t = su, 46 === r.charCodeAt(su) ? (e = '.', su++) : (e = o, 0 === lu && Lu(vt)), e !== o && (n = Yo()) !== o ? t = e = '.' + n : (su = t, t = o), t;
              }
              function jo() {
                var t, e, n;
                return t = su, (e = function () {
                  var t, e, n;
                  t = su, pt.test(r.charAt(su)) ? (e = r.charAt(su), su++) : (e = o, 0 === lu && Lu(wt));
                  e !== o ? (Et.test(r.charAt(su)) ? (n = r.charAt(su), su++) : (n = o, 0 === lu && Lu(ht)), n === o && (n = null), n !== o ? t = e = e + (null !== (u = n) ? u : '') : (su = t, t = o)) : (su = t, t = o);
                  var u;
                  return t;
                }()) !== o && (n = Yo()) !== o ? t = e = e + n : (su = t, t = o), t;
              }
              function Yo() {
                var t, e;
                if (t = [], (e = Bo()) !== o)
                  for (; e !== o;)
                    t.push(e), e = Bo();
                else
                  t = o;
                return t !== o && (t = t.join('')), t;
              }
              function Bo() {
                var t;
                return bt.test(r.charAt(su)) ? (t = r.charAt(su), su++) : (t = o, 0 === lu && Lu(dt)), t;
              }
              function Xo() {
                var t;
                return Lt.test(r.charAt(su)) ? (t = r.charAt(su), su++) : (t = o, 0 === lu && Lu(Ct)), t;
              }
              function Wo() {
                var t, e, n, u;
                return t = su, 'default' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu(C)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Vo() {
                var t, e, n, u;
                return t = su, 'to' === r.substr(su, 2).toLowerCase() ? (e = r.substr(su, 2), su += 2) : (e = o, 0 === lu && Lu(mt)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Ko() {
                var t, e, n, u;
                return t = su, 'drop' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(It)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'DROP' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function qo() {
                var t, e, n, u;
                return t = su, 'create' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(Ot)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Zo() {
                var t, e, n, u;
                return t = su, 'temporary' === r.substr(su, 9).toLowerCase() ? (e = r.substr(su, 9), su += 9) : (e = o, 0 === lu && Lu(Ut)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function zo() {
                var t, e, n, u;
                return t = su, 'if not exists' === r.substr(su, 13).toLowerCase() ? (e = r.substr(su, 13), su += 13) : (e = o, 0 === lu && Lu(xt)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Jo() {
                var t, e, n, u;
                return t = su, 'replace' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu($t)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Qo() {
                var t, e, n, u;
                return t = su, 'rename' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(Ft)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function rs() {
                var t, e, n, u;
                return t = su, 'partition' === r.substr(su, 9).toLowerCase() ? (e = r.substr(su, 9), su += 9) : (e = o, 0 === lu && Lu(Ht)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'PARTITION' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function ts() {
                var t, e, n, u;
                return t = su, 'into' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(Gt)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'INTO' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function es() {
                var t, e, n, u;
                return t = su, 'set' === r.substr(su, 3).toLowerCase() ? (e = r.substr(su, 3), su += 3) : (e = o, 0 === lu && Lu(Bt)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function ns() {
                var t, e, n, u;
                return t = su, 'as' === r.substr(su, 2).toLowerCase() ? (e = r.substr(su, 2), su += 2) : (e = o, 0 === lu && Lu(Wt)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function us() {
                var t, e, n, u;
                return t = su, 'table' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(Vt)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'TABLE' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function os() {
                var t, e, n, u;
                return t = su, 'tables' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(Kt)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'TABLES' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function ss() {
                var t, e, n, u;
                return t = su, 'join' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(re)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function as() {
                var t, e, n, u;
                return t = su, 'outer' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(te)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function is() {
                var t, e, n, u;
                return t = su, 'union' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(ne)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function cs() {
                var t, e, n, u;
                return t = su, 'using' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(oe)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function ls() {
                var t, e, n, u;
                return t = su, 'with' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(ir)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function fs() {
                var t, e, n, u;
                return t = su, 'by' === r.substr(su, 2).toLowerCase() ? (e = r.substr(su, 2), su += 2) : (e = o, 0 === lu && Lu(ie)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function vs() {
                var t, e, n, u;
                return t = su, 'all' === r.substr(su, 3).toLowerCase() ? (e = r.substr(su, 3), su += 3) : (e = o, 0 === lu && Lu(Le)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'ALL' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function bs() {
                var t, e, n, u;
                return t = su, 'distinct' === r.substr(su, 8).toLowerCase() ? (e = r.substr(su, 8), su += 8) : (e = o, 0 === lu && Lu(Ce)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'DISTINCT' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function ds() {
                var t, e, n, u;
                return t = su, 'between' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu(pe)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'BETWEEN' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Ls() {
                var t, e, n, u;
                return t = su, 'in' === r.substr(su, 2).toLowerCase() ? (e = r.substr(su, 2), su += 2) : (e = o, 0 === lu && Lu(we)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'IN' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Cs() {
                var t, e, n, u;
                return t = su, 'is' === r.substr(su, 2).toLowerCase() ? (e = r.substr(su, 2), su += 2) : (e = o, 0 === lu && Lu(Ee)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'IS' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function ps() {
                var t, e, n, u;
                return t = su, 'like' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(he)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'LIKE' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function ws() {
                var t, e, n, u;
                return t = su, 'exists' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(Ae)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'EXISTS' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Es() {
                var t, e, n, u;
                return t = su, 'not' === r.substr(su, 3).toLowerCase() ? (e = r.substr(su, 3), su += 3) : (e = o, 0 === lu && Lu(ye)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'NOT' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function hs() {
                var t, e, n, u;
                return t = su, 'and' === r.substr(su, 3).toLowerCase() ? (e = r.substr(su, 3), su += 3) : (e = o, 0 === lu && Lu(Te)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'AND' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function As() {
                var t, e, n, u;
                return t = su, 'or' === r.substr(su, 2).toLowerCase() ? (e = r.substr(su, 2), su += 2) : (e = o, 0 === lu && Lu(me)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'OR' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function ys() {
                var t, e, n, u;
                return t = su, 'case' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(Oe)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Ts() {
                var t, e, n, u;
                return t = su, 'cast' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(ke)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (su = t, t = o)) : (su = t, t = o), t;
              }
              function ms() {
                var t, e, n, u;
                return t = su, 'char' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu($e)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'CHAR' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Ss() {
                var t, e, n, u;
                return t = su, 'varchar' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu(Fe)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'VARCHAR' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Is() {
                var t, e, n, u;
                return t = su, 'numeric' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu(Pe)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'NUMERIC' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Ns() {
                var t, e, n, u;
                return t = su, 'decimal' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu(He)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'DECIMAL' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Rs() {
                var t, e, n, u;
                return t = su, 'unsigned' === r.substr(su, 8).toLowerCase() ? (e = r.substr(su, 8), su += 8) : (e = o, 0 === lu && Lu(je)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'UNSIGNED' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function _s() {
                var t, e, n, u;
                return t = su, 'int' === r.substr(su, 3).toLowerCase() ? (e = r.substr(su, 3), su += 3) : (e = o, 0 === lu && Lu(Ye)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'INT' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function gs() {
                var t, e, n, u;
                return t = su, 'integer' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu(Xe)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'INTEGER' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Os() {
                var t, e, n, u;
                return t = su, 'smallint' === r.substr(su, 8).toLowerCase() ? (e = r.substr(su, 8), su += 8) : (e = o, 0 === lu && Lu(Ve)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'SMALLINT' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Us() {
                var t, e, n, u;
                return t = su, 'tinyint' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu(Ke)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'TINYINT' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function xs() {
                var t, e, n, u;
                return t = su, 'bigint' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(Qe)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'BIGINT' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Ms() {
                var t, e, n, u;
                return t = su, 'float' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(rn)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'FLOAT' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Ds() {
                var t, e, n, u;
                return t = su, 'double' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(tn)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'DOUBLE' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function ks() {
                var t, e, n, u;
                return t = su, 'date' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(en)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'DATE' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function $s() {
                var t, e, n, u;
                return t = su, 'datetime' === r.substr(su, 8).toLowerCase() ? (e = r.substr(su, 8), su += 8) : (e = o, 0 === lu && Lu(nn)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'DATETIME' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Fs() {
                var t, e, n, u;
                return t = su, 'time' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(un)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'TIME' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Ps() {
                var t, e, n, u;
                return t = su, 'timestamp' === r.substr(su, 9).toLowerCase() ? (e = r.substr(su, 9), su += 9) : (e = o, 0 === lu && Lu(on)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'TIMESTAMP' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Hs() {
                var t, e, n, u;
                return t = su, 'current_timestamp' === r.substr(su, 17).toLowerCase() ? (e = r.substr(su, 17), su += 17) : (e = o, 0 === lu && Lu(wn)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'CURRENT_TIMESTAMP' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Gs() {
                var t;
                return (t = function () {
                  var t;
                  return '@@' === r.substr(su, 2) ? (t = '@@', su += 2) : (t = o, 0 === lu && Lu(Nn)), t;
                }()) === o && (t = function () {
                  var t;
                  return 64 === r.charCodeAt(su) ? (t = '@', su++) : (t = o, 0 === lu && Lu(In)), t;
                }()) === o && (t = function () {
                  var t;
                  return 36 === r.charCodeAt(su) ? (t = '$', su++) : (t = o, 0 === lu && Lu(Rn)), t;
                }()), t;
              }
              function js() {
                var t;
                return 61 === r.charCodeAt(su) ? (t = '=', su++) : (t = o, 0 === lu && Lu(vr)), t;
              }
              function Ys() {
                var t, e, n, u;
                return t = su, 'add' === r.substr(su, 3).toLowerCase() ? (e = r.substr(su, 3), su += 3) : (e = o, 0 === lu && Lu(Un)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'ADD' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Bs() {
                var t, e, n, u;
                return t = su, 'column' === r.substr(su, 6).toLowerCase() ? (e = r.substr(su, 6), su += 6) : (e = o, 0 === lu && Lu(xn)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'COLUMN' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Xs() {
                var t, e, n, u;
                return t = su, 'index' === r.substr(su, 5).toLowerCase() ? (e = r.substr(su, 5), su += 5) : (e = o, 0 === lu && Lu(Mn)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'INDEX' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Ws() {
                var t, e, n, u;
                return t = su, 'key' === r.substr(su, 3).toLowerCase() ? (e = r.substr(su, 3), su += 3) : (e = o, 0 === lu && Lu(v)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'KEY' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Vs() {
                var t, e, n, u;
                return t = su, 'comment' === r.substr(su, 7).toLowerCase() ? (e = r.substr(su, 7), su += 7) : (e = o, 0 === lu && Lu($n)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'COMMENT' : (su = t, t = o)) : (su = t, t = o), t;
              }
              function Ks() {
                var t;
                return 46 === r.charCodeAt(su) ? (t = '.', su++) : (t = o, 0 === lu && Lu(vt)), t;
              }
              function qs() {
                var t;
                return 44 === r.charCodeAt(su) ? (t = ',', su++) : (t = o, 0 === lu && Lu(Wn)), t;
              }
              function Zs() {
                var t;
                return 42 === r.charCodeAt(su) ? (t = '*', su++) : (t = o, 0 === lu && Lu(Sr)), t;
              }
              function zs() {
                var t;
                return 40 === r.charCodeAt(su) ? (t = '(', su++) : (t = o, 0 === lu && Lu(ur)), t;
              }
              function Js() {
                var t;
                return 41 === r.charCodeAt(su) ? (t = ')', su++) : (t = o, 0 === lu && Lu(or)), t;
              }
              function Qs() {
                var t;
                return 59 === r.charCodeAt(su) ? (t = ';', su++) : (t = o, 0 === lu && Lu(qn)), t;
              }
              function ra() {
                var t;
                return (t = function () {
                  var t;
                  return '||' === r.substr(su, 2) ? (t = '||', su += 2) : (t = o, 0 === lu && Lu(Zn)), t;
                }()) === o && (t = function () {
                  var t;
                  return '&&' === r.substr(su, 2) ? (t = '&&', su += 2) : (t = o, 0 === lu && Lu(zn)), t;
                }()), t;
              }
              function ta() {
                var r, t;
                for (r = [], (t = sa()) === o && (t = na()); t !== o;)
                  r.push(t), (t = sa()) === o && (t = na());
                return r;
              }
              function ea() {
                var r, t;
                if (r = [], (t = sa()) === o && (t = na()), t !== o)
                  for (; t !== o;)
                    r.push(t), (t = sa()) === o && (t = na());
                else
                  r = o;
                return r;
              }
              function na() {
                var t;
                return (t = function () {
                  var t, e, n, u, s, a;
                  t = su, '/*' === r.substr(su, 2) ? (e = '/*', su += 2) : (e = o, 0 === lu && Lu(Jn));
                  if (e !== o) {
                    for (n = [], u = su, s = su, lu++, '*/' === r.substr(su, 2) ? (a = '*/', su += 2) : (a = o, 0 === lu && Lu(Qn)), lu--, a === o ? s = void 0 : (su = s, s = o), s !== o && (a = oa()) !== o ? u = s = [
                        s,
                        a
                      ] : (su = u, u = o); u !== o;)
                      n.push(u), u = su, s = su, lu++, '*/' === r.substr(su, 2) ? (a = '*/', su += 2) : (a = o, 0 === lu && Lu(Qn)), lu--, a === o ? s = void 0 : (su = s, s = o), s !== o && (a = oa()) !== o ? u = s = [
                        s,
                        a
                      ] : (su = u, u = o);
                    n !== o ? ('*/' === r.substr(su, 2) ? (u = '*/', su += 2) : (u = o, 0 === lu && Lu(Qn)), u !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (su = t, t = o)) : (su = t, t = o);
                  } else
                    su = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = su, '--' === r.substr(su, 2) ? (e = '--', su += 2) : (e = o, 0 === lu && Lu(ru));
                  if (e !== o) {
                    for (n = [], u = su, s = su, lu++, a = aa(), lu--, a === o ? s = void 0 : (su = s, s = o), s !== o && (a = oa()) !== o ? u = s = [
                        s,
                        a
                      ] : (su = u, u = o); u !== o;)
                      n.push(u), u = su, s = su, lu++, a = aa(), lu--, a === o ? s = void 0 : (su = s, s = o), s !== o && (a = oa()) !== o ? u = s = [
                        s,
                        a
                      ] : (su = u, u = o);
                    n !== o ? t = e = [
                      e,
                      n
                    ] : (su = t, t = o);
                  } else
                    su = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = su, 35 === r.charCodeAt(su) ? (e = '#', su++) : (e = o, 0 === lu && Lu(tu));
                  if (e !== o) {
                    for (n = [], u = su, s = su, lu++, a = aa(), lu--, a === o ? s = void 0 : (su = s, s = o), s !== o && (a = oa()) !== o ? u = s = [
                        s,
                        a
                      ] : (su = u, u = o); u !== o;)
                      n.push(u), u = su, s = su, lu++, a = aa(), lu--, a === o ? s = void 0 : (su = s, s = o), s !== o && (a = oa()) !== o ? u = s = [
                        s,
                        a
                      ] : (su = u, u = o);
                    n !== o ? t = e = [
                      e,
                      n
                    ] : (su = t, t = o);
                  } else
                    su = t, t = o;
                  return t;
                }()), t;
              }
              function ua() {
                var r, t, e, n, u, s, a;
                return r = su, (t = Vs()) !== o && ta() !== o ? ((e = js()) === o && (e = null), e !== o && ta() !== o && (n = Do()) !== o ? (s = e, a = n, r = t = {
                  type: (u = t).toLowerCase(),
                  keyword: u.toLowerCase(),
                  symbol: s,
                  value: a
                }) : (su = r, r = o)) : (su = r, r = o), r;
              }
              function oa() {
                var t;
                return r.length > su ? (t = r.charAt(su), su++) : (t = o, 0 === lu && Lu(eu)), t;
              }
              function sa() {
                var t;
                return nu.test(r.charAt(su)) ? (t = r.charAt(su), su++) : (t = o, 0 === lu && Lu(uu)), t;
              }
              function aa() {
                var t, e;
                if ((t = function () {
                    var t, e;
                    t = su, lu++, r.length > su ? (e = r.charAt(su), su++) : (e = o, 0 === lu && Lu(eu));
                    lu--, e === o ? t = void 0 : (su = t, t = o);
                    return t;
                  }()) === o)
                  if (t = [], lt.test(r.charAt(su)) ? (e = r.charAt(su), su++) : (e = o, 0 === lu && Lu(ft)), e !== o)
                    for (; e !== o;)
                      t.push(e), lt.test(r.charAt(su)) ? (e = r.charAt(su), su++) : (e = o, 0 === lu && Lu(ft));
                  else
                    t = o;
                return t;
              }
              function ia() {
                var t, e;
                return t = su, _a = [], void 0 !== o && ta() !== o ? ((e = ca()) === o && (e = function () {
                  var t, e;
                  t = su, function () {
                    var t;
                    return 'return' === r.substr(su, 6).toLowerCase() ? (t = r.substr(su, 6), su += 6) : (t = o, 0 === lu && Lu(_n)), t;
                  }() !== o && ta() !== o && (e = la()) !== o ? t = {
                    type: 'return',
                    expr: e
                  } : (su = t, t = o);
                  return t;
                }()), e !== o ? t = {
                  stmt: e,
                  vars: _a
                } : (su = t, t = o)) : (su = t, t = o), t;
              }
              function ca() {
                var t, e, n, u;
                return t = su, (e = pa()) === o && (e = wa()), e !== o && ta() !== o ? ((n = function () {
                  var t;
                  return ':=' === r.substr(su, 2) ? (t = ':=', su += 2) : (t = o, 0 === lu && Lu(gn)), t;
                }()) === o && (n = js()), n !== o && ta() !== o && (u = la()) !== o ? t = e = {
                  type: 'assign',
                  left: e,
                  symbol: n,
                  right: u
                } : (su = t, t = o)) : (su = t, t = o), t;
              }
              function la() {
                var t;
                return (t = Ou()) === o && (t = function () {
                  var r, t, e, n, u;
                  r = su, (t = pa()) !== o && ta() !== o && (e = Ku()) !== o && ta() !== o && (n = pa()) !== o && ta() !== o && (u = Zu()) !== o ? r = t = {
                    type: 'join',
                    ltable: t,
                    rtable: n,
                    op: e,
                    on: u
                  } : (su = r, r = o);
                  return r;
                }()) === o && (t = fa()) === o && (t = function () {
                  var t, e;
                  t = su, function () {
                    var t;
                    return 91 === r.charCodeAt(su) ? (t = '[', su++) : (t = o, 0 === lu && Lu(Vn)), t;
                  }() !== o && ta() !== o && (e = Ca()) !== o && ta() !== o && function () {
                    var t;
                    return 93 === r.charCodeAt(su) ? (t = ']', su++) : (t = o, 0 === lu && Lu(Kn)), t;
                  }() !== o ? t = {
                    type: 'array',
                    value: e
                  } : (su = t, t = o);
                  return t;
                }()), t;
              }
              function fa() {
                var r, t, e, n, u, s, a, i;
                if (r = su, (t = va()) !== o) {
                  for (e = [], n = su, (u = ta()) !== o && (s = Eo()) !== o && (a = ta()) !== o && (i = va()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (su = n, n = o); n !== o;)
                    e.push(n), n = su, (u = ta()) !== o && (s = Eo()) !== o && (a = ta()) !== o && (i = va()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (su = n, n = o);
                  e !== o ? r = t = dr(t, e) : (su = r, r = o);
                } else
                  su = r, r = o;
                return r;
              }
              function va() {
                var r, t, e, n, u, s, a, i;
                if (r = su, (t = ba()) !== o) {
                  for (e = [], n = su, (u = ta()) !== o && (s = Ao()) !== o && (a = ta()) !== o && (i = ba()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (su = n, n = o); n !== o;)
                    e.push(n), n = su, (u = ta()) !== o && (s = Ao()) !== o && (a = ta()) !== o && (i = ba()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (su = n, n = o);
                  e !== o ? r = t = dr(t, e) : (su = r, r = o);
                } else
                  su = r, r = o;
                return r;
              }
              function ba() {
                var r, t;
                return (r = xo()) === o && (r = pa()) === o && (r = La()) === o && (r = Oo()) === o && (r = su, zs() !== o && ta() !== o && (t = fa()) !== o && ta() !== o && Js() !== o ? r = Rr(t) : (su = r, r = o)), r;
              }
              function da() {
                var r, t, e, n, u, s, a;
                return r = su, (t = mo()) !== o ? (e = su, (n = ta()) !== o && (u = Ks()) !== o && (s = ta()) !== o && (a = mo()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (su = e, e = o), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  let e = r;
                  return null !== t && (e = `${ r }.${ t[3] }`), e;
                }(t, e) : (su = r, r = o)) : (su = r, r = o), r;
              }
              function La() {
                var r, t, e;
                return r = su, (t = da()) !== o && ta() !== o && zs() !== o && ta() !== o ? ((e = Ca()) === o && (e = null), e !== o && ta() !== o && Js() !== o ? r = t = {
                  type: 'function',
                  name: t,
                  args: {
                    type: 'expr_list',
                    value: e
                  }
                } : (su = r, r = o)) : (su = r, r = o), r === o && (r = su, (t = da()) !== o && (t = function (r) {
                  return {
                    type: 'function',
                    name: r,
                    args: null
                  };
                }(t)), r = t), r;
              }
              function Ca() {
                var r, t, e, n, u, s, a, c;
                if (r = su, (t = ba()) !== o) {
                  for (e = [], n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = ba()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (su = n, n = o); n !== o;)
                    e.push(n), n = su, (u = ta()) !== o && (s = qs()) !== o && (a = ta()) !== o && (c = ba()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (su = n, n = o);
                  e !== o ? r = t = i(t, e) : (su = r, r = o);
                } else
                  su = r, r = o;
                return r;
              }
              function pa() {
                var r, t, e, n, u;
                return r = su, (t = Gs()) !== o && (e = wa()) !== o ? (n = t, u = e, r = t = {
                  type: 'var',
                  ...u,
                  prefix: n
                }) : (su = r, r = o), r;
              }
              function wa() {
                var t, e, n, u, s;
                return t = su, (e = No()) !== o && (n = function () {
                  var e, n, u, s;
                  e = [], n = su, 46 === r.charCodeAt(su) ? (u = '.', su++) : (u = o, 0 === lu && Lu(vt));
                  u !== o && (s = No()) !== o ? n = u = [
                    u,
                    s
                  ] : (su = n, n = o);
                  for (; n !== o;)
                    e.push(n), n = su, 46 === r.charCodeAt(su) ? (u = '.', su++) : (u = o, 0 === lu && Lu(vt)), u !== o && (s = No()) !== o ? n = u = [
                      u,
                      s
                    ] : (su = n, n = o);
                  e !== o && (e = function (r) {
                    const t = [];
                    for (let e = 0; e < r.length; e++)
                      t.push(r[e][1]);
                    return t;
                  }(e));
                  return e;
                }()) !== o ? (u = e, s = n, _a.push(u), t = e = {
                  type: 'var',
                  name: u,
                  members: s,
                  prefix: null
                }) : (su = t, t = o), t;
              }
              function Ea() {
                var t;
                return (t = function () {
                  var t, e, n, u;
                  t = su, (e = ms()) === o && (e = Ss());
                  if (e !== o)
                    if (ta() !== o)
                      if (zs() !== o)
                        if (ta() !== o) {
                          if (n = [], bt.test(r.charAt(su)) ? (u = r.charAt(su), su++) : (u = o, 0 === lu && Lu(dt)), u !== o)
                            for (; u !== o;)
                              n.push(u), bt.test(r.charAt(su)) ? (u = r.charAt(su), su++) : (u = o, 0 === lu && Lu(dt));
                          else
                            n = o;
                          n !== o && (u = ta()) !== o && Js() !== o ? (e = {
                            dataType: e,
                            length: parseInt(n.join(''), 10)
                          }, t = e) : (su = t, t = o);
                        } else
                          su = t, t = o;
                      else
                        su = t, t = o;
                    else
                      su = t, t = o;
                  else
                    su = t, t = o;
                  t === o && (t = su, (e = ms()) !== o && (e = ou(e)), (t = e) === o && (t = su, (e = Ss()) !== o && (e = ou(e)), t = e));
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, i, c, l, f, v, b;
                  t = su, (e = Is()) === o && (e = Ns()) === o && (e = _s()) === o && (e = gs()) === o && (e = Os()) === o && (e = Us()) === o && (e = xs()) === o && (e = Ms()) === o && (e = Ds());
                  if (e !== o)
                    if ((n = ta()) !== o)
                      if ((u = zs()) !== o)
                        if ((s = ta()) !== o) {
                          if (a = [], bt.test(r.charAt(su)) ? (i = r.charAt(su), su++) : (i = o, 0 === lu && Lu(dt)), i !== o)
                            for (; i !== o;)
                              a.push(i), bt.test(r.charAt(su)) ? (i = r.charAt(su), su++) : (i = o, 0 === lu && Lu(dt));
                          else
                            a = o;
                          if (a !== o)
                            if ((i = ta()) !== o) {
                              if (c = su, (l = qs()) !== o)
                                if ((f = ta()) !== o) {
                                  if (v = [], bt.test(r.charAt(su)) ? (b = r.charAt(su), su++) : (b = o, 0 === lu && Lu(dt)), b !== o)
                                    for (; b !== o;)
                                      v.push(b), bt.test(r.charAt(su)) ? (b = r.charAt(su), su++) : (b = o, 0 === lu && Lu(dt));
                                  else
                                    v = o;
                                  v !== o ? c = l = [
                                    l,
                                    f,
                                    v
                                  ] : (su = c, c = o);
                                } else
                                  su = c, c = o;
                              else
                                su = c, c = o;
                              c === o && (c = null), c !== o && (l = ta()) !== o && (f = Js()) !== o && (v = ta()) !== o ? ((b = ha()) === o && (b = null), b !== o ? (d = c, L = b, e = {
                                dataType: e,
                                length: parseInt(a.join(''), 10),
                                scale: d && parseInt(d[2].join(''), 10),
                                parentheses: !0,
                                suffix: L
                              }, t = e) : (su = t, t = o)) : (su = t, t = o);
                            } else
                              su = t, t = o;
                          else
                            su = t, t = o;
                        } else
                          su = t, t = o;
                      else
                        su = t, t = o;
                    else
                      su = t, t = o;
                  else
                    su = t, t = o;
                  var d, L;
                  if (t === o) {
                    if (t = su, (e = Is()) === o && (e = Ns()) === o && (e = _s()) === o && (e = gs()) === o && (e = Os()) === o && (e = Us()) === o && (e = xs()) === o && (e = Ms()) === o && (e = Ds()), e !== o) {
                      if (n = [], bt.test(r.charAt(su)) ? (u = r.charAt(su), su++) : (u = o, 0 === lu && Lu(dt)), u !== o)
                        for (; u !== o;)
                          n.push(u), bt.test(r.charAt(su)) ? (u = r.charAt(su), su++) : (u = o, 0 === lu && Lu(dt));
                      else
                        n = o;
                      n !== o && (u = ta()) !== o ? ((s = ha()) === o && (s = null), s !== o ? (e = function (r, t, e) {
                        return {
                          dataType: r,
                          length: parseInt(t.join(''), 10),
                          suffix: e
                        };
                      }(e, n, s), t = e) : (su = t, t = o)) : (su = t, t = o);
                    } else
                      su = t, t = o;
                    t === o && (t = su, (e = Is()) === o && (e = Ns()) === o && (e = _s()) === o && (e = gs()) === o && (e = Os()) === o && (e = Us()) === o && (e = xs()) === o && (e = Ms()) === o && (e = Ds()), e !== o && (n = ta()) !== o ? ((u = ha()) === o && (u = null), u !== o && (s = ta()) !== o ? (e = function (r, t) {
                      return {
                        dataType: r,
                        suffix: t
                      };
                    }(e, u), t = e) : (su = t, t = o)) : (su = t, t = o));
                  }
                  return t;
                }()) === o && (t = function () {
                  var t;
                  (t = ks()) === o && (t = $s()) === o && (t = Fs()) === o && (t = Ps());
                  t !== o && (t = ou(t));
                  return t;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = su, 'json' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(We)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'JSON' : (su = t, t = o)) : (su = t, t = o), t;
                  }()) !== o && (e = ou(e));
                  return e;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = su, 'tinytext' === r.substr(su, 8).toLowerCase() ? (e = r.substr(su, 8), su += 8) : (e = o, 0 === lu && Lu(qe)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'TINYTEXT' : (su = t, t = o)) : (su = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = su, 'text' === r.substr(su, 4).toLowerCase() ? (e = r.substr(su, 4), su += 4) : (e = o, 0 === lu && Lu(Ze)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'TEXT' : (su = t, t = o)) : (su = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = su, 'mediumtext' === r.substr(su, 10).toLowerCase() ? (e = r.substr(su, 10), su += 10) : (e = o, 0 === lu && Lu(ze)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'MEDIUMTEXT' : (su = t, t = o)) : (su = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = su, 'longtext' === r.substr(su, 8).toLowerCase() ? (e = r.substr(su, 8), su += 8) : (e = o, 0 === lu && Lu(Je)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'LONGTEXT' : (su = t, t = o)) : (su = t, t = o), t;
                  }());
                  e !== o && (e = { dataType: e });
                  return e;
                }()), t;
              }
              function ha() {
                var t, e, n;
                return t = su, (e = Rs()) === o && (e = null), e !== o && ta() !== o ? ((n = function () {
                  var t, e, n, u;
                  return t = su, 'zerofill' === r.substr(su, 8).toLowerCase() ? (e = r.substr(su, 8), su += 8) : (e = o, 0 === lu && Lu(Be)), e !== o ? (n = su, lu++, u = Ro(), lu--, u === o ? n = void 0 : (su = n, n = o), n !== o ? t = e = 'ZEROFILL' : (su = t, t = o)) : (su = t, t = o), t;
                }()) === o && (n = null), n !== o ? t = e = function (r, t) {
                  const e = [];
                  return r && e.push(r), t && e.push(t), e;
                }(e, n) : (su = t, t = o)) : (su = t, t = o), t;
              }
              const Aa = {
                ALTER: !0,
                ALL: !0,
                ADD: !0,
                AND: !0,
                AS: !0,
                ASC: !0,
                BETWEEN: !0,
                BY: !0,
                CALL: !0,
                CASE: !0,
                CREATE: !0,
                CONTAINS: !0,
                CURRENT_DATE: !0,
                CURRENT_TIME: !0,
                CURRENT_TIMESTAMP: !0,
                CURRENT_USER: !0,
                DELETE: !0,
                DESC: !0,
                DISTINCT: !0,
                DROP: !0,
                ELSE: !0,
                END: !0,
                EXISTS: !0,
                EXPLAIN: !0,
                FALSE: !0,
                FROM: !0,
                FULL: !0,
                GROUP: !0,
                HAVING: !0,
                IN: !0,
                INNER: !0,
                INSERT: !0,
                INTO: !0,
                IS: !0,
                JOIN: !0,
                JSON: !0,
                KEY: !0,
                LEFT: !0,
                LIKE: !0,
                LIMIT: !0,
                LOW_PRIORITY: !0,
                NOT: !0,
                NULL: !0,
                ON: !0,
                OR: !0,
                ORDER: !0,
                OUTER: !0,
                RECURSIVE: !0,
                RENAME: !0,
                READ: !0,
                RIGHT: !0,
                SELECT: !0,
                SESSION_USER: !0,
                SET: !0,
                SHOW: !0,
                STATUS: !0,
                SYSTEM_USER: !0,
                TABLE: !0,
                THEN: !0,
                TRUE: !0,
                TRUNCATE: !0,
                TYPE: !0,
                UNION: !0,
                UPDATE: !0,
                USING: !0,
                VALUES: !0,
                WITH: !0,
                WHEN: !0,
                WHERE: !0,
                WRITE: !0,
                GLOBAL: !0,
                SESSION: !0,
                LOCAL: !0,
                PERSIST: !0,
                PERSIST_ONLY: !0
              };
              function ya(r, t) {
                return {
                  type: 'unary_expr',
                  operator: r,
                  expr: t
                };
              }
              function Ta(r, t, e) {
                return {
                  type: 'binary_expr',
                  operator: r,
                  left: t,
                  right: e
                };
              }
              function ma(r) {
                const t = n(Number.MAX_SAFE_INTEGER);
                return !(n(r) < t);
              }
              function Sa(r, t) {
                const e = [r];
                for (let r = 0; r < t.length; r++)
                  e.push(t[r][3]);
                return e;
              }
              function Ia(r, t) {
                let e = r;
                for (let r = 0; r < t.length; r++)
                  e = Ta(t[r][1], e, t[r][3]);
                return e;
              }
              function Na(r) {
                const t = Ua[r];
                return t || (r || null);
              }
              function Ra(r) {
                const t = [];
                for (let e of r.keys()) {
                  const r = e.split('::');
                  if (!r) {
                    t.push(e);
                    break;
                  }
                  r && r[1] && (r[1] = Na(r[1])), t.push(r.join('::'));
                }
                return t;
              }
              let _a = [];
              const ga = new Set(), Oa = new Set(), Ua = {};
              if ((e = a()) !== o && su === r.length)
                return e;
              throw e !== o && su < r.length && Lu({ type: 'end' }), Cu(cu, iu < r.length ? r.charAt(iu) : null, iu < r.length ? du(iu, iu + 1) : du(iu, iu));
            }
          };
        },
        function (r, t, e) {
          var n = e(0);
          function u(r, t, e, n) {
            this.message = r, this.expected = t, this.found = e, this.location = n, this.name = 'SyntaxError', 'function' == typeof Error.captureStackTrace && Error.captureStackTrace(this, u);
          }
          !function (r, t) {
            function e() {
              this.constructor = r;
            }
            e.prototype = t.prototype, r.prototype = new e();
          }(u, Error), u.buildMessage = function (r, t) {
            var e = {
              literal: function (r) {
                return '"' + u(r.text) + '"';
              },
              class: function (r) {
                var t, e = '';
                for (t = 0; t < r.parts.length; t++)
                  e += r.parts[t] instanceof Array ? o(r.parts[t][0]) + '-' + o(r.parts[t][1]) : o(r.parts[t]);
                return '[' + (r.inverted ? '^' : '') + e + ']';
              },
              any: function (r) {
                return 'any character';
              },
              end: function (r) {
                return 'end of input';
              },
              other: function (r) {
                return r.description;
              }
            };
            function n(r) {
              return r.charCodeAt(0).toString(16).toUpperCase();
            }
            function u(r) {
              return r.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            function o(r) {
              return r.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            return 'Expected ' + function (r) {
              var t, n, u, o = new Array(r.length);
              for (t = 0; t < r.length; t++)
                o[t] = (u = r[t], e[u.type](u));
              if (o.sort(), o.length > 0) {
                for (t = 1, n = 1; t < o.length; t++)
                  o[t - 1] !== o[t] && (o[n] = o[t], n++);
                o.length = n;
              }
              switch (o.length) {
              case 1:
                return o[0];
              case 2:
                return o[0] + ' or ' + o[1];
              default:
                return o.slice(0, -1).join(', ') + ', or ' + o[o.length - 1];
              }
            }(r) + ' but ' + function (r) {
              return r ? '"' + u(r) + '"' : 'end of input';
            }(t) + ' found.';
          }, r.exports = {
            SyntaxError: u,
            parse: function (r, t) {
              t = void 0 !== t ? t : {};
              var e, o = {}, s = { start: yu }, a = yu, i = function (r, t) {
                  return Fa(r, t);
                }, c = Cu('AUTO_INCREMENT', !0), l = Cu('UNIQUE', !0), f = Cu('PRIMARY', !0), v = Cu('KEY', !0), b = Cu('COLUMN_FORMAT', !0), d = Cu('FIXED', !0), L = Cu('DYNAMIC', !0), C = Cu('DEFAULT', !0), p = Cu('STORAGE', !0), w = Cu('DISK', !0), E = Cu('MEMORY', !0), h = Cu('ALGORITHM', !0), A = Cu('INSTANT', !0), y = Cu('INPLACE', !0), T = Cu('COPY', !0), m = Cu('LOCK', !0), S = Cu('NONE', !0), I = Cu('SHARED', !0), N = Cu('EXCLUSIVE', !0), R = Cu('CHECK', !0), _ = Cu('NOCHECK', !0), g = Cu('NOT', !0), O = Cu('FOR', !0), U = Cu('REPLICATION', !0), x = Cu('FOREIGN KEY', !0), M = Cu('MATCH FULL', !0), D = Cu('MATCH PARTIAL', !0), k = Cu('MATCH SIMPLE', !0), $ = Cu('ON DELETE', !0), F = Cu('ON UPDATE', !0), P = Cu('RESTRICT', !0), H = Cu('CASCADE', !0), G = Cu('SET NULL', !0), j = Cu('NO ACTION', !0), Y = Cu('SET DEFAULT', !0), B = Cu('AVG_ROW_LENGTH', !0), X = Cu('KEY_BLOCK_SIZE', !0), W = Cu('MAX_ROWS', !0), V = Cu('MIN_ROWS', !0), K = Cu('STATS_SAMPLE_PAGES', !0), q = Cu('CHARACTER SET', !0), Z = Cu('CHARSET', !0), z = Cu('COLLATE', !0), J = Cu('CONNECTION', !0), Q = Cu('COMPRESSION', !0), rr = Cu('\'', !1), tr = Cu('ZLIB', !0), er = Cu('LZ4', !0), nr = Cu('ENGINE', !0), ur = Cu('READ', !0), or = Cu('LOCAL', !0), sr = Cu('LOW_PRIORITY', !0), ar = Cu('WRITE', !0), ir = Cu('(', !1), cr = Cu(')', !1), lr = Cu('BTREE', !0), fr = Cu('HASH', !0), vr = Cu('WITH', !0), br = Cu('PARSER', !0), dr = Cu('VISIBLE', !0), Lr = Cu('INVISIBLE', !0), Cr = Cu('=', !1), pr = Cu('DUPLICATE', !0), wr = function (r, t) {
                  return Pa(r, t);
                }, Er = Cu('!', !1), hr = function (r) {
                  return r[0] + ' ' + r[2];
                }, Ar = Cu('>=', !1), yr = Cu('>', !1), Tr = Cu('<=', !1), mr = Cu('<>', !1), Sr = Cu('<', !1), Ir = Cu('!=', !1), Nr = Cu('+', !1), Rr = Cu('-', !1), _r = Cu('*', !1), gr = Cu('/', !1), Or = Cu('%', !1), Ur = function (r) {
                  return r.parentheses = !0, r;
                }, xr = Cu('?', !1), Mr = function (r) {
                  return !0 === Ma[r.toUpperCase()];
                }, Dr = Cu('"', !1), kr = /^[^"]/, $r = pu(['"'], !0, !1), Fr = function (r) {
                  return r.join('');
                }, Pr = /^[^']/, Hr = pu(['\''], !0, !1), Gr = Cu('`', !1), jr = /^[^`]/, Yr = pu(['`'], !0, !1), Br = function (r, t) {
                  return r + t.join('');
                }, Xr = /^[A-Za-z_]/, Wr = pu([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  '_'
                ], !1, !1), Vr = /^[A-Za-z0-9_]/, Kr = pu([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_'
                ], !1, !1), qr = /^[A-Za-z0-9_:]/, Zr = pu([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_',
                  ':'
                ], !1, !1), zr = Cu(':', !1), Jr = function (r) {
                  return {
                    type: 'string',
                    value: r[1].join('')
                  };
                }, Qr = Cu('ON UPDATE CURRENT_TIMESTAMP', !0), rt = /^[^"\\\0-\x1F\x7F]/, tt = pu([
                  '"',
                  '\\',
                  [
                    '\0',
                    '\x1F'
                  ],
                  '\x7F'
                ], !0, !1), et = /^[^'\\]/, nt = pu([
                  '\'',
                  '\\'
                ], !0, !1), ut = Cu('\\\'', !1), ot = Cu('\\"', !1), st = Cu('\\\\', !1), at = Cu('\\/', !1), it = Cu('\\b', !1), ct = Cu('\\f', !1), lt = Cu('\\n', !1), ft = Cu('\\r', !1), vt = Cu('\\t', !1), bt = Cu('\\u', !1), dt = Cu('\\', !1), Lt = /^[\n\r]/, Ct = pu([
                  '\n',
                  '\r'
                ], !1, !1), pt = Cu('.', !1), wt = /^[0-9]/, Et = pu([[
                    '0',
                    '9'
                  ]], !1, !1), ht = /^[0-9a-fA-F]/, At = pu([
                  [
                    '0',
                    '9'
                  ],
                  [
                    'a',
                    'f'
                  ],
                  [
                    'A',
                    'F'
                  ]
                ], !1, !1), yt = /^[eE]/, Tt = pu([
                  'e',
                  'E'
                ], !1, !1), mt = /^[+\-]/, St = pu([
                  '+',
                  '-'
                ], !1, !1), It = Cu('NULL', !0), Nt = Cu('NOT NULL', !0), Rt = Cu('TRUE', !0), _t = Cu('TO', !0), gt = Cu('FALSE', !0), Ot = Cu('DROP', !0), Ut = Cu('USE', !0), xt = Cu('ALTER', !0), Mt = Cu('SELECT', !0), Dt = Cu('UPDATE', !0), kt = Cu('CREATE', !0), $t = Cu('TEMPORARY', !0), Ft = Cu('IF NOT EXISTS', !0), Pt = Cu('DELETE', !0), Ht = Cu('INSERT', !0), Gt = Cu('RECURSIVE', !1), jt = Cu('REPLACE', !0), Yt = Cu('RENAME', !0), Bt = Cu('IGNORE', !0), Xt = Cu('PARTITION', !0), Wt = Cu('INTO', !0), Vt = Cu('FROM', !0), Kt = Cu('SET', !0), qt = Cu('UNLOCK', !0), Zt = Cu('AS', !0), zt = Cu('TABLE', !0), Jt = Cu('TABLES', !0), Qt = Cu('ON', !0), re = Cu('LEFT', !0), te = Cu('RIGHT', !0), ee = Cu('FULL', !0), ne = Cu('INNER', !0), ue = Cu('JOIN', !0), oe = Cu('OUTER', !0), se = Cu('OVER', !0), ae = Cu('UNION', !0), ie = Cu('VALUES', !0), ce = Cu('USING', !0), le = Cu('WHERE', !0), fe = Cu('GROUP', !0), ve = Cu('BY', !0), be = Cu('ORDER', !0), de = Cu('HAVING', !0), Le = Cu('LIMIT', !0), Ce = Cu('OFFSET', !0), pe = Cu('ASC', !0), we = Cu('DESC', !0), Ee = Cu('ALL', !0), he = Cu('DISTINCT', !0), Ae = Cu('BETWEEN', !0), ye = Cu('IN', !0), Te = Cu('IS', !0), me = Cu('LIKE', !0), Se = Cu('EXISTS', !0), Ie = Cu('AND', !0), Ne = Cu('OR', !0), Re = Cu('COUNT', !0), _e = Cu('MAX', !0), ge = Cu('MIN', !0), Oe = Cu('SUM', !0), Ue = Cu('AVG', !0), xe = Cu('CALL', !0), Me = Cu('CASE', !0), De = Cu('WHEN', !0), ke = Cu('THEN', !0), $e = Cu('ELSE', !0), Fe = Cu('END', !0), Pe = Cu('CAST', !0), He = Cu('CHAR', !0), Ge = Cu('VARCHAR', !0), je = Cu('NUMERIC', !0), Ye = Cu('DECIMAL', !0), Be = Cu('SIGNED', !0), Xe = Cu('UNSIGNED', !0), We = Cu('INT', !0), Ve = Cu('ZEROFILL', !0), Ke = Cu('INTEGER', !0), qe = Cu('JSON', !0), Ze = Cu('SMALLINT', !0), ze = Cu('TINYINT', !0), Je = Cu('TINYTEXT', !0), Qe = Cu('TEXT', !0), rn = Cu('MEDIUMTEXT', !0), tn = Cu('LONGTEXT', !0), en = Cu('BIGINT', !0), nn = Cu('FLOAT', !0), un = Cu('DOUBLE', !0), on = Cu('DATE', !0), sn = Cu('DATETIME', !0), an = Cu('TIME', !0), cn = Cu('TIMESTAMP', !0), ln = Cu('TRUNCATE', !0), fn = Cu('USER', !0), vn = Cu('CURRENT_DATE', !0), bn = Cu('INTERVAL', !0), dn = Cu('YEAR', !0), Ln = Cu('MONTH', !0), Cn = Cu('DAY', !0), pn = Cu('HOUR', !0), wn = Cu('MINUTE', !0), En = Cu('SECOND', !0), hn = Cu('CURRENT_TIME', !0), An = Cu('CURRENT_TIMESTAMP', !0), yn = Cu('CURRENT_USER', !0), Tn = Cu('SESSION_USER', !0), mn = Cu('SYSTEM_USER', !0), Sn = Cu('GLOBAL', !0), In = Cu('SESSION', !0), Nn = Cu('PERSIST', !0), Rn = Cu('PERSIST_ONLY', !0), _n = Cu('@', !1), gn = Cu('@@', !1), On = Cu('$', !1), Un = Cu('return', !0), xn = Cu(':=', !1), Mn = Cu('DUAL', !0), Dn = Cu('ADD', !0), kn = Cu('COLUMN', !0), $n = Cu('INDEX', !0), Fn = Cu('FULLTEXT', !0), Pn = Cu('SPATIAL', !0), Hn = Cu('COMMENT', !0), Gn = Cu('CONSTRAINT', !0), jn = Cu('REFERENCES', !0), Yn = Cu('SQL_CALC_FOUND_ROWS', !0), Bn = Cu('SQL_CACHE', !0), Xn = Cu('SQL_NO_CACHE', !0), Wn = Cu('SQL_SMALL_RESULT', !0), Vn = Cu('SQL_BIG_RESULT', !0), Kn = Cu('SQL_BUFFER_RESULT', !0), qn = Cu(',', !1), Zn = Cu('[', !1), zn = Cu(']', !1), Jn = Cu(';', !1), Qn = Cu('->', !1), ru = Cu('->>', !1), tu = Cu('||', !1), eu = Cu('&&', !1), nu = Cu('/*', !1), uu = Cu('*/', !1), ou = Cu('--', !1), su = Cu('#', !1), au = { type: 'any' }, iu = /^[ \t\n\r]/, cu = pu([
                  ' ',
                  '\t',
                  '\n',
                  '\r'
                ], !1, !1), lu = function (r) {
                  return { dataType: r };
                }, fu = 0, vu = [{
                    line: 1,
                    column: 1
                  }], bu = 0, du = [], Lu = 0;
              if ('startRule' in t) {
                if (!(t.startRule in s))
                  throw new Error('Can\'t start parsing from rule "' + t.startRule + '".');
                a = s[t.startRule];
              }
              function Cu(r, t) {
                return {
                  type: 'literal',
                  text: r,
                  ignoreCase: t
                };
              }
              function pu(r, t, e) {
                return {
                  type: 'class',
                  parts: r,
                  inverted: t,
                  ignoreCase: e
                };
              }
              function wu(t) {
                var e, n = vu[t];
                if (n)
                  return n;
                for (e = t - 1; !vu[e];)
                  e--;
                for (n = {
                    line: (n = vu[e]).line,
                    column: n.column
                  }; e < t;)
                  10 === r.charCodeAt(e) ? (n.line++, n.column = 1) : n.column++, e++;
                return vu[t] = n, n;
              }
              function Eu(r, t) {
                var e = wu(r), n = wu(t);
                return {
                  start: {
                    offset: r,
                    line: e.line,
                    column: e.column
                  },
                  end: {
                    offset: t,
                    line: n.line,
                    column: n.column
                  }
                };
              }
              function hu(r) {
                fu < bu || (fu > bu && (bu = fu, du = []), du.push(r));
              }
              function Au(r, t, e) {
                return new u(u.buildMessage(r, t), r, t, e);
              }
              function yu() {
                var r, t;
                return r = fu, da() !== o ? ((t = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = fu, (t = mu()) !== o) {
                    if (e = [], n = fu, (u = da()) !== o && (s = va()) !== o && (a = da()) !== o && (i = mu()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (fu = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = fu, (u = da()) !== o && (s = va()) !== o && (a = da()) !== o && (i = mu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fu = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = function (r, t) {
                      const e = [r && r.ast || r];
                      for (let r = 0; r < t.length; r++)
                        t[r][3] && 0 !== t[r][3].length && e.push(t[r][3] && t[r][3].ast || t[r][3]);
                      return {
                        tableList: Array.from(Ya),
                        columnList: Ga(Ba),
                        ast: e
                      };
                    }(t, e), r = t) : (fu = r, r = o);
                  } else
                    fu = r, r = o;
                  return r;
                }()) === o && (t = Tu()) === o && (t = mu()), t !== o ? r = t : (fu = r, r = o)) : (fu = r, r = o), r;
              }
              function Tu() {
                var t;
                return (t = function () {
                  var r, t, e, n;
                  r = fu, (t = us()) !== o && da() !== o && (e = Ls()) !== o && da() !== o && (n = Ju()) !== o ? (u = t, s = e, (a = n) && a.forEach(r => Ya.add(`${ u }::${ r.db }::${ r.table }`)), t = {
                    tableList: Array.from(Ya),
                    columnList: Ga(Ba),
                    ast: {
                      type: u.toLowerCase(),
                      keyword: s.toLowerCase(),
                      name: a
                    }
                  }, r = t) : (fu = r, r = o);
                  var u, s, a;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, c, l, f, v;
                  t = fu, (e = ss()) !== o && da() !== o ? ((n = as()) === o && (n = null), n !== o && da() !== o && Ls() !== o && da() !== o ? ((u = is()) === o && (u = null), u !== o && da() !== o && (s = Ju()) !== o && da() !== o && (a = function () {
                    var r, t, e, n, u, s, a, c, l;
                    if (r = fu, (t = la()) !== o)
                      if (da() !== o)
                        if ((e = Iu()) !== o) {
                          for (n = [], u = fu, (s = da()) !== o && (a = ia()) !== o && (c = da()) !== o && (l = Iu()) !== o ? u = s = [
                              s,
                              a,
                              c,
                              l
                            ] : (fu = u, u = o); u !== o;)
                            n.push(u), u = fu, (s = da()) !== o && (a = ia()) !== o && (c = da()) !== o && (l = Iu()) !== o ? u = s = [
                              s,
                              a,
                              c,
                              l
                            ] : (fu = u, u = o);
                          n !== o && (u = da()) !== o && (s = fa()) !== o ? (t = i(e, n), r = t) : (fu = r, r = o);
                        } else
                          fu = r, r = o;
                      else
                        fu = r, r = o;
                    else
                      fu = r, r = o;
                    return r;
                  }()) !== o && da() !== o ? ((c = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = fu, (t = ku()) !== o) {
                      for (e = [], n = fu, (u = da()) !== o ? ((s = ia()) === o && (s = null), s !== o && (a = da()) !== o && (i = ku()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fu = n, n = o)) : (fu = n, n = o); n !== o;)
                        e.push(n), n = fu, (u = da()) !== o ? ((s = ia()) === o && (s = null), s !== o && (a = da()) !== o && (i = ku()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fu = n, n = o)) : (fu = n, n = o);
                      e !== o ? (t = Fa(t, e), r = t) : (fu = r, r = o);
                    } else
                      fu = r, r = o;
                    return r;
                  }()) === o && (c = null), c !== o && da() !== o ? ((l = function () {
                    var t, e, n, u;
                    t = fu, 'ignore' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(Bt));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) === o && (l = cs()), l === o && (l = null), l !== o && da() !== o ? ((f = ds()) === o && (f = null), f !== o && da() !== o ? ((v = Su()) === o && (v = null), v !== o ? (b = e, d = n, L = u, p = a, w = c, E = l, h = f, A = v, (C = s) && C.forEach(r => Ya.add(`create::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(Ya),
                    columnList: Ga(Ba),
                    ast: {
                      type: b[0].toLowerCase(),
                      keyword: 'table',
                      temporary: d && d[0].toLowerCase(),
                      if_not_exists: L && L[0].toLowerCase(),
                      table: C,
                      ignore_replace: E && E[0].toLowerCase(),
                      as: h && h[0].toLowerCase(),
                      query_expr: A && A.ast,
                      create_definitions: p,
                      table_options: w
                    }
                  }, t = e) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o);
                  var b, d, L, C, p, w, E, h, A;
                  t === o && (t = fu, (e = ss()) !== o && da() !== o ? ((n = as()) === o && (n = null), n !== o && da() !== o && Ls() !== o && da() !== o ? ((u = is()) === o && (u = null), u !== o && da() !== o && (s = Ju()) !== o && da() !== o && (a = function r() {
                    var t, e;
                    (t = function () {
                      var r, t;
                      r = fu, _s() !== o && da() !== o && (t = Ju()) !== o ? r = {
                        type: 'like',
                        table: t
                      } : (fu = r, r = o);
                      return r;
                    }()) === o && (t = fu, la() !== o && da() !== o && (e = r()) !== o && da() !== o && fa() !== o ? ((n = e).parentheses = !0, t = n) : (fu = t, t = o));
                    var n;
                    return t;
                  }()) !== o ? (e = function (r, t, e, n, u) {
                    return n && n.forEach(r => Ya.add(`create::${ r.db }::${ r.table }`)), {
                      tableList: Array.from(Ya),
                      columnList: Ga(Ba),
                      ast: {
                        type: r[0].toLowerCase(),
                        keyword: 'table',
                        temporary: t && t[0].toLowerCase(),
                        if_not_exists: e && e[0].toLowerCase(),
                        table: n,
                        like: u
                      }
                    };
                  }(e, n, u, s, a), t = e) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o));
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = fu, (e = function () {
                    var t, e, n, u;
                    t = fu, 'truncate' === r.substr(fu, 8).toLowerCase() ? (e = r.substr(fu, 8), fu += 8) : (e = o, 0 === Lu && hu(ln));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'TRUNCATE' : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) !== o && da() !== o ? ((n = Ls()) === o && (n = null), n !== o && da() !== o && (u = Ju()) !== o ? (s = e, a = n, (i = u) && i.forEach(r => Ya.add(`${ s }::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(Ya),
                    columnList: Ga(Ba),
                    ast: {
                      type: s.toLowerCase(),
                      keyword: a && a.toLowerCase() || 'table',
                      name: i
                    }
                  }, t = e) : (fu = t, t = o)) : (fu = t, t = o);
                  var s, a, i;
                  return t;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = fu, (t = ls()) !== o && da() !== o && Ls() !== o && da() !== o && (e = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = fu, (t = Ku()) !== o) {
                      for (e = [], n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = Ku()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (fu = n, n = o); n !== o;)
                        e.push(n), n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = Ku()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (fu = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (fu = r, r = o);
                    } else
                      fu = r, r = o;
                    return r;
                  }()) !== o ? ((n = e).forEach(r => r.forEach(r => r.table && Ya.add(`rename::${ r.db }::${ r.table }`))), t = {
                    tableList: Array.from(Ya),
                    columnList: Ga(Ba),
                    ast: {
                      type: 'rename',
                      table: n
                    }
                  }, r = t) : (fu = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = fu, (e = function () {
                    var t, e, n, u;
                    t = fu, 'call' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(xe));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'CALL' : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) !== o && da() !== o && (n = Ra()) !== o ? (u = n, e = {
                    tableList: Array.from(Ya),
                    columnList: Ga(Ba),
                    ast: {
                      type: 'call',
                      expr: u
                    }
                  }, t = e) : (fu = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = fu, (e = function () {
                    var t, e, n, u;
                    t = fu, 'use' === r.substr(fu, 3).toLowerCase() ? (e = r.substr(fu, 3), fu += 3) : (e = o, 0 === Lu && hu(Ut));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) !== o && da() !== o && (n = xo()) !== o ? (u = n, Ya.add(`use::${ u }::null`), e = {
                    tableList: Array.from(Ya),
                    columnList: Ga(Ba),
                    ast: {
                      type: 'use',
                      db: u
                    }
                  }, t = e) : (fu = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = fu, (e = function () {
                    var t, e, n, u;
                    t = fu, 'alter' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(xt));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) !== o && da() !== o && Ls() !== o && da() !== o && (n = Ju()) !== o && da() !== o && (u = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = fu, (t = _u()) !== o) {
                      for (e = [], n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = _u()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (fu = n, n = o); n !== o;)
                        e.push(n), n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = _u()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (fu = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (fu = r, r = o);
                    } else
                      fu = r, r = o;
                    return r;
                  }()) !== o ? (a = u, (s = n) && s.length > 0 && s.forEach(r => Ya.add(`alter::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(Ya),
                    columnList: Ga(Ba),
                    ast: {
                      type: 'alter',
                      table: s,
                      expr: a
                    }
                  }, t = e) : (fu = t, t = o);
                  var s, a;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = fu, (e = bs()) !== o && da() !== o ? ((n = function () {
                    var t, e, n, u;
                    t = fu, 'global' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(Sn));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'GLOBAL' : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = fu, 'session' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(In));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'SESSION' : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = fu, 'local' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(or));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'LOCAL' : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = fu, 'persist' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(Nn));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'PERSIST' : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = fu, 'persist_only' === r.substr(fu, 12).toLowerCase() ? (e = r.substr(fu, 12), fu += 12) : (e = o, 0 === Lu && hu(Rn));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'PERSIST_ONLY' : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()), n === o && (n = null), n !== o && da() !== o && (u = ya()) !== o ? (s = n, (a = u).keyword = s, e = {
                    tableList: Array.from(Ya),
                    columnList: Ga(Ba),
                    ast: {
                      type: 'set',
                      expr: a
                    }
                  }, t = e) : (fu = t, t = o)) : (fu = t, t = o);
                  var s, a;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = fu, (e = function () {
                    var t, e, n, u;
                    t = fu, 'lock' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(m));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) !== o && da() !== o && Cs() !== o && da() !== o && (n = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = fu, (t = $u()) !== o) {
                      for (e = [], n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (i = $u()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fu = n, n = o); n !== o;)
                        e.push(n), n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (i = $u()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fu = n, n = o);
                      e !== o ? (t = Fa(t, e), r = t) : (fu = r, r = o);
                    } else
                      fu = r, r = o;
                    return r;
                  }()) !== o ? (u = n, e = {
                    tableList: Array.from(Ya),
                    columnList: Ga(Ba),
                    ast: {
                      type: 'lock',
                      keyword: 'tables',
                      tables: u
                    }
                  }, t = e) : (fu = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e;
                  t = fu, (e = function () {
                    var t, e, n, u;
                    t = fu, 'unlock' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(qt));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) !== o && da() !== o && Cs() !== o ? (e = {
                    tableList: Array.from(Ya),
                    columnList: Ga(Ba),
                    ast: {
                      type: 'unlock',
                      keyword: 'tables'
                    }
                  }, t = e) : (fu = t, t = o);
                  return t;
                }()), t;
              }
              function mu() {
                var t;
                return (t = Su()) === o && (t = function () {
                  var r, t, e, n, u, s, a;
                  r = fu, (t = os()) !== o && da() !== o && (e = Ju()) !== o && da() !== o && bs() !== o && da() !== o && (n = co()) !== o && da() !== o ? ((u = uo()) === o && (u = null), u !== o && da() !== o ? ((s = oo()) === o && (s = null), s !== o && da() !== o ? ((a = io()) === o && (a = null), a !== o ? (c = n, l = u, f = s, v = a, (i = e) && i.forEach(r => {
                    const {
                      db: t,
                      as: e,
                      table: n
                    } = r;
                    Ya.add(`update::${ t }::${ n }`);
                  }), c && c.forEach(r => Ba.add(`update::${ r.table }::${ r.column }`)), t = {
                    tableList: Array.from(Ya),
                    columnList: Ga(Ba),
                    ast: {
                      type: 'update',
                      table: i,
                      set: c,
                      where: l,
                      orderby: f,
                      limit: v
                    }
                  }, r = t) : (fu = r, r = o)) : (fu = r, r = o)) : (fu = r, r = o)) : (fu = r, r = o);
                  var i, c, l, f, v;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n, u, s, a, c;
                  r = fu, (t = Lo()) !== o && da() !== o ? ((e = vs()) === o && (e = null), e !== o && da() !== o && (n = eo()) !== o && da() !== o ? ((u = vo()) === o && (u = null), u !== o && da() !== o && la() !== o && da() !== o && (s = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = fu, (t = Do()) !== o) {
                      for (e = [], n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = Do()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (fu = n, n = o); n !== o;)
                        e.push(n), n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = Do()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (fu = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (fu = r, r = o);
                    } else
                      fu = r, r = o;
                    return r;
                  }()) !== o && da() !== o && fa() !== o && da() !== o && (a = fo()) !== o && da() !== o ? ((c = bo()) === o && (c = null), c !== o ? (t = function (r, t, e, n, u, o) {
                    if (t && (Ya.add(`insert::${ t.db }::${ t.table }`), t.as = null), n) {
                      let r = t && t.table || null;
                      n.forEach(t => Ba.add(`insert::${ r }::${ t }`));
                    }
                    return {
                      tableList: Array.from(Ya),
                      columnList: Ga(Ba),
                      ast: {
                        type: r,
                        table: [t],
                        columns: n,
                        values: u,
                        partition: e,
                        on_duplicate_update: o
                      }
                    };
                  }(t, n, u, s, a, c), r = t) : (fu = r, r = o)) : (fu = r, r = o)) : (fu = r, r = o)) : (fu = r, r = o);
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n, u, s;
                  r = fu, (t = Lo()) !== o && da() !== o && vs() !== o && da() !== o && (e = eo()) !== o && da() !== o ? ((n = vo()) === o && (n = null), n !== o && da() !== o && (u = fo()) !== o && da() !== o ? ((s = bo()) === o && (s = null), s !== o ? (a = t, c = n, l = u, f = s, (i = e) && (Ya.add(`insert::${ i.db }::${ i.table }`), Ba.add(`insert::${ i.table }::(.*)`), i.as = null), t = {
                    tableList: Array.from(Ya),
                    columnList: Ga(Ba),
                    ast: {
                      type: a,
                      table: [i],
                      columns: null,
                      values: l,
                      partition: c,
                      on_duplicate_update: f
                    }
                  }, r = t) : (fu = r, r = o)) : (fu = r, r = o)) : (fu = r, r = o);
                  var a, i, c, l, f;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n, u, s;
                  r = fu, (t = Lo()) !== o && da() !== o && vs() !== o && da() !== o && (e = eo()) !== o && da() !== o ? ((n = vo()) === o && (n = null), n !== o && da() !== o && bs() !== o && da() !== o && (u = co()) !== o && da() !== o ? ((s = bo()) === o && (s = null), s !== o ? (a = t, c = n, l = u, f = s, (i = e) && (Ya.add(`insert::${ i.db }::${ i.table }`), Ba.add(`insert::${ i.table }::(.*)`), i.as = null), t = {
                    tableList: Array.from(Ya),
                    columnList: Ga(Ba),
                    ast: {
                      type: a,
                      table: [i],
                      columns: null,
                      partition: c,
                      set: l,
                      on_duplicate_update: f
                    }
                  }, r = t) : (fu = r, r = o)) : (fu = r, r = o)) : (fu = r, r = o);
                  var a, i, c, l, f;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, i;
                  t = fu, (e = function () {
                    var t, e, n, u;
                    t = fu, 'delete' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(Pt));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) !== o && da() !== o ? ((n = Ju()) === o && (n = null), n !== o && da() !== o && (u = Vu()) !== o && da() !== o ? ((s = uo()) === o && (s = null), s !== o && da() !== o ? ((a = oo()) === o && (a = null), a !== o && da() !== o ? ((i = io()) === o && (i = null), i !== o ? (e = function (r, t, e, n, u) {
                    if (t && t.forEach(r => {
                        r.table && Ya.add(`delete::${ r.db }::${ r.table }`), Ba.add(`delete::${ r.table }::(.*)`);
                      }), null === r && 1 === t.length) {
                      const e = t[0];
                      r = [{
                          db: e.db,
                          table: e.table,
                          as: e.as,
                          addition: !0
                        }];
                    }
                    return {
                      tableList: Array.from(Ya),
                      columnList: Ga(Ba),
                      ast: {
                        type: 'delete',
                        table: r,
                        from: t,
                        where: e,
                        orderby: n,
                        limit: u
                      }
                    };
                  }(n, u, s, a, i), t = e) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) === o && (t = Tu()) === o && (t = function () {
                  var r, t;
                  r = [], t = Aa();
                  for (; t !== o;)
                    r.push(t), t = Aa();
                  return r;
                }()), t;
              }
              function Su() {
                var r, t, e, n, u, s, a, i, c, l;
                if (r = fu, (t = Fu()) !== o) {
                  for (e = [], n = fu, (u = da()) !== o && (s = hs()) !== o && (a = da()) !== o ? ((i = ms()) === o && (i = null), i !== o && (c = da()) !== o && (l = Fu()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c,
                      l
                    ] : (fu = n, n = o)) : (fu = n, n = o); n !== o;)
                    e.push(n), n = fu, (u = da()) !== o && (s = hs()) !== o && (a = da()) !== o ? ((i = ms()) === o && (i = null), i !== o && (c = da()) !== o && (l = Fu()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c,
                      l
                    ] : (fu = n, n = o)) : (fu = n, n = o);
                  e !== o && (n = da()) !== o ? ((u = oo()) === o && (u = null), u !== o && (s = da()) !== o ? ((a = io()) === o && (a = null), a !== o ? r = t = function (r, t, e, n) {
                    let u = r;
                    for (let r = 0; r < t.length; r++)
                      u._next = t[r][5], u.union = t[r][3] ? 'union all' : 'union', u = u._next;
                    return e && (r._orderby = e), n && (r._limit = n), {
                      tableList: Array.from(Ya),
                      columnList: Ga(Ba),
                      ast: r
                    };
                  }(t, e, u, a) : (fu = r, r = o)) : (fu = r, r = o)) : (fu = r, r = o);
                } else
                  fu = r, r = o;
                return r;
              }
              function Iu() {
                var t;
                return (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u, s, a, i, c;
                    t = fu, (e = Uu()) === o && (e = null);
                    e !== o && da() !== o ? (n = fu, 'primary' === r.substr(fu, 7).toLowerCase() ? (u = r.substr(fu, 7), fu += 7) : (u = o, 0 === Lu && hu(f)), u !== o && (s = da()) !== o ? ('key' === r.substr(fu, 3).toLowerCase() ? (a = r.substr(fu, 3), fu += 3) : (a = o, 0 === Lu && hu(v)), a !== o ? n = u = [
                      u,
                      s,
                      a
                    ] : (fu = n, n = o)) : (fu = n, n = o), n !== o && (u = da()) !== o ? ((s = qu()) === o && (s = null), s !== o && (a = da()) !== o && (i = Gu()) !== o && da() !== o ? ((c = Zu()) === o && (c = null), c !== o ? (b = n, d = s, L = i, C = c, e = {
                      constraint: (l = e) && l.constraint,
                      definition: L,
                      constraint_type: `${ b[0].toLowerCase() } ${ b[2].toLowerCase() }`,
                      keyword: l && l.keyword,
                      index_type: d,
                      resource: 'constraint',
                      index_options: C
                    }, t = e) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o);
                    var l, b, d, L, C;
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a, i, c;
                    t = fu, (e = Uu()) === o && (e = null);
                    e !== o && da() !== o && (n = function () {
                      var t, e, n, u;
                      t = fu, 'unique' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(l));
                      e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'UNIQUE' : (fu = t, t = o)) : (fu = t, t = o);
                      return t;
                    }()) !== o && da() !== o ? ((u = na()) === o && (u = ua()), u === o && (u = null), u !== o && da() !== o ? ((s = Do()) === o && (s = null), s !== o && da() !== o ? ((a = qu()) === o && (a = null), a !== o && da() !== o && (i = Gu()) !== o && da() !== o ? ((c = Zu()) === o && (c = null), c !== o ? (v = n, b = u, d = s, L = a, C = i, p = c, e = {
                      constraint: (f = e) && f.constraint,
                      definition: C,
                      constraint_type: b && `${ v.toLowerCase() } ${ b.toLowerCase() }` || v.toLowerCase(),
                      keyword: f && f.keyword,
                      index_type: L,
                      index: d,
                      resource: 'constraint',
                      index_options: p
                    }, t = e) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o);
                    var f, v, b, d, L, C, p;
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a;
                    t = fu, (e = Uu()) === o && (e = null);
                    e !== o && da() !== o ? ('foreign key' === r.substr(fu, 11).toLowerCase() ? (n = r.substr(fu, 11), fu += 11) : (n = o, 0 === Lu && hu(x)), n !== o && da() !== o ? ((u = Do()) === o && (u = null), u !== o && da() !== o && (s = Gu()) !== o && da() !== o ? ((a = Mu()) === o && (a = null), a !== o ? (c = n, l = u, f = s, v = a, e = {
                      constraint: (i = e) && i.constraint,
                      definition: f,
                      constraint_type: c,
                      keyword: i && i.keyword,
                      index: l,
                      resource: 'constraint',
                      reference_definition: v
                    }, t = e) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o);
                    var i, c, l, f, v;
                    return t;
                  }()) === o && (t = xu());
                  return t;
                }()) === o && (t = Nu()) === o && (t = gu()) === o && (t = Ou()), t;
              }
              function Nu() {
                var t, e, n, u, s, a, i, h, A, y, T, m, S, I, N, R, _, g, O, U, x, M, D, k, $;
                return t = fu, (e = Uo()) !== o && da() !== o && (n = Ua()) !== o && da() !== o ? ((u = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    t = fu, 'not null' === r.substr(fu, 8).toLowerCase() ? (e = r.substr(fu, 8), fu += 8) : (e = o, 0 === Lu && hu(Nt));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'not null',
                    value: 'not null'
                  });
                  return e;
                }()) === o && (u = Bo()), u === o && (u = null), u !== o && da() !== o ? ((s = function () {
                  var r, t;
                  r = fu, es() !== o && da() !== o ? ((t = Yo()) === o && (t = Ao()), t !== o ? r = {
                    type: 'default',
                    value: t
                  } : (fu = r, r = o)) : (fu = r, r = o);
                  return r;
                }()) === o && (s = null), s !== o && da() !== o ? ('auto_increment' === r.substr(fu, 14).toLowerCase() ? (a = r.substr(fu, 14), fu += 14) : (a = o, 0 === Lu && hu(c)), a === o && (a = null), a !== o && da() !== o ? (i = fu, 'unique' === r.substr(fu, 6).toLowerCase() ? (h = r.substr(fu, 6), fu += 6) : (h = o, 0 === Lu && hu(l)), h === o && ('primary' === r.substr(fu, 7).toLowerCase() ? (h = r.substr(fu, 7), fu += 7) : (h = o, 0 === Lu && hu(f))), h === o && (h = null), h !== o && (A = da()) !== o ? ('key' === r.substr(fu, 3).toLowerCase() ? (y = r.substr(fu, 3), fu += 3) : (y = o, 0 === Lu && hu(v)), y !== o ? i = h = [
                  h,
                  A,
                  y
                ] : (fu = i, i = o)) : (fu = i, i = o), i === o && (i = null), i !== o && (h = da()) !== o ? ((A = pa()) === o && (A = null), A !== o && (y = da()) !== o ? ((T = Ru()) === o && (T = null), T !== o && da() !== o ? ((m = function () {
                  var t, e, n;
                  t = fu, 'column_format' === r.substr(fu, 13).toLowerCase() ? (e = r.substr(fu, 13), fu += 13) : (e = o, 0 === Lu && hu(b));
                  e !== o && da() !== o ? ('fixed' === r.substr(fu, 5).toLowerCase() ? (n = r.substr(fu, 5), fu += 5) : (n = o, 0 === Lu && hu(d)), n === o && ('dynamic' === r.substr(fu, 7).toLowerCase() ? (n = r.substr(fu, 7), fu += 7) : (n = o, 0 === Lu && hu(L)), n === o && ('default' === r.substr(fu, 7).toLowerCase() ? (n = r.substr(fu, 7), fu += 7) : (n = o, 0 === Lu && hu(C)))), n !== o ? (e = function (r, t) {
                    return {
                      type: 'column_format',
                      value: t.toLowerCase()
                    };
                  }(0, n), t = e) : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) === o && (m = null), m !== o && da() !== o ? ((S = function () {
                  var t, e, n;
                  t = fu, 'storage' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(p));
                  e !== o && da() !== o ? ('disk' === r.substr(fu, 4).toLowerCase() ? (n = r.substr(fu, 4), fu += 4) : (n = o, 0 === Lu && hu(w)), n === o && ('memory' === r.substr(fu, 6).toLowerCase() ? (n = r.substr(fu, 6), fu += 6) : (n = o, 0 === Lu && hu(E))), n !== o ? (e = {
                    type: 'storage',
                    value: n.toLowerCase()
                  }, t = e) : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) === o && (S = null), S !== o && da() !== o ? ((I = Mu()) === o && (I = null), I !== o ? (N = e, R = n, _ = u, g = s, O = a, U = i, x = A, M = T, D = m, k = S, $ = I, Ba.add(`create::${ N.table }::${ N.column }`), _ && !_.value && (_.value = 'null'), t = e = {
                  column: N,
                  definition: R,
                  nullable: _,
                  default_val: g,
                  auto_increment: O && O.toLowerCase(),
                  unique_or_primary: U && `${ U[0].toLowerCase() } ${ U[2].toLowerCase() }`,
                  comment: x,
                  collate: M,
                  column_format: D,
                  storage: k,
                  reference_definition: $,
                  resource: 'column'
                }) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Ru() {
                var t, e;
                return t = fu, function () {
                  var t, e, n, u;
                  t = fu, 'collate' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(z));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'COLLATE' : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }() !== o && da() !== o && (e = $o()) !== o ? t = {
                  type: 'collate',
                  value: e
                } : (fu = t, t = o), t;
              }
              function _u() {
                var t;
                return (t = function () {
                  var r, t, e;
                  r = fu, (t = ta()) !== o && da() !== o && (e = xu()) !== o ? (n = e, t = {
                    action: 'add',
                    ...n,
                    type: 'alter'
                  }, r = t) : (fu = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = fu, (e = us()) !== o && da() !== o ? ('check' === r.substr(fu, 5).toLowerCase() ? (n = r.substr(fu, 5), fu += 5) : (n = o, 0 === Lu && hu(R)), n !== o && da() !== o && (u = $o()) !== o ? (e = {
                    action: 'drop',
                    constraint: u,
                    keyword: n.toLowerCase(),
                    resource: 'constraint',
                    type: 'alter'
                  }, t = e) : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = fu, ys() !== o && da() !== o ? ('check' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(R)), e !== o && da() !== o ? ('check' === r.substr(fu, 5).toLowerCase() ? (n = r.substr(fu, 5), fu += 5) : (n = o, 0 === Lu && hu(R)), n !== o && da() !== o && sa() !== o && da() !== o && (u = $o()) !== o ? t = {
                    action: 'with',
                    constraint: u,
                    keyword: 'check check',
                    resource: 'constraint',
                    type: 'alter'
                  } : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = fu, 'nocheck' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(_));
                  e !== o && da() !== o && sa() !== o && da() !== o && (n = $o()) !== o ? t = e = {
                    action: 'nocheck',
                    constraint: n,
                    resource: 'constraint',
                    type: 'alter'
                  } : (fu = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var r, t, e, n;
                  r = fu, (t = ta()) !== o && da() !== o ? ((e = ea()) === o && (e = null), e !== o && da() !== o && (n = Nu()) !== o ? (u = e, s = n, t = {
                    action: 'add',
                    ...s,
                    keyword: u,
                    resource: 'column',
                    type: 'alter'
                  }, r = t) : (fu = r, r = o)) : (fu = r, r = o);
                  var u, s;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = fu, us() !== o && da() !== o ? ((t = ea()) === o && (t = null), t !== o && da() !== o && (e = Uo()) !== o ? r = {
                    action: 'drop',
                    column: e,
                    keyword: t,
                    resource: 'column',
                    type: 'alter'
                  } : (fu = r, r = o)) : (fu = r, r = o);
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = fu, (t = ta()) !== o && da() !== o && (e = gu()) !== o ? (n = e, t = {
                    action: 'add',
                    type: 'alter',
                    ...n
                  }, r = t) : (fu = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = fu, (t = ta()) !== o && da() !== o && (e = Ou()) !== o ? (n = e, t = {
                    action: 'add',
                    type: 'alter',
                    ...n
                  }, r = t) : (fu = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n;
                  r = fu, (t = ls()) !== o && da() !== o ? ((e = ns()) === o && (e = ds()), e === o && (e = null), e !== o && da() !== o && (n = xo()) !== o ? (s = n, t = {
                    action: 'rename',
                    type: 'alter',
                    resource: 'table',
                    keyword: (u = e) && u[0].toLowerCase(),
                    table: s
                  }, r = t) : (fu = r, r = o)) : (fu = r, r = o);
                  var u, s;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = fu, 'algorithm' === r.substr(fu, 9).toLowerCase() ? (e = r.substr(fu, 9), fu += 9) : (e = o, 0 === Lu && hu(h));
                  e !== o && da() !== o && ra() !== o && da() !== o ? ('default' === r.substr(fu, 7).toLowerCase() ? (n = r.substr(fu, 7), fu += 7) : (n = o, 0 === Lu && hu(C)), n === o && ('instant' === r.substr(fu, 7).toLowerCase() ? (n = r.substr(fu, 7), fu += 7) : (n = o, 0 === Lu && hu(A)), n === o && ('inplace' === r.substr(fu, 7).toLowerCase() ? (n = r.substr(fu, 7), fu += 7) : (n = o, 0 === Lu && hu(y)), n === o && ('copy' === r.substr(fu, 4).toLowerCase() ? (n = r.substr(fu, 4), fu += 4) : (n = o, 0 === Lu && hu(T))))), n !== o ? t = e = {
                    type: 'alter',
                    keyword: 'algorithm',
                    resource: 'algorithm',
                    algorithm: n
                  } : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = fu, 'lock' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(m));
                  e !== o && da() !== o && ra() !== o && da() !== o ? ('default' === r.substr(fu, 7).toLowerCase() ? (n = r.substr(fu, 7), fu += 7) : (n = o, 0 === Lu && hu(C)), n === o && ('none' === r.substr(fu, 4).toLowerCase() ? (n = r.substr(fu, 4), fu += 4) : (n = o, 0 === Lu && hu(S)), n === o && ('shared' === r.substr(fu, 6).toLowerCase() ? (n = r.substr(fu, 6), fu += 6) : (n = o, 0 === Lu && hu(I)), n === o && ('exclusive' === r.substr(fu, 9).toLowerCase() ? (n = r.substr(fu, 9), fu += 9) : (n = o, 0 === Lu && hu(N))))), n !== o ? t = e = {
                    type: 'alter',
                    keyword: 'lock',
                    resource: 'lock',
                    lock: n
                  } : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()), t;
              }
              function gu() {
                var r, t, e, n, u, s, a, i;
                return r = fu, (t = na()) === o && (t = ua()), t !== o && da() !== o ? ((e = Do()) === o && (e = null), e !== o && da() !== o ? ((n = qu()) === o && (n = null), n !== o && da() !== o && (u = Gu()) !== o && da() !== o ? ((s = Zu()) === o && (s = null), s !== o && da() !== o ? (a = n, i = s, r = t = {
                  index: e,
                  definition: u,
                  keyword: t.toLowerCase(),
                  index_type: a,
                  resource: 'index',
                  index_options: i
                }) : (fu = r, r = o)) : (fu = r, r = o)) : (fu = r, r = o)) : (fu = r, r = o), r;
              }
              function Ou() {
                var t, e, n, u, s, a, i, c, l;
                return t = fu, (e = function () {
                  var t, e, n, u;
                  t = fu, 'fulltext' === r.substr(fu, 8).toLowerCase() ? (e = r.substr(fu, 8), fu += 8) : (e = o, 0 === Lu && hu(Fn));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'FULLTEXT' : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) === o && (e = function () {
                  var t, e, n, u;
                  t = fu, 'spatial' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(Pn));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'SPATIAL' : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()), e !== o && da() !== o ? ((n = na()) === o && (n = ua()), n === o && (n = null), n !== o && da() !== o ? ((u = Do()) === o && (u = null), u !== o && da() !== o && (s = Gu()) !== o && da() !== o ? ((a = Zu()) === o && (a = null), a !== o && da() !== o ? (i = e, l = a, t = e = {
                  index: u,
                  definition: s,
                  keyword: (c = n) && `${ i.toLowerCase() } ${ c.toLowerCase() }` || i.toLowerCase(),
                  index_options: l,
                  resource: 'index'
                }) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Uu() {
                var r, t, e, n;
                return r = fu, (t = sa()) !== o && da() !== o ? ((e = xo()) === o && (e = null), e !== o ? (n = e, r = t = {
                  keyword: t.toLowerCase(),
                  constraint: n
                }) : (fu = r, r = o)) : (fu = r, r = o), r;
              }
              function xu() {
                var t, e, n, u, s, a, i, c, l, f, v, b, d;
                return t = fu, (e = Uu()) === o && (e = null), e !== o && da() !== o ? ('check' === r.substr(fu, 5).toLowerCase() ? (n = r.substr(fu, 5), fu += 5) : (n = o, 0 === Lu && hu(R)), n !== o && da() !== o ? (u = fu, 'not' === r.substr(fu, 3).toLowerCase() ? (s = r.substr(fu, 3), fu += 3) : (s = o, 0 === Lu && hu(g)), s !== o && (a = da()) !== o ? ('for' === r.substr(fu, 3).toLowerCase() ? (i = r.substr(fu, 3), fu += 3) : (i = o, 0 === Lu && hu(O)), i !== o && (c = da()) !== o ? ('replication' === r.substr(fu, 11).toLowerCase() ? (l = r.substr(fu, 11), fu += 11) : (l = o, 0 === Lu && hu(U)), l !== o && (f = da()) !== o ? u = s = [
                  s,
                  a,
                  i,
                  c,
                  l,
                  f
                ] : (fu = u, u = o)) : (fu = u, u = o)) : (fu = u, u = o), u === o && (u = null), u !== o && (s = la()) !== o && (a = da()) !== o && (i = Ao()) !== o && (c = da()) !== o && (l = fa()) !== o ? (v = e, b = u, d = i, t = e = {
                  constraint_type: n.toLowerCase(),
                  keyword: v && v.keyword,
                  constraint: v && v.constraint,
                  index_type: b && { keyword: 'not for replication' },
                  definition: [d],
                  resource: 'constraint'
                }) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Mu() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = fu, (e = function () {
                  var t, e, n, u;
                  t = fu, 'references' === r.substr(fu, 10).toLowerCase() ? (e = r.substr(fu, 10), fu += 10) : (e = o, 0 === Lu && hu(jn));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'REFERENCES' : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) !== o && da() !== o && (n = Ju()) !== o && da() !== o && (u = Gu()) !== o && da() !== o ? ('match full' === r.substr(fu, 10).toLowerCase() ? (s = r.substr(fu, 10), fu += 10) : (s = o, 0 === Lu && hu(M)), s === o && ('match partial' === r.substr(fu, 13).toLowerCase() ? (s = r.substr(fu, 13), fu += 13) : (s = o, 0 === Lu && hu(D)), s === o && ('match simple' === r.substr(fu, 12).toLowerCase() ? (s = r.substr(fu, 12), fu += 12) : (s = o, 0 === Lu && hu(k)))), s === o && (s = null), s !== o && da() !== o ? ((a = Du()) === o && (a = null), a !== o && da() !== o ? ((i = Du()) === o && (i = null), i !== o ? (c = s, l = a, f = i, t = e = {
                  definition: u,
                  table: n,
                  keyword: e.toLowerCase(),
                  match: c && c.toLowerCase(),
                  on_delete: l,
                  on_update: f
                }) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Du() {
                var t, e, n, u;
                return t = fu, 'on delete' === r.substr(fu, 9).toLowerCase() ? (e = r.substr(fu, 9), fu += 9) : (e = o, 0 === Lu && hu($)), e === o && ('on update' === r.substr(fu, 9).toLowerCase() ? (e = r.substr(fu, 9), fu += 9) : (e = o, 0 === Lu && hu(F))), e !== o && da() !== o && (n = function () {
                  var e;
                  'restrict' === r.substr(fu, 8).toLowerCase() ? (e = r.substr(fu, 8), fu += 8) : (e = o, 0 === Lu && hu(P));
                  e === o && ('cascade' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(H)), e === o && ('set null' === r.substr(fu, 8).toLowerCase() ? (e = r.substr(fu, 8), fu += 8) : (e = o, 0 === Lu && hu(G)), e === o && ('no action' === r.substr(fu, 9).toLowerCase() ? (e = r.substr(fu, 9), fu += 9) : (e = o, 0 === Lu && hu(j)), e === o && ('set default' === r.substr(fu, 11).toLowerCase() ? (e = r.substr(fu, 11), fu += 11) : (e = o, 0 === Lu && hu(Y))))));
                  e !== o && (e = e.toLowerCase());
                  return e;
                }()) !== o ? (u = n, t = e = {
                  type: e.toLowerCase(),
                  value: u
                }) : (fu = t, t = o), t;
              }
              function ku() {
                var t, e, n, u, s, a, i, l, f;
                return t = fu, 'auto_increment' === r.substr(fu, 14).toLowerCase() ? (e = r.substr(fu, 14), fu += 14) : (e = o, 0 === Lu && hu(c)), e === o && ('avg_row_length' === r.substr(fu, 14).toLowerCase() ? (e = r.substr(fu, 14), fu += 14) : (e = o, 0 === Lu && hu(B)), e === o && ('key_block_size' === r.substr(fu, 14).toLowerCase() ? (e = r.substr(fu, 14), fu += 14) : (e = o, 0 === Lu && hu(X)), e === o && ('max_rows' === r.substr(fu, 8).toLowerCase() ? (e = r.substr(fu, 8), fu += 8) : (e = o, 0 === Lu && hu(W)), e === o && ('min_rows' === r.substr(fu, 8).toLowerCase() ? (e = r.substr(fu, 8), fu += 8) : (e = o, 0 === Lu && hu(V)), e === o && ('stats_sample_pages' === r.substr(fu, 18).toLowerCase() ? (e = r.substr(fu, 18), fu += 18) : (e = o, 0 === Lu && hu(K))))))), e !== o && da() !== o ? ((n = ra()) === o && (n = null), n !== o && da() !== o && (u = qo()) !== o ? (l = n, f = u, t = e = {
                  keyword: e.toLowerCase(),
                  symbol: l,
                  value: f.value
                }) : (fu = t, t = o)) : (fu = t, t = o), t === o && (t = fu, (e = es()) === o && (e = null), e !== o && da() !== o ? ('character set' === r.substr(fu, 13).toLowerCase() ? (n = r.substr(fu, 13), fu += 13) : (n = o, 0 === Lu && hu(q)), n === o && ('charset' === r.substr(fu, 7).toLowerCase() ? (n = r.substr(fu, 7), fu += 7) : (n = o, 0 === Lu && hu(Z)), n === o && ('collate' === r.substr(fu, 7).toLowerCase() ? (n = r.substr(fu, 7), fu += 7) : (n = o, 0 === Lu && hu(z)))), n !== o && da() !== o ? ((u = ra()) === o && (u = null), u !== o && (s = da()) !== o && (a = $o()) !== o ? t = e = function (r, t, e, n) {
                  return {
                    keyword: r && `${ r[0].toLowerCase() } ${ t.toLowerCase() }` || t.toLowerCase(),
                    symbol: e,
                    value: n
                  };
                }(e, n, u, a) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o), t === o && (t = fu, (e = oa()) === o && ('connection' === r.substr(fu, 10).toLowerCase() ? (e = r.substr(fu, 10), fu += 10) : (e = o, 0 === Lu && hu(J))), e !== o && da() !== o ? ((n = ra()) === o && (n = null), n !== o && da() !== o && (u = Xo()) !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: `'${ e.value }'`
                  };
                }(e, n, u) : (fu = t, t = o)) : (fu = t, t = o), t === o && (t = fu, 'compression' === r.substr(fu, 11).toLowerCase() ? (e = r.substr(fu, 11), fu += 11) : (e = o, 0 === Lu && hu(Q)), e !== o && da() !== o ? ((n = ra()) === o && (n = null), n !== o && da() !== o ? (u = fu, 39 === r.charCodeAt(fu) ? (s = '\'', fu++) : (s = o, 0 === Lu && hu(rr)), s !== o ? ('zlib' === r.substr(fu, 4).toLowerCase() ? (a = r.substr(fu, 4), fu += 4) : (a = o, 0 === Lu && hu(tr)), a === o && ('lz4' === r.substr(fu, 3).toLowerCase() ? (a = r.substr(fu, 3), fu += 3) : (a = o, 0 === Lu && hu(er)), a === o && ('none' === r.substr(fu, 4).toLowerCase() ? (a = r.substr(fu, 4), fu += 4) : (a = o, 0 === Lu && hu(S)))), a !== o ? (39 === r.charCodeAt(fu) ? (i = '\'', fu++) : (i = o, 0 === Lu && hu(rr)), i !== o ? u = s = [
                  s,
                  a,
                  i
                ] : (fu = u, u = o)) : (fu = u, u = o)) : (fu = u, u = o), u !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: e.join('').toUpperCase()
                  };
                }(e, n, u) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o), t === o && (t = fu, 'engine' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(nr)), e !== o && da() !== o ? ((n = ra()) === o && (n = null), n !== o && da() !== o && (u = $o()) !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: e.toUpperCase()
                  };
                }(e, n, u) : (fu = t, t = o)) : (fu = t, t = o))))), t;
              }
              function $u() {
                var t, e, n, u, s;
                return t = fu, (e = ro()) !== o && da() !== o && (n = function () {
                  var t, e, n;
                  return t = fu, 'read' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(ur)), e !== o && da() !== o ? ('local' === r.substr(fu, 5).toLowerCase() ? (n = r.substr(fu, 5), fu += 5) : (n = o, 0 === Lu && hu(or)), n === o && (n = null), n !== o ? t = e = {
                    type: 'read',
                    suffix: n && 'local'
                  } : (fu = t, t = o)) : (fu = t, t = o), t === o && (t = fu, 'low_priority' === r.substr(fu, 12).toLowerCase() ? (e = r.substr(fu, 12), fu += 12) : (e = o, 0 === Lu && hu(sr)), e === o && (e = null), e !== o && da() !== o ? ('write' === r.substr(fu, 5).toLowerCase() ? (n = r.substr(fu, 5), fu += 5) : (n = o, 0 === Lu && hu(ar)), n !== o ? t = e = {
                    type: 'write',
                    prefix: e && 'low_priority'
                  } : (fu = t, t = o)) : (fu = t, t = o)), t;
                }()) !== o ? (u = e, s = n, Ya.add(`lock::${ u.db }::${ u.table }`), t = e = {
                  table: u,
                  lock_type: s
                }) : (fu = t, t = o), t;
              }
              function Fu() {
                var t, e, n, u, s, a, i;
                return (t = ju()) === o && (t = fu, e = fu, 40 === r.charCodeAt(fu) ? (n = '(', fu++) : (n = o, 0 === Lu && hu(ir)), n !== o && (u = da()) !== o && (s = Fu()) !== o && (a = da()) !== o ? (41 === r.charCodeAt(fu) ? (i = ')', fu++) : (i = o, 0 === Lu && hu(cr)), i !== o ? e = n = [
                  n,
                  u,
                  s,
                  a,
                  i
                ] : (fu = e, e = o)) : (fu = e, e = o), e !== o && (e = {
                  ...e[2],
                  parentheses_symbol: !0
                }), t = e), t;
              }
              function Pu() {
                var t, e, n, u, s, a, c, l, f;
                if (t = fu, ys() !== o)
                  if (da() !== o)
                    if ((e = Hu()) !== o) {
                      for (n = [], u = fu, (s = da()) !== o && (a = ia()) !== o && (c = da()) !== o && (l = Hu()) !== o ? u = s = [
                          s,
                          a,
                          c,
                          l
                        ] : (fu = u, u = o); u !== o;)
                        n.push(u), u = fu, (s = da()) !== o && (a = ia()) !== o && (c = da()) !== o && (l = Hu()) !== o ? u = s = [
                          s,
                          a,
                          c,
                          l
                        ] : (fu = u, u = o);
                      n !== o ? t = i(e, n) : (fu = t, t = o);
                    } else
                      fu = t, t = o;
                  else
                    fu = t, t = o;
                else
                  fu = t, t = o;
                return t === o && (t = fu, da() !== o && ys() !== o && (e = da()) !== o && (n = function () {
                  var t, e, n, u;
                  t = fu, 'RECURSIVE' === r.substr(fu, 9) ? (e = 'RECURSIVE', fu += 9) : (e = o, 0 === Lu && hu(Gt));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) !== o && (u = da()) !== o && (s = Hu()) !== o ? ((f = s).recursive = !0, t = [f]) : (fu = t, t = o)), t;
              }
              function Hu() {
                var r, t, e, n;
                return r = fu, (t = $o()) !== o && da() !== o ? ((e = Gu()) === o && (e = null), e !== o && da() !== o && ds() !== o && da() !== o && la() !== o && da() !== o && (n = Su()) !== o && da() !== o && fa() !== o ? r = t = {
                  name: t,
                  stmt: n,
                  columns: e
                } : (fu = r, r = o)) : (fu = r, r = o), r;
              }
              function Gu() {
                var r, t, e, n, u, s, a, c;
                if (r = fu, la() !== o)
                  if (da() !== o)
                    if ((t = Do()) !== o) {
                      for (e = [], n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = Do()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (fu = n, n = o); n !== o;)
                        e.push(n), n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = Do()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (fu = n, n = o);
                      e !== o && (n = da()) !== o && (u = fa()) !== o ? r = i(t, e) : (fu = r, r = o);
                    } else
                      fu = r, r = o;
                  else
                    fu = r, r = o;
                else
                  fu = r, r = o;
                return r;
              }
              function ju() {
                var t, e, n, u, s, a, i, c, l, f, v, b, d, L, C;
                return t = fu, da() !== o ? ((e = Pu()) === o && (e = null), e !== o && da() !== o && function () {
                  var t, e, n, u;
                  t = fu, 'select' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(Mt));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }() !== o && da() !== o ? ((n = function () {
                  var r, t, e, n, u, s;
                  if (r = fu, (t = Yu()) !== o) {
                    for (e = [], n = fu, (u = da()) !== o && (s = Yu()) !== o ? n = u = [
                        u,
                        s
                      ] : (fu = n, n = o); n !== o;)
                      e.push(n), n = fu, (u = da()) !== o && (s = Yu()) !== o ? n = u = [
                        u,
                        s
                      ] : (fu = n, n = o);
                    e !== o ? (t = function (r, t) {
                      const e = [r];
                      for (let r = 0, n = t.length; r < n; ++r)
                        e.push(t[r][1]);
                      return e;
                    }(t, e), r = t) : (fu = r, r = o);
                  } else
                    fu = r, r = o;
                  return r;
                }()) === o && (n = null), n !== o && da() !== o ? ((u = Ss()) === o && (u = null), u !== o && da() !== o && (s = Bu()) !== o && da() !== o ? ((a = Vu()) === o && (a = null), a !== o && da() !== o ? ((i = uo()) === o && (i = null), i !== o && da() !== o ? ((c = function () {
                  var t, e, n;
                  t = fu, (e = function () {
                    var t, e, n, u;
                    t = fu, 'group' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(fe));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) !== o && da() !== o && Ts() !== o && da() !== o && (n = po()) !== o ? (e = n.value, t = e) : (fu = t, t = o);
                  return t;
                }()) === o && (c = null), c !== o && da() !== o ? ((l = function () {
                  var t, e;
                  t = fu, function () {
                    var t, e, n, u;
                    t = fu, 'having' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(de));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }() !== o && da() !== o && (e = Ao()) !== o ? t = e : (fu = t, t = o);
                  return t;
                }()) === o && (l = null), l !== o && da() !== o ? ((f = oo()) === o && (f = null), f !== o && da() !== o ? ((v = io()) === o && (v = null), v !== o ? (b = fu, 'for' === r.substr(fu, 3).toLowerCase() ? (d = r.substr(fu, 3), fu += 3) : (d = o, 0 === Lu && hu(O)), d !== o && (L = da()) !== o && (C = os()) !== o ? b = d = [
                  d,
                  L,
                  C
                ] : (fu = b, b = o), b === o && (b = null), b !== o ? t = function (r, t, e, n, u, o, s, a, i, c, l) {
                  return u && u.forEach(r => r.table && Ya.add(`select::${ r.db }::${ r.table }`)), {
                    with: r,
                    type: 'select',
                    options: t,
                    distinct: e,
                    columns: n,
                    from: u,
                    where: o,
                    groupby: s,
                    having: a,
                    orderby: i,
                    limit: c,
                    for_update: l && `${ l[0] } ${ l[2][0] }`
                  };
                }(e, n, u, s, a, i, c, l, f, v, b) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Yu() {
                var e;
                return (e = function () {
                  var t;
                  'sql_calc_found_rows' === r.substr(fu, 19).toLowerCase() ? (t = r.substr(fu, 19), fu += 19) : (t = o, 0 === Lu && hu(Yn));
                  return t;
                }()) === o && ((e = function () {
                  var t;
                  'sql_cache' === r.substr(fu, 9).toLowerCase() ? (t = r.substr(fu, 9), fu += 9) : (t = o, 0 === Lu && hu(Bn));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_no_cache' === r.substr(fu, 12).toLowerCase() ? (t = r.substr(fu, 12), fu += 12) : (t = o, 0 === Lu && hu(Xn));
                  return t;
                }()), e === o && (e = function () {
                  var t;
                  'sql_big_result' === r.substr(fu, 14).toLowerCase() ? (t = r.substr(fu, 14), fu += 14) : (t = o, 0 === Lu && hu(Vn));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_small_result' === r.substr(fu, 16).toLowerCase() ? (t = r.substr(fu, 16), fu += 16) : (t = o, 0 === Lu && hu(Wn));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_buffer_result' === r.substr(fu, 17).toLowerCase() ? (t = r.substr(fu, 17), fu += 17) : (t = o, 0 === Lu && hu(Kn));
                  return t;
                }())), e !== o && (e = e), e;
              }
              function Bu() {
                var r, t, e, n, u, s, a, c, l, f;
                if (r = fu, (t = ms()) === o && (t = fu, (e = ca()) !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o), t === o && (t = ca())), t !== o) {
                  for (e = [], n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = Xu()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (fu = n, n = o); n !== o;)
                    e.push(n), n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = Xu()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (fu = n, n = o);
                  e !== o ? (l = t, f = e, Ba.add('select::null::(.*)'), r = t = f && f.length > 0 ? (l[0] = {
                    expr: {
                      type: 'column_ref',
                      table: null,
                      column: '*'
                    },
                    as: null
                  }, Fa(l[0], f)) : l[0]) : (fu = r, r = o);
                } else
                  fu = r, r = o;
                if (r === o)
                  if (r = fu, (t = Xu()) !== o) {
                    for (e = [], n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = Xu()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (fu = n, n = o); n !== o;)
                      e.push(n), n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = Xu()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (fu = n, n = o);
                    e !== o ? r = t = i(t, e) : (fu = r, r = o);
                  } else
                    fu = r, r = o;
                return r;
              }
              function Xu() {
                var r, t, e, n;
                return r = fu, (t = xo()) !== o && da() !== o && (e = aa()) !== o && da() !== o && ca() !== o ? (n = t, Ba.add(`select::${ n }::(.*)`), r = t = {
                  expr: {
                    type: 'column_ref',
                    table: n,
                    column: '*'
                  },
                  as: null
                }) : (fu = r, r = o), r === o && (r = fu, (t = Ao()) !== o && da() !== o ? ((e = Wu()) === o && (e = null), e !== o ? r = t = {
                  expr: t,
                  as: e
                } : (fu = r, r = o)) : (fu = r, r = o)), r;
              }
              function Wu() {
                var r, t, e;
                return r = fu, (t = ds()) !== o && da() !== o && (e = function () {
                  var r, t;
                  r = fu, (t = $o()) !== o ? (function (r) {
                    if (!0 === Ma[r.toUpperCase()])
                      throw new Error('Error: ' + JSON.stringify(r) + ' is a reserved word, can not as alias clause');
                    return !1;
                  }(t) ? o : void 0) !== o ? r = t = t : (fu = r, r = o) : (fu = r, r = o);
                  r === o && (r = fu, (t = Mo()) !== o && (t = t), r = t);
                  return r;
                }()) !== o ? r = t = e : (fu = r, r = o), r === o && (r = fu, (t = ds()) === o && (t = null), t !== o && da() !== o && (e = xo()) !== o ? r = t = e : (fu = r, r = o)), r;
              }
              function Vu() {
                var t, e;
                return t = fu, function () {
                  var t, e, n, u;
                  t = fu, 'from' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(Vt));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }() !== o && da() !== o && (e = Ju()) !== o ? t = e : (fu = t, t = o), t;
              }
              function Ku() {
                var r, t, e;
                return r = fu, (t = eo()) !== o && da() !== o && ns() !== o && da() !== o && (e = eo()) !== o ? r = t = [
                  t,
                  e
                ] : (fu = r, r = o), r;
              }
              function qu() {
                var t, e;
                return t = fu, As() !== o && da() !== o ? ('btree' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(lr)), e === o && ('hash' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(fr))), e !== o ? t = {
                  keyword: 'using',
                  type: e.toLowerCase()
                } : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Zu() {
                var r, t, e, n, u, s;
                if (r = fu, (t = zu()) !== o) {
                  for (e = [], n = fu, (u = da()) !== o && (s = zu()) !== o ? n = u = [
                      u,
                      s
                    ] : (fu = n, n = o); n !== o;)
                    e.push(n), n = fu, (u = da()) !== o && (s = zu()) !== o ? n = u = [
                      u,
                      s
                    ] : (fu = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    const e = [r];
                    for (let r = 0; r < t.length; r++)
                      e.push(t[r][1]);
                    return e;
                  }(t, e) : (fu = r, r = o);
                } else
                  fu = r, r = o;
                return r;
              }
              function zu() {
                var t, e, n, u, s, a;
                return t = fu, (e = function () {
                  var t, e, n, u;
                  t = fu, 'key_block_size' === r.substr(fu, 14).toLowerCase() ? (e = r.substr(fu, 14), fu += 14) : (e = o, 0 === Lu && hu(X));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'KEY_BLOCK_SIZE' : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) !== o && da() !== o ? ((n = ra()) === o && (n = null), n !== o && da() !== o && (u = qo()) !== o ? (s = n, a = u, t = e = {
                  type: e.toLowerCase(),
                  symbol: s,
                  expr: a
                }) : (fu = t, t = o)) : (fu = t, t = o), t === o && (t = qu()) === o && (t = fu, 'with' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(vr)), e !== o && da() !== o ? ('parser' === r.substr(fu, 6).toLowerCase() ? (n = r.substr(fu, 6), fu += 6) : (n = o, 0 === Lu && hu(br)), n !== o && da() !== o && (u = $o()) !== o ? t = e = {
                  type: 'with parser',
                  expr: u
                } : (fu = t, t = o)) : (fu = t, t = o), t === o && (t = fu, 'visible' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(dr)), e === o && ('invisible' === r.substr(fu, 9).toLowerCase() ? (e = r.substr(fu, 9), fu += 9) : (e = o, 0 === Lu && hu(Lr))), e !== o && (e = function (r) {
                  return {
                    type: r.toLowerCase(),
                    expr: r.toLowerCase()
                  };
                }(e)), (t = e) === o && (t = pa()))), t;
              }
              function Ju() {
                var r, t, e, n, u, s;
                if (r = fu, (t = ro()) !== o) {
                  for (e = [], n = Qu(); n !== o;)
                    e.push(n), n = Qu();
                  e !== o ? (u = t, (s = e).unshift(u), s.forEach(r => {
                    const {
                      table: t,
                      as: e
                    } = r;
                    Xa[t] = t, e && (Xa[e] = t);
                  }), r = t = s) : (fu = r, r = o);
                } else
                  fu = r, r = o;
                return r;
              }
              function Qu() {
                var r, t, e;
                return r = fu, da() !== o && (t = ia()) !== o && da() !== o && (e = ro()) !== o ? r = e : (fu = r, r = o), r === o && (r = fu, da() !== o && (t = function () {
                  var r, t, e, n, u, s, a, i, c, l, f;
                  if (r = fu, (t = to()) !== o)
                    if (da() !== o)
                      if ((e = ro()) !== o)
                        if (da() !== o)
                          if ((n = As()) !== o)
                            if (da() !== o)
                              if (la() !== o)
                                if (da() !== o)
                                  if ((u = $o()) !== o) {
                                    for (s = [], a = fu, (i = da()) !== o && (c = ia()) !== o && (l = da()) !== o && (f = $o()) !== o ? a = i = [
                                        i,
                                        c,
                                        l,
                                        f
                                      ] : (fu = a, a = o); a !== o;)
                                      s.push(a), a = fu, (i = da()) !== o && (c = ia()) !== o && (l = da()) !== o && (f = $o()) !== o ? a = i = [
                                        i,
                                        c,
                                        l,
                                        f
                                      ] : (fu = a, a = o);
                                    s !== o && (a = da()) !== o && (i = fa()) !== o ? (v = t, d = u, L = s, (b = e).join = v, b.using = Fa(d, L), r = t = b) : (fu = r, r = o);
                                  } else
                                    fu = r, r = o;
                                else
                                  fu = r, r = o;
                              else
                                fu = r, r = o;
                            else
                              fu = r, r = o;
                          else
                            fu = r, r = o;
                        else
                          fu = r, r = o;
                      else
                        fu = r, r = o;
                    else
                      fu = r, r = o;
                  else
                    fu = r, r = o;
                  var v, b, d, L;
                  r === o && (r = fu, (t = to()) !== o && da() !== o && (e = ro()) !== o && da() !== o ? ((n = no()) === o && (n = null), n !== o ? (t = function (r, t, e) {
                    return t.join = r, t.on = e, t;
                  }(t, e, n), r = t) : (fu = r, r = o)) : (fu = r, r = o), r === o && (r = fu, (t = to()) !== o && da() !== o && (e = la()) !== o && da() !== o && (n = Su()) !== o && da() !== o && fa() !== o && da() !== o ? ((u = Wu()) === o && (u = null), u !== o && (s = da()) !== o ? ((a = no()) === o && (a = null), a !== o ? (t = function (r, t, e, n) {
                    return t.parentheses = !0, {
                      expr: t,
                      as: e,
                      join: r,
                      on: n
                    };
                  }(t, n, u, a), r = t) : (fu = r, r = o)) : (fu = r, r = o)) : (fu = r, r = o)));
                  return r;
                }()) !== o ? r = t : (fu = r, r = o)), r;
              }
              function ro() {
                var t, e, n, u, s, a;
                return t = fu, (e = function () {
                  var t;
                  'dual' === r.substr(fu, 4).toLowerCase() ? (t = r.substr(fu, 4), fu += 4) : (t = o, 0 === Lu && hu(Mn));
                  return t;
                }()) !== o && (e = { type: 'dual' }), (t = e) === o && (t = fu, (e = eo()) !== o && da() !== o ? ((n = Wu()) === o && (n = null), n !== o ? (a = n, t = e = 'var' === (s = e).type ? (s.as = a, s) : {
                  db: s.db,
                  table: s.table,
                  as: a
                }) : (fu = t, t = o)) : (fu = t, t = o), t === o && (t = fu, (e = la()) !== o && da() !== o && (n = Su()) !== o && da() !== o && fa() !== o && da() !== o ? ((u = Wu()) === o && (u = null), u !== o ? t = e = function (r, t) {
                  return r.parentheses = !0, {
                    expr: r,
                    as: t
                  };
                }(n, u) : (fu = t, t = o)) : (fu = t, t = o))), t;
              }
              function to() {
                var t, e, n, u;
                return t = fu, (e = function () {
                  var t, e, n, u;
                  t = fu, 'left' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(re));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) !== o && (n = da()) !== o ? ((u = Es()) === o && (u = null), u !== o && da() !== o && ws() !== o ? t = e = 'LEFT JOIN' : (fu = t, t = o)) : (fu = t, t = o), t === o && (t = fu, (e = function () {
                  var t, e, n, u;
                  t = fu, 'right' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(te));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) !== o && (n = da()) !== o ? ((u = Es()) === o && (u = null), u !== o && da() !== o && ws() !== o ? t = e = 'RIGHT JOIN' : (fu = t, t = o)) : (fu = t, t = o), t === o && (t = fu, (e = function () {
                  var t, e, n, u;
                  t = fu, 'full' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(ee));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) !== o && (n = da()) !== o ? ((u = Es()) === o && (u = null), u !== o && da() !== o && ws() !== o ? t = e = 'FULL JOIN' : (fu = t, t = o)) : (fu = t, t = o), t === o && (t = fu, e = fu, (n = function () {
                  var t, e, n, u;
                  t = fu, 'inner' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(ne));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) !== o && (u = da()) !== o ? e = n = [
                  n,
                  u
                ] : (fu = e, e = o), e === o && (e = null), e !== o && (n = ws()) !== o ? t = e = 'INNER JOIN' : (fu = t, t = o)))), t;
              }
              function eo() {
                var r, t, e, n, u, s, a, i;
                return r = fu, (t = xo()) !== o ? (e = fu, (n = da()) !== o && (u = aa()) !== o && (s = da()) !== o && (a = xo()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (fu = e, e = o), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  const e = {
                    db: null,
                    table: r
                  };
                  return null !== t && (e.db = r, e.table = t[3]), e;
                }(t, e) : (fu = r, r = o)) : (fu = r, r = o), r === o && (r = fu, (t = ga()) !== o && ((i = t).db = null, i.table = i.name, t = i), r = t), r;
              }
              function no() {
                var r, t;
                return r = fu, ps() !== o && da() !== o && (t = Ao()) !== o ? r = t : (fu = r, r = o), r;
              }
              function uo() {
                var t, e;
                return t = fu, function () {
                  var t, e, n, u;
                  t = fu, 'where' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(le));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }() !== o && da() !== o && (e = Ao()) !== o ? t = e : (fu = t, t = o), t;
              }
              function oo() {
                var t, e;
                return t = fu, function () {
                  var t, e, n, u;
                  t = fu, 'order' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(be));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }() !== o && da() !== o && Ts() !== o && da() !== o && (e = function () {
                  var r, t, e, n, u, s, a, c;
                  if (r = fu, (t = so()) !== o) {
                    for (e = [], n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = so()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (fu = n, n = o); n !== o;)
                      e.push(n), n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = so()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (fu = n, n = o);
                    e !== o ? (t = i(t, e), r = t) : (fu = r, r = o);
                  } else
                    fu = r, r = o;
                  return r;
                }()) !== o ? t = e : (fu = t, t = o), t;
              }
              function so() {
                var t, e, n;
                return t = fu, (e = Ao()) !== o && da() !== o ? ((n = function () {
                  var t, e, n, u;
                  t = fu, 'desc' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(we));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'DESC' : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) === o && (n = function () {
                  var t, e, n, u;
                  t = fu, 'asc' === r.substr(fu, 3).toLowerCase() ? (e = r.substr(fu, 3), fu += 3) : (e = o, 0 === Lu && hu(pe));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'ASC' : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()), n === o && (n = null), n !== o ? t = e = function (r, t) {
                  const e = {
                    expr: r,
                    type: 'ASC'
                  };
                  return 'DESC' === t && (e.type = 'DESC'), e;
                }(e, n) : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function ao() {
                var r;
                return (r = qo()) === o && (r = Go()), r;
              }
              function io() {
                var t, e, n, u, s, a;
                return t = fu, function () {
                  var t, e, n, u;
                  t = fu, 'limit' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(Le));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }() !== o && da() !== o && (e = ao()) !== o && da() !== o ? (n = fu, (u = ia()) === o && (u = function () {
                  var t, e, n, u;
                  t = fu, 'offset' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(Ce));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'OFFSET' : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()), u !== o && (s = da()) !== o && (a = ao()) !== o ? n = u = [
                  u,
                  s,
                  a
                ] : (fu = n, n = o), n === o && (n = null), n !== o ? t = function (r, t) {
                  const e = [r];
                  return t && e.push(t[2]), {
                    seperator: t && t[0] && t[0].toLowerCase() || '',
                    value: e
                  };
                }(e, n) : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function co() {
                var r, t, e, n, u, s, a, c;
                if (r = fu, (t = lo()) !== o) {
                  for (e = [], n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = lo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (fu = n, n = o); n !== o;)
                    e.push(n), n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = lo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (fu = n, n = o);
                  e !== o ? r = t = i(t, e) : (fu = r, r = o);
                } else
                  fu = r, r = o;
                return r;
              }
              function lo() {
                var t, e, n, u, s, a, i, c;
                return t = fu, e = fu, (n = xo()) !== o && (u = da()) !== o && (s = aa()) !== o ? e = n = [
                  n,
                  u,
                  s
                ] : (fu = e, e = o), e === o && (e = null), e !== o && (n = da()) !== o && (u = Do()) !== o && (s = da()) !== o ? (61 === r.charCodeAt(fu) ? (a = '=', fu++) : (a = o, 0 === Lu && hu(Cr)), a !== o && da() !== o && (i = No()) !== o ? t = e = {
                  column: u,
                  value: i,
                  table: (c = e) && c[0]
                } : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function fo() {
                var t;
                return (t = function () {
                  var t, e;
                  t = fu, function () {
                    var t, e, n, u;
                    t = fu, 'values' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(ie));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }() !== o && da() !== o && (e = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = fu, (t = Co()) !== o) {
                      for (e = [], n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = Co()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (fu = n, n = o); n !== o;)
                        e.push(n), n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = Co()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (fu = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (fu = r, r = o);
                    } else
                      fu = r, r = o;
                    return r;
                  }()) !== o ? t = e : (fu = t, t = o);
                  return t;
                }()) === o && (t = ju()), t;
              }
              function vo() {
                var r, t, e, n, u, s, a, i, c;
                if (r = fu, fs() !== o)
                  if (da() !== o)
                    if ((t = la()) !== o)
                      if (da() !== o)
                        if ((e = $o()) !== o) {
                          for (n = [], u = fu, (s = da()) !== o && (a = ia()) !== o && (i = da()) !== o && (c = $o()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (fu = u, u = o); u !== o;)
                            n.push(u), u = fu, (s = da()) !== o && (a = ia()) !== o && (i = da()) !== o && (c = $o()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (fu = u, u = o);
                          n !== o && (u = da()) !== o && (s = fa()) !== o ? r = Fa(e, n) : (fu = r, r = o);
                        } else
                          fu = r, r = o;
                      else
                        fu = r, r = o;
                    else
                      fu = r, r = o;
                  else
                    fu = r, r = o;
                else
                  fu = r, r = o;
                return r === o && (r = fu, fs() !== o && da() !== o && (t = Co()) !== o ? r = t : (fu = r, r = o)), r;
              }
              function bo() {
                var t, e, n;
                return t = fu, ps() !== o && da() !== o ? ('duplicate' === r.substr(fu, 9).toLowerCase() ? (e = r.substr(fu, 9), fu += 9) : (e = o, 0 === Lu && hu(pr)), e !== o && da() !== o && ua() !== o && da() !== o && os() !== o && da() !== o && (n = co()) !== o ? t = {
                  keyword: 'on duplicate key update',
                  set: n
                } : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Lo() {
                var t, e;
                return t = fu, (e = function () {
                  var t, e, n, u;
                  t = fu, 'insert' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(Ht));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) !== o && (e = 'insert'), (t = e) === o && (t = fu, (e = cs()) !== o && (e = 'replace'), t = e), t;
              }
              function Co() {
                var r, t;
                return r = fu, la() !== o && da() !== o && (t = po()) !== o && da() !== o && fa() !== o ? r = t : (fu = r, r = o), r;
              }
              function po() {
                var r, t, e, n, u, s, a, i;
                if (r = fu, (t = Ao()) !== o) {
                  for (e = [], n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (i = Ao()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fu = n, n = o); n !== o;)
                    e.push(n), n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (i = Ao()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fu = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    const e = { type: 'expr_list' };
                    return e.value = Fa(r, t), e;
                  }(t, e) : (fu = r, r = o);
                } else
                  fu = r, r = o;
                return r;
              }
              function wo() {
                var t, e, n;
                return t = fu, function () {
                  var t, e, n, u;
                  t = fu, 'interval' === r.substr(fu, 8).toLowerCase() ? (e = r.substr(fu, 8), fu += 8) : (e = o, 0 === Lu && hu(bn));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'INTERVAL' : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }() !== o && da() !== o && (e = Ao()) !== o && da() !== o && (n = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u;
                    t = fu, 'year' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(dn));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'YEAR' : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = fu, 'month' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(Ln));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'MONTH' : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = fu, 'day' === r.substr(fu, 3).toLowerCase() ? (e = r.substr(fu, 3), fu += 3) : (e = o, 0 === Lu && hu(Cn));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'DAY' : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = fu, 'hour' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(pn));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'HOUR' : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = fu, 'minute' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(wn));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'MINUTE' : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = fu, 'second' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(En));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'SECOND' : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }());
                  return t;
                }()) !== o ? t = {
                  type: 'interval',
                  expr: e,
                  unit: n.toLowerCase()
                } : (fu = t, t = o), t;
              }
              function Eo() {
                var t, e, n, u, s, a, i, c, l;
                if (t = fu, Ms() !== o)
                  if (da() !== o)
                    if ((e = Ao()) === o && (e = null), e !== o)
                      if (da() !== o) {
                        if (n = [], (u = ho()) !== o)
                          for (; u !== o;)
                            n.push(u), u = ho();
                        else
                          n = o;
                        n !== o && (u = da()) !== o ? ((s = function () {
                          var t, e;
                          t = fu, function () {
                            var t, e, n, u;
                            t = fu, 'else' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu($e));
                            e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                              e,
                              n
                            ] : (fu = t, t = o)) : (fu = t, t = o);
                            return t;
                          }() !== o && da() !== o && (e = Ao()) !== o ? t = {
                            type: 'else',
                            result: e
                          } : (fu = t, t = o);
                          return t;
                        }()) === o && (s = null), s !== o && da() !== o && function () {
                          var t, e, n, u;
                          t = fu, 'end' === r.substr(fu, 3).toLowerCase() ? (e = r.substr(fu, 3), fu += 3) : (e = o, 0 === Lu && hu(Fe));
                          e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                            e,
                            n
                          ] : (fu = t, t = o)) : (fu = t, t = o);
                          return t;
                        }() !== o && da() !== o ? ((a = Ms()) === o && (a = null), a !== o ? (i = e, c = n, (l = s) && c.push(l), t = {
                          type: 'case',
                          expr: i || null,
                          args: c
                        }) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o);
                      } else
                        fu = t, t = o;
                    else
                      fu = t, t = o;
                  else
                    fu = t, t = o;
                else
                  fu = t, t = o;
                return t;
              }
              function ho() {
                var t, e, n;
                return t = fu, function () {
                  var t, e, n, u;
                  t = fu, 'when' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(De));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }() !== o && da() !== o && (e = Ao()) !== o && da() !== o && function () {
                  var t, e, n, u;
                  t = fu, 'then' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(ke));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }() !== o && da() !== o && (n = Ao()) !== o ? t = {
                  type: 'when',
                  cond: e,
                  result: n
                } : (fu = t, t = o), t;
              }
              function Ao() {
                var r;
                return (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = fu, (t = Oo()) !== o) {
                    if (e = [], n = fu, (u = da()) !== o && (s = ba()) !== o && (a = da()) !== o && (i = Oo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (fu = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = fu, (u = da()) !== o && (s = ba()) !== o && (a = da()) !== o && (i = Oo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fu = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = Pa(t, e), r = t) : (fu = r, r = o);
                  } else
                    fu = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s;
                  if (r = fu, (t = Ro()) !== o) {
                    if (e = [], n = fu, (u = da()) !== o && (s = Oo()) !== o ? n = u = [
                        u,
                        s
                      ] : (fu = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = fu, (u = da()) !== o && (s = Oo()) !== o ? n = u = [
                          u,
                          s
                        ] : (fu = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = Da(t, e[0][1]), r = t) : (fu = r, r = o);
                  } else
                    fu = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = fu, (t = yo()) !== o) {
                    for (e = [], n = fu, (u = La()) !== o && (s = xs()) !== o && (a = da()) !== o && (i = yo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (fu = n, n = o); n !== o;)
                      e.push(n), n = fu, (u = La()) !== o && (s = xs()) !== o && (a = da()) !== o && (i = yo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (fu = n, n = o);
                    e !== o ? (t = wr(t, e), r = t) : (fu = r, r = o);
                  } else
                    fu = r, r = o;
                  return r;
                }()) === o && (r = Fu()), r;
              }
              function yo() {
                var r, t, e, n, u, s, a, i;
                if (r = fu, (t = To()) !== o) {
                  for (e = [], n = fu, (u = La()) !== o && (s = Us()) !== o && (a = da()) !== o && (i = To()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fu = n, n = o); n !== o;)
                    e.push(n), n = fu, (u = La()) !== o && (s = Us()) !== o && (a = da()) !== o && (i = To()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fu = n, n = o);
                  e !== o ? r = t = wr(t, e) : (fu = r, r = o);
                } else
                  fu = r, r = o;
                return r;
              }
              function To() {
                var t, e, n, u, s;
                return (t = mo()) === o && (t = function () {
                  var r, t, e;
                  r = fu, (t = function () {
                    var r, t, e, n, u;
                    r = fu, t = fu, (e = Os()) !== o && (n = da()) !== o && (u = gs()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (fu = t, t = o);
                    t !== o && (t = hr(t));
                    (r = t) === o && (r = gs());
                    return r;
                  }()) !== o && da() !== o && la() !== o && da() !== o && (e = Su()) !== o && da() !== o && fa() !== o ? (n = t, (u = e).parentheses = !0, t = Da(n, u), r = t) : (fu = r, r = o);
                  var n, u;
                  return r;
                }()) === o && (t = fu, (e = Os()) === o && (e = fu, 33 === r.charCodeAt(fu) ? (n = '!', fu++) : (n = o, 0 === Lu && hu(Er)), n !== o ? (u = fu, Lu++, 61 === r.charCodeAt(fu) ? (s = '=', fu++) : (s = o, 0 === Lu && hu(Cr)), Lu--, s === o ? u = void 0 : (fu = u, u = o), u !== o ? e = n = [
                  n,
                  u
                ] : (fu = e, e = o)) : (fu = e, e = o)), e !== o && (n = da()) !== o && (u = To()) !== o ? t = e = Da('NOT', u) : (fu = t, t = o)), t;
              }
              function mo() {
                var r, t, e, n, u, s, a;
                return r = fu, (t = No()) !== o && da() !== o ? (e = fu, Lu++, n = Us(), Lu--, n === o ? e = void 0 : (fu = e, e = o), e !== o && (n = da()) !== o ? ((u = function () {
                  var r;
                  (r = function () {
                    var t, e, n, u, s, a;
                    t = [], e = fu, (n = da()) !== o && (u = So()) !== o && (s = da()) !== o && (a = No()) !== o ? e = n = [
                      n,
                      u,
                      s,
                      a
                    ] : (fu = e, e = o);
                    if (e !== o)
                      for (; e !== o;)
                        t.push(e), e = fu, (n = da()) !== o && (u = So()) !== o && (s = da()) !== o && (a = No()) !== o ? e = n = [
                          n,
                          u,
                          s,
                          a
                        ] : (fu = e, e = o);
                    else
                      t = o;
                    t !== o && (t = {
                      type: 'arithmetic',
                      tail: t
                    });
                    return t;
                  }()) === o && (r = function () {
                    var r, t, e, n;
                    r = fu, (t = Io()) !== o && da() !== o && (e = la()) !== o && da() !== o && (n = po()) !== o && da() !== o && fa() !== o ? r = t = {
                      op: t,
                      right: n
                    } : (fu = r, r = o);
                    r === o && (r = fu, (t = Io()) !== o && da() !== o ? ((e = ga()) === o && (e = Xo()), e !== o ? (t = function (r, t) {
                      return {
                        op: r,
                        right: t
                      };
                    }(t, e), r = t) : (fu = r, r = o)) : (fu = r, r = o));
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e, n;
                    r = fu, (t = function () {
                      var r, t, e, n, u;
                      r = fu, t = fu, (e = Os()) !== o && (n = da()) !== o && (u = Is()) !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (fu = t, t = o);
                      t !== o && (t = hr(t));
                      (r = t) === o && (r = Is());
                      return r;
                    }()) !== o && da() !== o && (e = No()) !== o && da() !== o && Us() !== o && da() !== o && (n = No()) !== o ? r = t = {
                      op: t,
                      right: {
                        type: 'expr_list',
                        value: [
                          e,
                          n
                        ]
                      }
                    } : (fu = r, r = o);
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e, n, u;
                    r = fu, (t = Rs()) !== o && (e = da()) !== o && (n = No()) !== o ? r = t = {
                      op: 'IS',
                      right: n
                    } : (fu = r, r = o);
                    r === o && (r = fu, t = fu, (e = Rs()) !== o && (n = da()) !== o && (u = Os()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (fu = t, t = o), t !== o && (e = da()) !== o && (n = No()) !== o ? (t = function (r) {
                      return {
                        op: 'IS NOT',
                        right: r
                      };
                    }(n), r = t) : (fu = r, r = o));
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e;
                    r = fu, (t = function () {
                      var r, t, e, n, u;
                      r = fu, t = fu, (e = Os()) !== o && (n = da()) !== o && (u = _s()) !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (fu = t, t = o);
                      t !== o && (t = hr(t));
                      (r = t) === o && (r = _s());
                      return r;
                    }()) !== o && da() !== o && (e = mo()) !== o ? r = t = {
                      op: t,
                      right: e
                    } : (fu = r, r = o);
                    return r;
                  }());
                  return r;
                }()) === o && (u = null), u !== o ? (s = t, r = t = null === (a = u) ? s : 'arithmetic' === a.type ? Pa(s, a.tail) : ka(a.op, s, a.right)) : (fu = r, r = o)) : (fu = r, r = o)) : (fu = r, r = o), r === o && (r = Xo()) === o && (r = Uo()), r;
              }
              function So() {
                var t;
                return '>=' === r.substr(fu, 2) ? (t = '>=', fu += 2) : (t = o, 0 === Lu && hu(Ar)), t === o && (62 === r.charCodeAt(fu) ? (t = '>', fu++) : (t = o, 0 === Lu && hu(yr)), t === o && ('<=' === r.substr(fu, 2) ? (t = '<=', fu += 2) : (t = o, 0 === Lu && hu(Tr)), t === o && ('<>' === r.substr(fu, 2) ? (t = '<>', fu += 2) : (t = o, 0 === Lu && hu(mr)), t === o && (60 === r.charCodeAt(fu) ? (t = '<', fu++) : (t = o, 0 === Lu && hu(Sr)), t === o && (61 === r.charCodeAt(fu) ? (t = '=', fu++) : (t = o, 0 === Lu && hu(Cr)), t === o && ('!=' === r.substr(fu, 2) ? (t = '!=', fu += 2) : (t = o, 0 === Lu && hu(Ir)))))))), t;
              }
              function Io() {
                var r, t, e, n, u;
                return r = fu, t = fu, (e = Os()) !== o && (n = da()) !== o && (u = Ns()) !== o ? t = e = [
                  e,
                  n,
                  u
                ] : (fu = t, t = o), t !== o && (t = hr(t)), (r = t) === o && (r = Ns()), r;
              }
              function No() {
                var r, t, e, n, u, s, a, i;
                if (r = fu, (t = _o()) !== o) {
                  for (e = [], n = fu, (u = da()) !== o && (s = Ro()) !== o && (a = da()) !== o && (i = _o()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fu = n, n = o); n !== o;)
                    e.push(n), n = fu, (u = da()) !== o && (s = Ro()) !== o && (a = da()) !== o && (i = _o()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fu = n, n = o);
                  e !== o ? r = t = wr(t, e) : (fu = r, r = o);
                } else
                  fu = r, r = o;
                return r;
              }
              function Ro() {
                var t;
                return 43 === r.charCodeAt(fu) ? (t = '+', fu++) : (t = o, 0 === Lu && hu(Nr)), t === o && (45 === r.charCodeAt(fu) ? (t = '-', fu++) : (t = o, 0 === Lu && hu(Rr))), t;
              }
              function _o() {
                var r, t, e, n, u, s, a, i;
                if (r = fu, (t = Oo()) !== o) {
                  for (e = [], n = fu, (u = da()) !== o && (s = go()) !== o && (a = da()) !== o && (i = Oo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fu = n, n = o); n !== o;)
                    e.push(n), n = fu, (u = da()) !== o && (s = go()) !== o && (a = da()) !== o && (i = Oo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fu = n, n = o);
                  e !== o ? r = t = Pa(t, e) : (fu = r, r = o);
                } else
                  fu = r, r = o;
                return r;
              }
              function go() {
                var t;
                return 42 === r.charCodeAt(fu) ? (t = '*', fu++) : (t = o, 0 === Lu && hu(_r)), t === o && (47 === r.charCodeAt(fu) ? (t = '/', fu++) : (t = o, 0 === Lu && hu(gr)), t === o && (37 === r.charCodeAt(fu) ? (t = '%', fu++) : (t = o, 0 === Lu && hu(Or)))), t;
              }
              function Oo() {
                var t, e, n, u;
                return (t = function () {
                  var t, e, n, u, s, a, i;
                  t = fu, (e = Ds()) !== o && da() !== o && la() !== o && da() !== o && (n = Ao()) !== o && da() !== o && ds() !== o && da() !== o && (u = Ua()) !== o && da() !== o && (s = fa()) !== o ? t = e = {
                    type: 'cast',
                    expr: n,
                    symbol: 'as',
                    target: u
                  } : (fu = t, t = o);
                  t === o && (t = fu, (e = Ds()) !== o && da() !== o && la() !== o && da() !== o && (n = Ao()) !== o && da() !== o && ds() !== o && da() !== o && (u = Ps()) !== o && da() !== o && (s = la()) !== o && da() !== o && (a = Zo()) !== o && da() !== o && fa() !== o && da() !== o && (i = fa()) !== o ? (e = function (r, t) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: 'DECIMAL(' + t + ')' }
                    };
                  }(n, a), t = e) : (fu = t, t = o), t === o && (t = fu, (e = Ds()) !== o && da() !== o && la() !== o && da() !== o && (n = Ao()) !== o && da() !== o && ds() !== o && da() !== o && (u = Ps()) !== o && da() !== o && (s = la()) !== o && da() !== o && (a = Zo()) !== o && da() !== o && ia() !== o && da() !== o && (i = Zo()) !== o && da() !== o && fa() !== o && da() !== o && fa() !== o ? (e = function (r, t, e) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: 'DECIMAL(' + t + ', ' + e + ')' }
                    };
                  }(n, a, i), t = e) : (fu = t, t = o), t === o && (t = fu, (e = Ds()) !== o && da() !== o && la() !== o && da() !== o && (n = Ao()) !== o && da() !== o && ds() !== o && da() !== o && (u = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = fu, 'signed' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(Be));
                      e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'SIGNED' : (fu = t, t = o)) : (fu = t, t = o);
                      return t;
                    }()) === o && (t = Hs());
                    return t;
                  }()) !== o && da() !== o ? ((s = js()) === o && (s = null), s !== o && da() !== o && (a = fa()) !== o ? (e = function (r, t, e) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: t + (e ? ' ' + e : '') }
                    };
                  }(n, u, s), t = e) : (fu = t, t = o)) : (fu = t, t = o))));
                  return t;
                }()) === o && (t = Yo()) === o && (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u;
                    t = fu, (e = function () {
                      var t, e, n, u;
                      t = fu, 'count' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(Re));
                      e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'COUNT' : (fu = t, t = o)) : (fu = t, t = o);
                      return t;
                    }()) !== o && da() !== o && la() !== o && da() !== o && (n = function () {
                      var t, e, n;
                      t = fu, (e = function () {
                        var e;
                        42 === r.charCodeAt(fu) ? (e = '*', fu++) : (e = o, 0 === Lu && hu(_r));
                        e !== o && (e = {
                          type: 'star',
                          value: '*'
                        });
                        return e;
                      }()) !== o && (e = { expr: e });
                      (t = e) === o && (t = fu, (e = Ss()) === o && (e = null), e !== o && da() !== o && (n = Uo()) !== o ? t = e = {
                        distinct: e,
                        expr: n
                      } : (fu = t, t = o));
                      return t;
                    }()) !== o && da() !== o && fa() !== o && da() !== o ? ((u = jo()) === o && (u = null), u !== o ? t = e = {
                      type: 'aggr_func',
                      name: e,
                      args: n,
                      over: u
                    } : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n;
                    t = fu, (e = function () {
                      var t;
                      (t = function () {
                        var t, e, n, u;
                        t = fu, 'sum' === r.substr(fu, 3).toLowerCase() ? (e = r.substr(fu, 3), fu += 3) : (e = o, 0 === Lu && hu(Oe));
                        e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'SUM' : (fu = t, t = o)) : (fu = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = fu, 'max' === r.substr(fu, 3).toLowerCase() ? (e = r.substr(fu, 3), fu += 3) : (e = o, 0 === Lu && hu(_e));
                        e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'MAX' : (fu = t, t = o)) : (fu = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = fu, 'min' === r.substr(fu, 3).toLowerCase() ? (e = r.substr(fu, 3), fu += 3) : (e = o, 0 === Lu && hu(ge));
                        e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'MIN' : (fu = t, t = o)) : (fu = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = fu, 'avg' === r.substr(fu, 3).toLowerCase() ? (e = r.substr(fu, 3), fu += 3) : (e = o, 0 === Lu && hu(Ue));
                        e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'AVG' : (fu = t, t = o)) : (fu = t, t = o);
                        return t;
                      }());
                      return t;
                    }()) !== o && da() !== o && la() !== o && da() !== o && (n = No()) !== o && da() !== o && fa() !== o ? t = e = {
                      type: 'aggr_func',
                      name: e,
                      args: { expr: n }
                    } : (fu = t, t = o);
                    return t;
                  }());
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s;
                  t = fu, (e = Na()) !== o && da() !== o && la() !== o && da() !== o ? ((n = po()) === o && (n = null), n !== o && da() !== o && (u = fa()) !== o && da() !== o ? ((s = jo()) === o && (s = null), s !== o ? t = e = {
                    type: 'function',
                    name: e,
                    args: n || {
                      type: 'expr_list',
                      value: []
                    },
                    over: s
                  } : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o);
                  t === o && (t = fu, (e = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = fu, 'current_date' === r.substr(fu, 12).toLowerCase() ? (e = r.substr(fu, 12), fu += 12) : (e = o, 0 === Lu && hu(vn));
                      e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'CURRENT_DATE' : (fu = t, t = o)) : (fu = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = fu, 'current_time' === r.substr(fu, 12).toLowerCase() ? (e = r.substr(fu, 12), fu += 12) : (e = o, 0 === Lu && hu(hn));
                      e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'CURRENT_TIME' : (fu = t, t = o)) : (fu = t, t = o);
                      return t;
                    }()) === o && (t = Js()) === o && (t = function () {
                      var t, e, n, u;
                      t = fu, 'current_user' === r.substr(fu, 12).toLowerCase() ? (e = r.substr(fu, 12), fu += 12) : (e = o, 0 === Lu && hu(yn));
                      e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'CURRENT_USER' : (fu = t, t = o)) : (fu = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = fu, 'user' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(fn));
                      e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'USER' : (fu = t, t = o)) : (fu = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = fu, 'session_user' === r.substr(fu, 12).toLowerCase() ? (e = r.substr(fu, 12), fu += 12) : (e = o, 0 === Lu && hu(Tn));
                      e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'SESSION_USER' : (fu = t, t = o)) : (fu = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = fu, 'system_user' === r.substr(fu, 11).toLowerCase() ? (e = r.substr(fu, 11), fu += 11) : (e = o, 0 === Lu && hu(mn));
                      e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'SYSTEM_USER' : (fu = t, t = o)) : (fu = t, t = o);
                      return t;
                    }());
                    return t;
                  }()) !== o && da() !== o && la() !== o && da() !== o && (n = fa()) !== o && da() !== o ? ((u = jo()) === o && (u = null), u !== o ? (e = function (r, t) {
                    return {
                      type: 'function',
                      name: r,
                      args: {
                        type: 'expr_list',
                        value: []
                      },
                      over: t
                    };
                  }(e, u), t = e) : (fu = t, t = o)) : (fu = t, t = o));
                  return t;
                }()) === o && (t = Eo()) === o && (t = wo()) === o && (t = Uo()) === o && (t = Go()) === o && (t = fu, la() !== o && (e = da()) !== o && (n = Ao()) !== o && da() !== o && fa() !== o ? t = Ur(n) : (fu = t, t = o), t === o && (t = fu, la() !== o && (e = da()) !== o && (n = po()) !== o && da() !== o && fa() !== o ? ((u = n).parentheses = !0, t = u) : (fu = t, t = o), t === o && (t = ga()) === o && (t = fu, da() !== o ? (63 === r.charCodeAt(fu) ? (e = '?', fu++) : (e = o, 0 === Lu && hu(xr)), e !== o ? t = {
                  type: 'origin',
                  value: e
                } : (fu = t, t = o)) : (fu = t, t = o)))), t;
              }
              function Uo() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = fu, e = fu, (n = xo()) !== o && (u = da()) !== o && (s = aa()) !== o && (a = da()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (fu = e, e = o), e === o && (e = null), e !== o && (n = Do()) !== o && (u = da()) !== o ? ((s = function () {
                  var t;
                  '->>' === r.substr(fu, 3) ? (t = '->>', fu += 3) : (t = o, 0 === Lu && hu(ru));
                  return t;
                }()) === o && (s = function () {
                  var t;
                  '->' === r.substr(fu, 2) ? (t = '->', fu += 2) : (t = o, 0 === Lu && hu(Qn));
                  return t;
                }()), s !== o && (a = da()) !== o ? ((i = Xo()) === o && (i = qo()), i !== o && da() !== o ? ((c = Ru()) === o && (c = null), c !== o ? t = e = function (r, t, e, n, u) {
                  const o = r && r[0] || null;
                  return Ba.add(`select::${ o }::${ t }`), {
                    type: 'column_ref',
                    table: o,
                    column: t,
                    collate: u,
                    arrow: e,
                    property: n
                  };
                }(e, n, s, i, c) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o), t === o && (t = fu, (e = xo()) !== o && (n = da()) !== o && (u = aa()) !== o && (s = da()) !== o && (a = function () {
                  var r, t;
                  r = fu, (t = ko()) !== o && (t = t);
                  (r = t) === o && (r = Mo());
                  return r;
                }()) !== o ? (l = e, f = a, Ba.add(`select::${ l }::${ f }`), t = e = {
                  type: 'column_ref',
                  table: l,
                  column: f
                }) : (fu = t, t = o), t === o && (t = fu, (e = Do()) !== o && (e = function (r) {
                  return Ba.add('select::null::' + r), {
                    type: 'column_ref',
                    table: null,
                    column: r
                  };
                }(e)), t = e)), t;
              }
              function xo() {
                var r, t;
                return r = fu, (t = $o()) !== o ? (Mr(t) ? o : void 0) !== o ? r = t = t : (fu = r, r = o) : (fu = r, r = o), r === o && (r = fu, (t = Mo()) !== o && (t = t), r = t), r;
              }
              function Mo() {
                var t;
                return (t = function () {
                  var t, e, n, u;
                  t = fu, 34 === r.charCodeAt(fu) ? (e = '"', fu++) : (e = o, 0 === Lu && hu(Dr));
                  if (e !== o) {
                    if (n = [], kr.test(r.charAt(fu)) ? (u = r.charAt(fu), fu++) : (u = o, 0 === Lu && hu($r)), u !== o)
                      for (; u !== o;)
                        n.push(u), kr.test(r.charAt(fu)) ? (u = r.charAt(fu), fu++) : (u = o, 0 === Lu && hu($r));
                    else
                      n = o;
                    n !== o ? (34 === r.charCodeAt(fu) ? (u = '"', fu++) : (u = o, 0 === Lu && hu(Dr)), u !== o ? (e = Fr(n), t = e) : (fu = t, t = o)) : (fu = t, t = o);
                  } else
                    fu = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = fu, 39 === r.charCodeAt(fu) ? (e = '\'', fu++) : (e = o, 0 === Lu && hu(rr));
                  if (e !== o) {
                    if (n = [], Pr.test(r.charAt(fu)) ? (u = r.charAt(fu), fu++) : (u = o, 0 === Lu && hu(Hr)), u !== o)
                      for (; u !== o;)
                        n.push(u), Pr.test(r.charAt(fu)) ? (u = r.charAt(fu), fu++) : (u = o, 0 === Lu && hu(Hr));
                    else
                      n = o;
                    n !== o ? (39 === r.charCodeAt(fu) ? (u = '\'', fu++) : (u = o, 0 === Lu && hu(rr)), u !== o ? (e = Fr(n), t = e) : (fu = t, t = o)) : (fu = t, t = o);
                  } else
                    fu = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = fu, 96 === r.charCodeAt(fu) ? (e = '`', fu++) : (e = o, 0 === Lu && hu(Gr));
                  if (e !== o) {
                    if (n = [], jr.test(r.charAt(fu)) ? (u = r.charAt(fu), fu++) : (u = o, 0 === Lu && hu(Yr)), u !== o)
                      for (; u !== o;)
                        n.push(u), jr.test(r.charAt(fu)) ? (u = r.charAt(fu), fu++) : (u = o, 0 === Lu && hu(Yr));
                    else
                      n = o;
                    n !== o ? (96 === r.charCodeAt(fu) ? (u = '`', fu++) : (u = o, 0 === Lu && hu(Gr)), u !== o ? (e = Fr(n), t = e) : (fu = t, t = o)) : (fu = t, t = o);
                  } else
                    fu = t, t = o;
                  return t;
                }()), t;
              }
              function Do() {
                var r, t;
                return r = fu, (t = ko()) !== o ? (Mr(t) ? o : void 0) !== o ? r = t = t : (fu = r, r = o) : (fu = r, r = o), r === o && (r = Mo()), r;
              }
              function ko() {
                var r, t, e, n;
                if (r = fu, (t = Fo()) !== o) {
                  for (e = [], n = Ho(); n !== o;)
                    e.push(n), n = Ho();
                  e !== o ? r = t = Br(t, e) : (fu = r, r = o);
                } else
                  fu = r, r = o;
                return r;
              }
              function $o() {
                var r, t, e, n;
                if (r = fu, (t = Fo()) !== o) {
                  for (e = [], n = Po(); n !== o;)
                    e.push(n), n = Po();
                  e !== o ? r = t = Br(t, e) : (fu = r, r = o);
                } else
                  fu = r, r = o;
                return r;
              }
              function Fo() {
                var t;
                return Xr.test(r.charAt(fu)) ? (t = r.charAt(fu), fu++) : (t = o, 0 === Lu && hu(Wr)), t;
              }
              function Po() {
                var t;
                return Vr.test(r.charAt(fu)) ? (t = r.charAt(fu), fu++) : (t = o, 0 === Lu && hu(Kr)), t;
              }
              function Ho() {
                var t;
                return qr.test(r.charAt(fu)) ? (t = r.charAt(fu), fu++) : (t = o, 0 === Lu && hu(Zr)), t;
              }
              function Go() {
                var e, n, u;
                return e = fu, 58 === r.charCodeAt(fu) ? (n = ':', fu++) : (n = o, 0 === Lu && hu(zr)), n !== o && (u = $o()) !== o ? e = n = [
                  n,
                  u
                ] : (fu = e, e = o), e !== o && (e = {
                  type: 'param',
                  value: e[1]
                }), e;
              }
              function jo() {
                var t, e, n;
                return t = fu, function () {
                  var t, e, n, u;
                  t = fu, 'over' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(se));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }() !== o && da() !== o && la() !== o && da() !== o && fs() !== o && da() !== o && Ts() !== o && da() !== o && (e = Bu()) !== o && da() !== o ? ((n = oo()) === o && (n = null), n !== o && da() !== o && fa() !== o ? t = {
                  partitionby: e,
                  orderby: n
                } : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Yo() {
                var t;
                return (t = Xo()) === o && (t = qo()) === o && (t = function () {
                  var t, e;
                  t = fu, (e = function () {
                    var t, e, n, u;
                    t = fu, 'true' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(Rt));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !0
                  });
                  (t = e) === o && (t = fu, (e = function () {
                    var t, e, n, u;
                    t = fu, 'false' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(gt));
                    e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fu = t, t = o)) : (fu = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !1
                  }), t = e);
                  return t;
                }()) === o && (t = Bo()) === o && (t = function () {
                  var t, e, n, u, s, a, i;
                  t = fu, (e = Zs()) === o && (e = Ks()) === o && (e = zs()) === o && (e = qs());
                  if (e !== o)
                    if (da() !== o) {
                      if (n = fu, 39 === r.charCodeAt(fu) ? (u = '\'', fu++) : (u = o, 0 === Lu && hu(rr)), u !== o) {
                        for (s = [], a = Vo(); a !== o;)
                          s.push(a), a = Vo();
                        s !== o ? (39 === r.charCodeAt(fu) ? (a = '\'', fu++) : (a = o, 0 === Lu && hu(rr)), a !== o ? n = u = [
                          u,
                          s,
                          a
                        ] : (fu = n, n = o)) : (fu = n, n = o);
                      } else
                        fu = n, n = o;
                      n !== o ? (c = n, e = {
                        type: e.toLowerCase(),
                        value: c[1].join('')
                      }, t = e) : (fu = t, t = o);
                    } else
                      fu = t, t = o;
                  else
                    fu = t, t = o;
                  var c;
                  t === o && (t = fu, (e = Js()) !== o && da() !== o ? ((n = la()) === o && (n = null), n !== o && (u = da()) !== o ? ((s = fa()) === o && (s = null), s !== o ? (a = (a = function (r, t, e) {
                    if (t && e)
                      return !0;
                  }(0, n, s)) ? o : void 0) !== o && da() !== o ? ('on update current_timestamp' === r.substr(fu, 27).toLowerCase() ? (i = r.substr(fu, 27), fu += 27) : (i = o, 0 === Lu && hu(Qr)), i === o && (i = null), i !== o ? (e = function (r, t, e, n) {
                    return {
                      type: 'origin',
                      value: (n ? `${ r } ${ n }` : r).toLowerCase()
                    };
                  }(e, 0, 0, i), t = e) : (fu = t, t = o)) : (fu = t, t = o) : (fu = t, t = o)) : (fu = t, t = o)) : (fu = t, t = o));
                  return t;
                }()), t;
              }
              function Bo() {
                var e;
                return (e = function () {
                  var t, e, n, u;
                  t = fu, 'null' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(It));
                  e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fu = t, t = o)) : (fu = t, t = o);
                  return t;
                }()) !== o && (e = {
                  type: 'null',
                  value: null
                }), e;
              }
              function Xo() {
                var t, e, n, u, s;
                if (t = fu, e = fu, 39 === r.charCodeAt(fu) ? (n = '\'', fu++) : (n = o, 0 === Lu && hu(rr)), n !== o) {
                  for (u = [], s = Vo(); s !== o;)
                    u.push(s), s = Vo();
                  u !== o ? (39 === r.charCodeAt(fu) ? (s = '\'', fu++) : (s = o, 0 === Lu && hu(rr)), s !== o ? e = n = [
                    n,
                    u,
                    s
                  ] : (fu = e, e = o)) : (fu = e, e = o);
                } else
                  fu = e, e = o;
                if (e !== o && (e = Jr(e)), (t = e) === o) {
                  if (t = fu, e = fu, 34 === r.charCodeAt(fu) ? (n = '"', fu++) : (n = o, 0 === Lu && hu(Dr)), n !== o) {
                    for (u = [], s = Wo(); s !== o;)
                      u.push(s), s = Wo();
                    u !== o ? (34 === r.charCodeAt(fu) ? (s = '"', fu++) : (s = o, 0 === Lu && hu(Dr)), s !== o ? e = n = [
                      n,
                      u,
                      s
                    ] : (fu = e, e = o)) : (fu = e, e = o);
                  } else
                    fu = e, e = o;
                  e !== o && (e = Jr(e)), t = e;
                }
                return t;
              }
              function Wo() {
                var t;
                return rt.test(r.charAt(fu)) ? (t = r.charAt(fu), fu++) : (t = o, 0 === Lu && hu(tt)), t === o && (t = Ko()), t;
              }
              function Vo() {
                var t;
                return et.test(r.charAt(fu)) ? (t = r.charAt(fu), fu++) : (t = o, 0 === Lu && hu(nt)), t === o && (t = Ko()), t;
              }
              function Ko() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = fu, '\\\'' === r.substr(fu, 2) ? (e = '\\\'', fu += 2) : (e = o, 0 === Lu && hu(ut)), e !== o && (e = '\''), (t = e) === o && (t = fu, '\\"' === r.substr(fu, 2) ? (e = '\\"', fu += 2) : (e = o, 0 === Lu && hu(ot)), e !== o && (e = '"'), (t = e) === o && (t = fu, '\\\\' === r.substr(fu, 2) ? (e = '\\\\', fu += 2) : (e = o, 0 === Lu && hu(st)), e !== o && (e = '\\'), (t = e) === o && (t = fu, '\\/' === r.substr(fu, 2) ? (e = '\\/', fu += 2) : (e = o, 0 === Lu && hu(at)), e !== o && (e = '/'), (t = e) === o && (t = fu, '\\b' === r.substr(fu, 2) ? (e = '\\b', fu += 2) : (e = o, 0 === Lu && hu(it)), e !== o && (e = '\b'), (t = e) === o && (t = fu, '\\f' === r.substr(fu, 2) ? (e = '\\f', fu += 2) : (e = o, 0 === Lu && hu(ct)), e !== o && (e = '\f'), (t = e) === o && (t = fu, '\\n' === r.substr(fu, 2) ? (e = '\\n', fu += 2) : (e = o, 0 === Lu && hu(lt)), e !== o && (e = '\n'), (t = e) === o && (t = fu, '\\r' === r.substr(fu, 2) ? (e = '\\r', fu += 2) : (e = o, 0 === Lu && hu(ft)), e !== o && (e = '\r'), (t = e) === o && (t = fu, '\\t' === r.substr(fu, 2) ? (e = '\\t', fu += 2) : (e = o, 0 === Lu && hu(vt)), e !== o && (e = '\t'), (t = e) === o && (t = fu, '\\u' === r.substr(fu, 2) ? (e = '\\u', fu += 2) : (e = o, 0 === Lu && hu(bt)), e !== o && (n = ts()) !== o && (u = ts()) !== o && (s = ts()) !== o && (a = ts()) !== o ? (i = n, c = u, l = s, f = a, t = e = String.fromCharCode(parseInt('0x' + i + c + l + f))) : (fu = t, t = o), t === o && (t = fu, 92 === r.charCodeAt(fu) ? (e = '\\', fu++) : (e = o, 0 === Lu && hu(dt)), e !== o && (e = '\\'), t = e)))))))))), t;
              }
              function qo() {
                var t, e;
                return (t = function () {
                  var r, t, e, n;
                  r = fu, (t = Zo()) !== o && (e = zo()) !== o && (n = Jo()) !== o ? r = t = {
                    type: 'bigint',
                    value: t + e + n
                  } : (fu = r, r = o);
                  r === o && (r = fu, (t = Zo()) !== o && (e = zo()) !== o ? (t = function (r, t) {
                    const e = r + t;
                    return $a(r) ? {
                      type: 'bigint',
                      value: e
                    } : parseFloat(e);
                  }(t, e), r = t) : (fu = r, r = o), r === o && (r = fu, (t = Zo()) !== o && (e = Jo()) !== o ? (t = function (r, t) {
                    return {
                      type: 'bigint',
                      value: r + t
                    };
                  }(t, e), r = t) : (fu = r, r = o), r === o && (r = fu, (t = Zo()) !== o && (t = function (r) {
                    return $a(r) ? {
                      type: 'bigint',
                      value: r
                    } : parseFloat(r);
                  }(t)), r = t)));
                  return r;
                }()) !== o && (t = (e = t) && 'bigint' === e.type ? e : {
                  type: 'number',
                  value: e
                }), t;
              }
              function Zo() {
                var t, e, n;
                return (t = Qo()) === o && (t = rs()) === o && (t = fu, 45 === r.charCodeAt(fu) ? (e = '-', fu++) : (e = o, 0 === Lu && hu(Rr)), e === o && (43 === r.charCodeAt(fu) ? (e = '+', fu++) : (e = o, 0 === Lu && hu(Nr))), e !== o && (n = Qo()) !== o ? t = e = '-' + n : (fu = t, t = o), t === o && (t = fu, 45 === r.charCodeAt(fu) ? (e = '-', fu++) : (e = o, 0 === Lu && hu(Rr)), e === o && (43 === r.charCodeAt(fu) ? (e = '+', fu++) : (e = o, 0 === Lu && hu(Nr))), e !== o && (n = rs()) !== o ? t = e = '-' + n : (fu = t, t = o))), t;
              }
              function zo() {
                var t, e, n;
                return t = fu, 46 === r.charCodeAt(fu) ? (e = '.', fu++) : (e = o, 0 === Lu && hu(pt)), e !== o && (n = Qo()) !== o ? t = e = '.' + n : (fu = t, t = o), t;
              }
              function Jo() {
                var t, e, n;
                return t = fu, (e = function () {
                  var t, e, n;
                  t = fu, yt.test(r.charAt(fu)) ? (e = r.charAt(fu), fu++) : (e = o, 0 === Lu && hu(Tt));
                  e !== o ? (mt.test(r.charAt(fu)) ? (n = r.charAt(fu), fu++) : (n = o, 0 === Lu && hu(St)), n === o && (n = null), n !== o ? t = e = e + (null !== (u = n) ? u : '') : (fu = t, t = o)) : (fu = t, t = o);
                  var u;
                  return t;
                }()) !== o && (n = Qo()) !== o ? t = e = e + n : (fu = t, t = o), t;
              }
              function Qo() {
                var t, e;
                if (t = [], (e = rs()) !== o)
                  for (; e !== o;)
                    t.push(e), e = rs();
                else
                  t = o;
                return t !== o && (t = t.join('')), t;
              }
              function rs() {
                var t;
                return wt.test(r.charAt(fu)) ? (t = r.charAt(fu), fu++) : (t = o, 0 === Lu && hu(Et)), t;
              }
              function ts() {
                var t;
                return ht.test(r.charAt(fu)) ? (t = r.charAt(fu), fu++) : (t = o, 0 === Lu && hu(At)), t;
              }
              function es() {
                var t, e, n, u;
                return t = fu, 'default' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(C)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function ns() {
                var t, e, n, u;
                return t = fu, 'to' === r.substr(fu, 2).toLowerCase() ? (e = r.substr(fu, 2), fu += 2) : (e = o, 0 === Lu && hu(_t)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function us() {
                var t, e, n, u;
                return t = fu, 'drop' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(Ot)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'DROP' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function os() {
                var t, e, n, u;
                return t = fu, 'update' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(Dt)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function ss() {
                var t, e, n, u;
                return t = fu, 'create' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(kt)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function as() {
                var t, e, n, u;
                return t = fu, 'temporary' === r.substr(fu, 9).toLowerCase() ? (e = r.substr(fu, 9), fu += 9) : (e = o, 0 === Lu && hu($t)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function is() {
                var t, e, n, u;
                return t = fu, 'if not exists' === r.substr(fu, 13).toLowerCase() ? (e = r.substr(fu, 13), fu += 13) : (e = o, 0 === Lu && hu(Ft)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function cs() {
                var t, e, n, u;
                return t = fu, 'replace' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(jt)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function ls() {
                var t, e, n, u;
                return t = fu, 'rename' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(Yt)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function fs() {
                var t, e, n, u;
                return t = fu, 'partition' === r.substr(fu, 9).toLowerCase() ? (e = r.substr(fu, 9), fu += 9) : (e = o, 0 === Lu && hu(Xt)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'PARTITION' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function vs() {
                var t, e, n, u;
                return t = fu, 'into' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(Wt)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function bs() {
                var t, e, n, u;
                return t = fu, 'set' === r.substr(fu, 3).toLowerCase() ? (e = r.substr(fu, 3), fu += 3) : (e = o, 0 === Lu && hu(Kt)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function ds() {
                var t, e, n, u;
                return t = fu, 'as' === r.substr(fu, 2).toLowerCase() ? (e = r.substr(fu, 2), fu += 2) : (e = o, 0 === Lu && hu(Zt)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Ls() {
                var t, e, n, u;
                return t = fu, 'table' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(zt)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'TABLE' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Cs() {
                var t, e, n, u;
                return t = fu, 'tables' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(Jt)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'TABLES' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function ps() {
                var t, e, n, u;
                return t = fu, 'on' === r.substr(fu, 2).toLowerCase() ? (e = r.substr(fu, 2), fu += 2) : (e = o, 0 === Lu && hu(Qt)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function ws() {
                var t, e, n, u;
                return t = fu, 'join' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(ue)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Es() {
                var t, e, n, u;
                return t = fu, 'outer' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(oe)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function hs() {
                var t, e, n, u;
                return t = fu, 'union' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(ae)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function As() {
                var t, e, n, u;
                return t = fu, 'using' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(ce)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function ys() {
                var t, e, n, u;
                return t = fu, 'with' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(vr)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Ts() {
                var t, e, n, u;
                return t = fu, 'by' === r.substr(fu, 2).toLowerCase() ? (e = r.substr(fu, 2), fu += 2) : (e = o, 0 === Lu && hu(ve)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function ms() {
                var t, e, n, u;
                return t = fu, 'all' === r.substr(fu, 3).toLowerCase() ? (e = r.substr(fu, 3), fu += 3) : (e = o, 0 === Lu && hu(Ee)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'ALL' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Ss() {
                var t, e, n, u;
                return t = fu, 'distinct' === r.substr(fu, 8).toLowerCase() ? (e = r.substr(fu, 8), fu += 8) : (e = o, 0 === Lu && hu(he)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'DISTINCT' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Is() {
                var t, e, n, u;
                return t = fu, 'between' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(Ae)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'BETWEEN' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Ns() {
                var t, e, n, u;
                return t = fu, 'in' === r.substr(fu, 2).toLowerCase() ? (e = r.substr(fu, 2), fu += 2) : (e = o, 0 === Lu && hu(ye)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'IN' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Rs() {
                var t, e, n, u;
                return t = fu, 'is' === r.substr(fu, 2).toLowerCase() ? (e = r.substr(fu, 2), fu += 2) : (e = o, 0 === Lu && hu(Te)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'IS' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function _s() {
                var t, e, n, u;
                return t = fu, 'like' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(me)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'LIKE' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function gs() {
                var t, e, n, u;
                return t = fu, 'exists' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(Se)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'EXISTS' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Os() {
                var t, e, n, u;
                return t = fu, 'not' === r.substr(fu, 3).toLowerCase() ? (e = r.substr(fu, 3), fu += 3) : (e = o, 0 === Lu && hu(g)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'NOT' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Us() {
                var t, e, n, u;
                return t = fu, 'and' === r.substr(fu, 3).toLowerCase() ? (e = r.substr(fu, 3), fu += 3) : (e = o, 0 === Lu && hu(Ie)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'AND' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function xs() {
                var t, e, n, u;
                return t = fu, 'or' === r.substr(fu, 2).toLowerCase() ? (e = r.substr(fu, 2), fu += 2) : (e = o, 0 === Lu && hu(Ne)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'OR' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Ms() {
                var t, e, n, u;
                return t = fu, 'case' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(Me)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Ds() {
                var t, e, n, u;
                return t = fu, 'cast' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(Pe)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function ks() {
                var t, e, n, u;
                return t = fu, 'char' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(He)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'CHAR' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function $s() {
                var t, e, n, u;
                return t = fu, 'varchar' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(Ge)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'VARCHAR' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Fs() {
                var t, e, n, u;
                return t = fu, 'numeric' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(je)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'NUMERIC' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Ps() {
                var t, e, n, u;
                return t = fu, 'decimal' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(Ye)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'DECIMAL' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Hs() {
                var t, e, n, u;
                return t = fu, 'unsigned' === r.substr(fu, 8).toLowerCase() ? (e = r.substr(fu, 8), fu += 8) : (e = o, 0 === Lu && hu(Xe)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'UNSIGNED' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Gs() {
                var t, e, n, u;
                return t = fu, 'int' === r.substr(fu, 3).toLowerCase() ? (e = r.substr(fu, 3), fu += 3) : (e = o, 0 === Lu && hu(We)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'INT' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function js() {
                var t, e, n, u;
                return t = fu, 'integer' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(Ke)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'INTEGER' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Ys() {
                var t, e, n, u;
                return t = fu, 'smallint' === r.substr(fu, 8).toLowerCase() ? (e = r.substr(fu, 8), fu += 8) : (e = o, 0 === Lu && hu(Ze)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'SMALLINT' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Bs() {
                var t, e, n, u;
                return t = fu, 'tinyint' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(ze)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'TINYINT' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Xs() {
                var t, e, n, u;
                return t = fu, 'bigint' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(en)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'BIGINT' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Ws() {
                var t, e, n, u;
                return t = fu, 'float' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu(nn)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'FLOAT' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Vs() {
                var t, e, n, u;
                return t = fu, 'double' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(un)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'DOUBLE' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Ks() {
                var t, e, n, u;
                return t = fu, 'date' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(on)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'DATE' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function qs() {
                var t, e, n, u;
                return t = fu, 'datetime' === r.substr(fu, 8).toLowerCase() ? (e = r.substr(fu, 8), fu += 8) : (e = o, 0 === Lu && hu(sn)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'DATETIME' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Zs() {
                var t, e, n, u;
                return t = fu, 'time' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(an)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'TIME' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function zs() {
                var t, e, n, u;
                return t = fu, 'timestamp' === r.substr(fu, 9).toLowerCase() ? (e = r.substr(fu, 9), fu += 9) : (e = o, 0 === Lu && hu(cn)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'TIMESTAMP' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Js() {
                var t, e, n, u;
                return t = fu, 'current_timestamp' === r.substr(fu, 17).toLowerCase() ? (e = r.substr(fu, 17), fu += 17) : (e = o, 0 === Lu && hu(An)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'CURRENT_TIMESTAMP' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Qs() {
                var t;
                return (t = function () {
                  var t;
                  return '@@' === r.substr(fu, 2) ? (t = '@@', fu += 2) : (t = o, 0 === Lu && hu(gn)), t;
                }()) === o && (t = function () {
                  var t;
                  return 64 === r.charCodeAt(fu) ? (t = '@', fu++) : (t = o, 0 === Lu && hu(_n)), t;
                }()) === o && (t = function () {
                  var t;
                  return 36 === r.charCodeAt(fu) ? (t = '$', fu++) : (t = o, 0 === Lu && hu(On)), t;
                }()), t;
              }
              function ra() {
                var t;
                return 61 === r.charCodeAt(fu) ? (t = '=', fu++) : (t = o, 0 === Lu && hu(Cr)), t;
              }
              function ta() {
                var t, e, n, u;
                return t = fu, 'add' === r.substr(fu, 3).toLowerCase() ? (e = r.substr(fu, 3), fu += 3) : (e = o, 0 === Lu && hu(Dn)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'ADD' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function ea() {
                var t, e, n, u;
                return t = fu, 'column' === r.substr(fu, 6).toLowerCase() ? (e = r.substr(fu, 6), fu += 6) : (e = o, 0 === Lu && hu(kn)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'COLUMN' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function na() {
                var t, e, n, u;
                return t = fu, 'index' === r.substr(fu, 5).toLowerCase() ? (e = r.substr(fu, 5), fu += 5) : (e = o, 0 === Lu && hu($n)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'INDEX' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function ua() {
                var t, e, n, u;
                return t = fu, 'key' === r.substr(fu, 3).toLowerCase() ? (e = r.substr(fu, 3), fu += 3) : (e = o, 0 === Lu && hu(v)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'KEY' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function oa() {
                var t, e, n, u;
                return t = fu, 'comment' === r.substr(fu, 7).toLowerCase() ? (e = r.substr(fu, 7), fu += 7) : (e = o, 0 === Lu && hu(Hn)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'COMMENT' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function sa() {
                var t, e, n, u;
                return t = fu, 'constraint' === r.substr(fu, 10).toLowerCase() ? (e = r.substr(fu, 10), fu += 10) : (e = o, 0 === Lu && hu(Gn)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'CONSTRAINT' : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function aa() {
                var t;
                return 46 === r.charCodeAt(fu) ? (t = '.', fu++) : (t = o, 0 === Lu && hu(pt)), t;
              }
              function ia() {
                var t;
                return 44 === r.charCodeAt(fu) ? (t = ',', fu++) : (t = o, 0 === Lu && hu(qn)), t;
              }
              function ca() {
                var t;
                return 42 === r.charCodeAt(fu) ? (t = '*', fu++) : (t = o, 0 === Lu && hu(_r)), t;
              }
              function la() {
                var t;
                return 40 === r.charCodeAt(fu) ? (t = '(', fu++) : (t = o, 0 === Lu && hu(ir)), t;
              }
              function fa() {
                var t;
                return 41 === r.charCodeAt(fu) ? (t = ')', fu++) : (t = o, 0 === Lu && hu(cr)), t;
              }
              function va() {
                var t;
                return 59 === r.charCodeAt(fu) ? (t = ';', fu++) : (t = o, 0 === Lu && hu(Jn)), t;
              }
              function ba() {
                var t;
                return (t = function () {
                  var t;
                  return '||' === r.substr(fu, 2) ? (t = '||', fu += 2) : (t = o, 0 === Lu && hu(tu)), t;
                }()) === o && (t = function () {
                  var t;
                  return '&&' === r.substr(fu, 2) ? (t = '&&', fu += 2) : (t = o, 0 === Lu && hu(eu)), t;
                }()), t;
              }
              function da() {
                var r, t;
                for (r = [], (t = Ea()) === o && (t = Ca()); t !== o;)
                  r.push(t), (t = Ea()) === o && (t = Ca());
                return r;
              }
              function La() {
                var r, t;
                if (r = [], (t = Ea()) === o && (t = Ca()), t !== o)
                  for (; t !== o;)
                    r.push(t), (t = Ea()) === o && (t = Ca());
                else
                  r = o;
                return r;
              }
              function Ca() {
                var t;
                return (t = function () {
                  var t, e, n, u, s, a;
                  t = fu, '/*' === r.substr(fu, 2) ? (e = '/*', fu += 2) : (e = o, 0 === Lu && hu(nu));
                  if (e !== o) {
                    for (n = [], u = fu, s = fu, Lu++, '*/' === r.substr(fu, 2) ? (a = '*/', fu += 2) : (a = o, 0 === Lu && hu(uu)), Lu--, a === o ? s = void 0 : (fu = s, s = o), s !== o && (a = wa()) !== o ? u = s = [
                        s,
                        a
                      ] : (fu = u, u = o); u !== o;)
                      n.push(u), u = fu, s = fu, Lu++, '*/' === r.substr(fu, 2) ? (a = '*/', fu += 2) : (a = o, 0 === Lu && hu(uu)), Lu--, a === o ? s = void 0 : (fu = s, s = o), s !== o && (a = wa()) !== o ? u = s = [
                        s,
                        a
                      ] : (fu = u, u = o);
                    n !== o ? ('*/' === r.substr(fu, 2) ? (u = '*/', fu += 2) : (u = o, 0 === Lu && hu(uu)), u !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (fu = t, t = o)) : (fu = t, t = o);
                  } else
                    fu = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = fu, '--' === r.substr(fu, 2) ? (e = '--', fu += 2) : (e = o, 0 === Lu && hu(ou));
                  if (e !== o) {
                    for (n = [], u = fu, s = fu, Lu++, a = ha(), Lu--, a === o ? s = void 0 : (fu = s, s = o), s !== o && (a = wa()) !== o ? u = s = [
                        s,
                        a
                      ] : (fu = u, u = o); u !== o;)
                      n.push(u), u = fu, s = fu, Lu++, a = ha(), Lu--, a === o ? s = void 0 : (fu = s, s = o), s !== o && (a = wa()) !== o ? u = s = [
                        s,
                        a
                      ] : (fu = u, u = o);
                    n !== o ? t = e = [
                      e,
                      n
                    ] : (fu = t, t = o);
                  } else
                    fu = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = fu, 35 === r.charCodeAt(fu) ? (e = '#', fu++) : (e = o, 0 === Lu && hu(su));
                  if (e !== o) {
                    for (n = [], u = fu, s = fu, Lu++, a = ha(), Lu--, a === o ? s = void 0 : (fu = s, s = o), s !== o && (a = wa()) !== o ? u = s = [
                        s,
                        a
                      ] : (fu = u, u = o); u !== o;)
                      n.push(u), u = fu, s = fu, Lu++, a = ha(), Lu--, a === o ? s = void 0 : (fu = s, s = o), s !== o && (a = wa()) !== o ? u = s = [
                        s,
                        a
                      ] : (fu = u, u = o);
                    n !== o ? t = e = [
                      e,
                      n
                    ] : (fu = t, t = o);
                  } else
                    fu = t, t = o;
                  return t;
                }()), t;
              }
              function pa() {
                var r, t, e, n, u, s, a;
                return r = fu, (t = oa()) !== o && da() !== o ? ((e = ra()) === o && (e = null), e !== o && da() !== o && (n = Xo()) !== o ? (s = e, a = n, r = t = {
                  type: (u = t).toLowerCase(),
                  keyword: u.toLowerCase(),
                  symbol: s,
                  value: a
                }) : (fu = r, r = o)) : (fu = r, r = o), r;
              }
              function wa() {
                var t;
                return r.length > fu ? (t = r.charAt(fu), fu++) : (t = o, 0 === Lu && hu(au)), t;
              }
              function Ea() {
                var t;
                return iu.test(r.charAt(fu)) ? (t = r.charAt(fu), fu++) : (t = o, 0 === Lu && hu(cu)), t;
              }
              function ha() {
                var t, e;
                if ((t = function () {
                    var t, e;
                    t = fu, Lu++, r.length > fu ? (e = r.charAt(fu), fu++) : (e = o, 0 === Lu && hu(au));
                    Lu--, e === o ? t = void 0 : (fu = t, t = o);
                    return t;
                  }()) === o)
                  if (t = [], Lt.test(r.charAt(fu)) ? (e = r.charAt(fu), fu++) : (e = o, 0 === Lu && hu(Ct)), e !== o)
                    for (; e !== o;)
                      t.push(e), Lt.test(r.charAt(fu)) ? (e = r.charAt(fu), fu++) : (e = o, 0 === Lu && hu(Ct));
                  else
                    t = o;
                return t;
              }
              function Aa() {
                var t, e;
                return t = fu, ja = [], void 0 !== o && da() !== o ? ((e = ya()) === o && (e = function () {
                  var t, e;
                  t = fu, function () {
                    var t;
                    return 'return' === r.substr(fu, 6).toLowerCase() ? (t = r.substr(fu, 6), fu += 6) : (t = o, 0 === Lu && hu(Un)), t;
                  }() !== o && da() !== o && (e = Ta()) !== o ? t = {
                    type: 'return',
                    expr: e
                  } : (fu = t, t = o);
                  return t;
                }()), e !== o ? t = {
                  stmt: e,
                  vars: ja
                } : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function ya() {
                var t, e, n, u;
                return t = fu, (e = ga()) === o && (e = Oa()), e !== o && da() !== o ? ((n = function () {
                  var t;
                  return ':=' === r.substr(fu, 2) ? (t = ':=', fu += 2) : (t = o, 0 === Lu && hu(xn)), t;
                }()) === o && (n = ra()), n !== o && da() !== o && (u = Ta()) !== o ? t = e = {
                  type: 'assign',
                  left: e,
                  symbol: n,
                  right: u
                } : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              function Ta() {
                var t;
                return (t = Fu()) === o && (t = function () {
                  var r, t, e, n, u;
                  r = fu, (t = ga()) !== o && da() !== o && (e = to()) !== o && da() !== o && (n = ga()) !== o && da() !== o && (u = no()) !== o ? r = t = {
                    type: 'join',
                    ltable: t,
                    rtable: n,
                    op: e,
                    on: u
                  } : (fu = r, r = o);
                  return r;
                }()) === o && (t = ma()) === o && (t = function () {
                  var t, e;
                  t = fu, function () {
                    var t;
                    return 91 === r.charCodeAt(fu) ? (t = '[', fu++) : (t = o, 0 === Lu && hu(Zn)), t;
                  }() !== o && da() !== o && (e = _a()) !== o && da() !== o && function () {
                    var t;
                    return 93 === r.charCodeAt(fu) ? (t = ']', fu++) : (t = o, 0 === Lu && hu(zn)), t;
                  }() !== o ? t = {
                    type: 'array',
                    value: e
                  } : (fu = t, t = o);
                  return t;
                }()), t;
              }
              function ma() {
                var r, t, e, n, u, s, a, i;
                if (r = fu, (t = Sa()) !== o) {
                  for (e = [], n = fu, (u = da()) !== o && (s = Ro()) !== o && (a = da()) !== o && (i = Sa()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fu = n, n = o); n !== o;)
                    e.push(n), n = fu, (u = da()) !== o && (s = Ro()) !== o && (a = da()) !== o && (i = Sa()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fu = n, n = o);
                  e !== o ? r = t = wr(t, e) : (fu = r, r = o);
                } else
                  fu = r, r = o;
                return r;
              }
              function Sa() {
                var r, t, e, n, u, s, a, i;
                if (r = fu, (t = Ia()) !== o) {
                  for (e = [], n = fu, (u = da()) !== o && (s = go()) !== o && (a = da()) !== o && (i = Ia()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fu = n, n = o); n !== o;)
                    e.push(n), n = fu, (u = da()) !== o && (s = go()) !== o && (a = da()) !== o && (i = Ia()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fu = n, n = o);
                  e !== o ? r = t = wr(t, e) : (fu = r, r = o);
                } else
                  fu = r, r = o;
                return r;
              }
              function Ia() {
                var r, t;
                return (r = Yo()) === o && (r = ga()) === o && (r = Ra()) === o && (r = Go()) === o && (r = fu, la() !== o && da() !== o && (t = ma()) !== o && da() !== o && fa() !== o ? r = Ur(t) : (fu = r, r = o)), r;
              }
              function Na() {
                var r, t, e, n, u, s, a;
                return r = fu, (t = xo()) !== o ? (e = fu, (n = da()) !== o && (u = aa()) !== o && (s = da()) !== o && (a = xo()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (fu = e, e = o), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  let e = r;
                  return null !== t && (e = `${ r }.${ t[3] }`), e;
                }(t, e) : (fu = r, r = o)) : (fu = r, r = o), r;
              }
              function Ra() {
                var r, t, e;
                return r = fu, (t = Na()) !== o && da() !== o && la() !== o && da() !== o ? ((e = _a()) === o && (e = null), e !== o && da() !== o && fa() !== o ? r = t = {
                  type: 'function',
                  name: t,
                  args: {
                    type: 'expr_list',
                    value: e
                  }
                } : (fu = r, r = o)) : (fu = r, r = o), r === o && (r = fu, (t = Na()) !== o && (t = function (r) {
                  return {
                    type: 'function',
                    name: r,
                    args: null
                  };
                }(t)), r = t), r;
              }
              function _a() {
                var r, t, e, n, u, s, a, c;
                if (r = fu, (t = Ia()) !== o) {
                  for (e = [], n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = Ia()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (fu = n, n = o); n !== o;)
                    e.push(n), n = fu, (u = da()) !== o && (s = ia()) !== o && (a = da()) !== o && (c = Ia()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (fu = n, n = o);
                  e !== o ? r = t = i(t, e) : (fu = r, r = o);
                } else
                  fu = r, r = o;
                return r;
              }
              function ga() {
                var r, t, e, n, u;
                return r = fu, (t = Qs()) !== o && (e = Oa()) !== o ? (n = t, u = e, r = t = {
                  type: 'var',
                  ...u,
                  prefix: n
                }) : (fu = r, r = o), r;
              }
              function Oa() {
                var t, e, n, u, s;
                return t = fu, (e = $o()) !== o && (n = function () {
                  var e, n, u, s;
                  e = [], n = fu, 46 === r.charCodeAt(fu) ? (u = '.', fu++) : (u = o, 0 === Lu && hu(pt));
                  u !== o && (s = $o()) !== o ? n = u = [
                    u,
                    s
                  ] : (fu = n, n = o);
                  for (; n !== o;)
                    e.push(n), n = fu, 46 === r.charCodeAt(fu) ? (u = '.', fu++) : (u = o, 0 === Lu && hu(pt)), u !== o && (s = $o()) !== o ? n = u = [
                      u,
                      s
                    ] : (fu = n, n = o);
                  e !== o && (e = function (r) {
                    const t = [];
                    for (let e = 0; e < r.length; e++)
                      t.push(r[e][1]);
                    return t;
                  }(e));
                  return e;
                }()) !== o ? (u = e, s = n, ja.push(u), t = e = {
                  type: 'var',
                  name: u,
                  members: s,
                  prefix: null
                }) : (fu = t, t = o), t;
              }
              function Ua() {
                var t;
                return (t = function () {
                  var t, e, n, u;
                  t = fu, (e = ks()) === o && (e = $s());
                  if (e !== o)
                    if (da() !== o)
                      if (la() !== o)
                        if (da() !== o) {
                          if (n = [], wt.test(r.charAt(fu)) ? (u = r.charAt(fu), fu++) : (u = o, 0 === Lu && hu(Et)), u !== o)
                            for (; u !== o;)
                              n.push(u), wt.test(r.charAt(fu)) ? (u = r.charAt(fu), fu++) : (u = o, 0 === Lu && hu(Et));
                          else
                            n = o;
                          n !== o && (u = da()) !== o && fa() !== o ? (e = {
                            dataType: e,
                            length: parseInt(n.join(''), 10)
                          }, t = e) : (fu = t, t = o);
                        } else
                          fu = t, t = o;
                      else
                        fu = t, t = o;
                    else
                      fu = t, t = o;
                  else
                    fu = t, t = o;
                  t === o && (t = fu, (e = ks()) !== o && (e = lu(e)), (t = e) === o && (t = fu, (e = $s()) !== o && (e = lu(e)), t = e));
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, i, c, l, f, v, b;
                  t = fu, (e = Fs()) === o && (e = Ps()) === o && (e = Gs()) === o && (e = js()) === o && (e = Ys()) === o && (e = Bs()) === o && (e = Xs()) === o && (e = Ws()) === o && (e = Vs());
                  if (e !== o)
                    if ((n = da()) !== o)
                      if ((u = la()) !== o)
                        if ((s = da()) !== o) {
                          if (a = [], wt.test(r.charAt(fu)) ? (i = r.charAt(fu), fu++) : (i = o, 0 === Lu && hu(Et)), i !== o)
                            for (; i !== o;)
                              a.push(i), wt.test(r.charAt(fu)) ? (i = r.charAt(fu), fu++) : (i = o, 0 === Lu && hu(Et));
                          else
                            a = o;
                          if (a !== o)
                            if ((i = da()) !== o) {
                              if (c = fu, (l = ia()) !== o)
                                if ((f = da()) !== o) {
                                  if (v = [], wt.test(r.charAt(fu)) ? (b = r.charAt(fu), fu++) : (b = o, 0 === Lu && hu(Et)), b !== o)
                                    for (; b !== o;)
                                      v.push(b), wt.test(r.charAt(fu)) ? (b = r.charAt(fu), fu++) : (b = o, 0 === Lu && hu(Et));
                                  else
                                    v = o;
                                  v !== o ? c = l = [
                                    l,
                                    f,
                                    v
                                  ] : (fu = c, c = o);
                                } else
                                  fu = c, c = o;
                              else
                                fu = c, c = o;
                              c === o && (c = null), c !== o && (l = da()) !== o && (f = fa()) !== o && (v = da()) !== o ? ((b = xa()) === o && (b = null), b !== o ? (d = c, L = b, e = {
                                dataType: e,
                                length: parseInt(a.join(''), 10),
                                scale: d && parseInt(d[2].join(''), 10),
                                parentheses: !0,
                                suffix: L
                              }, t = e) : (fu = t, t = o)) : (fu = t, t = o);
                            } else
                              fu = t, t = o;
                          else
                            fu = t, t = o;
                        } else
                          fu = t, t = o;
                      else
                        fu = t, t = o;
                    else
                      fu = t, t = o;
                  else
                    fu = t, t = o;
                  var d, L;
                  if (t === o) {
                    if (t = fu, (e = Fs()) === o && (e = Ps()) === o && (e = Gs()) === o && (e = js()) === o && (e = Ys()) === o && (e = Bs()) === o && (e = Xs()) === o && (e = Ws()) === o && (e = Vs()), e !== o) {
                      if (n = [], wt.test(r.charAt(fu)) ? (u = r.charAt(fu), fu++) : (u = o, 0 === Lu && hu(Et)), u !== o)
                        for (; u !== o;)
                          n.push(u), wt.test(r.charAt(fu)) ? (u = r.charAt(fu), fu++) : (u = o, 0 === Lu && hu(Et));
                      else
                        n = o;
                      n !== o && (u = da()) !== o ? ((s = xa()) === o && (s = null), s !== o ? (e = function (r, t, e) {
                        return {
                          dataType: r,
                          length: parseInt(t.join(''), 10),
                          suffix: e
                        };
                      }(e, n, s), t = e) : (fu = t, t = o)) : (fu = t, t = o);
                    } else
                      fu = t, t = o;
                    t === o && (t = fu, (e = Fs()) === o && (e = Ps()) === o && (e = Gs()) === o && (e = js()) === o && (e = Ys()) === o && (e = Bs()) === o && (e = Xs()) === o && (e = Ws()) === o && (e = Vs()), e !== o && (n = da()) !== o ? ((u = xa()) === o && (u = null), u !== o && (s = da()) !== o ? (e = function (r, t) {
                      return {
                        dataType: r,
                        suffix: t
                      };
                    }(e, u), t = e) : (fu = t, t = o)) : (fu = t, t = o));
                  }
                  return t;
                }()) === o && (t = function () {
                  var t;
                  (t = Ks()) === o && (t = qs()) === o && (t = Zs()) === o && (t = zs());
                  t !== o && (t = lu(t));
                  return t;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = fu, 'json' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(qe)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'JSON' : (fu = t, t = o)) : (fu = t, t = o), t;
                  }()) !== o && (e = lu(e));
                  return e;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = fu, 'tinytext' === r.substr(fu, 8).toLowerCase() ? (e = r.substr(fu, 8), fu += 8) : (e = o, 0 === Lu && hu(Je)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'TINYTEXT' : (fu = t, t = o)) : (fu = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = fu, 'text' === r.substr(fu, 4).toLowerCase() ? (e = r.substr(fu, 4), fu += 4) : (e = o, 0 === Lu && hu(Qe)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'TEXT' : (fu = t, t = o)) : (fu = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = fu, 'mediumtext' === r.substr(fu, 10).toLowerCase() ? (e = r.substr(fu, 10), fu += 10) : (e = o, 0 === Lu && hu(rn)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'MEDIUMTEXT' : (fu = t, t = o)) : (fu = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = fu, 'longtext' === r.substr(fu, 8).toLowerCase() ? (e = r.substr(fu, 8), fu += 8) : (e = o, 0 === Lu && hu(tn)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'LONGTEXT' : (fu = t, t = o)) : (fu = t, t = o), t;
                  }());
                  e !== o && (e = { dataType: e });
                  return e;
                }()), t;
              }
              function xa() {
                var t, e, n;
                return t = fu, (e = Hs()) === o && (e = null), e !== o && da() !== o ? ((n = function () {
                  var t, e, n, u;
                  return t = fu, 'zerofill' === r.substr(fu, 8).toLowerCase() ? (e = r.substr(fu, 8), fu += 8) : (e = o, 0 === Lu && hu(Ve)), e !== o ? (n = fu, Lu++, u = Fo(), Lu--, u === o ? n = void 0 : (fu = n, n = o), n !== o ? t = e = 'ZEROFILL' : (fu = t, t = o)) : (fu = t, t = o), t;
                }()) === o && (n = null), n !== o ? t = e = function (r, t) {
                  const e = [];
                  return r && e.push(r), t && e.push(t), e;
                }(e, n) : (fu = t, t = o)) : (fu = t, t = o), t;
              }
              const Ma = {
                ALTER: !0,
                ALL: !0,
                ADD: !0,
                AND: !0,
                AS: !0,
                ASC: !0,
                BETWEEN: !0,
                BY: !0,
                CALL: !0,
                CASE: !0,
                CREATE: !0,
                CONTAINS: !0,
                CURRENT_DATE: !0,
                CURRENT_TIME: !0,
                CURRENT_TIMESTAMP: !0,
                CURRENT_USER: !0,
                DELETE: !0,
                DESC: !0,
                DISTINCT: !0,
                DROP: !0,
                ELSE: !0,
                END: !0,
                EXISTS: !0,
                EXPLAIN: !0,
                FALSE: !0,
                FROM: !0,
                FULL: !0,
                GROUP: !0,
                HAVING: !0,
                IN: !0,
                INNER: !0,
                INSERT: !0,
                INTO: !0,
                IS: !0,
                JOIN: !0,
                JSON: !0,
                KEY: !0,
                LEFT: !0,
                LIKE: !0,
                LIMIT: !0,
                LOW_PRIORITY: !0,
                NOT: !0,
                NULL: !0,
                ON: !0,
                OR: !0,
                ORDER: !0,
                OUTER: !0,
                RECURSIVE: !0,
                RENAME: !0,
                READ: !0,
                RIGHT: !0,
                SELECT: !0,
                SESSION_USER: !0,
                SET: !0,
                SHOW: !0,
                SYSTEM_USER: !0,
                TABLE: !0,
                THEN: !0,
                TRUE: !0,
                TRUNCATE: !0,
                UNION: !0,
                UPDATE: !0,
                USING: !0,
                VALUES: !0,
                WITH: !0,
                WHEN: !0,
                WHERE: !0,
                WRITE: !0,
                GLOBAL: !0,
                SESSION: !0,
                LOCAL: !0,
                PERSIST: !0,
                PERSIST_ONLY: !0
              };
              function Da(r, t) {
                return {
                  type: 'unary_expr',
                  operator: r,
                  expr: t
                };
              }
              function ka(r, t, e) {
                return {
                  type: 'binary_expr',
                  operator: r,
                  left: t,
                  right: e
                };
              }
              function $a(r) {
                const t = n(Number.MAX_SAFE_INTEGER);
                return !(n(r) < t);
              }
              function Fa(r, t) {
                const e = [r];
                for (let r = 0; r < t.length; r++)
                  e.push(t[r][3]);
                return e;
              }
              function Pa(r, t) {
                let e = r;
                for (let r = 0; r < t.length; r++)
                  e = ka(t[r][1], e, t[r][3]);
                return e;
              }
              function Ha(r) {
                const t = Xa[r];
                return t || (r || null);
              }
              function Ga(r) {
                const t = [];
                for (let e of r.keys()) {
                  const r = e.split('::');
                  if (!r) {
                    t.push(e);
                    break;
                  }
                  r && r[1] && (r[1] = Ha(r[1])), t.push(r.join('::'));
                }
                return t;
              }
              let ja = [];
              const Ya = new Set(), Ba = new Set(), Xa = {};
              if ((e = a()) !== o && fu === r.length)
                return e;
              throw e !== o && fu < r.length && hu({ type: 'end' }), Au(du, bu < r.length ? r.charAt(bu) : null, bu < r.length ? Eu(bu, bu + 1) : Eu(bu, bu));
            }
          };
        },
        function (r, t, e) {
          var n = e(0);
          function u(r, t, e, n) {
            this.message = r, this.expected = t, this.found = e, this.location = n, this.name = 'SyntaxError', 'function' == typeof Error.captureStackTrace && Error.captureStackTrace(this, u);
          }
          !function (r, t) {
            function e() {
              this.constructor = r;
            }
            e.prototype = t.prototype, r.prototype = new e();
          }(u, Error), u.buildMessage = function (r, t) {
            var e = {
              literal: function (r) {
                return '"' + u(r.text) + '"';
              },
              class: function (r) {
                var t, e = '';
                for (t = 0; t < r.parts.length; t++)
                  e += r.parts[t] instanceof Array ? o(r.parts[t][0]) + '-' + o(r.parts[t][1]) : o(r.parts[t]);
                return '[' + (r.inverted ? '^' : '') + e + ']';
              },
              any: function (r) {
                return 'any character';
              },
              end: function (r) {
                return 'end of input';
              },
              other: function (r) {
                return r.description;
              }
            };
            function n(r) {
              return r.charCodeAt(0).toString(16).toUpperCase();
            }
            function u(r) {
              return r.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            function o(r) {
              return r.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            return 'Expected ' + function (r) {
              var t, n, u, o = new Array(r.length);
              for (t = 0; t < r.length; t++)
                o[t] = (u = r[t], e[u.type](u));
              if (o.sort(), o.length > 0) {
                for (t = 1, n = 1; t < o.length; t++)
                  o[t - 1] !== o[t] && (o[n] = o[t], n++);
                o.length = n;
              }
              switch (o.length) {
              case 1:
                return o[0];
              case 2:
                return o[0] + ' or ' + o[1];
              default:
                return o.slice(0, -1).join(', ') + ', or ' + o[o.length - 1];
              }
            }(r) + ' but ' + function (r) {
              return r ? '"' + u(r) + '"' : 'end of input';
            }(t) + ' found.';
          }, r.exports = {
            SyntaxError: u,
            parse: function (r, t) {
              t = void 0 !== t ? t : {};
              var e, o = {}, s = { start: Cu }, a = Cu, i = function (r, t) {
                  return Ra(r, t);
                }, c = lu('AUTO_INCREMENT', !0), l = lu('UNIQUE', !0), f = lu('PRIMARY', !0), v = lu('KEY', !0), b = lu('COLUMN_FORMAT', !0), d = lu('FIXED', !0), L = lu('DYNAMIC', !0), C = lu('DEFAULT', !0), p = lu('STORAGE', !0), w = lu('DISK', !0), E = lu('MEMORY', !0), h = lu('ALGORITHM', !0), A = lu('INSTANT', !0), y = lu('INPLACE', !0), T = lu('COPY', !0), m = lu('LOCK', !0), S = lu('NONE', !0), I = lu('SHARED', !0), N = lu('EXCLUSIVE', !0), R = lu('PRIMARY KEY', !0), _ = lu('FOREIGN KEY', !0), g = lu('MATCH FULL', !0), O = lu('MATCH PARTIAL', !0), U = lu('MATCH SIMPLE', !0), x = lu('ON DELETE', !0), M = lu('ON UPDATE', !0), D = lu('RESTRICT', !0), k = lu('CASCADE', !0), $ = lu('SET NULL', !0), F = lu('NO ACTION', !0), P = lu('SET DEFAULT', !0), H = lu('AVG_ROW_LENGTH', !0), G = lu('KEY_BLOCK_SIZE', !0), j = lu('MAX_ROWS', !0), Y = lu('MIN_ROWS', !0), B = lu('STATS_SAMPLE_PAGES', !0), X = lu('CHARACTER SET', !0), W = lu('CHARSET', !0), V = lu('COLLATE', !0), K = lu('CONNECTION', !0), q = lu('COMPRESSION', !0), Z = lu('\'', !1), z = lu('ZLIB', !0), J = lu('LZ4', !0), Q = lu('ENGINE', !0), rr = lu('READ', !0), tr = lu('LOCAL', !0), er = lu('LOW_PRIORITY', !0), nr = lu('WRITE', !0), ur = lu('(', !1), or = lu(')', !1), sr = lu('BTREE', !0), ar = lu('HASH', !0), ir = lu('WITH', !0), cr = lu('PARSER', !0), lr = lu('VISIBLE', !0), fr = lu('INVISIBLE', !0), vr = lu('=', !1), br = lu('DUPLICATE', !0), dr = function (r, t) {
                  return _a(r, t);
                }, Lr = lu('!', !1), Cr = function (r) {
                  return r[0] + ' ' + r[2];
                }, pr = lu('>=', !1), wr = lu('>', !1), Er = lu('<=', !1), hr = lu('<>', !1), Ar = lu('<', !1), yr = lu('!=', !1), Tr = lu('+', !1), mr = lu('-', !1), Sr = lu('*', !1), Ir = lu('/', !1), Nr = lu('%', !1), Rr = function (r) {
                  return r.parentheses = !0, r;
                }, _r = function (r) {
                  return !0 === ma[r.toUpperCase()];
                }, gr = lu('"', !1), Or = /^[^"]/, Ur = fu(['"'], !0, !1), xr = function (r) {
                  return r.join('');
                }, Mr = /^[^']/, Dr = fu(['\''], !0, !1), kr = lu('`', !1), $r = /^[^`]/, Fr = fu(['`'], !0, !1), Pr = function (r, t) {
                  return r + t.join('');
                }, Hr = /^[A-Za-z_]/, Gr = fu([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  '_'
                ], !1, !1), jr = /^[A-Za-z0-9_]/, Yr = fu([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_'
                ], !1, !1), Br = /^[A-Za-z0-9_:]/, Xr = fu([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_',
                  ':'
                ], !1, !1), Wr = lu(':', !1), Vr = function (r) {
                  return {
                    type: 'string',
                    value: r[1].join('')
                  };
                }, Kr = lu('ON UPDATE CURRENT_TIMESTAMP', !0), qr = /^[^"\\\0-\x1F\x7F]/, Zr = fu([
                  '"',
                  '\\',
                  [
                    '\0',
                    '\x1F'
                  ],
                  '\x7F'
                ], !0, !1), zr = /^[^'\\]/, Jr = fu([
                  '\'',
                  '\\'
                ], !0, !1), Qr = lu('\\\'', !1), rt = lu('\\"', !1), tt = lu('\\\\', !1), et = lu('\\/', !1), nt = lu('\\b', !1), ut = lu('\\f', !1), ot = lu('\\n', !1), st = lu('\\r', !1), at = lu('\\t', !1), it = lu('\\u', !1), ct = lu('\\', !1), lt = /^[\n\r]/, ft = fu([
                  '\n',
                  '\r'
                ], !1, !1), vt = lu('.', !1), bt = /^[0-9]/, dt = fu([[
                    '0',
                    '9'
                  ]], !1, !1), Lt = /^[0-9a-fA-F]/, Ct = fu([
                  [
                    '0',
                    '9'
                  ],
                  [
                    'a',
                    'f'
                  ],
                  [
                    'A',
                    'F'
                  ]
                ], !1, !1), pt = /^[eE]/, wt = fu([
                  'e',
                  'E'
                ], !1, !1), Et = /^[+\-]/, ht = fu([
                  '+',
                  '-'
                ], !1, !1), At = lu('NULL', !0), yt = lu('NOT NULL', !0), Tt = lu('TRUE', !0), mt = lu('TO', !0), St = lu('FALSE', !0), It = lu('DROP', !0), Nt = lu('USE', !0), Rt = lu('ALTER', !0), _t = lu('SELECT', !0), gt = lu('UPDATE', !0), Ot = lu('CREATE', !0), Ut = lu('TEMPORARY', !0), xt = lu('IF NOT EXISTS', !0), Mt = lu('DELETE', !0), Dt = lu('INSERT', !0), kt = lu('RECURSIVE', !1), $t = lu('REPLACE', !0), Ft = lu('RENAME', !0), Pt = lu('IGNORE', !0), Ht = lu('PARTITION', !0), Gt = lu('INTO', !0), jt = lu('FROM', !0), Yt = lu('SET', !0), Bt = lu('UNLOCK', !0), Xt = lu('AS', !0), Wt = lu('TABLE', !0), Vt = lu('TABLES', !0), Kt = lu('ON', !0), qt = lu('LEFT', !0), Zt = lu('RIGHT', !0), zt = lu('FULL', !0), Jt = lu('INNER', !0), Qt = lu('JOIN', !0), re = lu('OUTER', !0), te = lu('OVER', !0), ee = lu('UNION', !0), ne = lu('VALUES', !0), ue = lu('USING', !0), oe = lu('WHERE', !0), se = lu('GROUP', !0), ae = lu('BY', !0), ie = lu('ORDER', !0), ce = lu('HAVING', !0), le = lu('LIMIT', !0), fe = lu('OFFSET', !0), ve = lu('ASC', !0), be = lu('DESC', !0), de = lu('ALL', !0), Le = lu('DISTINCT', !0), Ce = lu('BETWEEN', !0), pe = lu('IN', !0), we = lu('IS', !0), Ee = lu('LIKE', !0), he = lu('EXISTS', !0), Ae = lu('NOT', !0), ye = lu('AND', !0), Te = lu('OR', !0), me = lu('COUNT', !0), Se = lu('MAX', !0), Ie = lu('MIN', !0), Ne = lu('SUM', !0), Re = lu('AVG', !0), _e = lu('CALL', !0), ge = lu('CASE', !0), Oe = lu('WHEN', !0), Ue = lu('THEN', !0), xe = lu('ELSE', !0), Me = lu('END', !0), De = lu('CAST', !0), ke = lu('CHAR', !0), $e = lu('VARCHAR', !0), Fe = lu('NUMERIC', !0), Pe = lu('DECIMAL', !0), He = lu('SIGNED', !0), Ge = lu('UNSIGNED', !0), je = lu('INT', !0), Ye = lu('ZEROFILL', !0), Be = lu('INTEGER', !0), Xe = lu('JSON', !0), We = lu('SMALLINT', !0), Ve = lu('TINYINT', !0), Ke = lu('TINYTEXT', !0), qe = lu('TEXT', !0), Ze = lu('MEDIUMTEXT', !0), ze = lu('LONGTEXT', !0), Je = lu('BIGINT', !0), Qe = lu('FLOAT', !0), rn = lu('DOUBLE', !0), tn = lu('DATE', !0), en = lu('DATETIME', !0), nn = lu('TIME', !0), un = lu('TIMESTAMP', !0), on = lu('TRUNCATE', !0), sn = lu('USER', !0), an = lu('CURRENT_DATE', !0), cn = lu('INTERVAL', !0), ln = lu('YEAR', !0), fn = lu('MONTH', !0), vn = lu('DAY', !0), bn = lu('HOUR', !0), dn = lu('MINUTE', !0), Ln = lu('SECOND', !0), Cn = lu('CURRENT_TIME', !0), pn = lu('CURRENT_TIMESTAMP', !0), wn = lu('CURRENT_USER', !0), En = lu('SESSION_USER', !0), hn = lu('SYSTEM_USER', !0), An = lu('GLOBAL', !0), yn = lu('SESSION', !0), Tn = lu('PERSIST', !0), mn = lu('PERSIST_ONLY', !0), Sn = lu('@', !1), In = lu('@@', !1), Nn = lu('$', !1), Rn = lu('return', !0), _n = lu(':=', !1), gn = lu('DUAL', !0), On = lu('ADD', !0), Un = lu('COLUMN', !0), xn = lu('INDEX', !0), Mn = lu('FULLTEXT', !0), Dn = lu('SPATIAL', !0), kn = lu('COMMENT', !0), $n = lu('CONSTRAINT', !0), Fn = lu('REFERENCES', !0), Pn = lu('SQL_CALC_FOUND_ROWS', !0), Hn = lu('SQL_CACHE', !0), Gn = lu('SQL_NO_CACHE', !0), jn = lu('SQL_SMALL_RESULT', !0), Yn = lu('SQL_BIG_RESULT', !0), Bn = lu('SQL_BUFFER_RESULT', !0), Xn = lu(',', !1), Wn = lu('[', !1), Vn = lu(']', !1), Kn = lu(';', !1), qn = lu('||', !1), Zn = lu('&&', !1), zn = lu('/*', !1), Jn = lu('*/', !1), Qn = lu('--', !1), ru = lu('#', !1), tu = { type: 'any' }, eu = /^[ \t\n\r]/, nu = fu([
                  ' ',
                  '\t',
                  '\n',
                  '\r'
                ], !1, !1), uu = function (r) {
                  return { dataType: r };
                }, ou = 0, su = [{
                    line: 1,
                    column: 1
                  }], au = 0, iu = [], cu = 0;
              if ('startRule' in t) {
                if (!(t.startRule in s))
                  throw new Error('Can\'t start parsing from rule "' + t.startRule + '".');
                a = s[t.startRule];
              }
              function lu(r, t) {
                return {
                  type: 'literal',
                  text: r,
                  ignoreCase: t
                };
              }
              function fu(r, t, e) {
                return {
                  type: 'class',
                  parts: r,
                  inverted: t,
                  ignoreCase: e
                };
              }
              function vu(t) {
                var e, n = su[t];
                if (n)
                  return n;
                for (e = t - 1; !su[e];)
                  e--;
                for (n = {
                    line: (n = su[e]).line,
                    column: n.column
                  }; e < t;)
                  10 === r.charCodeAt(e) ? (n.line++, n.column = 1) : n.column++, e++;
                return su[t] = n, n;
              }
              function bu(r, t) {
                var e = vu(r), n = vu(t);
                return {
                  start: {
                    offset: r,
                    line: e.line,
                    column: e.column
                  },
                  end: {
                    offset: t,
                    line: n.line,
                    column: n.column
                  }
                };
              }
              function du(r) {
                ou < au || (ou > au && (au = ou, iu = []), iu.push(r));
              }
              function Lu(r, t, e) {
                return new u(u.buildMessage(r, t), r, t, e);
              }
              function Cu() {
                var r, t;
                return r = ou, ua() !== o ? ((t = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = ou, (t = wu()) !== o) {
                    if (e = [], n = ou, (u = ua()) !== o && (s = ea()) !== o && (a = ua()) !== o && (i = wu()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (ou = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = ou, (u = ua()) !== o && (s = ea()) !== o && (a = ua()) !== o && (i = wu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (ou = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = function (r, t) {
                      const e = [r && r.ast || r];
                      for (let r = 0; r < t.length; r++)
                        t[r][3] && 0 !== t[r][3].length && e.push(t[r][3] && t[r][3].ast || t[r][3]);
                      return {
                        tableList: Array.from(xa),
                        columnList: Oa(Ma),
                        ast: e
                      };
                    }(t, e), r = t) : (ou = r, r = o);
                  } else
                    ou = r, r = o;
                  return r;
                }()) === o && (t = pu()) === o && (t = wu()), t !== o ? r = t : (ou = r, r = o)) : (ou = r, r = o), r;
              }
              function pu() {
                var t;
                return (t = function () {
                  var r, t, e, n;
                  r = ou, (t = qo()) !== o && ua() !== o && (e = ss()) !== o && ua() !== o && (n = Bu()) !== o ? (u = t, s = e, (a = n) && a.forEach(r => xa.add(`${ u }::${ r.db }::${ r.table }`)), t = {
                    tableList: Array.from(xa),
                    columnList: Oa(Ma),
                    ast: {
                      type: u.toLowerCase(),
                      keyword: s.toLowerCase(),
                      name: a
                    }
                  }, r = t) : (ou = r, r = o);
                  var u, s, a;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, c, l, f, v;
                  t = ou, (e = zo()) !== o && ua() !== o ? ((n = Jo()) === o && (n = null), n !== o && ua() !== o && ss() !== o && ua() !== o ? ((u = Qo()) === o && (u = null), u !== o && ua() !== o && (s = Bu()) !== o && ua() !== o && (a = function () {
                    var r, t, e, n, u, s, a, c, l;
                    if (r = ou, (t = ra()) !== o)
                      if (ua() !== o)
                        if ((e = hu()) !== o) {
                          for (n = [], u = ou, (s = ua()) !== o && (a = Js()) !== o && (c = ua()) !== o && (l = hu()) !== o ? u = s = [
                              s,
                              a,
                              c,
                              l
                            ] : (ou = u, u = o); u !== o;)
                            n.push(u), u = ou, (s = ua()) !== o && (a = Js()) !== o && (c = ua()) !== o && (l = hu()) !== o ? u = s = [
                              s,
                              a,
                              c,
                              l
                            ] : (ou = u, u = o);
                          n !== o && (u = ua()) !== o && (s = ta()) !== o ? (t = i(e, n), r = t) : (ou = r, r = o);
                        } else
                          ou = r, r = o;
                      else
                        ou = r, r = o;
                    else
                      ou = r, r = o;
                    return r;
                  }()) !== o && ua() !== o ? ((c = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = ou, (t = Ru()) !== o) {
                      for (e = [], n = ou, (u = ua()) !== o ? ((s = Js()) === o && (s = null), s !== o && (a = ua()) !== o && (i = Ru()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (ou = n, n = o)) : (ou = n, n = o); n !== o;)
                        e.push(n), n = ou, (u = ua()) !== o ? ((s = Js()) === o && (s = null), s !== o && (a = ua()) !== o && (i = Ru()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (ou = n, n = o)) : (ou = n, n = o);
                      e !== o ? (t = Ra(t, e), r = t) : (ou = r, r = o);
                    } else
                      ou = r, r = o;
                    return r;
                  }()) === o && (c = null), c !== o && ua() !== o ? ((l = function () {
                    var t, e, n, u;
                    t = ou, 'ignore' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(Pt));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) === o && (l = rs()), l === o && (l = null), l !== o && ua() !== o ? ((f = os()) === o && (f = null), f !== o && ua() !== o ? ((v = Eu()) === o && (v = null), v !== o ? (b = e, d = n, L = u, p = a, w = c, E = l, h = f, A = v, (C = s) && C.forEach(r => xa.add(`create::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(xa),
                    columnList: Oa(Ma),
                    ast: {
                      type: b[0].toLowerCase(),
                      keyword: 'table',
                      temporary: d && d[0].toLowerCase(),
                      if_not_exists: L && L[0].toLowerCase(),
                      table: C,
                      ignore_replace: E && E[0].toLowerCase(),
                      as: h && h[0].toLowerCase(),
                      query_expr: A && A.ast,
                      create_definitions: p,
                      table_options: w
                    }
                  }, t = e) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o);
                  var b, d, L, C, p, w, E, h, A;
                  t === o && (t = ou, (e = zo()) !== o && ua() !== o ? ((n = Jo()) === o && (n = null), n !== o && ua() !== o && ss() !== o && ua() !== o ? ((u = Qo()) === o && (u = null), u !== o && ua() !== o && (s = Bu()) !== o && ua() !== o && (a = function r() {
                    var t, e;
                    (t = function () {
                      var r, t;
                      r = ou, hs() !== o && ua() !== o && (t = Bu()) !== o ? r = {
                        type: 'like',
                        table: t
                      } : (ou = r, r = o);
                      return r;
                    }()) === o && (t = ou, ra() !== o && ua() !== o && (e = r()) !== o && ua() !== o && ta() !== o ? ((n = e).parentheses = !0, t = n) : (ou = t, t = o));
                    var n;
                    return t;
                  }()) !== o ? (e = function (r, t, e, n, u) {
                    return n && n.forEach(r => xa.add(`create::${ r.db }::${ r.table }`)), {
                      tableList: Array.from(xa),
                      columnList: Oa(Ma),
                      ast: {
                        type: r[0].toLowerCase(),
                        keyword: 'table',
                        temporary: t && t[0].toLowerCase(),
                        if_not_exists: e && e[0].toLowerCase(),
                        table: n,
                        like: u
                      }
                    };
                  }(e, n, u, s, a), t = e) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o));
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = ou, (e = function () {
                    var t, e, n, u;
                    t = ou, 'truncate' === r.substr(ou, 8).toLowerCase() ? (e = r.substr(ou, 8), ou += 8) : (e = o, 0 === cu && du(on));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'TRUNCATE' : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) !== o && ua() !== o ? ((n = ss()) === o && (n = null), n !== o && ua() !== o && (u = Bu()) !== o ? (s = e, a = n, (i = u) && i.forEach(r => xa.add(`${ s }::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(xa),
                    columnList: Oa(Ma),
                    ast: {
                      type: s.toLowerCase(),
                      keyword: a && a.toLowerCase() || 'table',
                      name: i
                    }
                  }, t = e) : (ou = t, t = o)) : (ou = t, t = o);
                  var s, a, i;
                  return t;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = ou, (t = ts()) !== o && ua() !== o && ss() !== o && ua() !== o && (e = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = ou, (t = Hu()) !== o) {
                      for (e = [], n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = Hu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (ou = n, n = o); n !== o;)
                        e.push(n), n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = Hu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (ou = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (ou = r, r = o);
                    } else
                      ou = r, r = o;
                    return r;
                  }()) !== o ? ((n = e).forEach(r => r.forEach(r => r.table && xa.add(`rename::${ r.db }::${ r.table }`))), t = {
                    tableList: Array.from(xa),
                    columnList: Oa(Ma),
                    ast: {
                      type: 'rename',
                      table: n
                    }
                  }, r = t) : (ou = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = ou, (e = function () {
                    var t, e, n, u;
                    t = ou, 'call' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(_e));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'CALL' : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) !== o && ua() !== o && (n = wa()) !== o ? (u = n, e = {
                    tableList: Array.from(xa),
                    columnList: Oa(Ma),
                    ast: {
                      type: 'call',
                      expr: u
                    }
                  }, t = e) : (ou = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = ou, (e = function () {
                    var t, e, n, u;
                    t = ou, 'use' === r.substr(ou, 3).toLowerCase() ? (e = r.substr(ou, 3), ou += 3) : (e = o, 0 === cu && du(Nt));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) !== o && ua() !== o && (n = So()) !== o ? (u = n, xa.add(`use::${ u }::null`), e = {
                    tableList: Array.from(xa),
                    columnList: Oa(Ma),
                    ast: {
                      type: 'use',
                      db: u
                    }
                  }, t = e) : (ou = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = ou, (e = function () {
                    var t, e, n, u;
                    t = ou, 'alter' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(Rt));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) !== o && ua() !== o && ss() !== o && ua() !== o && (n = Bu()) !== o && ua() !== o && (u = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = ou, (t = yu()) !== o) {
                      for (e = [], n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = yu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (ou = n, n = o); n !== o;)
                        e.push(n), n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = yu()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (ou = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (ou = r, r = o);
                    } else
                      ou = r, r = o;
                    return r;
                  }()) !== o ? (a = u, (s = n) && s.length > 0 && s.forEach(r => xa.add(`alter::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(xa),
                    columnList: Oa(Ma),
                    ast: {
                      type: 'alter',
                      table: s,
                      expr: a
                    }
                  }, t = e) : (ou = t, t = o);
                  var s, a;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = ou, (e = us()) !== o && ua() !== o ? ((n = function () {
                    var t, e, n, u;
                    t = ou, 'global' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(An));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'GLOBAL' : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = ou, 'session' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du(yn));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'SESSION' : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = ou, 'local' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(tr));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'LOCAL' : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = ou, 'persist' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du(Tn));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'PERSIST' : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = ou, 'persist_only' === r.substr(ou, 12).toLowerCase() ? (e = r.substr(ou, 12), ou += 12) : (e = o, 0 === cu && du(mn));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'PERSIST_ONLY' : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()), n === o && (n = null), n !== o && ua() !== o && (u = va()) !== o ? (s = n, (a = u).keyword = s, e = {
                    tableList: Array.from(xa),
                    columnList: Oa(Ma),
                    ast: {
                      type: 'set',
                      expr: a
                    }
                  }, t = e) : (ou = t, t = o)) : (ou = t, t = o);
                  var s, a;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = ou, (e = function () {
                    var t, e, n, u;
                    t = ou, 'lock' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(m));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) !== o && ua() !== o && as() !== o && ua() !== o && (n = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = ou, (t = _u()) !== o) {
                      for (e = [], n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (i = _u()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (ou = n, n = o); n !== o;)
                        e.push(n), n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (i = _u()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (ou = n, n = o);
                      e !== o ? (t = Ra(t, e), r = t) : (ou = r, r = o);
                    } else
                      ou = r, r = o;
                    return r;
                  }()) !== o ? (u = n, e = {
                    tableList: Array.from(xa),
                    columnList: Oa(Ma),
                    ast: {
                      type: 'lock',
                      keyword: 'tables',
                      tables: u
                    }
                  }, t = e) : (ou = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e;
                  t = ou, (e = function () {
                    var t, e, n, u;
                    t = ou, 'unlock' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(Bt));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) !== o && ua() !== o && as() !== o ? (e = {
                    tableList: Array.from(xa),
                    columnList: Oa(Ma),
                    ast: {
                      type: 'unlock',
                      keyword: 'tables'
                    }
                  }, t = e) : (ou = t, t = o);
                  return t;
                }()), t;
              }
              function wu() {
                var t;
                return (t = Eu()) === o && (t = function () {
                  var r, t, e, n, u;
                  r = ou, (t = Zo()) !== o && ua() !== o && (e = Bu()) !== o && ua() !== o && us() !== o && ua() !== o && (n = to()) !== o && ua() !== o ? ((u = Zu()) === o && (u = null), u !== o ? (a = n, i = u, (s = e) && s.forEach(r => {
                    const {
                      db: t,
                      as: e,
                      table: n
                    } = r;
                    xa.add(`update::${ t }::${ n }`);
                  }), a && a.forEach(r => Ma.add(`update::${ r.table }::${ r.column }`)), t = {
                    tableList: Array.from(xa),
                    columnList: Oa(Ma),
                    ast: {
                      type: 'update',
                      table: s,
                      set: a,
                      where: i
                    }
                  }, r = t) : (ou = r, r = o)) : (ou = r, r = o);
                  var s, a, i;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n, u, s, a, c;
                  r = ou, (t = so()) !== o && ua() !== o ? ((e = ns()) === o && (e = null), e !== o && ua() !== o && (n = Ku()) !== o && ua() !== o ? ((u = uo()) === o && (u = null), u !== o && ua() !== o && ra() !== o && ua() !== o && (s = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = ou, (t = No()) !== o) {
                      for (e = [], n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = No()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (ou = n, n = o); n !== o;)
                        e.push(n), n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = No()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (ou = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (ou = r, r = o);
                    } else
                      ou = r, r = o;
                    return r;
                  }()) !== o && ua() !== o && ta() !== o && ua() !== o && (a = no()) !== o && ua() !== o ? ((c = oo()) === o && (c = null), c !== o ? (t = function (r, t, e, n, u, o) {
                    if (t && (xa.add(`insert::${ t.db }::${ t.table }`), t.as = null), n) {
                      let r = t && t.table || null;
                      n.forEach(t => Ma.add(`insert::${ r }::${ t }`));
                    }
                    return {
                      tableList: Array.from(xa),
                      columnList: Oa(Ma),
                      ast: {
                        type: r,
                        table: [t],
                        columns: n,
                        values: u,
                        partition: e,
                        on_duplicate_update: o
                      }
                    };
                  }(t, n, u, s, a, c), r = t) : (ou = r, r = o)) : (ou = r, r = o)) : (ou = r, r = o)) : (ou = r, r = o);
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n, u, s;
                  r = ou, (t = so()) !== o && ua() !== o && ns() !== o && ua() !== o && (e = Ku()) !== o && ua() !== o ? ((n = uo()) === o && (n = null), n !== o && ua() !== o && (u = no()) !== o && ua() !== o ? ((s = oo()) === o && (s = null), s !== o ? (a = t, c = n, l = u, f = s, (i = e) && (xa.add(`insert::${ i.db }::${ i.table }`), Ma.add(`insert::${ i.table }::(.*)`), i.as = null), t = {
                    tableList: Array.from(xa),
                    columnList: Oa(Ma),
                    ast: {
                      type: a,
                      table: [i],
                      columns: null,
                      values: l,
                      partition: c,
                      on_duplicate_update: f
                    }
                  }, r = t) : (ou = r, r = o)) : (ou = r, r = o)) : (ou = r, r = o);
                  var a, i, c, l, f;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n, u, s;
                  t = ou, (e = function () {
                    var t, e, n, u;
                    t = ou, 'delete' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(Mt));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) !== o && ua() !== o ? ((n = Bu()) === o && (n = null), n !== o && ua() !== o && (u = Pu()) !== o && ua() !== o ? ((s = Zu()) === o && (s = null), s !== o ? (e = function (r, t, e) {
                    if (t && t.forEach(r => {
                        r.table && xa.add(`delete::${ r.db }::${ r.table }`), Ma.add(`delete::${ r.table }::(.*)`);
                      }), null === r && 1 === t.length) {
                      const e = t[0];
                      r = [{
                          db: e.db,
                          table: e.table,
                          as: e.as,
                          addition: !0
                        }];
                    }
                    return {
                      tableList: Array.from(xa),
                      columnList: Oa(Ma),
                      ast: {
                        type: 'delete',
                        table: r,
                        from: t,
                        where: e
                      }
                    };
                  }(n, u, s), t = e) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) === o && (t = pu()) === o && (t = function () {
                  var r, t;
                  r = [], t = fa();
                  for (; t !== o;)
                    r.push(t), t = fa();
                  return r;
                }()), t;
              }
              function Eu() {
                var r, t, e, n, u, s, a, i, c, l;
                if (r = ou, (t = gu()) !== o) {
                  for (e = [], n = ou, (u = ua()) !== o && (s = fs()) !== o && (a = ua()) !== o ? ((i = Ls()) === o && (i = null), i !== o && (c = ua()) !== o && (l = gu()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c,
                      l
                    ] : (ou = n, n = o)) : (ou = n, n = o); n !== o;)
                    e.push(n), n = ou, (u = ua()) !== o && (s = fs()) !== o && (a = ua()) !== o ? ((i = Ls()) === o && (i = null), i !== o && (c = ua()) !== o && (l = gu()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c,
                      l
                    ] : (ou = n, n = o)) : (ou = n, n = o);
                  e !== o && (n = ua()) !== o ? ((u = zu()) === o && (u = null), u !== o && (s = ua()) !== o ? ((a = ro()) === o && (a = null), a !== o ? r = t = function (r, t, e, n) {
                    let u = r;
                    for (let r = 0; r < t.length; r++)
                      u._next = t[r][5], u.union = t[r][3] ? 'union all' : 'union', u = u._next;
                    return e && (r._orderby = e), n && (r._limit = n), {
                      tableList: Array.from(xa),
                      columnList: Oa(Ma),
                      ast: r
                    };
                  }(t, e, u, a) : (ou = r, r = o)) : (ou = r, r = o)) : (ou = r, r = o);
                } else
                  ou = r, r = o;
                return r;
              }
              function hu() {
                var t;
                return (t = Au()) === o && (t = Tu()) === o && (t = mu()) === o && (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u, s, a;
                    t = ou, (e = Su()) === o && (e = null);
                    e !== o && ua() !== o ? ('primary key' === r.substr(ou, 11).toLowerCase() ? (n = r.substr(ou, 11), ou += 11) : (n = o, 0 === cu && du(R)), n !== o && ua() !== o ? ((u = Gu()) === o && (u = null), u !== o && ua() !== o && (s = xu()) !== o && ua() !== o ? ((a = ju()) === o && (a = null), a !== o ? (c = n, l = u, f = s, v = a, e = {
                      constraint: (i = e) && i.constraint,
                      definition: f,
                      constraint_type: c.toLowerCase(),
                      keyword: i && i.keyword,
                      index_type: l,
                      resource: 'constraint',
                      index_options: v
                    }, t = e) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o);
                    var i, c, l, f, v;
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a, i, c;
                    t = ou, (e = Su()) === o && (e = null);
                    e !== o && ua() !== o && (n = function () {
                      var t, e, n, u;
                      t = ou, 'unique' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(l));
                      e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'UNIQUE' : (ou = t, t = o)) : (ou = t, t = o);
                      return t;
                    }()) !== o && ua() !== o ? ((u = Ks()) === o && (u = qs()), u === o && (u = null), u !== o && ua() !== o ? ((s = No()) === o && (s = null), s !== o && ua() !== o ? ((a = Gu()) === o && (a = null), a !== o && ua() !== o && (i = xu()) !== o && ua() !== o ? ((c = ju()) === o && (c = null), c !== o ? (v = n, b = u, d = s, L = a, C = i, p = c, e = {
                      constraint: (f = e) && f.constraint,
                      definition: C,
                      constraint_type: b && `${ v.toLowerCase() } ${ b.toLowerCase() }` || v.toLowerCase(),
                      keyword: f && f.keyword,
                      index_type: L,
                      index: d,
                      resource: 'constraint',
                      index_options: p
                    }, t = e) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o);
                    var f, v, b, d, L, C, p;
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a;
                    t = ou, (e = Su()) === o && (e = null);
                    e !== o && ua() !== o ? ('foreign key' === r.substr(ou, 11).toLowerCase() ? (n = r.substr(ou, 11), ou += 11) : (n = o, 0 === cu && du(_)), n !== o && ua() !== o ? ((u = No()) === o && (u = null), u !== o && ua() !== o && (s = xu()) !== o && ua() !== o ? ((a = Iu()) === o && (a = null), a !== o ? (c = n, l = u, f = s, v = a, e = {
                      constraint: (i = e) && i.constraint,
                      definition: f,
                      constraint_type: c,
                      keyword: i && i.keyword,
                      index: l,
                      resource: 'constraint',
                      reference_definition: v
                    }, t = e) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o);
                    var i, c, l, f, v;
                    return t;
                  }());
                  return t;
                }()), t;
              }
              function Au() {
                var t, e, n, u, s, a, i, h, A, y, T, m, S, I, N, R, _, g, O, U, x, M, D, k, $;
                return t = ou, (e = mo()) !== o && ua() !== o && (n = ya()) !== o && ua() !== o ? ((u = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    t = ou, 'not null' === r.substr(ou, 8).toLowerCase() ? (e = r.substr(ou, 8), ou += 8) : (e = o, 0 === cu && du(yt));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'not null',
                    value: 'not null'
                  });
                  return e;
                }()) === o && (u = Do()), u === o && (u = null), u !== o && ua() !== o ? ((s = function () {
                  var r, t;
                  r = ou, Vo() !== o && ua() !== o ? ((t = Mo()) === o && (t = vo()), t !== o ? r = {
                    type: 'default',
                    value: t
                  } : (ou = r, r = o)) : (ou = r, r = o);
                  return r;
                }()) === o && (s = null), s !== o && ua() !== o ? ('auto_increment' === r.substr(ou, 14).toLowerCase() ? (a = r.substr(ou, 14), ou += 14) : (a = o, 0 === cu && du(c)), a === o && (a = null), a !== o && ua() !== o ? (i = ou, 'unique' === r.substr(ou, 6).toLowerCase() ? (h = r.substr(ou, 6), ou += 6) : (h = o, 0 === cu && du(l)), h === o && ('primary' === r.substr(ou, 7).toLowerCase() ? (h = r.substr(ou, 7), ou += 7) : (h = o, 0 === cu && du(f))), h === o && (h = null), h !== o && (A = ua()) !== o ? ('key' === r.substr(ou, 3).toLowerCase() ? (y = r.substr(ou, 3), ou += 3) : (y = o, 0 === cu && du(v)), y !== o ? i = h = [
                  h,
                  A,
                  y
                ] : (ou = i, i = o)) : (ou = i, i = o), i === o && (i = null), i !== o && (h = ua()) !== o ? ((A = aa()) === o && (A = null), A !== o && (y = ua()) !== o ? ((T = function () {
                  var t, e;
                  t = ou, function () {
                    var t, e, n, u;
                    t = ou, 'collate' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du(V));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'COLLATE' : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }() !== o && ua() !== o && (e = Ro()) !== o ? t = {
                    type: 'collate',
                    value: e
                  } : (ou = t, t = o);
                  return t;
                }()) === o && (T = null), T !== o && ua() !== o ? ((m = function () {
                  var t, e, n;
                  t = ou, 'column_format' === r.substr(ou, 13).toLowerCase() ? (e = r.substr(ou, 13), ou += 13) : (e = o, 0 === cu && du(b));
                  e !== o && ua() !== o ? ('fixed' === r.substr(ou, 5).toLowerCase() ? (n = r.substr(ou, 5), ou += 5) : (n = o, 0 === cu && du(d)), n === o && ('dynamic' === r.substr(ou, 7).toLowerCase() ? (n = r.substr(ou, 7), ou += 7) : (n = o, 0 === cu && du(L)), n === o && ('default' === r.substr(ou, 7).toLowerCase() ? (n = r.substr(ou, 7), ou += 7) : (n = o, 0 === cu && du(C)))), n !== o ? (e = function (r, t) {
                    return {
                      type: 'column_format',
                      value: t.toLowerCase()
                    };
                  }(0, n), t = e) : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) === o && (m = null), m !== o && ua() !== o ? ((S = function () {
                  var t, e, n;
                  t = ou, 'storage' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du(p));
                  e !== o && ua() !== o ? ('disk' === r.substr(ou, 4).toLowerCase() ? (n = r.substr(ou, 4), ou += 4) : (n = o, 0 === cu && du(w)), n === o && ('memory' === r.substr(ou, 6).toLowerCase() ? (n = r.substr(ou, 6), ou += 6) : (n = o, 0 === cu && du(E))), n !== o ? (e = {
                    type: 'storage',
                    value: n.toLowerCase()
                  }, t = e) : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) === o && (S = null), S !== o && ua() !== o ? ((I = Iu()) === o && (I = null), I !== o ? (N = e, R = n, _ = u, g = s, O = a, U = i, x = A, M = T, D = m, k = S, $ = I, Ma.add(`create::${ N.table }::${ N.column }`), _ && !_.value && (_.value = 'null'), t = e = {
                  column: N,
                  definition: R,
                  nullable: _,
                  default_val: g,
                  auto_increment: O && O.toLowerCase(),
                  unique_or_primary: U && `${ U[0].toLowerCase() } ${ U[2].toLowerCase() }`,
                  comment: x,
                  collate: M,
                  column_format: D,
                  storage: k,
                  reference_definition: $,
                  resource: 'column'
                }) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function yu() {
                var t;
                return (t = function () {
                  var r, t, e, n, u;
                  r = ou, (t = Ws()) !== o && ua() !== o ? ((e = Vs()) === o && (e = null), e !== o && ua() !== o ? ((n = Qo()) === o && (n = null), n !== o && ua() !== o && (u = Au()) !== o ? (s = e, a = n, i = u, t = {
                    action: 'add',
                    ...i,
                    keyword: s,
                    if_not_exists: a && a[0].toLowerCase(),
                    resource: 'column',
                    type: 'alter'
                  }, r = t) : (ou = r, r = o)) : (ou = r, r = o)) : (ou = r, r = o);
                  var s, a, i;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = ou, qo() !== o && ua() !== o ? ((t = Vs()) === o && (t = null), t !== o && ua() !== o && (e = mo()) !== o ? r = {
                    action: 'drop',
                    column: e,
                    keyword: t,
                    resource: 'column',
                    type: 'alter'
                  } : (ou = r, r = o)) : (ou = r, r = o);
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = ou, (t = Ws()) !== o && ua() !== o && (e = Tu()) !== o ? (n = e, t = {
                    action: 'add',
                    type: 'alter',
                    ...n
                  }, r = t) : (ou = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = ou, (t = Ws()) !== o && ua() !== o && (e = mu()) !== o ? (n = e, t = {
                    action: 'add',
                    type: 'alter',
                    ...n
                  }, r = t) : (ou = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n;
                  r = ou, (t = ts()) !== o && ua() !== o ? ((e = Ko()) === o && (e = os()), e === o && (e = null), e !== o && ua() !== o && (n = So()) !== o ? (s = n, t = {
                    action: 'rename',
                    type: 'alter',
                    resource: 'table',
                    keyword: (u = e) && u[0].toLowerCase(),
                    table: s
                  }, r = t) : (ou = r, r = o)) : (ou = r, r = o);
                  var u, s;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = ou, 'algorithm' === r.substr(ou, 9).toLowerCase() ? (e = r.substr(ou, 9), ou += 9) : (e = o, 0 === cu && du(h));
                  e !== o && ua() !== o && Xs() !== o && ua() !== o ? ('default' === r.substr(ou, 7).toLowerCase() ? (n = r.substr(ou, 7), ou += 7) : (n = o, 0 === cu && du(C)), n === o && ('instant' === r.substr(ou, 7).toLowerCase() ? (n = r.substr(ou, 7), ou += 7) : (n = o, 0 === cu && du(A)), n === o && ('inplace' === r.substr(ou, 7).toLowerCase() ? (n = r.substr(ou, 7), ou += 7) : (n = o, 0 === cu && du(y)), n === o && ('copy' === r.substr(ou, 4).toLowerCase() ? (n = r.substr(ou, 4), ou += 4) : (n = o, 0 === cu && du(T))))), n !== o ? t = e = {
                    type: 'alter',
                    keyword: 'algorithm',
                    resource: 'algorithm',
                    algorithm: n
                  } : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = ou, 'lock' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(m));
                  e !== o && ua() !== o && Xs() !== o && ua() !== o ? ('default' === r.substr(ou, 7).toLowerCase() ? (n = r.substr(ou, 7), ou += 7) : (n = o, 0 === cu && du(C)), n === o && ('none' === r.substr(ou, 4).toLowerCase() ? (n = r.substr(ou, 4), ou += 4) : (n = o, 0 === cu && du(S)), n === o && ('shared' === r.substr(ou, 6).toLowerCase() ? (n = r.substr(ou, 6), ou += 6) : (n = o, 0 === cu && du(I)), n === o && ('exclusive' === r.substr(ou, 9).toLowerCase() ? (n = r.substr(ou, 9), ou += 9) : (n = o, 0 === cu && du(N))))), n !== o ? t = e = {
                    type: 'alter',
                    keyword: 'lock',
                    resource: 'lock',
                    lock: n
                  } : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()), t;
              }
              function Tu() {
                var r, t, e, n, u, s, a, i;
                return r = ou, (t = Ks()) === o && (t = qs()), t !== o && ua() !== o ? ((e = No()) === o && (e = null), e !== o && ua() !== o ? ((n = Gu()) === o && (n = null), n !== o && ua() !== o && (u = xu()) !== o && ua() !== o ? ((s = ju()) === o && (s = null), s !== o && ua() !== o ? (a = n, i = s, r = t = {
                  index: e,
                  definition: u,
                  keyword: t.toLowerCase(),
                  index_type: a,
                  resource: 'index',
                  index_options: i
                }) : (ou = r, r = o)) : (ou = r, r = o)) : (ou = r, r = o)) : (ou = r, r = o), r;
              }
              function mu() {
                var t, e, n, u, s, a, i, c, l;
                return t = ou, (e = function () {
                  var t, e, n, u;
                  t = ou, 'fulltext' === r.substr(ou, 8).toLowerCase() ? (e = r.substr(ou, 8), ou += 8) : (e = o, 0 === cu && du(Mn));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'FULLTEXT' : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) === o && (e = function () {
                  var t, e, n, u;
                  t = ou, 'spatial' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du(Dn));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'SPATIAL' : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()), e !== o && ua() !== o ? ((n = Ks()) === o && (n = qs()), n === o && (n = null), n !== o && ua() !== o ? ((u = No()) === o && (u = null), u !== o && ua() !== o && (s = xu()) !== o && ua() !== o ? ((a = ju()) === o && (a = null), a !== o && ua() !== o ? (i = e, l = a, t = e = {
                  index: u,
                  definition: s,
                  keyword: (c = n) && `${ i.toLowerCase() } ${ c.toLowerCase() }` || i.toLowerCase(),
                  index_options: l,
                  resource: 'index'
                }) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Su() {
                var t, e, n, u;
                return t = ou, (e = function () {
                  var t, e, n, u;
                  t = ou, 'constraint' === r.substr(ou, 10).toLowerCase() ? (e = r.substr(ou, 10), ou += 10) : (e = o, 0 === cu && du($n));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'CONSTRAINT' : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) !== o && ua() !== o ? ((n = So()) === o && (n = null), n !== o ? (u = n, t = e = {
                  keyword: e.toLowerCase(),
                  constraint: u
                }) : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Iu() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = ou, (e = function () {
                  var t, e, n, u;
                  t = ou, 'references' === r.substr(ou, 10).toLowerCase() ? (e = r.substr(ou, 10), ou += 10) : (e = o, 0 === cu && du(Fn));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'REFERENCES' : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) !== o && ua() !== o && (n = Bu()) !== o && ua() !== o && (u = xu()) !== o && ua() !== o ? ('match full' === r.substr(ou, 10).toLowerCase() ? (s = r.substr(ou, 10), ou += 10) : (s = o, 0 === cu && du(g)), s === o && ('match partial' === r.substr(ou, 13).toLowerCase() ? (s = r.substr(ou, 13), ou += 13) : (s = o, 0 === cu && du(O)), s === o && ('match simple' === r.substr(ou, 12).toLowerCase() ? (s = r.substr(ou, 12), ou += 12) : (s = o, 0 === cu && du(U)))), s === o && (s = null), s !== o && ua() !== o ? ((a = Nu()) === o && (a = null), a !== o && ua() !== o ? ((i = Nu()) === o && (i = null), i !== o ? (c = s, l = a, f = i, t = e = {
                  definition: u,
                  table: n,
                  keyword: e.toLowerCase(),
                  match: c && c.toLowerCase(),
                  on_delete: l,
                  on_update: f
                }) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Nu() {
                var t, e, n, u;
                return t = ou, 'on delete' === r.substr(ou, 9).toLowerCase() ? (e = r.substr(ou, 9), ou += 9) : (e = o, 0 === cu && du(x)), e === o && ('on update' === r.substr(ou, 9).toLowerCase() ? (e = r.substr(ou, 9), ou += 9) : (e = o, 0 === cu && du(M))), e !== o && ua() !== o && (n = function () {
                  var e;
                  'restrict' === r.substr(ou, 8).toLowerCase() ? (e = r.substr(ou, 8), ou += 8) : (e = o, 0 === cu && du(D));
                  e === o && ('cascade' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du(k)), e === o && ('set null' === r.substr(ou, 8).toLowerCase() ? (e = r.substr(ou, 8), ou += 8) : (e = o, 0 === cu && du($)), e === o && ('no action' === r.substr(ou, 9).toLowerCase() ? (e = r.substr(ou, 9), ou += 9) : (e = o, 0 === cu && du(F)), e === o && ('set default' === r.substr(ou, 11).toLowerCase() ? (e = r.substr(ou, 11), ou += 11) : (e = o, 0 === cu && du(P))))));
                  e !== o && (e = e.toLowerCase());
                  return e;
                }()) !== o ? (u = n, t = e = {
                  type: e.toLowerCase(),
                  value: u
                }) : (ou = t, t = o), t;
              }
              function Ru() {
                var t, e, n, u, s, a, i, l, f;
                return t = ou, 'auto_increment' === r.substr(ou, 14).toLowerCase() ? (e = r.substr(ou, 14), ou += 14) : (e = o, 0 === cu && du(c)), e === o && ('avg_row_length' === r.substr(ou, 14).toLowerCase() ? (e = r.substr(ou, 14), ou += 14) : (e = o, 0 === cu && du(H)), e === o && ('key_block_size' === r.substr(ou, 14).toLowerCase() ? (e = r.substr(ou, 14), ou += 14) : (e = o, 0 === cu && du(G)), e === o && ('max_rows' === r.substr(ou, 8).toLowerCase() ? (e = r.substr(ou, 8), ou += 8) : (e = o, 0 === cu && du(j)), e === o && ('min_rows' === r.substr(ou, 8).toLowerCase() ? (e = r.substr(ou, 8), ou += 8) : (e = o, 0 === cu && du(Y)), e === o && ('stats_sample_pages' === r.substr(ou, 18).toLowerCase() ? (e = r.substr(ou, 18), ou += 18) : (e = o, 0 === cu && du(B))))))), e !== o && ua() !== o ? ((n = Xs()) === o && (n = null), n !== o && ua() !== o && (u = Ho()) !== o ? (l = n, f = u, t = e = {
                  keyword: e.toLowerCase(),
                  symbol: l,
                  value: f.value
                }) : (ou = t, t = o)) : (ou = t, t = o), t === o && (t = ou, (e = Vo()) === o && (e = null), e !== o && ua() !== o ? ('character set' === r.substr(ou, 13).toLowerCase() ? (n = r.substr(ou, 13), ou += 13) : (n = o, 0 === cu && du(X)), n === o && ('charset' === r.substr(ou, 7).toLowerCase() ? (n = r.substr(ou, 7), ou += 7) : (n = o, 0 === cu && du(W)), n === o && ('collate' === r.substr(ou, 7).toLowerCase() ? (n = r.substr(ou, 7), ou += 7) : (n = o, 0 === cu && du(V)))), n !== o && ua() !== o ? ((u = Xs()) === o && (u = null), u !== o && (s = ua()) !== o && (a = Ro()) !== o ? t = e = function (r, t, e, n) {
                  return {
                    keyword: r && `${ r[0].toLowerCase() } ${ t.toLowerCase() }` || t.toLowerCase(),
                    symbol: e,
                    value: n
                  };
                }(e, n, u, a) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o), t === o && (t = ou, (e = Zs()) === o && ('connection' === r.substr(ou, 10).toLowerCase() ? (e = r.substr(ou, 10), ou += 10) : (e = o, 0 === cu && du(K))), e !== o && ua() !== o ? ((n = Xs()) === o && (n = null), n !== o && ua() !== o && (u = ko()) !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: `'${ e.value }'`
                  };
                }(e, n, u) : (ou = t, t = o)) : (ou = t, t = o), t === o && (t = ou, 'compression' === r.substr(ou, 11).toLowerCase() ? (e = r.substr(ou, 11), ou += 11) : (e = o, 0 === cu && du(q)), e !== o && ua() !== o ? ((n = Xs()) === o && (n = null), n !== o && ua() !== o ? (u = ou, 39 === r.charCodeAt(ou) ? (s = '\'', ou++) : (s = o, 0 === cu && du(Z)), s !== o ? ('zlib' === r.substr(ou, 4).toLowerCase() ? (a = r.substr(ou, 4), ou += 4) : (a = o, 0 === cu && du(z)), a === o && ('lz4' === r.substr(ou, 3).toLowerCase() ? (a = r.substr(ou, 3), ou += 3) : (a = o, 0 === cu && du(J)), a === o && ('none' === r.substr(ou, 4).toLowerCase() ? (a = r.substr(ou, 4), ou += 4) : (a = o, 0 === cu && du(S)))), a !== o ? (39 === r.charCodeAt(ou) ? (i = '\'', ou++) : (i = o, 0 === cu && du(Z)), i !== o ? u = s = [
                  s,
                  a,
                  i
                ] : (ou = u, u = o)) : (ou = u, u = o)) : (ou = u, u = o), u !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: e.join('').toUpperCase()
                  };
                }(e, n, u) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o), t === o && (t = ou, 'engine' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(Q)), e !== o && ua() !== o ? ((n = Xs()) === o && (n = null), n !== o && ua() !== o && (u = Ro()) !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: e.toUpperCase()
                  };
                }(e, n, u) : (ou = t, t = o)) : (ou = t, t = o))))), t;
              }
              function _u() {
                var t, e, n, u, s;
                return t = ou, (e = Wu()) !== o && ua() !== o && (n = function () {
                  var t, e, n;
                  return t = ou, 'read' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(rr)), e !== o && ua() !== o ? ('local' === r.substr(ou, 5).toLowerCase() ? (n = r.substr(ou, 5), ou += 5) : (n = o, 0 === cu && du(tr)), n === o && (n = null), n !== o ? t = e = {
                    type: 'read',
                    suffix: n && 'local'
                  } : (ou = t, t = o)) : (ou = t, t = o), t === o && (t = ou, 'low_priority' === r.substr(ou, 12).toLowerCase() ? (e = r.substr(ou, 12), ou += 12) : (e = o, 0 === cu && du(er)), e === o && (e = null), e !== o && ua() !== o ? ('write' === r.substr(ou, 5).toLowerCase() ? (n = r.substr(ou, 5), ou += 5) : (n = o, 0 === cu && du(nr)), n !== o ? t = e = {
                    type: 'write',
                    prefix: e && 'low_priority'
                  } : (ou = t, t = o)) : (ou = t, t = o)), t;
                }()) !== o ? (u = e, s = n, xa.add(`lock::${ u.db }::${ u.table }`), t = e = {
                  table: u,
                  lock_type: s
                }) : (ou = t, t = o), t;
              }
              function gu() {
                var t, e, n, u, s, a, i;
                return (t = Mu()) === o && (t = ou, e = ou, 40 === r.charCodeAt(ou) ? (n = '(', ou++) : (n = o, 0 === cu && du(ur)), n !== o && (u = ua()) !== o && (s = gu()) !== o && (a = ua()) !== o ? (41 === r.charCodeAt(ou) ? (i = ')', ou++) : (i = o, 0 === cu && du(or)), i !== o ? e = n = [
                  n,
                  u,
                  s,
                  a,
                  i
                ] : (ou = e, e = o)) : (ou = e, e = o), e !== o && (e = {
                  ...e[2],
                  parentheses_symbol: !0
                }), t = e), t;
              }
              function Ou() {
                var t, e, n, u, s, a, c, l, f;
                if (t = ou, bs() !== o)
                  if (ua() !== o)
                    if ((e = Uu()) !== o) {
                      for (n = [], u = ou, (s = ua()) !== o && (a = Js()) !== o && (c = ua()) !== o && (l = Uu()) !== o ? u = s = [
                          s,
                          a,
                          c,
                          l
                        ] : (ou = u, u = o); u !== o;)
                        n.push(u), u = ou, (s = ua()) !== o && (a = Js()) !== o && (c = ua()) !== o && (l = Uu()) !== o ? u = s = [
                          s,
                          a,
                          c,
                          l
                        ] : (ou = u, u = o);
                      n !== o ? t = i(e, n) : (ou = t, t = o);
                    } else
                      ou = t, t = o;
                  else
                    ou = t, t = o;
                else
                  ou = t, t = o;
                return t === o && (t = ou, ua() !== o && bs() !== o && (e = ua()) !== o && (n = function () {
                  var t, e, n, u;
                  t = ou, 'RECURSIVE' === r.substr(ou, 9) ? (e = 'RECURSIVE', ou += 9) : (e = o, 0 === cu && du(kt));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) !== o && (u = ua()) !== o && (s = Uu()) !== o ? ((f = s).recursive = !0, t = [f]) : (ou = t, t = o)), t;
              }
              function Uu() {
                var r, t, e, n;
                return r = ou, (t = Ro()) !== o && ua() !== o ? ((e = xu()) === o && (e = null), e !== o && ua() !== o && os() !== o && ua() !== o && ra() !== o && ua() !== o && (n = Eu()) !== o && ua() !== o && ta() !== o ? r = t = {
                  name: t,
                  stmt: n,
                  columns: e
                } : (ou = r, r = o)) : (ou = r, r = o), r;
              }
              function xu() {
                var r, t, e, n, u, s, a, c;
                if (r = ou, ra() !== o)
                  if (ua() !== o)
                    if ((t = No()) !== o) {
                      for (e = [], n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = No()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (ou = n, n = o); n !== o;)
                        e.push(n), n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = No()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (ou = n, n = o);
                      e !== o && (n = ua()) !== o && (u = ta()) !== o ? r = i(t, e) : (ou = r, r = o);
                    } else
                      ou = r, r = o;
                  else
                    ou = r, r = o;
                else
                  ou = r, r = o;
                return r;
              }
              function Mu() {
                var t, e, n, u, s, a, i, c, l, f, v;
                return t = ou, ua() !== o ? ((e = Ou()) === o && (e = null), e !== o && ua() !== o && function () {
                  var t, e, n, u;
                  t = ou, 'select' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(_t));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }() !== o && ua() !== o ? ((n = function () {
                  var r, t, e, n, u, s;
                  if (r = ou, (t = Du()) !== o) {
                    for (e = [], n = ou, (u = ua()) !== o && (s = Du()) !== o ? n = u = [
                        u,
                        s
                      ] : (ou = n, n = o); n !== o;)
                      e.push(n), n = ou, (u = ua()) !== o && (s = Du()) !== o ? n = u = [
                        u,
                        s
                      ] : (ou = n, n = o);
                    e !== o ? (t = function (r, t) {
                      const e = [r];
                      for (let r = 0, n = t.length; r < n; ++r)
                        e.push(t[r][1]);
                      return e;
                    }(t, e), r = t) : (ou = r, r = o);
                  } else
                    ou = r, r = o;
                  return r;
                }()) === o && (n = null), n !== o && ua() !== o ? ((u = Cs()) === o && (u = null), u !== o && ua() !== o && (s = ku()) !== o && ua() !== o ? ((a = Pu()) === o && (a = null), a !== o && ua() !== o ? ((i = Zu()) === o && (i = null), i !== o && ua() !== o ? ((c = function () {
                  var t, e, n;
                  t = ou, (e = function () {
                    var t, e, n, u;
                    t = ou, 'group' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(se));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) !== o && ua() !== o && ds() !== o && ua() !== o && (n = io()) !== o ? (e = n.value, t = e) : (ou = t, t = o);
                  return t;
                }()) === o && (c = null), c !== o && ua() !== o ? ((l = function () {
                  var t, e;
                  t = ou, function () {
                    var t, e, n, u;
                    t = ou, 'having' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(ce));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }() !== o && ua() !== o && (e = vo()) !== o ? t = e : (ou = t, t = o);
                  return t;
                }()) === o && (l = null), l !== o && ua() !== o ? ((f = zu()) === o && (f = null), f !== o && ua() !== o ? ((v = ro()) === o && (v = null), v !== o ? t = function (r, t, e, n, u, o, s, a, i, c) {
                  return u && u.forEach(r => r.table && xa.add(`select::${ r.db }::${ r.table }`)), {
                    with: r,
                    type: 'select',
                    options: t,
                    distinct: e,
                    columns: n,
                    from: u,
                    where: o,
                    groupby: s,
                    having: a,
                    orderby: i,
                    limit: c
                  };
                }(e, n, u, s, a, i, c, l, f, v) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Du() {
                var e;
                return (e = function () {
                  var t;
                  'sql_calc_found_rows' === r.substr(ou, 19).toLowerCase() ? (t = r.substr(ou, 19), ou += 19) : (t = o, 0 === cu && du(Pn));
                  return t;
                }()) === o && ((e = function () {
                  var t;
                  'sql_cache' === r.substr(ou, 9).toLowerCase() ? (t = r.substr(ou, 9), ou += 9) : (t = o, 0 === cu && du(Hn));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_no_cache' === r.substr(ou, 12).toLowerCase() ? (t = r.substr(ou, 12), ou += 12) : (t = o, 0 === cu && du(Gn));
                  return t;
                }()), e === o && (e = function () {
                  var t;
                  'sql_big_result' === r.substr(ou, 14).toLowerCase() ? (t = r.substr(ou, 14), ou += 14) : (t = o, 0 === cu && du(Yn));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_small_result' === r.substr(ou, 16).toLowerCase() ? (t = r.substr(ou, 16), ou += 16) : (t = o, 0 === cu && du(jn));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_buffer_result' === r.substr(ou, 17).toLowerCase() ? (t = r.substr(ou, 17), ou += 17) : (t = o, 0 === cu && du(Bn));
                  return t;
                }())), e !== o && (e = e), e;
              }
              function ku() {
                var r, t, e, n, u, s, a, c, l, f;
                if (r = ou, (t = Ls()) === o && (t = ou, (e = Qs()) !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o), t === o && (t = Qs())), t !== o) {
                  for (e = [], n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = $u()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (ou = n, n = o); n !== o;)
                    e.push(n), n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = $u()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (ou = n, n = o);
                  e !== o ? (l = t, f = e, Ma.add('select::null::(.*)'), r = t = f && f.length > 0 ? (l[0] = {
                    expr: {
                      type: 'column_ref',
                      table: null,
                      column: '*'
                    },
                    as: null
                  }, Ra(l[0], f)) : l[0]) : (ou = r, r = o);
                } else
                  ou = r, r = o;
                if (r === o)
                  if (r = ou, (t = $u()) !== o) {
                    for (e = [], n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = $u()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (ou = n, n = o); n !== o;)
                      e.push(n), n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = $u()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (ou = n, n = o);
                    e !== o ? r = t = i(t, e) : (ou = r, r = o);
                  } else
                    ou = r, r = o;
                return r;
              }
              function $u() {
                var r, t, e, n;
                return r = ou, (t = So()) !== o && ua() !== o && (e = zs()) !== o && ua() !== o && Qs() !== o ? (n = t, Ma.add(`select::${ n }::(.*)`), r = t = {
                  expr: {
                    type: 'column_ref',
                    table: n,
                    column: '*'
                  },
                  as: null
                }) : (ou = r, r = o), r === o && (r = ou, (t = vo()) !== o && ua() !== o ? ((e = Fu()) === o && (e = null), e !== o ? r = t = {
                  expr: t,
                  as: e
                } : (ou = r, r = o)) : (ou = r, r = o)), r;
              }
              function Fu() {
                var r, t, e;
                return r = ou, (t = os()) !== o && ua() !== o && (e = function () {
                  var r, t;
                  r = ou, (t = Ro()) !== o ? (function (r) {
                    if (!0 === ma[r.toUpperCase()])
                      throw new Error('Error: ' + JSON.stringify(r) + ' is a reserved word, can not as alias clause');
                    return !1;
                  }(t) ? o : void 0) !== o ? r = t = t : (ou = r, r = o) : (ou = r, r = o);
                  r === o && (r = ou, (t = Io()) !== o && (t = t), r = t);
                  return r;
                }()) !== o ? r = t = e : (ou = r, r = o), r === o && (r = ou, (t = os()) === o && (t = null), t !== o && ua() !== o && (e = So()) !== o ? r = t = e : (ou = r, r = o)), r;
              }
              function Pu() {
                var t, e;
                return t = ou, function () {
                  var t, e, n, u;
                  t = ou, 'from' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(jt));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }() !== o && ua() !== o && (e = Bu()) !== o ? t = e : (ou = t, t = o), t;
              }
              function Hu() {
                var r, t, e;
                return r = ou, (t = Ku()) !== o && ua() !== o && Ko() !== o && ua() !== o && (e = Ku()) !== o ? r = t = [
                  t,
                  e
                ] : (ou = r, r = o), r;
              }
              function Gu() {
                var t, e;
                return t = ou, vs() !== o && ua() !== o ? ('btree' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(sr)), e === o && ('hash' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(ar))), e !== o ? t = {
                  keyword: 'using',
                  type: e.toLowerCase()
                } : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function ju() {
                var r, t, e, n, u, s;
                if (r = ou, (t = Yu()) !== o) {
                  for (e = [], n = ou, (u = ua()) !== o && (s = Yu()) !== o ? n = u = [
                      u,
                      s
                    ] : (ou = n, n = o); n !== o;)
                    e.push(n), n = ou, (u = ua()) !== o && (s = Yu()) !== o ? n = u = [
                      u,
                      s
                    ] : (ou = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    const e = [r];
                    for (let r = 0; r < t.length; r++)
                      e.push(t[r][1]);
                    return e;
                  }(t, e) : (ou = r, r = o);
                } else
                  ou = r, r = o;
                return r;
              }
              function Yu() {
                var t, e, n, u, s, a;
                return t = ou, (e = function () {
                  var t, e, n, u;
                  t = ou, 'key_block_size' === r.substr(ou, 14).toLowerCase() ? (e = r.substr(ou, 14), ou += 14) : (e = o, 0 === cu && du(G));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'KEY_BLOCK_SIZE' : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) !== o && ua() !== o ? ((n = Xs()) === o && (n = null), n !== o && ua() !== o && (u = Ho()) !== o ? (s = n, a = u, t = e = {
                  type: e.toLowerCase(),
                  symbol: s,
                  expr: a
                }) : (ou = t, t = o)) : (ou = t, t = o), t === o && (t = Gu()) === o && (t = ou, 'with' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(ir)), e !== o && ua() !== o ? ('parser' === r.substr(ou, 6).toLowerCase() ? (n = r.substr(ou, 6), ou += 6) : (n = o, 0 === cu && du(cr)), n !== o && ua() !== o && (u = Ro()) !== o ? t = e = {
                  type: 'with parser',
                  expr: u
                } : (ou = t, t = o)) : (ou = t, t = o), t === o && (t = ou, 'visible' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du(lr)), e === o && ('invisible' === r.substr(ou, 9).toLowerCase() ? (e = r.substr(ou, 9), ou += 9) : (e = o, 0 === cu && du(fr))), e !== o && (e = function (r) {
                  return {
                    type: r.toLowerCase(),
                    expr: r.toLowerCase()
                  };
                }(e)), (t = e) === o && (t = aa()))), t;
              }
              function Bu() {
                var r, t, e, n, u, s;
                if (r = ou, (t = Wu()) !== o) {
                  for (e = [], n = Xu(); n !== o;)
                    e.push(n), n = Xu();
                  e !== o ? (u = t, (s = e).unshift(u), s.forEach(r => {
                    const {
                      table: t,
                      as: e
                    } = r;
                    Da[t] = t, e && (Da[e] = t);
                  }), r = t = s) : (ou = r, r = o);
                } else
                  ou = r, r = o;
                return r;
              }
              function Xu() {
                var r, t, e;
                return r = ou, ua() !== o && (t = Js()) !== o && ua() !== o && (e = Wu()) !== o ? r = e : (ou = r, r = o), r === o && (r = ou, ua() !== o && (t = function () {
                  var r, t, e, n, u, s, a, i, c, l, f;
                  if (r = ou, (t = Vu()) !== o)
                    if (ua() !== o)
                      if ((e = Wu()) !== o)
                        if (ua() !== o)
                          if ((n = vs()) !== o)
                            if (ua() !== o)
                              if (ra() !== o)
                                if (ua() !== o)
                                  if ((u = Ro()) !== o) {
                                    for (s = [], a = ou, (i = ua()) !== o && (c = Js()) !== o && (l = ua()) !== o && (f = Ro()) !== o ? a = i = [
                                        i,
                                        c,
                                        l,
                                        f
                                      ] : (ou = a, a = o); a !== o;)
                                      s.push(a), a = ou, (i = ua()) !== o && (c = Js()) !== o && (l = ua()) !== o && (f = Ro()) !== o ? a = i = [
                                        i,
                                        c,
                                        l,
                                        f
                                      ] : (ou = a, a = o);
                                    s !== o && (a = ua()) !== o && (i = ta()) !== o ? (v = t, d = u, L = s, (b = e).join = v, b.using = Ra(d, L), r = t = b) : (ou = r, r = o);
                                  } else
                                    ou = r, r = o;
                                else
                                  ou = r, r = o;
                              else
                                ou = r, r = o;
                            else
                              ou = r, r = o;
                          else
                            ou = r, r = o;
                        else
                          ou = r, r = o;
                      else
                        ou = r, r = o;
                    else
                      ou = r, r = o;
                  else
                    ou = r, r = o;
                  var v, b, d, L;
                  r === o && (r = ou, (t = Vu()) !== o && ua() !== o && (e = Wu()) !== o && ua() !== o ? ((n = qu()) === o && (n = null), n !== o ? (t = function (r, t, e) {
                    return t.join = r, t.on = e, t;
                  }(t, e, n), r = t) : (ou = r, r = o)) : (ou = r, r = o), r === o && (r = ou, (t = Vu()) !== o && ua() !== o && (e = ra()) !== o && ua() !== o && (n = Eu()) !== o && ua() !== o && ta() !== o && ua() !== o ? ((u = Fu()) === o && (u = null), u !== o && (s = ua()) !== o ? ((a = qu()) === o && (a = null), a !== o ? (t = function (r, t, e, n) {
                    return t.parentheses = !0, {
                      expr: t,
                      as: e,
                      join: r,
                      on: n
                    };
                  }(t, n, u, a), r = t) : (ou = r, r = o)) : (ou = r, r = o)) : (ou = r, r = o)));
                  return r;
                }()) !== o ? r = t : (ou = r, r = o)), r;
              }
              function Wu() {
                var t, e, n, u, s, a;
                return t = ou, (e = function () {
                  var t;
                  'dual' === r.substr(ou, 4).toLowerCase() ? (t = r.substr(ou, 4), ou += 4) : (t = o, 0 === cu && du(gn));
                  return t;
                }()) !== o && (e = { type: 'dual' }), (t = e) === o && (t = ou, (e = Ku()) !== o && ua() !== o ? ((n = Fu()) === o && (n = null), n !== o ? (a = n, t = e = 'var' === (s = e).type ? (s.as = a, s) : {
                  db: s.db,
                  table: s.table,
                  as: a
                }) : (ou = t, t = o)) : (ou = t, t = o), t === o && (t = ou, (e = ra()) !== o && ua() !== o && (n = Eu()) !== o && ua() !== o && ta() !== o && ua() !== o ? ((u = Fu()) === o && (u = null), u !== o ? t = e = function (r, t) {
                  return r.parentheses = !0, {
                    expr: r,
                    as: t
                  };
                }(n, u) : (ou = t, t = o)) : (ou = t, t = o))), t;
              }
              function Vu() {
                var t, e, n, u;
                return t = ou, (e = function () {
                  var t, e, n, u;
                  t = ou, 'left' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(qt));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) !== o && (n = ua()) !== o ? ((u = ls()) === o && (u = null), u !== o && ua() !== o && cs() !== o ? t = e = 'LEFT JOIN' : (ou = t, t = o)) : (ou = t, t = o), t === o && (t = ou, (e = function () {
                  var t, e, n, u;
                  t = ou, 'right' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(Zt));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) !== o && (n = ua()) !== o ? ((u = ls()) === o && (u = null), u !== o && ua() !== o && cs() !== o ? t = e = 'RIGHT JOIN' : (ou = t, t = o)) : (ou = t, t = o), t === o && (t = ou, (e = function () {
                  var t, e, n, u;
                  t = ou, 'full' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(zt));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) !== o && (n = ua()) !== o ? ((u = ls()) === o && (u = null), u !== o && ua() !== o && cs() !== o ? t = e = 'FULL JOIN' : (ou = t, t = o)) : (ou = t, t = o), t === o && (t = ou, e = ou, (n = function () {
                  var t, e, n, u;
                  t = ou, 'inner' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(Jt));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) !== o && (u = ua()) !== o ? e = n = [
                  n,
                  u
                ] : (ou = e, e = o), e === o && (e = null), e !== o && (n = cs()) !== o ? t = e = 'INNER JOIN' : (ou = t, t = o)))), t;
              }
              function Ku() {
                var r, t, e, n, u, s, a, i;
                return r = ou, (t = So()) !== o ? (e = ou, (n = ua()) !== o && (u = zs()) !== o && (s = ua()) !== o && (a = So()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (ou = e, e = o), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  const e = {
                    db: null,
                    table: r
                  };
                  return null !== t && (e.db = r, e.table = t[3]), e;
                }(t, e) : (ou = r, r = o)) : (ou = r, r = o), r === o && (r = ou, (t = ha()) !== o && ((i = t).db = null, i.table = i.name, t = i), r = t), r;
              }
              function qu() {
                var r, t;
                return r = ou, is() !== o && ua() !== o && (t = vo()) !== o ? r = t : (ou = r, r = o), r;
              }
              function Zu() {
                var t, e;
                return t = ou, function () {
                  var t, e, n, u;
                  t = ou, 'where' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(oe));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }() !== o && ua() !== o && (e = vo()) !== o ? t = e : (ou = t, t = o), t;
              }
              function zu() {
                var t, e;
                return t = ou, function () {
                  var t, e, n, u;
                  t = ou, 'order' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(ie));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }() !== o && ua() !== o && ds() !== o && ua() !== o && (e = function () {
                  var r, t, e, n, u, s, a, c;
                  if (r = ou, (t = Ju()) !== o) {
                    for (e = [], n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = Ju()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (ou = n, n = o); n !== o;)
                      e.push(n), n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = Ju()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (ou = n, n = o);
                    e !== o ? (t = i(t, e), r = t) : (ou = r, r = o);
                  } else
                    ou = r, r = o;
                  return r;
                }()) !== o ? t = e : (ou = t, t = o), t;
              }
              function Ju() {
                var t, e, n;
                return t = ou, (e = vo()) !== o && ua() !== o ? ((n = function () {
                  var t, e, n, u;
                  t = ou, 'desc' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(be));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'DESC' : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) === o && (n = function () {
                  var t, e, n, u;
                  t = ou, 'asc' === r.substr(ou, 3).toLowerCase() ? (e = r.substr(ou, 3), ou += 3) : (e = o, 0 === cu && du(ve));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'ASC' : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()), n === o && (n = null), n !== o ? t = e = function (r, t) {
                  const e = {
                    expr: r,
                    type: 'ASC'
                  };
                  return 'DESC' === t && (e.type = 'DESC'), e;
                }(e, n) : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Qu() {
                var r;
                return (r = Ho()) === o && (r = Uo()), r;
              }
              function ro() {
                var t, e, n, u, s, a;
                return t = ou, function () {
                  var t, e, n, u;
                  t = ou, 'limit' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(le));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }() !== o && ua() !== o && (e = Qu()) !== o && ua() !== o ? (n = ou, (u = Js()) === o && (u = function () {
                  var t, e, n, u;
                  t = ou, 'offset' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(fe));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'OFFSET' : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()), u !== o && (s = ua()) !== o && (a = Qu()) !== o ? n = u = [
                  u,
                  s,
                  a
                ] : (ou = n, n = o), n === o && (n = null), n !== o ? t = function (r, t) {
                  const e = [r];
                  return t && e.push(t[2]), {
                    seperator: t && t[0] && t[0].toLowerCase() || '',
                    value: e
                  };
                }(e, n) : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function to() {
                var r, t, e, n, u, s, a, c;
                if (r = ou, (t = eo()) !== o) {
                  for (e = [], n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = eo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (ou = n, n = o); n !== o;)
                    e.push(n), n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = eo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (ou = n, n = o);
                  e !== o ? r = t = i(t, e) : (ou = r, r = o);
                } else
                  ou = r, r = o;
                return r;
              }
              function eo() {
                var t, e, n, u, s, a, i, c;
                return t = ou, e = ou, (n = So()) !== o && (u = ua()) !== o && (s = zs()) !== o ? e = n = [
                  n,
                  u,
                  s
                ] : (ou = e, e = o), e === o && (e = null), e !== o && (n = ua()) !== o && (u = No()) !== o && (s = ua()) !== o ? (61 === r.charCodeAt(ou) ? (a = '=', ou++) : (a = o, 0 === cu && du(vr)), a !== o && ua() !== o && (i = Eo()) !== o ? t = e = {
                  column: u,
                  value: i,
                  table: (c = e) && c[0]
                } : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function no() {
                var t;
                return (t = function () {
                  var t, e;
                  t = ou, function () {
                    var t, e, n, u;
                    t = ou, 'values' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(ne));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }() !== o && ua() !== o && (e = function () {
                    var r, t, e, n, u, s, a, c;
                    if (r = ou, (t = ao()) !== o) {
                      for (e = [], n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = ao()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (ou = n, n = o); n !== o;)
                        e.push(n), n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = ao()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          c
                        ] : (ou = n, n = o);
                      e !== o ? (t = i(t, e), r = t) : (ou = r, r = o);
                    } else
                      ou = r, r = o;
                    return r;
                  }()) !== o ? t = e : (ou = t, t = o);
                  return t;
                }()) === o && (t = Mu()), t;
              }
              function uo() {
                var r, t, e, n, u, s, a, i, c;
                if (r = ou, es() !== o)
                  if (ua() !== o)
                    if ((t = ra()) !== o)
                      if (ua() !== o)
                        if ((e = Ro()) !== o) {
                          for (n = [], u = ou, (s = ua()) !== o && (a = Js()) !== o && (i = ua()) !== o && (c = Ro()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (ou = u, u = o); u !== o;)
                            n.push(u), u = ou, (s = ua()) !== o && (a = Js()) !== o && (i = ua()) !== o && (c = Ro()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (ou = u, u = o);
                          n !== o && (u = ua()) !== o && (s = ta()) !== o ? r = Ra(e, n) : (ou = r, r = o);
                        } else
                          ou = r, r = o;
                      else
                        ou = r, r = o;
                    else
                      ou = r, r = o;
                  else
                    ou = r, r = o;
                else
                  ou = r, r = o;
                return r === o && (r = ou, es() !== o && ua() !== o && (t = ao()) !== o ? r = t : (ou = r, r = o)), r;
              }
              function oo() {
                var t, e, n;
                return t = ou, is() !== o && ua() !== o ? ('duplicate' === r.substr(ou, 9).toLowerCase() ? (e = r.substr(ou, 9), ou += 9) : (e = o, 0 === cu && du(br)), e !== o && ua() !== o && qs() !== o && ua() !== o && Zo() !== o && ua() !== o && (n = to()) !== o ? t = {
                  keyword: 'on duplicate key update',
                  set: n
                } : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function so() {
                var t, e;
                return t = ou, (e = function () {
                  var t, e, n, u;
                  t = ou, 'insert' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(Dt));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) !== o && (e = 'insert'), (t = e) === o && (t = ou, (e = rs()) !== o && (e = 'replace'), t = e), t;
              }
              function ao() {
                var r, t;
                return r = ou, ra() !== o && ua() !== o && (t = io()) !== o && ua() !== o && ta() !== o ? r = t : (ou = r, r = o), r;
              }
              function io() {
                var r, t, e, n, u, s, a, i;
                if (r = ou, (t = vo()) !== o) {
                  for (e = [], n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (i = vo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ou = n, n = o); n !== o;)
                    e.push(n), n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (i = vo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ou = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    const e = { type: 'expr_list' };
                    return e.value = Ra(r, t), e;
                  }(t, e) : (ou = r, r = o);
                } else
                  ou = r, r = o;
                return r;
              }
              function co() {
                var t, e, n;
                return t = ou, function () {
                  var t, e, n, u;
                  t = ou, 'interval' === r.substr(ou, 8).toLowerCase() ? (e = r.substr(ou, 8), ou += 8) : (e = o, 0 === cu && du(cn));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'INTERVAL' : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }() !== o && ua() !== o && (e = vo()) !== o && ua() !== o && (n = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u;
                    t = ou, 'year' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(ln));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'YEAR' : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = ou, 'month' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(fn));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'MONTH' : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = ou, 'day' === r.substr(ou, 3).toLowerCase() ? (e = r.substr(ou, 3), ou += 3) : (e = o, 0 === cu && du(vn));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'DAY' : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = ou, 'hour' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(bn));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'HOUR' : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = ou, 'minute' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(dn));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'MINUTE' : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = ou, 'second' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(Ln));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'SECOND' : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }());
                  return t;
                }()) !== o ? t = {
                  type: 'interval',
                  expr: e,
                  unit: n.toLowerCase()
                } : (ou = t, t = o), t;
              }
              function lo() {
                var t, e, n, u, s, a, i, c, l;
                if (t = ou, Ss() !== o)
                  if (ua() !== o)
                    if ((e = vo()) === o && (e = null), e !== o)
                      if (ua() !== o) {
                        if (n = [], (u = fo()) !== o)
                          for (; u !== o;)
                            n.push(u), u = fo();
                        else
                          n = o;
                        n !== o && (u = ua()) !== o ? ((s = function () {
                          var t, e;
                          t = ou, function () {
                            var t, e, n, u;
                            t = ou, 'else' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(xe));
                            e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                              e,
                              n
                            ] : (ou = t, t = o)) : (ou = t, t = o);
                            return t;
                          }() !== o && ua() !== o && (e = vo()) !== o ? t = {
                            type: 'else',
                            result: e
                          } : (ou = t, t = o);
                          return t;
                        }()) === o && (s = null), s !== o && ua() !== o && function () {
                          var t, e, n, u;
                          t = ou, 'end' === r.substr(ou, 3).toLowerCase() ? (e = r.substr(ou, 3), ou += 3) : (e = o, 0 === cu && du(Me));
                          e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                            e,
                            n
                          ] : (ou = t, t = o)) : (ou = t, t = o);
                          return t;
                        }() !== o && ua() !== o ? ((a = Ss()) === o && (a = null), a !== o ? (i = e, c = n, (l = s) && c.push(l), t = {
                          type: 'case',
                          expr: i || null,
                          args: c
                        }) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o);
                      } else
                        ou = t, t = o;
                    else
                      ou = t, t = o;
                  else
                    ou = t, t = o;
                else
                  ou = t, t = o;
                return t;
              }
              function fo() {
                var t, e, n;
                return t = ou, function () {
                  var t, e, n, u;
                  t = ou, 'when' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(Oe));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }() !== o && ua() !== o && (e = vo()) !== o && ua() !== o && function () {
                  var t, e, n, u;
                  t = ou, 'then' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(Ue));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }() !== o && ua() !== o && (n = vo()) !== o ? t = {
                  type: 'when',
                  cond: e,
                  result: n
                } : (ou = t, t = o), t;
              }
              function vo() {
                var r;
                return (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = ou, (t = To()) !== o) {
                    if (e = [], n = ou, (u = ua()) !== o && (s = na()) !== o && (a = ua()) !== o && (i = To()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (ou = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = ou, (u = ua()) !== o && (s = na()) !== o && (a = ua()) !== o && (i = To()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (ou = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = _a(t, e), r = t) : (ou = r, r = o);
                  } else
                    ou = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s;
                  if (r = ou, (t = ho()) !== o) {
                    if (e = [], n = ou, (u = ua()) !== o && (s = To()) !== o ? n = u = [
                        u,
                        s
                      ] : (ou = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = ou, (u = ua()) !== o && (s = To()) !== o ? n = u = [
                          u,
                          s
                        ] : (ou = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = Sa(t, e[0][1]), r = t) : (ou = r, r = o);
                  } else
                    ou = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = ou, (t = bo()) !== o) {
                    for (e = [], n = ou, (u = oa()) !== o && (s = ms()) !== o && (a = ua()) !== o && (i = bo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (ou = n, n = o); n !== o;)
                      e.push(n), n = ou, (u = oa()) !== o && (s = ms()) !== o && (a = ua()) !== o && (i = bo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (ou = n, n = o);
                    e !== o ? (t = dr(t, e), r = t) : (ou = r, r = o);
                  } else
                    ou = r, r = o;
                  return r;
                }()) === o && (r = gu()), r;
              }
              function bo() {
                var r, t, e, n, u, s, a, i;
                if (r = ou, (t = Lo()) !== o) {
                  for (e = [], n = ou, (u = oa()) !== o && (s = Ts()) !== o && (a = ua()) !== o && (i = Lo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ou = n, n = o); n !== o;)
                    e.push(n), n = ou, (u = oa()) !== o && (s = Ts()) !== o && (a = ua()) !== o && (i = Lo()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ou = n, n = o);
                  e !== o ? r = t = dr(t, e) : (ou = r, r = o);
                } else
                  ou = r, r = o;
                return r;
              }
              function Lo() {
                var t, e, n, u, s;
                return (t = Co()) === o && (t = function () {
                  var r, t, e;
                  r = ou, (t = function () {
                    var r, t, e, n, u;
                    r = ou, t = ou, (e = ys()) !== o && (n = ua()) !== o && (u = As()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (ou = t, t = o);
                    t !== o && (t = Cr(t));
                    (r = t) === o && (r = As());
                    return r;
                  }()) !== o && ua() !== o && ra() !== o && ua() !== o && (e = Eu()) !== o && ua() !== o && ta() !== o ? (n = t, (u = e).parentheses = !0, t = Sa(n, u), r = t) : (ou = r, r = o);
                  var n, u;
                  return r;
                }()) === o && (t = ou, (e = ys()) === o && (e = ou, 33 === r.charCodeAt(ou) ? (n = '!', ou++) : (n = o, 0 === cu && du(Lr)), n !== o ? (u = ou, cu++, 61 === r.charCodeAt(ou) ? (s = '=', ou++) : (s = o, 0 === cu && du(vr)), cu--, s === o ? u = void 0 : (ou = u, u = o), u !== o ? e = n = [
                  n,
                  u
                ] : (ou = e, e = o)) : (ou = e, e = o)), e !== o && (n = ua()) !== o && (u = Lo()) !== o ? t = e = Sa('NOT', u) : (ou = t, t = o)), t;
              }
              function Co() {
                var r, t, e, n, u, s, a;
                return r = ou, (t = Eo()) !== o && ua() !== o ? (e = ou, cu++, n = Ts(), cu--, n === o ? e = void 0 : (ou = e, e = o), e !== o && (n = ua()) !== o ? ((u = function () {
                  var r;
                  (r = function () {
                    var t, e, n, u, s, a;
                    t = [], e = ou, (n = ua()) !== o && (u = po()) !== o && (s = ua()) !== o && (a = Eo()) !== o ? e = n = [
                      n,
                      u,
                      s,
                      a
                    ] : (ou = e, e = o);
                    if (e !== o)
                      for (; e !== o;)
                        t.push(e), e = ou, (n = ua()) !== o && (u = po()) !== o && (s = ua()) !== o && (a = Eo()) !== o ? e = n = [
                          n,
                          u,
                          s,
                          a
                        ] : (ou = e, e = o);
                    else
                      t = o;
                    t !== o && (t = {
                      type: 'arithmetic',
                      tail: t
                    });
                    return t;
                  }()) === o && (r = function () {
                    var r, t, e, n;
                    r = ou, (t = wo()) !== o && ua() !== o && (e = ra()) !== o && ua() !== o && (n = io()) !== o && ua() !== o && ta() !== o ? r = t = {
                      op: t,
                      right: n
                    } : (ou = r, r = o);
                    r === o && (r = ou, (t = wo()) !== o && ua() !== o ? ((e = ha()) === o && (e = ko()), e !== o ? (t = function (r, t) {
                      return {
                        op: r,
                        right: t
                      };
                    }(t, e), r = t) : (ou = r, r = o)) : (ou = r, r = o));
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e, n;
                    r = ou, (t = function () {
                      var r, t, e, n, u;
                      r = ou, t = ou, (e = ys()) !== o && (n = ua()) !== o && (u = ps()) !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (ou = t, t = o);
                      t !== o && (t = Cr(t));
                      (r = t) === o && (r = ps());
                      return r;
                    }()) !== o && ua() !== o && (e = Eo()) !== o && ua() !== o && Ts() !== o && ua() !== o && (n = Eo()) !== o ? r = t = {
                      op: t,
                      right: {
                        type: 'expr_list',
                        value: [
                          e,
                          n
                        ]
                      }
                    } : (ou = r, r = o);
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e, n, u;
                    r = ou, (t = Es()) !== o && (e = ua()) !== o && (n = Eo()) !== o ? r = t = {
                      op: 'IS',
                      right: n
                    } : (ou = r, r = o);
                    r === o && (r = ou, t = ou, (e = Es()) !== o && (n = ua()) !== o && (u = ys()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (ou = t, t = o), t !== o && (e = ua()) !== o && (n = Eo()) !== o ? (t = function (r) {
                      return {
                        op: 'IS NOT',
                        right: r
                      };
                    }(n), r = t) : (ou = r, r = o));
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e;
                    r = ou, (t = function () {
                      var r, t, e, n, u;
                      r = ou, t = ou, (e = ys()) !== o && (n = ua()) !== o && (u = hs()) !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (ou = t, t = o);
                      t !== o && (t = Cr(t));
                      (r = t) === o && (r = hs());
                      return r;
                    }()) !== o && ua() !== o && (e = Co()) !== o ? r = t = {
                      op: t,
                      right: e
                    } : (ou = r, r = o);
                    return r;
                  }());
                  return r;
                }()) === o && (u = null), u !== o ? (s = t, r = t = null === (a = u) ? s : 'arithmetic' === a.type ? _a(s, a.tail) : Ia(a.op, s, a.right)) : (ou = r, r = o)) : (ou = r, r = o)) : (ou = r, r = o), r === o && (r = ko()) === o && (r = mo()), r;
              }
              function po() {
                var t;
                return '>=' === r.substr(ou, 2) ? (t = '>=', ou += 2) : (t = o, 0 === cu && du(pr)), t === o && (62 === r.charCodeAt(ou) ? (t = '>', ou++) : (t = o, 0 === cu && du(wr)), t === o && ('<=' === r.substr(ou, 2) ? (t = '<=', ou += 2) : (t = o, 0 === cu && du(Er)), t === o && ('<>' === r.substr(ou, 2) ? (t = '<>', ou += 2) : (t = o, 0 === cu && du(hr)), t === o && (60 === r.charCodeAt(ou) ? (t = '<', ou++) : (t = o, 0 === cu && du(Ar)), t === o && (61 === r.charCodeAt(ou) ? (t = '=', ou++) : (t = o, 0 === cu && du(vr)), t === o && ('!=' === r.substr(ou, 2) ? (t = '!=', ou += 2) : (t = o, 0 === cu && du(yr)))))))), t;
              }
              function wo() {
                var r, t, e, n, u;
                return r = ou, t = ou, (e = ys()) !== o && (n = ua()) !== o && (u = ws()) !== o ? t = e = [
                  e,
                  n,
                  u
                ] : (ou = t, t = o), t !== o && (t = Cr(t)), (r = t) === o && (r = ws()), r;
              }
              function Eo() {
                var r, t, e, n, u, s, a, i;
                if (r = ou, (t = Ao()) !== o) {
                  for (e = [], n = ou, (u = ua()) !== o && (s = ho()) !== o && (a = ua()) !== o && (i = Ao()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ou = n, n = o); n !== o;)
                    e.push(n), n = ou, (u = ua()) !== o && (s = ho()) !== o && (a = ua()) !== o && (i = Ao()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ou = n, n = o);
                  e !== o ? r = t = dr(t, e) : (ou = r, r = o);
                } else
                  ou = r, r = o;
                return r;
              }
              function ho() {
                var t;
                return 43 === r.charCodeAt(ou) ? (t = '+', ou++) : (t = o, 0 === cu && du(Tr)), t === o && (45 === r.charCodeAt(ou) ? (t = '-', ou++) : (t = o, 0 === cu && du(mr))), t;
              }
              function Ao() {
                var r, t, e, n, u, s, a, i;
                if (r = ou, (t = To()) !== o) {
                  for (e = [], n = ou, (u = ua()) !== o && (s = yo()) !== o && (a = ua()) !== o && (i = To()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ou = n, n = o); n !== o;)
                    e.push(n), n = ou, (u = ua()) !== o && (s = yo()) !== o && (a = ua()) !== o && (i = To()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ou = n, n = o);
                  e !== o ? r = t = _a(t, e) : (ou = r, r = o);
                } else
                  ou = r, r = o;
                return r;
              }
              function yo() {
                var t;
                return 42 === r.charCodeAt(ou) ? (t = '*', ou++) : (t = o, 0 === cu && du(Sr)), t === o && (47 === r.charCodeAt(ou) ? (t = '/', ou++) : (t = o, 0 === cu && du(Ir)), t === o && (37 === r.charCodeAt(ou) ? (t = '%', ou++) : (t = o, 0 === cu && du(Nr)))), t;
              }
              function To() {
                var t, e, n;
                return (t = function () {
                  var t, e, n, u, s, a, i;
                  t = ou, (e = Is()) !== o && ua() !== o && ra() !== o && ua() !== o && (n = vo()) !== o && ua() !== o && os() !== o && ua() !== o && (u = ya()) !== o && ua() !== o && (s = ta()) !== o ? t = e = {
                    type: 'cast',
                    expr: n,
                    target: u
                  } : (ou = t, t = o);
                  t === o && (t = ou, (e = Is()) !== o && ua() !== o && ra() !== o && ua() !== o && (n = vo()) !== o && ua() !== o && os() !== o && ua() !== o && (u = gs()) !== o && ua() !== o && (s = ra()) !== o && ua() !== o && (a = Go()) !== o && ua() !== o && ta() !== o && ua() !== o && (i = ta()) !== o ? (e = function (r, t) {
                    return {
                      type: 'cast',
                      expr: r,
                      target: { dataType: 'DECIMAL(' + t + ')' }
                    };
                  }(n, a), t = e) : (ou = t, t = o), t === o && (t = ou, (e = Is()) !== o && ua() !== o && ra() !== o && ua() !== o && (n = vo()) !== o && ua() !== o && os() !== o && ua() !== o && (u = gs()) !== o && ua() !== o && (s = ra()) !== o && ua() !== o && (a = Go()) !== o && ua() !== o && Js() !== o && ua() !== o && (i = Go()) !== o && ua() !== o && ta() !== o && ua() !== o && ta() !== o ? (e = function (r, t, e) {
                    return {
                      type: 'cast',
                      expr: r,
                      target: { dataType: 'DECIMAL(' + t + ', ' + e + ')' }
                    };
                  }(n, a, i), t = e) : (ou = t, t = o), t === o && (t = ou, (e = Is()) !== o && ua() !== o && ra() !== o && ua() !== o && (n = vo()) !== o && ua() !== o && os() !== o && ua() !== o && (u = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = ou, 'signed' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(He));
                      e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'SIGNED' : (ou = t, t = o)) : (ou = t, t = o);
                      return t;
                    }()) === o && (t = Os());
                    return t;
                  }()) !== o && ua() !== o ? ((s = xs()) === o && (s = null), s !== o && ua() !== o && (a = ta()) !== o ? (e = function (r, t, e) {
                    return {
                      type: 'cast',
                      expr: r,
                      target: { dataType: t + (e ? ' ' + e : '') }
                    };
                  }(n, u, s), t = e) : (ou = t, t = o)) : (ou = t, t = o))));
                  return t;
                }()) === o && (t = Mo()) === o && (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u;
                    t = ou, (e = function () {
                      var t, e, n, u;
                      t = ou, 'count' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(me));
                      e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'COUNT' : (ou = t, t = o)) : (ou = t, t = o);
                      return t;
                    }()) !== o && ua() !== o && ra() !== o && ua() !== o && (n = function () {
                      var t, e, n;
                      t = ou, (e = function () {
                        var e;
                        42 === r.charCodeAt(ou) ? (e = '*', ou++) : (e = o, 0 === cu && du(Sr));
                        e !== o && (e = {
                          type: 'star',
                          value: '*'
                        });
                        return e;
                      }()) !== o && (e = { expr: e });
                      (t = e) === o && (t = ou, (e = Cs()) === o && (e = null), e !== o && ua() !== o && (n = mo()) !== o ? t = e = {
                        distinct: e,
                        expr: n
                      } : (ou = t, t = o));
                      return t;
                    }()) !== o && ua() !== o && ta() !== o && ua() !== o ? ((u = xo()) === o && (u = null), u !== o ? t = e = {
                      type: 'aggr_func',
                      name: e,
                      args: n,
                      over: u
                    } : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n;
                    t = ou, (e = function () {
                      var t;
                      (t = function () {
                        var t, e, n, u;
                        t = ou, 'sum' === r.substr(ou, 3).toLowerCase() ? (e = r.substr(ou, 3), ou += 3) : (e = o, 0 === cu && du(Ne));
                        e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'SUM' : (ou = t, t = o)) : (ou = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = ou, 'max' === r.substr(ou, 3).toLowerCase() ? (e = r.substr(ou, 3), ou += 3) : (e = o, 0 === cu && du(Se));
                        e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'MAX' : (ou = t, t = o)) : (ou = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = ou, 'min' === r.substr(ou, 3).toLowerCase() ? (e = r.substr(ou, 3), ou += 3) : (e = o, 0 === cu && du(Ie));
                        e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'MIN' : (ou = t, t = o)) : (ou = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = ou, 'avg' === r.substr(ou, 3).toLowerCase() ? (e = r.substr(ou, 3), ou += 3) : (e = o, 0 === cu && du(Re));
                        e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'AVG' : (ou = t, t = o)) : (ou = t, t = o);
                        return t;
                      }());
                      return t;
                    }()) !== o && ua() !== o && ra() !== o && ua() !== o && (n = Eo()) !== o && ua() !== o && ta() !== o ? t = e = {
                      type: 'aggr_func',
                      name: e,
                      args: { expr: n }
                    } : (ou = t, t = o);
                    return t;
                  }());
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s;
                  t = ou, (e = pa()) !== o && ua() !== o && ra() !== o && ua() !== o ? ((n = io()) === o && (n = null), n !== o && ua() !== o && (u = ta()) !== o && ua() !== o ? ((s = xo()) === o && (s = null), s !== o ? t = e = {
                    type: 'function',
                    name: e,
                    args: n || {
                      type: 'expr_list',
                      value: []
                    },
                    over: s
                  } : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o);
                  t === o && (t = ou, (e = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = ou, 'current_date' === r.substr(ou, 12).toLowerCase() ? (e = r.substr(ou, 12), ou += 12) : (e = o, 0 === cu && du(an));
                      e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'CURRENT_DATE' : (ou = t, t = o)) : (ou = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = ou, 'current_time' === r.substr(ou, 12).toLowerCase() ? (e = r.substr(ou, 12), ou += 12) : (e = o, 0 === cu && du(Cn));
                      e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'CURRENT_TIME' : (ou = t, t = o)) : (ou = t, t = o);
                      return t;
                    }()) === o && (t = Ys()) === o && (t = function () {
                      var t, e, n, u;
                      t = ou, 'current_user' === r.substr(ou, 12).toLowerCase() ? (e = r.substr(ou, 12), ou += 12) : (e = o, 0 === cu && du(wn));
                      e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'CURRENT_USER' : (ou = t, t = o)) : (ou = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = ou, 'user' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(sn));
                      e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'USER' : (ou = t, t = o)) : (ou = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = ou, 'session_user' === r.substr(ou, 12).toLowerCase() ? (e = r.substr(ou, 12), ou += 12) : (e = o, 0 === cu && du(En));
                      e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'SESSION_USER' : (ou = t, t = o)) : (ou = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = ou, 'system_user' === r.substr(ou, 11).toLowerCase() ? (e = r.substr(ou, 11), ou += 11) : (e = o, 0 === cu && du(hn));
                      e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'SYSTEM_USER' : (ou = t, t = o)) : (ou = t, t = o);
                      return t;
                    }());
                    return t;
                  }()) !== o && ua() !== o && ra() !== o && ua() !== o && (n = ta()) !== o && ua() !== o ? ((u = xo()) === o && (u = null), u !== o ? (e = function (r, t) {
                    return {
                      type: 'function',
                      name: r,
                      args: {
                        type: 'expr_list',
                        value: []
                      },
                      over: t
                    };
                  }(e, u), t = e) : (ou = t, t = o)) : (ou = t, t = o));
                  return t;
                }()) === o && (t = lo()) === o && (t = co()) === o && (t = mo()) === o && (t = Uo()) === o && (t = ou, ra() !== o && ua() !== o && (e = vo()) !== o && ua() !== o && ta() !== o ? t = Rr(e) : (ou = t, t = o), t === o && (t = ou, ra() !== o && ua() !== o && (e = io()) !== o && ua() !== o && ta() !== o ? ((n = e).parentheses = !0, t = n) : (ou = t, t = o), t === o && (t = ha()))), t;
              }
              function mo() {
                var r, t, e, n, u;
                return r = ou, (t = So()) !== o && ua() !== o && zs() !== o && ua() !== o && (e = No()) !== o ? (n = t, u = e, Ma.add(`select::${ n }::${ u }`), r = t = {
                  type: 'column_ref',
                  table: n,
                  column: u
                }) : (ou = r, r = o), r === o && (r = ou, (t = No()) !== o && (t = function (r) {
                  return Ma.add('select::null::' + r), {
                    type: 'column_ref',
                    table: null,
                    column: r
                  };
                }(t)), r = t), r;
              }
              function So() {
                var r, t;
                return r = ou, (t = Ro()) !== o ? (_r(t) ? o : void 0) !== o ? r = t = t : (ou = r, r = o) : (ou = r, r = o), r === o && (r = ou, (t = Io()) !== o && (t = t), r = t), r;
              }
              function Io() {
                var t;
                return (t = function () {
                  var t, e, n, u;
                  t = ou, 34 === r.charCodeAt(ou) ? (e = '"', ou++) : (e = o, 0 === cu && du(gr));
                  if (e !== o) {
                    if (n = [], Or.test(r.charAt(ou)) ? (u = r.charAt(ou), ou++) : (u = o, 0 === cu && du(Ur)), u !== o)
                      for (; u !== o;)
                        n.push(u), Or.test(r.charAt(ou)) ? (u = r.charAt(ou), ou++) : (u = o, 0 === cu && du(Ur));
                    else
                      n = o;
                    n !== o ? (34 === r.charCodeAt(ou) ? (u = '"', ou++) : (u = o, 0 === cu && du(gr)), u !== o ? (e = xr(n), t = e) : (ou = t, t = o)) : (ou = t, t = o);
                  } else
                    ou = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = ou, 39 === r.charCodeAt(ou) ? (e = '\'', ou++) : (e = o, 0 === cu && du(Z));
                  if (e !== o) {
                    if (n = [], Mr.test(r.charAt(ou)) ? (u = r.charAt(ou), ou++) : (u = o, 0 === cu && du(Dr)), u !== o)
                      for (; u !== o;)
                        n.push(u), Mr.test(r.charAt(ou)) ? (u = r.charAt(ou), ou++) : (u = o, 0 === cu && du(Dr));
                    else
                      n = o;
                    n !== o ? (39 === r.charCodeAt(ou) ? (u = '\'', ou++) : (u = o, 0 === cu && du(Z)), u !== o ? (e = xr(n), t = e) : (ou = t, t = o)) : (ou = t, t = o);
                  } else
                    ou = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = ou, 96 === r.charCodeAt(ou) ? (e = '`', ou++) : (e = o, 0 === cu && du(kr));
                  if (e !== o) {
                    if (n = [], $r.test(r.charAt(ou)) ? (u = r.charAt(ou), ou++) : (u = o, 0 === cu && du(Fr)), u !== o)
                      for (; u !== o;)
                        n.push(u), $r.test(r.charAt(ou)) ? (u = r.charAt(ou), ou++) : (u = o, 0 === cu && du(Fr));
                    else
                      n = o;
                    n !== o ? (96 === r.charCodeAt(ou) ? (u = '`', ou++) : (u = o, 0 === cu && du(kr)), u !== o ? (e = xr(n), t = e) : (ou = t, t = o)) : (ou = t, t = o);
                  } else
                    ou = t, t = o;
                  return t;
                }()), t;
              }
              function No() {
                var r, t;
                return r = ou, (t = function () {
                  var r, t, e, n;
                  if (r = ou, (t = _o()) !== o) {
                    for (e = [], n = Oo(); n !== o;)
                      e.push(n), n = Oo();
                    e !== o ? (t = Pr(t, e), r = t) : (ou = r, r = o);
                  } else
                    ou = r, r = o;
                  return r;
                }()) !== o ? (_r(t) ? o : void 0) !== o ? r = t = t : (ou = r, r = o) : (ou = r, r = o), r === o && (r = Io()), r;
              }
              function Ro() {
                var r, t, e, n;
                if (r = ou, (t = _o()) !== o) {
                  for (e = [], n = go(); n !== o;)
                    e.push(n), n = go();
                  e !== o ? r = t = Pr(t, e) : (ou = r, r = o);
                } else
                  ou = r, r = o;
                return r;
              }
              function _o() {
                var t;
                return Hr.test(r.charAt(ou)) ? (t = r.charAt(ou), ou++) : (t = o, 0 === cu && du(Gr)), t;
              }
              function go() {
                var t;
                return jr.test(r.charAt(ou)) ? (t = r.charAt(ou), ou++) : (t = o, 0 === cu && du(Yr)), t;
              }
              function Oo() {
                var t;
                return Br.test(r.charAt(ou)) ? (t = r.charAt(ou), ou++) : (t = o, 0 === cu && du(Xr)), t;
              }
              function Uo() {
                var e, n, u;
                return e = ou, 58 === r.charCodeAt(ou) ? (n = ':', ou++) : (n = o, 0 === cu && du(Wr)), n !== o && (u = Ro()) !== o ? e = n = [
                  n,
                  u
                ] : (ou = e, e = o), e !== o && (e = {
                  type: 'param',
                  value: e[1]
                }), e;
              }
              function xo() {
                var t, e, n;
                return t = ou, function () {
                  var t, e, n, u;
                  t = ou, 'over' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(te));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }() !== o && ua() !== o && ra() !== o && ua() !== o && es() !== o && ua() !== o && ds() !== o && ua() !== o && (e = ku()) !== o && ua() !== o ? ((n = zu()) === o && (n = null), n !== o && ua() !== o && ta() !== o ? t = {
                  partitionby: e,
                  orderby: n
                } : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Mo() {
                var t;
                return (t = ko()) === o && (t = Ho()) === o && (t = function () {
                  var t, e;
                  t = ou, (e = function () {
                    var t, e, n, u;
                    t = ou, 'true' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(Tt));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !0
                  });
                  (t = e) === o && (t = ou, (e = function () {
                    var t, e, n, u;
                    t = ou, 'false' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(St));
                    e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (ou = t, t = o)) : (ou = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !1
                  }), t = e);
                  return t;
                }()) === o && (t = Do()) === o && (t = function () {
                  var t, e, n, u, s, a, i;
                  t = ou, (e = Gs()) === o && (e = Ps()) === o && (e = js()) === o && (e = Hs());
                  if (e !== o)
                    if (ua() !== o) {
                      if (n = ou, 39 === r.charCodeAt(ou) ? (u = '\'', ou++) : (u = o, 0 === cu && du(Z)), u !== o) {
                        for (s = [], a = Fo(); a !== o;)
                          s.push(a), a = Fo();
                        s !== o ? (39 === r.charCodeAt(ou) ? (a = '\'', ou++) : (a = o, 0 === cu && du(Z)), a !== o ? n = u = [
                          u,
                          s,
                          a
                        ] : (ou = n, n = o)) : (ou = n, n = o);
                      } else
                        ou = n, n = o;
                      n !== o ? (c = n, e = {
                        type: e.toLowerCase(),
                        value: c[1].join('')
                      }, t = e) : (ou = t, t = o);
                    } else
                      ou = t, t = o;
                  else
                    ou = t, t = o;
                  var c;
                  t === o && (t = ou, (e = Ys()) !== o && ua() !== o ? ((n = ra()) === o && (n = null), n !== o && (u = ua()) !== o ? ((s = ta()) === o && (s = null), s !== o ? (a = (a = function (r, t, e) {
                    if (t && e)
                      return !0;
                  }(0, n, s)) ? o : void 0) !== o && ua() !== o ? ('on update current_timestamp' === r.substr(ou, 27).toLowerCase() ? (i = r.substr(ou, 27), ou += 27) : (i = o, 0 === cu && du(Kr)), i === o && (i = null), i !== o ? (e = function (r, t, e, n) {
                    return {
                      type: 'origin',
                      value: (n ? `${ r } ${ n }` : r).toLowerCase()
                    };
                  }(e, 0, 0, i), t = e) : (ou = t, t = o)) : (ou = t, t = o) : (ou = t, t = o)) : (ou = t, t = o)) : (ou = t, t = o));
                  return t;
                }()), t;
              }
              function Do() {
                var e;
                return (e = function () {
                  var t, e, n, u;
                  t = ou, 'null' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(At));
                  e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (ou = t, t = o)) : (ou = t, t = o);
                  return t;
                }()) !== o && (e = {
                  type: 'null',
                  value: null
                }), e;
              }
              function ko() {
                var t, e, n, u, s;
                if (t = ou, e = ou, 39 === r.charCodeAt(ou) ? (n = '\'', ou++) : (n = o, 0 === cu && du(Z)), n !== o) {
                  for (u = [], s = Fo(); s !== o;)
                    u.push(s), s = Fo();
                  u !== o ? (39 === r.charCodeAt(ou) ? (s = '\'', ou++) : (s = o, 0 === cu && du(Z)), s !== o ? e = n = [
                    n,
                    u,
                    s
                  ] : (ou = e, e = o)) : (ou = e, e = o);
                } else
                  ou = e, e = o;
                if (e !== o && (e = Vr(e)), (t = e) === o) {
                  if (t = ou, e = ou, 34 === r.charCodeAt(ou) ? (n = '"', ou++) : (n = o, 0 === cu && du(gr)), n !== o) {
                    for (u = [], s = $o(); s !== o;)
                      u.push(s), s = $o();
                    u !== o ? (34 === r.charCodeAt(ou) ? (s = '"', ou++) : (s = o, 0 === cu && du(gr)), s !== o ? e = n = [
                      n,
                      u,
                      s
                    ] : (ou = e, e = o)) : (ou = e, e = o);
                  } else
                    ou = e, e = o;
                  e !== o && (e = Vr(e)), t = e;
                }
                return t;
              }
              function $o() {
                var t;
                return qr.test(r.charAt(ou)) ? (t = r.charAt(ou), ou++) : (t = o, 0 === cu && du(Zr)), t === o && (t = Po()), t;
              }
              function Fo() {
                var t;
                return zr.test(r.charAt(ou)) ? (t = r.charAt(ou), ou++) : (t = o, 0 === cu && du(Jr)), t === o && (t = Po()), t;
              }
              function Po() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = ou, '\\\'' === r.substr(ou, 2) ? (e = '\\\'', ou += 2) : (e = o, 0 === cu && du(Qr)), e !== o && (e = '\''), (t = e) === o && (t = ou, '\\"' === r.substr(ou, 2) ? (e = '\\"', ou += 2) : (e = o, 0 === cu && du(rt)), e !== o && (e = '"'), (t = e) === o && (t = ou, '\\\\' === r.substr(ou, 2) ? (e = '\\\\', ou += 2) : (e = o, 0 === cu && du(tt)), e !== o && (e = '\\'), (t = e) === o && (t = ou, '\\/' === r.substr(ou, 2) ? (e = '\\/', ou += 2) : (e = o, 0 === cu && du(et)), e !== o && (e = '/'), (t = e) === o && (t = ou, '\\b' === r.substr(ou, 2) ? (e = '\\b', ou += 2) : (e = o, 0 === cu && du(nt)), e !== o && (e = '\b'), (t = e) === o && (t = ou, '\\f' === r.substr(ou, 2) ? (e = '\\f', ou += 2) : (e = o, 0 === cu && du(ut)), e !== o && (e = '\f'), (t = e) === o && (t = ou, '\\n' === r.substr(ou, 2) ? (e = '\\n', ou += 2) : (e = o, 0 === cu && du(ot)), e !== o && (e = '\n'), (t = e) === o && (t = ou, '\\r' === r.substr(ou, 2) ? (e = '\\r', ou += 2) : (e = o, 0 === cu && du(st)), e !== o && (e = '\r'), (t = e) === o && (t = ou, '\\t' === r.substr(ou, 2) ? (e = '\\t', ou += 2) : (e = o, 0 === cu && du(at)), e !== o && (e = '\t'), (t = e) === o && (t = ou, '\\u' === r.substr(ou, 2) ? (e = '\\u', ou += 2) : (e = o, 0 === cu && du(it)), e !== o && (n = Wo()) !== o && (u = Wo()) !== o && (s = Wo()) !== o && (a = Wo()) !== o ? (i = n, c = u, l = s, f = a, t = e = String.fromCharCode(parseInt('0x' + i + c + l + f))) : (ou = t, t = o), t === o && (t = ou, 92 === r.charCodeAt(ou) ? (e = '\\', ou++) : (e = o, 0 === cu && du(ct)), e !== o && (e = '\\'), t = e)))))))))), t;
              }
              function Ho() {
                var t, e;
                return (t = function () {
                  var r, t, e, n;
                  r = ou, (t = Go()) !== o && (e = jo()) !== o && (n = Yo()) !== o ? r = t = {
                    type: 'bigint',
                    value: t + e + n
                  } : (ou = r, r = o);
                  r === o && (r = ou, (t = Go()) !== o && (e = jo()) !== o ? (t = function (r, t) {
                    const e = r + t;
                    return Na(r) ? {
                      type: 'bigint',
                      value: e
                    } : parseFloat(e);
                  }(t, e), r = t) : (ou = r, r = o), r === o && (r = ou, (t = Go()) !== o && (e = Yo()) !== o ? (t = function (r, t) {
                    return {
                      type: 'bigint',
                      value: r + t
                    };
                  }(t, e), r = t) : (ou = r, r = o), r === o && (r = ou, (t = Go()) !== o && (t = function (r) {
                    return Na(r) ? {
                      type: 'bigint',
                      value: r
                    } : parseFloat(r);
                  }(t)), r = t)));
                  return r;
                }()) !== o && (t = (e = t) && 'bigint' === e.type ? e : {
                  type: 'number',
                  value: e
                }), t;
              }
              function Go() {
                var t, e, n;
                return (t = Bo()) === o && (t = Xo()) === o && (t = ou, 45 === r.charCodeAt(ou) ? (e = '-', ou++) : (e = o, 0 === cu && du(mr)), e === o && (43 === r.charCodeAt(ou) ? (e = '+', ou++) : (e = o, 0 === cu && du(Tr))), e !== o && (n = Bo()) !== o ? t = e = '-' + n : (ou = t, t = o), t === o && (t = ou, 45 === r.charCodeAt(ou) ? (e = '-', ou++) : (e = o, 0 === cu && du(mr)), e === o && (43 === r.charCodeAt(ou) ? (e = '+', ou++) : (e = o, 0 === cu && du(Tr))), e !== o && (n = Xo()) !== o ? t = e = '-' + n : (ou = t, t = o))), t;
              }
              function jo() {
                var t, e, n;
                return t = ou, 46 === r.charCodeAt(ou) ? (e = '.', ou++) : (e = o, 0 === cu && du(vt)), e !== o && (n = Bo()) !== o ? t = e = '.' + n : (ou = t, t = o), t;
              }
              function Yo() {
                var t, e, n;
                return t = ou, (e = function () {
                  var t, e, n;
                  t = ou, pt.test(r.charAt(ou)) ? (e = r.charAt(ou), ou++) : (e = o, 0 === cu && du(wt));
                  e !== o ? (Et.test(r.charAt(ou)) ? (n = r.charAt(ou), ou++) : (n = o, 0 === cu && du(ht)), n === o && (n = null), n !== o ? t = e = e + (null !== (u = n) ? u : '') : (ou = t, t = o)) : (ou = t, t = o);
                  var u;
                  return t;
                }()) !== o && (n = Bo()) !== o ? t = e = e + n : (ou = t, t = o), t;
              }
              function Bo() {
                var t, e;
                if (t = [], (e = Xo()) !== o)
                  for (; e !== o;)
                    t.push(e), e = Xo();
                else
                  t = o;
                return t !== o && (t = t.join('')), t;
              }
              function Xo() {
                var t;
                return bt.test(r.charAt(ou)) ? (t = r.charAt(ou), ou++) : (t = o, 0 === cu && du(dt)), t;
              }
              function Wo() {
                var t;
                return Lt.test(r.charAt(ou)) ? (t = r.charAt(ou), ou++) : (t = o, 0 === cu && du(Ct)), t;
              }
              function Vo() {
                var t, e, n, u;
                return t = ou, 'default' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du(C)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Ko() {
                var t, e, n, u;
                return t = ou, 'to' === r.substr(ou, 2).toLowerCase() ? (e = r.substr(ou, 2), ou += 2) : (e = o, 0 === cu && du(mt)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function qo() {
                var t, e, n, u;
                return t = ou, 'drop' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(It)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'DROP' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Zo() {
                var t, e, n, u;
                return t = ou, 'update' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(gt)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function zo() {
                var t, e, n, u;
                return t = ou, 'create' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(Ot)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Jo() {
                var t, e, n, u;
                return t = ou, 'temporary' === r.substr(ou, 9).toLowerCase() ? (e = r.substr(ou, 9), ou += 9) : (e = o, 0 === cu && du(Ut)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Qo() {
                var t, e, n, u;
                return t = ou, 'if not exists' === r.substr(ou, 13).toLowerCase() ? (e = r.substr(ou, 13), ou += 13) : (e = o, 0 === cu && du(xt)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function rs() {
                var t, e, n, u;
                return t = ou, 'replace' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du($t)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function ts() {
                var t, e, n, u;
                return t = ou, 'rename' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(Ft)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function es() {
                var t, e, n, u;
                return t = ou, 'partition' === r.substr(ou, 9).toLowerCase() ? (e = r.substr(ou, 9), ou += 9) : (e = o, 0 === cu && du(Ht)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'PARTITION' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function ns() {
                var t, e, n, u;
                return t = ou, 'into' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(Gt)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function us() {
                var t, e, n, u;
                return t = ou, 'set' === r.substr(ou, 3).toLowerCase() ? (e = r.substr(ou, 3), ou += 3) : (e = o, 0 === cu && du(Yt)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function os() {
                var t, e, n, u;
                return t = ou, 'as' === r.substr(ou, 2).toLowerCase() ? (e = r.substr(ou, 2), ou += 2) : (e = o, 0 === cu && du(Xt)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function ss() {
                var t, e, n, u;
                return t = ou, 'table' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(Wt)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'TABLE' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function as() {
                var t, e, n, u;
                return t = ou, 'tables' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(Vt)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'TABLES' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function is() {
                var t, e, n, u;
                return t = ou, 'on' === r.substr(ou, 2).toLowerCase() ? (e = r.substr(ou, 2), ou += 2) : (e = o, 0 === cu && du(Kt)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function cs() {
                var t, e, n, u;
                return t = ou, 'join' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(Qt)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function ls() {
                var t, e, n, u;
                return t = ou, 'outer' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(re)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function fs() {
                var t, e, n, u;
                return t = ou, 'union' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(ee)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function vs() {
                var t, e, n, u;
                return t = ou, 'using' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(ue)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function bs() {
                var t, e, n, u;
                return t = ou, 'with' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(ir)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function ds() {
                var t, e, n, u;
                return t = ou, 'by' === r.substr(ou, 2).toLowerCase() ? (e = r.substr(ou, 2), ou += 2) : (e = o, 0 === cu && du(ae)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Ls() {
                var t, e, n, u;
                return t = ou, 'all' === r.substr(ou, 3).toLowerCase() ? (e = r.substr(ou, 3), ou += 3) : (e = o, 0 === cu && du(de)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'ALL' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Cs() {
                var t, e, n, u;
                return t = ou, 'distinct' === r.substr(ou, 8).toLowerCase() ? (e = r.substr(ou, 8), ou += 8) : (e = o, 0 === cu && du(Le)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'DISTINCT' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function ps() {
                var t, e, n, u;
                return t = ou, 'between' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du(Ce)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'BETWEEN' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function ws() {
                var t, e, n, u;
                return t = ou, 'in' === r.substr(ou, 2).toLowerCase() ? (e = r.substr(ou, 2), ou += 2) : (e = o, 0 === cu && du(pe)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'IN' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Es() {
                var t, e, n, u;
                return t = ou, 'is' === r.substr(ou, 2).toLowerCase() ? (e = r.substr(ou, 2), ou += 2) : (e = o, 0 === cu && du(we)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'IS' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function hs() {
                var t, e, n, u;
                return t = ou, 'like' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(Ee)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'LIKE' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function As() {
                var t, e, n, u;
                return t = ou, 'exists' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(he)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'EXISTS' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function ys() {
                var t, e, n, u;
                return t = ou, 'not' === r.substr(ou, 3).toLowerCase() ? (e = r.substr(ou, 3), ou += 3) : (e = o, 0 === cu && du(Ae)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'NOT' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Ts() {
                var t, e, n, u;
                return t = ou, 'and' === r.substr(ou, 3).toLowerCase() ? (e = r.substr(ou, 3), ou += 3) : (e = o, 0 === cu && du(ye)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'AND' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function ms() {
                var t, e, n, u;
                return t = ou, 'or' === r.substr(ou, 2).toLowerCase() ? (e = r.substr(ou, 2), ou += 2) : (e = o, 0 === cu && du(Te)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'OR' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Ss() {
                var t, e, n, u;
                return t = ou, 'case' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(ge)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Is() {
                var t, e, n, u;
                return t = ou, 'cast' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(De)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Ns() {
                var t, e, n, u;
                return t = ou, 'char' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(ke)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'CHAR' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Rs() {
                var t, e, n, u;
                return t = ou, 'varchar' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du($e)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'VARCHAR' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function _s() {
                var t, e, n, u;
                return t = ou, 'numeric' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du(Fe)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'NUMERIC' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function gs() {
                var t, e, n, u;
                return t = ou, 'decimal' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du(Pe)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'DECIMAL' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Os() {
                var t, e, n, u;
                return t = ou, 'unsigned' === r.substr(ou, 8).toLowerCase() ? (e = r.substr(ou, 8), ou += 8) : (e = o, 0 === cu && du(Ge)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'UNSIGNED' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Us() {
                var t, e, n, u;
                return t = ou, 'int' === r.substr(ou, 3).toLowerCase() ? (e = r.substr(ou, 3), ou += 3) : (e = o, 0 === cu && du(je)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'INT' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function xs() {
                var t, e, n, u;
                return t = ou, 'integer' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du(Be)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'INTEGER' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Ms() {
                var t, e, n, u;
                return t = ou, 'smallint' === r.substr(ou, 8).toLowerCase() ? (e = r.substr(ou, 8), ou += 8) : (e = o, 0 === cu && du(We)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'SMALLINT' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Ds() {
                var t, e, n, u;
                return t = ou, 'tinyint' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du(Ve)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'TINYINT' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function ks() {
                var t, e, n, u;
                return t = ou, 'bigint' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(Je)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'BIGINT' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function $s() {
                var t, e, n, u;
                return t = ou, 'float' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(Qe)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'FLOAT' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Fs() {
                var t, e, n, u;
                return t = ou, 'double' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(rn)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'DOUBLE' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Ps() {
                var t, e, n, u;
                return t = ou, 'date' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(tn)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'DATE' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Hs() {
                var t, e, n, u;
                return t = ou, 'datetime' === r.substr(ou, 8).toLowerCase() ? (e = r.substr(ou, 8), ou += 8) : (e = o, 0 === cu && du(en)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'DATETIME' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Gs() {
                var t, e, n, u;
                return t = ou, 'time' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(nn)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'TIME' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function js() {
                var t, e, n, u;
                return t = ou, 'timestamp' === r.substr(ou, 9).toLowerCase() ? (e = r.substr(ou, 9), ou += 9) : (e = o, 0 === cu && du(un)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'TIMESTAMP' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Ys() {
                var t, e, n, u;
                return t = ou, 'current_timestamp' === r.substr(ou, 17).toLowerCase() ? (e = r.substr(ou, 17), ou += 17) : (e = o, 0 === cu && du(pn)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'CURRENT_TIMESTAMP' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Bs() {
                var t;
                return (t = function () {
                  var t;
                  return '@@' === r.substr(ou, 2) ? (t = '@@', ou += 2) : (t = o, 0 === cu && du(In)), t;
                }()) === o && (t = function () {
                  var t;
                  return 64 === r.charCodeAt(ou) ? (t = '@', ou++) : (t = o, 0 === cu && du(Sn)), t;
                }()) === o && (t = function () {
                  var t;
                  return 36 === r.charCodeAt(ou) ? (t = '$', ou++) : (t = o, 0 === cu && du(Nn)), t;
                }()), t;
              }
              function Xs() {
                var t;
                return 61 === r.charCodeAt(ou) ? (t = '=', ou++) : (t = o, 0 === cu && du(vr)), t;
              }
              function Ws() {
                var t, e, n, u;
                return t = ou, 'add' === r.substr(ou, 3).toLowerCase() ? (e = r.substr(ou, 3), ou += 3) : (e = o, 0 === cu && du(On)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'ADD' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Vs() {
                var t, e, n, u;
                return t = ou, 'column' === r.substr(ou, 6).toLowerCase() ? (e = r.substr(ou, 6), ou += 6) : (e = o, 0 === cu && du(Un)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'COLUMN' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Ks() {
                var t, e, n, u;
                return t = ou, 'index' === r.substr(ou, 5).toLowerCase() ? (e = r.substr(ou, 5), ou += 5) : (e = o, 0 === cu && du(xn)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'INDEX' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function qs() {
                var t, e, n, u;
                return t = ou, 'key' === r.substr(ou, 3).toLowerCase() ? (e = r.substr(ou, 3), ou += 3) : (e = o, 0 === cu && du(v)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'KEY' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function Zs() {
                var t, e, n, u;
                return t = ou, 'comment' === r.substr(ou, 7).toLowerCase() ? (e = r.substr(ou, 7), ou += 7) : (e = o, 0 === cu && du(kn)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'COMMENT' : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function zs() {
                var t;
                return 46 === r.charCodeAt(ou) ? (t = '.', ou++) : (t = o, 0 === cu && du(vt)), t;
              }
              function Js() {
                var t;
                return 44 === r.charCodeAt(ou) ? (t = ',', ou++) : (t = o, 0 === cu && du(Xn)), t;
              }
              function Qs() {
                var t;
                return 42 === r.charCodeAt(ou) ? (t = '*', ou++) : (t = o, 0 === cu && du(Sr)), t;
              }
              function ra() {
                var t;
                return 40 === r.charCodeAt(ou) ? (t = '(', ou++) : (t = o, 0 === cu && du(ur)), t;
              }
              function ta() {
                var t;
                return 41 === r.charCodeAt(ou) ? (t = ')', ou++) : (t = o, 0 === cu && du(or)), t;
              }
              function ea() {
                var t;
                return 59 === r.charCodeAt(ou) ? (t = ';', ou++) : (t = o, 0 === cu && du(Kn)), t;
              }
              function na() {
                var t;
                return (t = function () {
                  var t;
                  return '||' === r.substr(ou, 2) ? (t = '||', ou += 2) : (t = o, 0 === cu && du(qn)), t;
                }()) === o && (t = function () {
                  var t;
                  return '&&' === r.substr(ou, 2) ? (t = '&&', ou += 2) : (t = o, 0 === cu && du(Zn)), t;
                }()), t;
              }
              function ua() {
                var r, t;
                for (r = [], (t = ca()) === o && (t = sa()); t !== o;)
                  r.push(t), (t = ca()) === o && (t = sa());
                return r;
              }
              function oa() {
                var r, t;
                if (r = [], (t = ca()) === o && (t = sa()), t !== o)
                  for (; t !== o;)
                    r.push(t), (t = ca()) === o && (t = sa());
                else
                  r = o;
                return r;
              }
              function sa() {
                var t;
                return (t = function () {
                  var t, e, n, u, s, a;
                  t = ou, '/*' === r.substr(ou, 2) ? (e = '/*', ou += 2) : (e = o, 0 === cu && du(zn));
                  if (e !== o) {
                    for (n = [], u = ou, s = ou, cu++, '*/' === r.substr(ou, 2) ? (a = '*/', ou += 2) : (a = o, 0 === cu && du(Jn)), cu--, a === o ? s = void 0 : (ou = s, s = o), s !== o && (a = ia()) !== o ? u = s = [
                        s,
                        a
                      ] : (ou = u, u = o); u !== o;)
                      n.push(u), u = ou, s = ou, cu++, '*/' === r.substr(ou, 2) ? (a = '*/', ou += 2) : (a = o, 0 === cu && du(Jn)), cu--, a === o ? s = void 0 : (ou = s, s = o), s !== o && (a = ia()) !== o ? u = s = [
                        s,
                        a
                      ] : (ou = u, u = o);
                    n !== o ? ('*/' === r.substr(ou, 2) ? (u = '*/', ou += 2) : (u = o, 0 === cu && du(Jn)), u !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (ou = t, t = o)) : (ou = t, t = o);
                  } else
                    ou = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = ou, '--' === r.substr(ou, 2) ? (e = '--', ou += 2) : (e = o, 0 === cu && du(Qn));
                  if (e !== o) {
                    for (n = [], u = ou, s = ou, cu++, a = la(), cu--, a === o ? s = void 0 : (ou = s, s = o), s !== o && (a = ia()) !== o ? u = s = [
                        s,
                        a
                      ] : (ou = u, u = o); u !== o;)
                      n.push(u), u = ou, s = ou, cu++, a = la(), cu--, a === o ? s = void 0 : (ou = s, s = o), s !== o && (a = ia()) !== o ? u = s = [
                        s,
                        a
                      ] : (ou = u, u = o);
                    n !== o ? t = e = [
                      e,
                      n
                    ] : (ou = t, t = o);
                  } else
                    ou = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = ou, 35 === r.charCodeAt(ou) ? (e = '#', ou++) : (e = o, 0 === cu && du(ru));
                  if (e !== o) {
                    for (n = [], u = ou, s = ou, cu++, a = la(), cu--, a === o ? s = void 0 : (ou = s, s = o), s !== o && (a = ia()) !== o ? u = s = [
                        s,
                        a
                      ] : (ou = u, u = o); u !== o;)
                      n.push(u), u = ou, s = ou, cu++, a = la(), cu--, a === o ? s = void 0 : (ou = s, s = o), s !== o && (a = ia()) !== o ? u = s = [
                        s,
                        a
                      ] : (ou = u, u = o);
                    n !== o ? t = e = [
                      e,
                      n
                    ] : (ou = t, t = o);
                  } else
                    ou = t, t = o;
                  return t;
                }()), t;
              }
              function aa() {
                var r, t, e, n, u, s, a;
                return r = ou, (t = Zs()) !== o && ua() !== o ? ((e = Xs()) === o && (e = null), e !== o && ua() !== o && (n = ko()) !== o ? (s = e, a = n, r = t = {
                  type: (u = t).toLowerCase(),
                  keyword: u.toLowerCase(),
                  symbol: s,
                  value: a
                }) : (ou = r, r = o)) : (ou = r, r = o), r;
              }
              function ia() {
                var t;
                return r.length > ou ? (t = r.charAt(ou), ou++) : (t = o, 0 === cu && du(tu)), t;
              }
              function ca() {
                var t;
                return eu.test(r.charAt(ou)) ? (t = r.charAt(ou), ou++) : (t = o, 0 === cu && du(nu)), t;
              }
              function la() {
                var t, e;
                if ((t = function () {
                    var t, e;
                    t = ou, cu++, r.length > ou ? (e = r.charAt(ou), ou++) : (e = o, 0 === cu && du(tu));
                    cu--, e === o ? t = void 0 : (ou = t, t = o);
                    return t;
                  }()) === o)
                  if (t = [], lt.test(r.charAt(ou)) ? (e = r.charAt(ou), ou++) : (e = o, 0 === cu && du(ft)), e !== o)
                    for (; e !== o;)
                      t.push(e), lt.test(r.charAt(ou)) ? (e = r.charAt(ou), ou++) : (e = o, 0 === cu && du(ft));
                  else
                    t = o;
                return t;
              }
              function fa() {
                var t, e;
                return t = ou, Ua = [], void 0 !== o && ua() !== o ? ((e = va()) === o && (e = function () {
                  var t, e;
                  t = ou, function () {
                    var t;
                    return 'return' === r.substr(ou, 6).toLowerCase() ? (t = r.substr(ou, 6), ou += 6) : (t = o, 0 === cu && du(Rn)), t;
                  }() !== o && ua() !== o && (e = ba()) !== o ? t = {
                    type: 'return',
                    expr: e
                  } : (ou = t, t = o);
                  return t;
                }()), e !== o ? t = {
                  stmt: e,
                  vars: Ua
                } : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function va() {
                var t, e, n, u;
                return t = ou, (e = ha()) === o && (e = Aa()), e !== o && ua() !== o ? ((n = function () {
                  var t;
                  return ':=' === r.substr(ou, 2) ? (t = ':=', ou += 2) : (t = o, 0 === cu && du(_n)), t;
                }()) === o && (n = Xs()), n !== o && ua() !== o && (u = ba()) !== o ? t = e = {
                  type: 'assign',
                  left: e,
                  symbol: n,
                  right: u
                } : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              function ba() {
                var t;
                return (t = gu()) === o && (t = function () {
                  var r, t, e, n, u;
                  r = ou, (t = ha()) !== o && ua() !== o && (e = Vu()) !== o && ua() !== o && (n = ha()) !== o && ua() !== o && (u = qu()) !== o ? r = t = {
                    type: 'join',
                    ltable: t,
                    rtable: n,
                    op: e,
                    on: u
                  } : (ou = r, r = o);
                  return r;
                }()) === o && (t = da()) === o && (t = function () {
                  var t, e;
                  t = ou, function () {
                    var t;
                    return 91 === r.charCodeAt(ou) ? (t = '[', ou++) : (t = o, 0 === cu && du(Wn)), t;
                  }() !== o && ua() !== o && (e = Ea()) !== o && ua() !== o && function () {
                    var t;
                    return 93 === r.charCodeAt(ou) ? (t = ']', ou++) : (t = o, 0 === cu && du(Vn)), t;
                  }() !== o ? t = {
                    type: 'array',
                    value: e
                  } : (ou = t, t = o);
                  return t;
                }()), t;
              }
              function da() {
                var r, t, e, n, u, s, a, i;
                if (r = ou, (t = La()) !== o) {
                  for (e = [], n = ou, (u = ua()) !== o && (s = ho()) !== o && (a = ua()) !== o && (i = La()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ou = n, n = o); n !== o;)
                    e.push(n), n = ou, (u = ua()) !== o && (s = ho()) !== o && (a = ua()) !== o && (i = La()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ou = n, n = o);
                  e !== o ? r = t = dr(t, e) : (ou = r, r = o);
                } else
                  ou = r, r = o;
                return r;
              }
              function La() {
                var r, t, e, n, u, s, a, i;
                if (r = ou, (t = Ca()) !== o) {
                  for (e = [], n = ou, (u = ua()) !== o && (s = yo()) !== o && (a = ua()) !== o && (i = Ca()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ou = n, n = o); n !== o;)
                    e.push(n), n = ou, (u = ua()) !== o && (s = yo()) !== o && (a = ua()) !== o && (i = Ca()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (ou = n, n = o);
                  e !== o ? r = t = dr(t, e) : (ou = r, r = o);
                } else
                  ou = r, r = o;
                return r;
              }
              function Ca() {
                var r, t;
                return (r = Mo()) === o && (r = ha()) === o && (r = wa()) === o && (r = Uo()) === o && (r = ou, ra() !== o && ua() !== o && (t = da()) !== o && ua() !== o && ta() !== o ? r = Rr(t) : (ou = r, r = o)), r;
              }
              function pa() {
                var r, t, e, n, u, s, a;
                return r = ou, (t = So()) !== o ? (e = ou, (n = ua()) !== o && (u = zs()) !== o && (s = ua()) !== o && (a = So()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (ou = e, e = o), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  let e = r;
                  return null !== t && (e = `${ r }.${ t[3] }`), e;
                }(t, e) : (ou = r, r = o)) : (ou = r, r = o), r;
              }
              function wa() {
                var r, t, e;
                return r = ou, (t = pa()) !== o && ua() !== o && ra() !== o && ua() !== o ? ((e = Ea()) === o && (e = null), e !== o && ua() !== o && ta() !== o ? r = t = {
                  type: 'function',
                  name: t,
                  args: {
                    type: 'expr_list',
                    value: e
                  }
                } : (ou = r, r = o)) : (ou = r, r = o), r === o && (r = ou, (t = pa()) !== o && (t = function (r) {
                  return {
                    type: 'function',
                    name: r,
                    args: null
                  };
                }(t)), r = t), r;
              }
              function Ea() {
                var r, t, e, n, u, s, a, c;
                if (r = ou, (t = Ca()) !== o) {
                  for (e = [], n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = Ca()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (ou = n, n = o); n !== o;)
                    e.push(n), n = ou, (u = ua()) !== o && (s = Js()) !== o && (a = ua()) !== o && (c = Ca()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (ou = n, n = o);
                  e !== o ? r = t = i(t, e) : (ou = r, r = o);
                } else
                  ou = r, r = o;
                return r;
              }
              function ha() {
                var r, t, e, n, u;
                return r = ou, (t = Bs()) !== o && (e = Aa()) !== o ? (n = t, u = e, r = t = {
                  type: 'var',
                  ...u,
                  prefix: n
                }) : (ou = r, r = o), r;
              }
              function Aa() {
                var t, e, n, u, s;
                return t = ou, (e = Ro()) !== o && (n = function () {
                  var e, n, u, s;
                  e = [], n = ou, 46 === r.charCodeAt(ou) ? (u = '.', ou++) : (u = o, 0 === cu && du(vt));
                  u !== o && (s = Ro()) !== o ? n = u = [
                    u,
                    s
                  ] : (ou = n, n = o);
                  for (; n !== o;)
                    e.push(n), n = ou, 46 === r.charCodeAt(ou) ? (u = '.', ou++) : (u = o, 0 === cu && du(vt)), u !== o && (s = Ro()) !== o ? n = u = [
                      u,
                      s
                    ] : (ou = n, n = o);
                  e !== o && (e = function (r) {
                    const t = [];
                    for (let e = 0; e < r.length; e++)
                      t.push(r[e][1]);
                    return t;
                  }(e));
                  return e;
                }()) !== o ? (u = e, s = n, Ua.push(u), t = e = {
                  type: 'var',
                  name: u,
                  members: s,
                  prefix: null
                }) : (ou = t, t = o), t;
              }
              function ya() {
                var t;
                return (t = function () {
                  var t, e, n, u;
                  t = ou, (e = Ns()) === o && (e = Rs());
                  if (e !== o)
                    if (ua() !== o)
                      if (ra() !== o)
                        if (ua() !== o) {
                          if (n = [], bt.test(r.charAt(ou)) ? (u = r.charAt(ou), ou++) : (u = o, 0 === cu && du(dt)), u !== o)
                            for (; u !== o;)
                              n.push(u), bt.test(r.charAt(ou)) ? (u = r.charAt(ou), ou++) : (u = o, 0 === cu && du(dt));
                          else
                            n = o;
                          n !== o && (u = ua()) !== o && ta() !== o ? (e = {
                            dataType: e,
                            length: parseInt(n.join(''), 10)
                          }, t = e) : (ou = t, t = o);
                        } else
                          ou = t, t = o;
                      else
                        ou = t, t = o;
                    else
                      ou = t, t = o;
                  else
                    ou = t, t = o;
                  t === o && (t = ou, (e = Ns()) !== o && (e = uu(e)), (t = e) === o && (t = ou, (e = Rs()) !== o && (e = uu(e)), t = e));
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, i, c, l, f, v, b;
                  t = ou, (e = _s()) === o && (e = gs()) === o && (e = Us()) === o && (e = xs()) === o && (e = Ms()) === o && (e = Ds()) === o && (e = ks()) === o && (e = $s()) === o && (e = Fs());
                  if (e !== o)
                    if ((n = ua()) !== o)
                      if ((u = ra()) !== o)
                        if ((s = ua()) !== o) {
                          if (a = [], bt.test(r.charAt(ou)) ? (i = r.charAt(ou), ou++) : (i = o, 0 === cu && du(dt)), i !== o)
                            for (; i !== o;)
                              a.push(i), bt.test(r.charAt(ou)) ? (i = r.charAt(ou), ou++) : (i = o, 0 === cu && du(dt));
                          else
                            a = o;
                          if (a !== o)
                            if ((i = ua()) !== o) {
                              if (c = ou, (l = Js()) !== o)
                                if ((f = ua()) !== o) {
                                  if (v = [], bt.test(r.charAt(ou)) ? (b = r.charAt(ou), ou++) : (b = o, 0 === cu && du(dt)), b !== o)
                                    for (; b !== o;)
                                      v.push(b), bt.test(r.charAt(ou)) ? (b = r.charAt(ou), ou++) : (b = o, 0 === cu && du(dt));
                                  else
                                    v = o;
                                  v !== o ? c = l = [
                                    l,
                                    f,
                                    v
                                  ] : (ou = c, c = o);
                                } else
                                  ou = c, c = o;
                              else
                                ou = c, c = o;
                              c === o && (c = null), c !== o && (l = ua()) !== o && (f = ta()) !== o && (v = ua()) !== o ? ((b = Ta()) === o && (b = null), b !== o ? (d = c, L = b, e = {
                                dataType: e,
                                length: parseInt(a.join(''), 10),
                                scale: d && parseInt(d[2].join(''), 10),
                                parentheses: !0,
                                suffix: L
                              }, t = e) : (ou = t, t = o)) : (ou = t, t = o);
                            } else
                              ou = t, t = o;
                          else
                            ou = t, t = o;
                        } else
                          ou = t, t = o;
                      else
                        ou = t, t = o;
                    else
                      ou = t, t = o;
                  else
                    ou = t, t = o;
                  var d, L;
                  if (t === o) {
                    if (t = ou, (e = _s()) === o && (e = gs()) === o && (e = Us()) === o && (e = xs()) === o && (e = Ms()) === o && (e = Ds()) === o && (e = ks()) === o && (e = $s()) === o && (e = Fs()), e !== o) {
                      if (n = [], bt.test(r.charAt(ou)) ? (u = r.charAt(ou), ou++) : (u = o, 0 === cu && du(dt)), u !== o)
                        for (; u !== o;)
                          n.push(u), bt.test(r.charAt(ou)) ? (u = r.charAt(ou), ou++) : (u = o, 0 === cu && du(dt));
                      else
                        n = o;
                      n !== o && (u = ua()) !== o ? ((s = Ta()) === o && (s = null), s !== o ? (e = function (r, t, e) {
                        return {
                          dataType: r,
                          length: parseInt(t.join(''), 10),
                          suffix: e
                        };
                      }(e, n, s), t = e) : (ou = t, t = o)) : (ou = t, t = o);
                    } else
                      ou = t, t = o;
                    t === o && (t = ou, (e = _s()) === o && (e = gs()) === o && (e = Us()) === o && (e = xs()) === o && (e = Ms()) === o && (e = Ds()) === o && (e = ks()) === o && (e = $s()) === o && (e = Fs()), e !== o && (n = ua()) !== o ? ((u = Ta()) === o && (u = null), u !== o && (s = ua()) !== o ? (e = function (r, t) {
                      return {
                        dataType: r,
                        suffix: t
                      };
                    }(e, u), t = e) : (ou = t, t = o)) : (ou = t, t = o));
                  }
                  return t;
                }()) === o && (t = function () {
                  var t;
                  (t = Ps()) === o && (t = Hs()) === o && (t = Gs()) === o && (t = js());
                  t !== o && (t = uu(t));
                  return t;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = ou, 'json' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(Xe)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'JSON' : (ou = t, t = o)) : (ou = t, t = o), t;
                  }()) !== o && (e = uu(e));
                  return e;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = ou, 'tinytext' === r.substr(ou, 8).toLowerCase() ? (e = r.substr(ou, 8), ou += 8) : (e = o, 0 === cu && du(Ke)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'TINYTEXT' : (ou = t, t = o)) : (ou = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = ou, 'text' === r.substr(ou, 4).toLowerCase() ? (e = r.substr(ou, 4), ou += 4) : (e = o, 0 === cu && du(qe)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'TEXT' : (ou = t, t = o)) : (ou = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = ou, 'mediumtext' === r.substr(ou, 10).toLowerCase() ? (e = r.substr(ou, 10), ou += 10) : (e = o, 0 === cu && du(Ze)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'MEDIUMTEXT' : (ou = t, t = o)) : (ou = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = ou, 'longtext' === r.substr(ou, 8).toLowerCase() ? (e = r.substr(ou, 8), ou += 8) : (e = o, 0 === cu && du(ze)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'LONGTEXT' : (ou = t, t = o)) : (ou = t, t = o), t;
                  }());
                  e !== o && (e = { dataType: e });
                  return e;
                }()), t;
              }
              function Ta() {
                var t, e, n;
                return t = ou, (e = Os()) === o && (e = null), e !== o && ua() !== o ? ((n = function () {
                  var t, e, n, u;
                  return t = ou, 'zerofill' === r.substr(ou, 8).toLowerCase() ? (e = r.substr(ou, 8), ou += 8) : (e = o, 0 === cu && du(Ye)), e !== o ? (n = ou, cu++, u = _o(), cu--, u === o ? n = void 0 : (ou = n, n = o), n !== o ? t = e = 'ZEROFILL' : (ou = t, t = o)) : (ou = t, t = o), t;
                }()) === o && (n = null), n !== o ? t = e = function (r, t) {
                  const e = [];
                  return r && e.push(r), t && e.push(t), e;
                }(e, n) : (ou = t, t = o)) : (ou = t, t = o), t;
              }
              const ma = {
                ALTER: !0,
                ALL: !0,
                ADD: !0,
                AND: !0,
                AS: !0,
                ASC: !0,
                BETWEEN: !0,
                BY: !0,
                CALL: !0,
                CASE: !0,
                CREATE: !0,
                CONTAINS: !0,
                CURRENT_DATE: !0,
                CURRENT_TIME: !0,
                CURRENT_TIMESTAMP: !0,
                CURRENT_USER: !0,
                DELETE: !0,
                DESC: !0,
                DISTINCT: !0,
                DROP: !0,
                ELSE: !0,
                END: !0,
                EXISTS: !0,
                EXPLAIN: !0,
                FALSE: !0,
                FROM: !0,
                FULL: !0,
                GROUP: !0,
                HAVING: !0,
                IN: !0,
                INNER: !0,
                INSERT: !0,
                INTO: !0,
                IS: !0,
                JOIN: !0,
                JSON: !0,
                KEY: !0,
                LEFT: !0,
                LIKE: !0,
                LIMIT: !0,
                LOW_PRIORITY: !0,
                NOT: !0,
                NULL: !0,
                ON: !0,
                OR: !0,
                ORDER: !0,
                OUTER: !0,
                RECURSIVE: !0,
                RENAME: !0,
                RIGHT: !0,
                READ: !0,
                SELECT: !0,
                SESSION_USER: !0,
                SET: !0,
                SHOW: !0,
                STATUS: !0,
                SYSTEM_USER: !0,
                TABLE: !0,
                THEN: !0,
                TRUE: !0,
                TRUNCATE: !0,
                TYPE: !0,
                UNION: !0,
                UPDATE: !0,
                USING: !0,
                VALUES: !0,
                WITH: !0,
                WHEN: !0,
                WHERE: !0,
                WRITE: !0,
                GLOBAL: !0,
                SESSION: !0,
                LOCAL: !0,
                PERSIST: !0,
                PERSIST_ONLY: !0
              };
              function Sa(r, t) {
                return {
                  type: 'unary_expr',
                  operator: r,
                  expr: t
                };
              }
              function Ia(r, t, e) {
                return {
                  type: 'binary_expr',
                  operator: r,
                  left: t,
                  right: e
                };
              }
              function Na(r) {
                const t = n(Number.MAX_SAFE_INTEGER);
                return !(n(r) < t);
              }
              function Ra(r, t) {
                const e = [r];
                for (let r = 0; r < t.length; r++)
                  e.push(t[r][3]);
                return e;
              }
              function _a(r, t) {
                let e = r;
                for (let r = 0; r < t.length; r++)
                  e = Ia(t[r][1], e, t[r][3]);
                return e;
              }
              function ga(r) {
                const t = Da[r];
                return t || (r || null);
              }
              function Oa(r) {
                const t = [];
                for (let e of r.keys()) {
                  const r = e.split('::');
                  if (!r) {
                    t.push(e);
                    break;
                  }
                  r && r[1] && (r[1] = ga(r[1])), t.push(r.join('::'));
                }
                return t;
              }
              let Ua = [];
              const xa = new Set(), Ma = new Set(), Da = {};
              if ((e = a()) !== o && ou === r.length)
                return e;
              throw e !== o && ou < r.length && du({ type: 'end' }), Lu(iu, au < r.length ? r.charAt(au) : null, au < r.length ? bu(au, au + 1) : bu(au, au));
            }
          };
        },
        function (r, t, e) {
          var n = e(0);
          function u(r, t, e, n) {
            this.message = r, this.expected = t, this.found = e, this.location = n, this.name = 'SyntaxError', 'function' == typeof Error.captureStackTrace && Error.captureStackTrace(this, u);
          }
          !function (r, t) {
            function e() {
              this.constructor = r;
            }
            e.prototype = t.prototype, r.prototype = new e();
          }(u, Error), u.buildMessage = function (r, t) {
            var e = {
              literal: function (r) {
                return '"' + u(r.text) + '"';
              },
              class: function (r) {
                var t, e = '';
                for (t = 0; t < r.parts.length; t++)
                  e += r.parts[t] instanceof Array ? o(r.parts[t][0]) + '-' + o(r.parts[t][1]) : o(r.parts[t]);
                return '[' + (r.inverted ? '^' : '') + e + ']';
              },
              any: function (r) {
                return 'any character';
              },
              end: function (r) {
                return 'end of input';
              },
              other: function (r) {
                return r.description;
              }
            };
            function n(r) {
              return r.charCodeAt(0).toString(16).toUpperCase();
            }
            function u(r) {
              return r.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            function o(r) {
              return r.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            return 'Expected ' + function (r) {
              var t, n, u, o = new Array(r.length);
              for (t = 0; t < r.length; t++)
                o[t] = (u = r[t], e[u.type](u));
              if (o.sort(), o.length > 0) {
                for (t = 1, n = 1; t < o.length; t++)
                  o[t - 1] !== o[t] && (o[n] = o[t], n++);
                o.length = n;
              }
              switch (o.length) {
              case 1:
                return o[0];
              case 2:
                return o[0] + ' or ' + o[1];
              default:
                return o.slice(0, -1).join(', ') + ', or ' + o[o.length - 1];
              }
            }(r) + ' but ' + function (r) {
              return r ? '"' + u(r) + '"' : 'end of input';
            }(t) + ' found.';
          }, r.exports = {
            SyntaxError: u,
            parse: function (r, t) {
              t = void 0 !== t ? t : {};
              var e, o = {}, s = { start: ho }, a = ho, i = bo('EXTENSION', !0), c = bo('SCHEMA', !0), l = bo('VERSION', !0), v = bo('NULLS', !0), b = bo('FIRST', !0), d = bo('LAST', !0), L = bo('AUTO_INCREMENT', !0), C = bo('UNIQUE', !0), p = bo('PRIMARY', !0), w = bo('KEY', !0), E = bo('COLUMN_FORMAT', !0), h = bo('FIXED', !0), A = bo('DYNAMIC', !0), y = bo('DEFAULT', !0), T = bo('STORAGE', !0), m = bo('DISK', !0), S = bo('MEMORY', !0), I = bo('ALGORITHM', !0), N = bo('INSTANT', !0), R = bo('INPLACE', !0), _ = bo('COPY', !0), g = bo('LOCK', !0), O = bo('NONE', !0), U = bo('SHARED', !0), x = bo('EXCLUSIVE', !0), M = bo('PRIMARY KEY', !0), D = bo('FOREIGN KEY', !0), k = bo('MATCH FULL', !0), $ = bo('MATCH PARTIAL', !0), F = bo('MATCH SIMPLE', !0), P = bo('ON DELETE', !0), H = bo('ON UPDATE', !0), G = bo('RESTRICT', !0), j = bo('CASCADE', !0), Y = bo('SET NULL', !0), B = bo('NO ACTION', !0), X = bo('SET DEFAULT', !0), W = bo('TRIGGER', !0), V = bo('BEFORE', !0), K = bo('AFTER', !0), q = bo('INSTEAD OF', !0), Z = bo('ON', !0), z = bo('EXECUTE', !0), J = bo('PROCEDURE', !0), Q = bo('OF', !0), rr = bo('NOT', !0), tr = bo('DEFERRABLE', !0), er = bo('INITIALLY IMMEDIATE', !0), nr = bo('INITIALLY DEFERRED', !0), ur = bo('FOR', !0), or = bo('EACH', !0), sr = bo('ROW', !0), ar = bo('STATEMENT', !0), ir = bo('AVG_ROW_LENGTH', !0), cr = bo('KEY_BLOCK_SIZE', !0), lr = bo('MAX_ROWS', !0), fr = bo('MIN_ROWS', !0), vr = bo('STATS_SAMPLE_PAGES', !0), br = bo('CHARACTER SET', !0), dr = bo('CHARSET', !0), Lr = bo('COLLATE', !0), Cr = bo('CONNECTION', !0), pr = bo('COMPRESSION', !0), wr = bo('\'', !1), Er = bo('ZLIB', !0), hr = bo('LZ4', !0), Ar = bo('ENGINE', !0), yr = bo('IN', !0), Tr = bo('ACCESS SHARE', !0), mr = bo('ROW SHARE', !0), Sr = bo('ROW EXCLUSIVE', !0), Ir = bo('SHARE UPDATE EXCLUSIVE', !0), Nr = bo('SHARE ROW EXCLUSIVE', !0), Rr = bo('ACCESS EXCLUSIVE', !0), _r = bo('SHARE', !0), gr = bo('MODE', !0), Or = bo('NOWAIT', !0), Ur = bo('(', !1), xr = bo(')', !1), Mr = function (r, t) {
                  return Ki(r, t);
                }, Dr = bo('BTREE', !0), kr = bo('HASH', !0), $r = bo('GIST', !0), Fr = bo('GIN', !0), Pr = bo('WITH', !0), Hr = bo('PARSER', !0), Gr = bo('VISIBLE', !0), jr = bo('INVISIBLE', !0), Yr = bo('=', !1), Br = function (r, t) {
                  return qi(r, t);
                }, Xr = bo('!', !1), Wr = bo('>=', !1), Vr = bo('>', !1), Kr = bo('<=', !1), qr = bo('<>', !1), Zr = bo('<', !1), zr = bo('!=', !1), Jr = bo('@>', !1), Qr = bo('<@', !1), rt = bo('?', !1), tt = bo('?|', !1), et = bo('?&', !1), nt = bo('#-', !1), ut = bo('+', !1), ot = bo('-', !1), st = bo('*', !1), at = bo('/', !1), it = bo('%', !1), ct = bo('$', !1), lt = function (r) {
                  return !0 === Bi[r.toUpperCase()];
                }, ft = bo('"', !1), vt = /^[^"]/, bt = Lo(['"'], !0, !1), dt = function (r) {
                  return r.join('');
                }, Lt = /^[^']/, Ct = Lo(['\''], !0, !1), pt = bo('`', !1), wt = /^[^`]/, Et = Lo(['`'], !0, !1), ht = /^[A-Za-z_]/, At = Lo([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  '_'
                ], !1, !1), yt = /^[A-Za-z0-9_\-]/, Tt = Lo([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_',
                  '-'
                ], !1, !1), mt = /^[A-Za-z0-9_]/, St = Lo([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_'
                ], !1, !1), It = bo(':', !1), Nt = bo('CENTURY', !0), Rt = bo('DAY', !0), _t = bo('DECADE', !0), gt = bo('DOW', !0), Ot = bo('DOY', !0), Ut = bo('EPOCH', !0), xt = bo('HOUR', !0), Mt = bo('ISODOW', !0), Dt = bo('ISOYEAR', !0), kt = bo('MICROSECONDS', !0), $t = bo('MILLENNIUM', !0), Ft = bo('MILLISECONDS', !0), Pt = bo('MINUTE', !0), Ht = bo('MONTH', !0), Gt = bo('QUARTER', !0), jt = bo('SECOND', !0), Yt = bo('TIMEZONE', !0), Bt = bo('TIMEZONE_HOUR', !0), Xt = bo('TIMEZONE_MINUTE', !0), Wt = bo('WEEK', !0), Vt = bo('YEAR', !0), Kt = bo('ON UPDATE CURRENT_TIMESTAMP', !0), qt = /^[^"\\\0-\x1F\x7F]/, Zt = Lo([
                  '"',
                  '\\',
                  [
                    '\0',
                    '\x1F'
                  ],
                  '\x7F'
                ], !0, !1), zt = /^[^'\\]/, Jt = Lo([
                  '\'',
                  '\\'
                ], !0, !1), Qt = bo('\\\'', !1), re = bo('\\"', !1), te = bo('\\\\', !1), ee = bo('\\/', !1), ne = bo('\\b', !1), ue = bo('\\f', !1), oe = bo('\\n', !1), se = bo('\\r', !1), ae = bo('\\t', !1), ie = bo('\\u', !1), ce = bo('\\', !1), le = /^[\n\r]/, fe = Lo([
                  '\n',
                  '\r'
                ], !1, !1), ve = bo('.', !1), be = /^[0-9]/, de = Lo([[
                    '0',
                    '9'
                  ]], !1, !1), Le = /^[0-9a-fA-F]/, Ce = Lo([
                  [
                    '0',
                    '9'
                  ],
                  [
                    'a',
                    'f'
                  ],
                  [
                    'A',
                    'F'
                  ]
                ], !1, !1), pe = /^[eE]/, we = Lo([
                  'e',
                  'E'
                ], !1, !1), Ee = /^[+\-]/, he = Lo([
                  '+',
                  '-'
                ], !1, !1), Ae = bo('NULL', !0), ye = bo('NOT NULL', !0), Te = bo('TRUE', !0), me = bo('TO', !0), Se = bo('FALSE', !0), Ie = bo('DROP', !0), Ne = bo('USE', !0), Re = bo('ALTER', !0), _e = bo('SELECT', !0), ge = bo('UPDATE', !0), Oe = bo('CREATE', !0), Ue = bo('TEMPORARY', !0), xe = bo('IF NOT EXISTS', !0), Me = bo('DELETE', !0), De = bo('INSERT', !0), ke = bo('RECURSIVE', !1), $e = bo('REPLACE', !0), Fe = bo('RETURNING', !0), Pe = bo('RENAME', !0), He = bo('IGNORE', !0), Ge = bo('PARTITION', !0), je = bo('INTO', !0), Ye = bo('FROM', !0), Be = bo('SET', !0), Xe = bo('AS', !0), We = bo('TABLE', !0), Ve = bo('TABLESPACE', !0), Ke = bo('LEFT', !0), qe = bo('RIGHT', !0), Ze = bo('FULL', !0), ze = bo('INNER', !0), Je = bo('JOIN', !0), Qe = bo('OUTER', !0), rn = bo('UNION', !0), tn = bo('VALUES', !0), en = bo('USING', !0), nn = bo('WHERE', !0), un = bo('GROUP', !0), on = bo('BY', !0), sn = bo('ORDER', !0), an = bo('HAVING', !0), cn = bo('LIMIT', !0), ln = bo('OFFSET', !0), fn = bo('ASC', !0), vn = bo('DESC', !0), bn = bo('ALL', !0), dn = bo('DISTINCT', !0), Ln = bo('BETWEEN', !0), Cn = bo('IS', !0), pn = bo('LIKE', !0), wn = bo('ILIKE', !0), En = bo('EXISTS', !0), hn = bo('AND', !0), An = bo('OR', !0), yn = bo('ARRAY_AGG', !0), Tn = bo('COUNT', !0), mn = bo('MAX', !0), Sn = bo('MIN', !0), In = bo('SUM', !0), Nn = bo('AVG', !0), Rn = bo('EXTRACT', !0), _n = bo('CALL', !0), gn = bo('CASE', !0), On = bo('WHEN', !0), Un = bo('THEN', !0), xn = bo('ELSE', !0), Mn = bo('END', !0), Dn = bo('CAST', !0), kn = bo('BOOL', !0), $n = bo('BOOLEAN', !0), Fn = bo('CHAR', !0), Pn = bo('VARCHAR', !0), Hn = bo('NUMERIC', !0), Gn = bo('DECIMAL', !0), jn = bo('SIGNED', !0), Yn = bo('UNSIGNED', !0), Bn = bo('INT', !0), Xn = bo('ZEROFILL', !0), Wn = bo('INTEGER', !0), Vn = bo('JSON', !0), Kn = bo('JSONB', !0), qn = bo('GEOMETRY', !0), Zn = bo('SMALLINT', !0), zn = bo('TINYINT', !0), Jn = bo('TINYTEXT', !0), Qn = bo('TEXT', !0), ru = bo('MEDIUMTEXT', !0), tu = bo('LONGTEXT', !0), eu = bo('BIGINT', !0), nu = bo('FLOAT', !0), uu = bo('DOUBLE', !0), ou = bo('DATE', !0), su = bo('DATETIME', !0), au = bo('TIME', !0), iu = bo('TIMESTAMP', !0), cu = bo('TRUNCATE', !0), lu = bo('USER', !0), fu = bo('UUID', !0), vu = bo('CURRENT_DATE', !0), bu = bo('INTERVAL', !0), du = bo('CURRENT_TIME', !0), Lu = bo('CURRENT_TIMESTAMP', !0), Cu = bo('CURRENT_USER', !0), pu = bo('SESSION_USER', !0), wu = bo('SYSTEM_USER', !0), Eu = bo('GLOBAL', !0), hu = bo('SESSION', !0), Au = bo('LOCAL', !0), yu = bo('PERSIST', !0), Tu = bo('PERSIST_ONLY', !0), mu = bo('@', !1), Su = bo('@@', !1), Iu = bo('return', !0), Nu = bo(':=', !1), Ru = bo('::', !1), _u = bo('DUAL', !0), gu = bo('ADD', !0), Ou = bo('COLUMN', !0), Uu = bo('INDEX', !0), xu = bo('FULLTEXT', !0), Mu = bo('SPATIAL', !0), Du = bo('COMMENT', !0), ku = bo('CONSTRAINT', !0), $u = bo('CONCURRENTLY', !0), Fu = bo('REFERENCES', !0), Pu = bo('SQL_CALC_FOUND_ROWS', !0), Hu = bo('SQL_CACHE', !0), Gu = bo('SQL_NO_CACHE', !0), ju = bo('SQL_SMALL_RESULT', !0), Yu = bo('SQL_BIG_RESULT', !0), Bu = bo('SQL_BUFFER_RESULT', !0), Xu = bo(',', !1), Wu = bo('[', !1), Vu = bo(']', !1), Ku = bo(';', !1), qu = bo('->', !1), Zu = bo('->>', !1), zu = bo('#>', !1), Ju = bo('#>>', !1), Qu = bo('||', !1), ro = bo('&&', !1), to = bo('/*', !1), eo = bo('*/', !1), no = bo('--', !1), uo = { type: 'any' }, oo = /^[ \t\n\r]/, so = Lo([
                  ' ',
                  '\t',
                  '\n',
                  '\r'
                ], !1, !1), ao = function (r) {
                  return { dataType: r };
                }, io = 0, co = [{
                    line: 1,
                    column: 1
                  }], lo = 0, fo = [], vo = 0;
              if ('startRule' in t) {
                if (!(t.startRule in s))
                  throw new Error('Can\'t start parsing from rule "' + t.startRule + '".');
                a = s[t.startRule];
              }
              function bo(r, t) {
                return {
                  type: 'literal',
                  text: r,
                  ignoreCase: t
                };
              }
              function Lo(r, t, e) {
                return {
                  type: 'class',
                  parts: r,
                  inverted: t,
                  ignoreCase: e
                };
              }
              function Co(t) {
                var e, n = co[t];
                if (n)
                  return n;
                for (e = t - 1; !co[e];)
                  e--;
                for (n = {
                    line: (n = co[e]).line,
                    column: n.column
                  }; e < t;)
                  10 === r.charCodeAt(e) ? (n.line++, n.column = 1) : n.column++, e++;
                return co[t] = n, n;
              }
              function po(r, t) {
                var e = Co(r), n = Co(t);
                return {
                  start: {
                    offset: r,
                    line: e.line,
                    column: e.column
                  },
                  end: {
                    offset: t,
                    line: n.line,
                    column: n.column
                  }
                };
              }
              function wo(r) {
                io < lo || (io > lo && (lo = io, fo = []), fo.push(r));
              }
              function Eo(r, t, e) {
                return new u(u.buildMessage(r, t), r, t, e);
              }
              function ho() {
                var r, t;
                return r = io, mi() !== o ? ((t = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = io, (t = yo()) !== o) {
                    if (e = [], n = io, (u = mi()) !== o && (s = Ai()) !== o && (a = mi()) !== o && (i = yo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (io = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = io, (u = mi()) !== o && (s = Ai()) !== o && (a = mi()) !== o && (i = yo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = function (r, t) {
                      const e = [r && r.ast || r];
                      for (let r = 0; r < t.length; r++)
                        t[r][3] && 0 !== t[r][3].length && e.push(t[r][3] && t[r][3].ast || t[r][3]);
                      return {
                        tableList: Array.from(rc),
                        columnList: zi(tc),
                        ast: e
                      };
                    }(t, e), r = t) : (io = r, r = o);
                  } else
                    io = r, r = o;
                  return r;
                }()) === o && (t = Ao()) === o && (t = yo()), t !== o ? r = t : (io = r, r = o)) : (io = r, r = o), r;
              }
              function Ao() {
                var t;
                return (t = function () {
                  var r, t, e, n;
                  r = io, (t = na()) !== o && mi() !== o && (e = pa()) !== o && mi() !== o && (n = Zo()) !== o ? (u = t, s = e, (a = n) && a.forEach(r => rc.add(`${ u }::${ r.db }::${ r.table }`)), t = {
                    tableList: Array.from(rc),
                    columnList: zi(tc),
                    ast: {
                      type: u.toLowerCase(),
                      keyword: s.toLowerCase(),
                      name: a
                    }
                  }, r = t) : (io = r, r = o);
                  var u, s, a;
                  return r;
                }()) === o && (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u, s, a, i, c, l, f;
                    t = io, (e = oa()) !== o && mi() !== o ? ((n = sa()) === o && (n = null), n !== o && mi() !== o && pa() !== o && mi() !== o ? ((u = aa()) === o && (u = null), u !== o && mi() !== o && (s = Zo()) !== o && mi() !== o && (a = function () {
                      var r, t, e, n, u, s, a, i, c;
                      if (r = io, (t = Ei()) !== o)
                        if (mi() !== o)
                          if ((e = So()) !== o) {
                            for (n = [], u = io, (s = mi()) !== o && (a = pi()) !== o && (i = mi()) !== o && (c = So()) !== o ? u = s = [
                                s,
                                a,
                                i,
                                c
                              ] : (io = u, u = o); u !== o;)
                              n.push(u), u = io, (s = mi()) !== o && (a = pi()) !== o && (i = mi()) !== o && (c = So()) !== o ? u = s = [
                                s,
                                a,
                                i,
                                c
                              ] : (io = u, u = o);
                            n !== o && (u = mi()) !== o && (s = hi()) !== o ? (t = Ki(e, n), r = t) : (io = r, r = o);
                          } else
                            io = r, r = o;
                        else
                          io = r, r = o;
                      else
                        io = r, r = o;
                      return r;
                    }()) !== o && mi() !== o ? ((i = function () {
                      var r, t, e, n, u, s, a, i;
                      if (r = io, (t = ko()) !== o) {
                        for (e = [], n = io, (u = mi()) !== o ? ((s = pi()) === o && (s = null), s !== o && (a = mi()) !== o && (i = ko()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (io = n, n = o)) : (io = n, n = o); n !== o;)
                          e.push(n), n = io, (u = mi()) !== o ? ((s = pi()) === o && (s = null), s !== o && (a = mi()) !== o && (i = ko()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (io = n, n = o)) : (io = n, n = o);
                        e !== o ? (t = Ki(t, e), r = t) : (io = r, r = o);
                      } else
                        io = r, r = o;
                      return r;
                    }()) === o && (i = null), i !== o && mi() !== o ? ((c = function () {
                      var t, e, n, u;
                      t = io, 'ignore' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(He));
                      e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                        e,
                        n
                      ] : (io = t, t = o)) : (io = t, t = o);
                      return t;
                    }()) === o && (c = la()), c === o && (c = null), c !== o && mi() !== o ? ((l = Ca()) === o && (l = null), l !== o && mi() !== o ? ((f = To()) === o && (f = null), f !== o ? (v = e, b = n, d = u, C = a, p = i, w = c, E = l, h = f, (L = s) && L.forEach(r => rc.add(`create::${ r.db }::${ r.table }`)), e = {
                      tableList: Array.from(rc),
                      columnList: zi(tc),
                      ast: {
                        type: v[0].toLowerCase(),
                        keyword: 'table',
                        temporary: b && b[0].toLowerCase(),
                        if_not_exists: d && d[0].toLowerCase(),
                        table: L,
                        ignore_replace: w && w[0].toLowerCase(),
                        as: E && E[0].toLowerCase(),
                        query_expr: h && h.ast,
                        create_definitions: C,
                        table_options: p
                      }
                    }, t = e) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o);
                    var v, b, d, L, C, p, w, E, h;
                    t === o && (t = io, (e = oa()) !== o && mi() !== o ? ((n = sa()) === o && (n = null), n !== o && mi() !== o && pa() !== o && mi() !== o ? ((u = aa()) === o && (u = null), u !== o && mi() !== o && (s = Zo()) !== o && mi() !== o && (a = function r() {
                      var t, e;
                      (t = function () {
                        var r, t;
                        r = io, Ua() !== o && mi() !== o && (t = Zo()) !== o ? r = {
                          type: 'like',
                          table: t
                        } : (io = r, r = o);
                        return r;
                      }()) === o && (t = io, Ei() !== o && mi() !== o && (e = r()) !== o && mi() !== o && hi() !== o ? ((n = e).parentheses = !0, t = n) : (io = t, t = o));
                      var n;
                      return t;
                    }()) !== o ? (e = function (r, t, e, n, u) {
                      return n && n.forEach(r => rc.add(`create::${ r.db }::${ r.table }`)), {
                        tableList: Array.from(rc),
                        columnList: zi(tc),
                        ast: {
                          type: r[0].toLowerCase(),
                          keyword: 'table',
                          temporary: t && t[0].toLowerCase(),
                          if_not_exists: e && e[0].toLowerCase(),
                          table: n,
                          like: u
                        }
                      };
                    }(e, n, u, s, a), t = e) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o));
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a, i, c, l, f, v, b, d, L, C, p, w, E;
                    t = io, (e = oa()) !== o && mi() !== o ? ((n = Li()) === o && (n = null), n !== o && mi() !== o ? ('trigger' === r.substr(io, 7).toLowerCase() ? (u = r.substr(io, 7), io += 7) : (u = o, 0 === vo && wo(W)), u !== o && mi() !== o && (s = xs()) !== o && mi() !== o ? ('before' === r.substr(io, 6).toLowerCase() ? (a = r.substr(io, 6), io += 6) : (a = o, 0 === vo && wo(V)), a === o && ('after' === r.substr(io, 5).toLowerCase() ? (a = r.substr(io, 5), io += 5) : (a = o, 0 === vo && wo(K)), a === o && ('instead of' === r.substr(io, 10).toLowerCase() ? (a = r.substr(io, 10), io += 10) : (a = o, 0 === vo && wo(q)))), a !== o && mi() !== o && (i = function () {
                      var r, t, e, n, u, s, a, i;
                      if (r = io, (t = Do()) !== o) {
                        for (e = [], n = io, (u = mi()) !== o && (s = $a()) !== o && (a = mi()) !== o && (i = Do()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (io = n, n = o); n !== o;)
                          e.push(n), n = io, (u = mi()) !== o && (s = $a()) !== o && (a = mi()) !== o && (i = Do()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (io = n, n = o);
                        e !== o ? (t = Ki(t, e), r = t) : (io = r, r = o);
                      } else
                        io = r, r = o;
                      return r;
                    }()) !== o && mi() !== o ? ('on' === r.substr(io, 2).toLowerCase() ? (c = r.substr(io, 2), io += 2) : (c = o, 0 === vo && wo(Z)), c !== o && mi() !== o && (l = rs()) !== o && mi() !== o ? (f = io, (v = da()) !== o && (b = mi()) !== o && (d = rs()) !== o ? f = v = [
                      v,
                      b,
                      d
                    ] : (io = f, f = o), f === o && (f = null), f !== o && (v = mi()) !== o ? ((b = function () {
                      var t, e, n, u, s;
                      t = io, e = io, 'not' === r.substr(io, 3).toLowerCase() ? (n = r.substr(io, 3), io += 3) : (n = o, 0 === vo && wo(rr));
                      n === o && (n = null);
                      n !== o && (u = mi()) !== o ? ('deferrable' === r.substr(io, 10).toLowerCase() ? (s = r.substr(io, 10), io += 10) : (s = o, 0 === vo && wo(tr)), s !== o ? e = n = [
                        n,
                        u,
                        s
                      ] : (io = e, e = o)) : (io = e, e = o);
                      e !== o && (n = mi()) !== o ? ('initially immediate' === r.substr(io, 19).toLowerCase() ? (u = r.substr(io, 19), io += 19) : (u = o, 0 === vo && wo(er)), u === o && ('initially deferred' === r.substr(io, 18).toLowerCase() ? (u = r.substr(io, 18), io += 18) : (u = o, 0 === vo && wo(nr))), u !== o ? (i = u, e = {
                        keyword: (a = e) && a[0] ? a[0].toLowerCase() + ' deferrable' : 'deferrable',
                        args: i && i.toLowerCase()
                      }, t = e) : (io = t, t = o)) : (io = t, t = o);
                      var a, i;
                      return t;
                    }()) === o && (b = null), b !== o && (d = mi()) !== o ? ((L = function () {
                      var t, e, n, u;
                      t = io, 'for' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(ur));
                      e !== o && mi() !== o ? ('each' === r.substr(io, 4).toLowerCase() ? (n = r.substr(io, 4), io += 4) : (n = o, 0 === vo && wo(or)), n === o && (n = null), n !== o && mi() !== o ? ('row' === r.substr(io, 3).toLowerCase() ? (u = r.substr(io, 3), io += 3) : (u = o, 0 === vo && wo(sr)), u === o && ('statement' === r.substr(io, 9).toLowerCase() ? (u = r.substr(io, 9), io += 9) : (u = o, 0 === vo && wo(ar))), u !== o ? (s = e, i = u, e = {
                        keyword: (a = n) ? `${ s.toLowerCase() } ${ a.toLowerCase() }` : s.toLowerCase(),
                        args: i.toLowerCase()
                      }, t = e) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o);
                      var s, a, i;
                      return t;
                    }()) === o && (L = null), L !== o && mi() !== o ? ((C = function () {
                      var r, t;
                      r = io, Pa() !== o && mi() !== o && Ei() !== o && mi() !== o && (t = ws()) !== o && mi() !== o && hi() !== o ? r = {
                        type: 'when',
                        cond: t,
                        parentheses: !0
                      } : (io = r, r = o);
                      return r;
                    }()) === o && (C = null), C !== o && mi() !== o ? ('execute' === r.substr(io, 7).toLowerCase() ? (p = r.substr(io, 7), io += 7) : (p = o, 0 === vo && wo(z)), p !== o && mi() !== o ? ('procedure' === r.substr(io, 9).toLowerCase() ? (w = r.substr(io, 9), io += 9) : (w = o, 0 === vo && wo(J)), w !== o && mi() !== o && (E = Fi()) !== o ? (h = n, A = u, T = i, m = l, S = f, I = b, N = L, R = C, _ = E, e = {
                      type: 'create',
                      constraint: s,
                      location: (y = a) && y.toLowerCase(),
                      events: T,
                      table: m,
                      from: S && S[2],
                      deferrable: I,
                      for_each: N,
                      when: R,
                      execute: {
                        keyword: 'execute procedure',
                        expr: _
                      },
                      constraint_type: A && A.toLowerCase(),
                      keyword: A && A.toLowerCase(),
                      constraint_kw: h && h.toLowerCase(),
                      resource: 'constraint'
                    }, t = e) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o);
                    var h, A, y, T, m, S, I, N, R, _;
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a, f, v, b, d, L, C, p, w;
                    t = io, (e = oa()) !== o && mi() !== o ? ('extension' === r.substr(io, 9).toLowerCase() ? (n = r.substr(io, 9), io += 9) : (n = o, 0 === vo && wo(i)), n !== o && mi() !== o ? ((u = aa()) === o && (u = null), u !== o && mi() !== o ? ((s = xs()) === o && (s = Bs()), s !== o && mi() !== o ? ((a = Ta()) === o && (a = null), a !== o && mi() !== o ? (f = io, 'schema' === r.substr(io, 6).toLowerCase() ? (v = r.substr(io, 6), io += 6) : (v = o, 0 === vo && wo(c)), v !== o && (b = mi()) !== o && (d = xs()) !== o ? f = v = [
                      v,
                      b,
                      d
                    ] : (io = f, f = o), f === o && (f = Bs()), f === o && (f = null), f !== o && (v = mi()) !== o ? (b = io, 'version' === r.substr(io, 7).toLowerCase() ? (d = r.substr(io, 7), io += 7) : (d = o, 0 === vo && wo(l)), d !== o && (L = mi()) !== o ? ((C = xs()) === o && (C = Bs()), C !== o ? b = d = [
                      d,
                      L,
                      C
                    ] : (io = b, b = o)) : (io = b, b = o), b === o && (b = null), b !== o && (d = mi()) !== o ? (L = io, (C = da()) !== o && (p = mi()) !== o ? ((w = xs()) === o && (w = Bs()), w !== o ? L = C = [
                      C,
                      p,
                      w
                    ] : (io = L, L = o)) : (io = L, L = o), L === o && (L = null), L !== o ? (e = function (r, t, e, n, u, o, s, a) {
                      return {
                        type: 'create',
                        keyword: t.toLowerCase(),
                        if_not_exists: e && e[0].toLowerCase(),
                        extension: Ji(n),
                        with: u && u[0].toLowerCase(),
                        schema: Ji(o && o[2].toLowerCase()),
                        version: Ji(s && s[2]),
                        from: Ji(a && a[2])
                      };
                    }(0, n, u, s, a, f, b, L), t = e) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a, i, c, l, f, v, b, d, L, C, p, w, E;
                    t = io, (e = oa()) !== o && mi() !== o ? ((n = bi()) === o && (n = null), n !== o && mi() !== o && (u = fi()) !== o && mi() !== o ? ((s = function () {
                      var t, e, n, u;
                      t = io, 'concurrently' === r.substr(io, 12).toLowerCase() ? (e = r.substr(io, 12), io += 12) : (e = o, 0 === vo && wo($u));
                      e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'CONCURRENTLY' : (io = t, t = o)) : (io = t, t = o);
                      return t;
                    }()) === o && (s = null), s !== o && mi() !== o ? ((a = gs()) === o && (a = null), a !== o && mi() !== o && (i = wa()) !== o && mi() !== o && (c = rs()) !== o && mi() !== o ? ((l = Vo()) === o && (l = null), l !== o && mi() !== o && Ei() !== o && mi() !== o && (f = function () {
                      var r, t, e, n, u, s, a, i;
                      if (r = io, (t = mo()) !== o) {
                        for (e = [], n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = mo()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (io = n, n = o); n !== o;)
                          e.push(n), n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = mo()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (io = n, n = o);
                        e !== o ? (t = Ki(t, e), r = t) : (io = r, r = o);
                      } else
                        io = r, r = o;
                      return r;
                    }()) !== o && mi() !== o && hi() !== o && mi() !== o ? (v = io, (b = Ta()) !== o && (d = mi()) !== o && (L = Ei()) !== o && (C = mi()) !== o && (p = function () {
                      var r, t, e, n, u, s, a, i;
                      if (r = io, (t = qo()) !== o) {
                        for (e = [], n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = qo()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (io = n, n = o); n !== o;)
                          e.push(n), n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = qo()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (io = n, n = o);
                        e !== o ? (t = Ki(t, e), r = t) : (io = r, r = o);
                      } else
                        io = r, r = o;
                      return r;
                    }()) !== o && (w = mi()) !== o && (E = hi()) !== o ? v = b = [
                      b,
                      d,
                      L,
                      C,
                      p,
                      w,
                      E
                    ] : (io = v, v = o), v === o && (v = null), v !== o && (b = mi()) !== o ? (d = io, (L = function () {
                      var t, e, n, u;
                      t = io, 'tablespace' === r.substr(io, 10).toLowerCase() ? (e = r.substr(io, 10), io += 10) : (e = o, 0 === vo && wo(Ve));
                      e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'TABLESPACE' : (io = t, t = o)) : (io = t, t = o);
                      return t;
                    }()) !== o && (C = mi()) !== o && (p = xs()) !== o ? d = L = [
                      L,
                      C,
                      p
                    ] : (io = d, d = o), d === o && (d = null), d !== o && (L = mi()) !== o ? ((C = es()) === o && (C = null), C !== o && (p = mi()) !== o ? (h = e, A = n, y = u, T = s, m = a, S = i, I = c, N = l, R = f, _ = v, g = d, O = C, e = {
                      tableList: Array.from(rc),
                      columnList: zi(tc),
                      ast: {
                        type: h[0].toLowerCase(),
                        index_type: A && A.toLowerCase(),
                        keyword: y.toLowerCase(),
                        concurrently: T && T.toLowerCase(),
                        index: m,
                        on_kw: S[0].toLowerCase(),
                        table: I,
                        index_using: N,
                        index_columns: R,
                        with: _ && _[4],
                        with_before_where: !0,
                        tablespace: g && {
                          type: 'origin',
                          value: g[2]
                        },
                        where: O
                      }
                    }, t = e) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o);
                    var h, A, y, T, m, S, I, N, R, _, g, O;
                    return t;
                  }());
                  return t;
                }()) === o && (t = function () {
                  var r, t, e, n;
                  r = io, (t = ni()) !== o && mi() !== o ? ((e = pa()) === o && (e = null), e !== o && mi() !== o && (n = Zo()) !== o ? (u = t, s = e, (a = n) && a.forEach(r => rc.add(`${ u }::${ r.db }::${ r.table }`)), t = {
                    tableList: Array.from(rc),
                    columnList: zi(tc),
                    ast: {
                      type: u.toLowerCase(),
                      keyword: s && s.toLowerCase() || 'table',
                      name: a
                    }
                  }, r = t) : (io = r, r = o)) : (io = r, r = o);
                  var u, s, a;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = io, (t = fa()) !== o && mi() !== o && pa() !== o && mi() !== o && (e = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = io, (t = Wo()) !== o) {
                      for (e = [], n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = Wo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o); n !== o;)
                        e.push(n), n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = Wo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o);
                      e !== o ? (t = Ki(t, e), r = t) : (io = r, r = o);
                    } else
                      io = r, r = o;
                    return r;
                  }()) !== o ? ((n = e).forEach(r => r.forEach(r => r.table && rc.add(`rename::${ r.db }::${ r.table }`))), t = {
                    tableList: Array.from(rc),
                    columnList: zi(tc),
                    ast: {
                      type: 'rename',
                      table: n
                    }
                  }, r = t) : (io = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = io, (e = function () {
                    var t, e, n, u;
                    t = io, 'call' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(_n));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'CALL' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) !== o && mi() !== o && (n = Fi()) !== o ? (u = n, e = {
                    tableList: Array.from(rc),
                    columnList: zi(tc),
                    ast: {
                      type: 'call',
                      expr: u
                    }
                  }, t = e) : (io = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = io, (e = function () {
                    var t, e, n, u;
                    t = io, 'use' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(Ne));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) !== o && mi() !== o && (n = gs()) !== o ? (u = n, rc.add(`use::${ u }::null`), e = {
                    tableList: Array.from(rc),
                    columnList: zi(tc),
                    ast: {
                      type: 'use',
                      db: u
                    }
                  }, t = e) : (io = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = io, (e = function () {
                    var t, e, n, u;
                    t = io, 'alter' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(Re));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) !== o && mi() !== o && pa() !== o && mi() !== o && (n = Zo()) !== o && mi() !== o && (u = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = io, (t = _o()) !== o) {
                      for (e = [], n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = _o()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o); n !== o;)
                        e.push(n), n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = _o()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o);
                      e !== o ? (t = Ki(t, e), r = t) : (io = r, r = o);
                    } else
                      io = r, r = o;
                    return r;
                  }()) !== o ? (a = u, (s = n) && s.length > 0 && s.forEach(r => rc.add(`alter::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(rc),
                    columnList: zi(tc),
                    ast: {
                      type: 'alter',
                      table: s,
                      expr: a
                    }
                  }, t = e) : (io = t, t = o);
                  var s, a;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = io, (e = La()) !== o && mi() !== o ? ((n = function () {
                    var t, e, n, u;
                    t = io, 'global' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(Eu));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'GLOBAL' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = io, 'session' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(hu));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'SESSION' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = io, 'local' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(Au));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'LOCAL' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = io, 'persist' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(yu));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'PERSIST' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = io, 'persist_only' === r.substr(io, 12).toLowerCase() ? (e = r.substr(io, 12), io += 12) : (e = o, 0 === vo && wo(Tu));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'PERSIST_ONLY' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()), n === o && (n = null), n !== o && mi() !== o && (u = Ui()) !== o ? (s = n, (a = u).keyword = s, e = {
                    tableList: Array.from(rc),
                    columnList: zi(tc),
                    ast: {
                      type: 'set',
                      expr: a
                    }
                  }, t = e) : (io = t, t = o)) : (io = t, t = o);
                  var s, a;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = io, (e = function () {
                    var t, e, n, u;
                    t = io, 'lock' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(g));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) !== o && mi() !== o ? ((n = pa()) === o && (n = null), n !== o && mi() !== o && (u = Zo()) !== o && mi() !== o ? ((s = function () {
                    var t, e, n, u;
                    t = io, 'in' === r.substr(io, 2).toLowerCase() ? (e = r.substr(io, 2), io += 2) : (e = o, 0 === vo && wo(yr));
                    e !== o && mi() !== o ? ('access share' === r.substr(io, 12).toLowerCase() ? (n = r.substr(io, 12), io += 12) : (n = o, 0 === vo && wo(Tr)), n === o && ('row share' === r.substr(io, 9).toLowerCase() ? (n = r.substr(io, 9), io += 9) : (n = o, 0 === vo && wo(mr)), n === o && ('row exclusive' === r.substr(io, 13).toLowerCase() ? (n = r.substr(io, 13), io += 13) : (n = o, 0 === vo && wo(Sr)), n === o && ('share update exclusive' === r.substr(io, 22).toLowerCase() ? (n = r.substr(io, 22), io += 22) : (n = o, 0 === vo && wo(Ir)), n === o && ('share row exclusive' === r.substr(io, 19).toLowerCase() ? (n = r.substr(io, 19), io += 19) : (n = o, 0 === vo && wo(Nr)), n === o && ('exclusive' === r.substr(io, 9).toLowerCase() ? (n = r.substr(io, 9), io += 9) : (n = o, 0 === vo && wo(x)), n === o && ('access exclusive' === r.substr(io, 16).toLowerCase() ? (n = r.substr(io, 16), io += 16) : (n = o, 0 === vo && wo(Rr)), n === o && ('share' === r.substr(io, 5).toLowerCase() ? (n = r.substr(io, 5), io += 5) : (n = o, 0 === vo && wo(_r))))))))), n !== o && mi() !== o ? ('mode' === r.substr(io, 4).toLowerCase() ? (u = r.substr(io, 4), io += 4) : (u = o, 0 === vo && wo(gr)), u !== o ? (e = { mode: `in ${ n.toLowerCase() } mode` }, t = e) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (s = null), s !== o && mi() !== o ? ('nowait' === r.substr(io, 6).toLowerCase() ? (a = r.substr(io, 6), io += 6) : (a = o, 0 === vo && wo(Or)), a === o && (a = null), a !== o ? (i = n, l = s, f = a, (c = u) && c.forEach(r => rc.add(`lock::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(rc),
                    columnList: zi(tc),
                    ast: {
                      type: 'lock',
                      keyword: i && i.toLowerCase(),
                      tables: c.map(r => ({ table: r })),
                      lock_mode: l,
                      nowait: f
                    }
                  }, t = e) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o);
                  var i, c, l, f;
                  return t;
                }()), t;
              }
              function yo() {
                var r;
                return (r = To()) === o && (r = function () {
                  var r, t, e, n, u, s;
                  r = io, (t = ua()) !== o && mi() !== o && (e = Zo()) !== o && mi() !== o && La() !== o && mi() !== o && (n = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = io, (t = is()) !== o) {
                      for (e = [], n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = is()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o); n !== o;)
                        e.push(n), n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = is()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o);
                      e !== o ? (t = Ki(t, e), r = t) : (io = r, r = o);
                    } else
                      io = r, r = o;
                    return r;
                  }()) !== o && mi() !== o ? ((u = es()) === o && (u = null), u !== o && mi() !== o ? ((s = cs()) === o && (s = null), s !== o ? (i = n, c = u, l = s, (a = e) && a.forEach(r => {
                    const {
                      db: t,
                      as: e,
                      table: n
                    } = r;
                    rc.add(`update::${ t }::${ n }`);
                  }), i && i.forEach(r => tc.add(`update::${ r.table }::${ r.column }`)), t = {
                    tableList: Array.from(rc),
                    columnList: zi(tc),
                    ast: {
                      type: 'update',
                      table: a,
                      set: i,
                      where: c,
                      returning: l
                    }
                  }, r = t) : (io = r, r = o)) : (io = r, r = o)) : (io = r, r = o);
                  var a, i, c, l;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s, a, i;
                  r = io, (t = vs()) !== o && mi() !== o ? ((e = ba()) === o && (e = null), e !== o && mi() !== o && (n = rs()) !== o && mi() !== o ? ((u = fs()) === o && (u = null), u !== o && mi() !== o && Ei() !== o && mi() !== o && (s = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = io, (t = Us()) !== o) {
                      for (e = [], n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = Us()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o); n !== o;)
                        e.push(n), n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = Us()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o);
                      e !== o ? (t = Mr(t, e), r = t) : (io = r, r = o);
                    } else
                      io = r, r = o;
                    return r;
                  }()) !== o && mi() !== o && hi() !== o && mi() !== o && (a = ls()) !== o && mi() !== o ? ((i = cs()) === o && (i = null), i !== o ? (t = function (r, t, e, n, u, o) {
                    if (t && (rc.add(`insert::${ t.db }::${ t.table }`), t.as = null), n) {
                      let r = t && t.table || null;
                      n.forEach(t => tc.add(`insert::${ r }::${ t }`));
                    }
                    return {
                      tableList: Array.from(rc),
                      columnList: zi(tc),
                      ast: {
                        type: r,
                        table: [t],
                        columns: n,
                        values: u,
                        partition: e,
                        returning: o
                      }
                    };
                  }(t, n, u, s, a, i), r = t) : (io = r, r = o)) : (io = r, r = o)) : (io = r, r = o)) : (io = r, r = o);
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s;
                  r = io, (t = vs()) !== o && mi() !== o && ba() !== o && mi() !== o && (e = rs()) !== o && mi() !== o ? ((n = fs()) === o && (n = null), n !== o && mi() !== o && (u = ls()) !== o && mi() !== o ? ((s = cs()) === o && (s = null), s !== o ? (a = t, c = n, l = u, f = s, (i = e) && (rc.add(`insert::${ i.db }::${ i.table }`), tc.add(`insert::${ i.table }::(.*)`), i.as = null), t = {
                    tableList: Array.from(rc),
                    columnList: zi(tc),
                    ast: {
                      type: a,
                      table: [i],
                      columns: null,
                      values: l,
                      partition: c,
                      returning: f
                    }
                  }, r = t) : (io = r, r = o)) : (io = r, r = o)) : (io = r, r = o);
                  var a, i, c, l, f;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u;
                  r = io, (t = ia()) !== o && mi() !== o ? ((e = Zo()) === o && (e = null), e !== o && mi() !== o && (n = Xo()) !== o && mi() !== o ? ((u = es()) === o && (u = null), u !== o ? (t = function (r, t, e) {
                    if (t && t.forEach(r => {
                        r.table && rc.add(`delete::${ r.db }::${ r.table }`), tc.add(`delete::${ r.table }::(.*)`);
                      }), null === r && 1 === t.length) {
                      const e = t[0];
                      r = [{
                          db: e.db,
                          table: e.table,
                          as: e.as,
                          addition: !0
                        }];
                    }
                    return {
                      tableList: Array.from(rc),
                      columnList: zi(tc),
                      ast: {
                        type: 'delete',
                        table: r,
                        from: t,
                        where: e
                      }
                    };
                  }(e, n, u), r = t) : (io = r, r = o)) : (io = r, r = o)) : (io = r, r = o);
                  return r;
                }()) === o && (r = Ao()) === o && (r = function () {
                  var r, t;
                  r = [], t = Oi();
                  for (; t !== o;)
                    r.push(t), t = Oi();
                  return r;
                }()), r;
              }
              function To() {
                var r, t, e, n, u, s, a, i, c, l;
                if (r = io, (t = $o()) !== o) {
                  for (e = [], n = io, (u = mi()) !== o && (s = Aa()) !== o && (a = mi()) !== o ? ((i = Na()) === o && (i = null), i !== o && (c = mi()) !== o && (l = $o()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c,
                      l
                    ] : (io = n, n = o)) : (io = n, n = o); n !== o;)
                    e.push(n), n = io, (u = mi()) !== o && (s = Aa()) !== o && (a = mi()) !== o ? ((i = Na()) === o && (i = null), i !== o && (c = mi()) !== o && (l = $o()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c,
                      l
                    ] : (io = n, n = o)) : (io = n, n = o);
                  e !== o && (n = mi()) !== o ? ((u = us()) === o && (u = null), u !== o && (s = mi()) !== o ? ((a = as()) === o && (a = null), a !== o ? r = t = function (r, t, e, n) {
                    let u = r;
                    for (let r = 0; r < t.length; r++)
                      u._next = t[r][5], u.union = t[r][3] ? 'union all' : 'union', u = u._next;
                    return e && (r._orderby = e), n && (r._limit = n), {
                      tableList: Array.from(rc),
                      columnList: zi(tc),
                      ast: r
                    };
                  }(t, e, u, a) : (io = r, r = o)) : (io = r, r = o)) : (io = r, r = o);
                } else
                  io = r, r = o;
                return r;
              }
              function mo() {
                var t, e, n, u, s, a, i, c, l, f, L;
                return t = io, (e = ws()) !== o && mi() !== o ? ((n = No()) === o && (n = null), n !== o && mi() !== o ? ((u = gs()) === o && (u = null), u !== o && mi() !== o ? ((s = Sa()) === o && (s = Ia()), s === o && (s = null), s !== o && mi() !== o ? (a = io, 'nulls' === r.substr(io, 5).toLowerCase() ? (i = r.substr(io, 5), io += 5) : (i = o, 0 === vo && wo(v)), i !== o && (c = mi()) !== o ? ('first' === r.substr(io, 5).toLowerCase() ? (l = r.substr(io, 5), io += 5) : (l = o, 0 === vo && wo(b)), l === o && ('last' === r.substr(io, 4).toLowerCase() ? (l = r.substr(io, 4), io += 4) : (l = o, 0 === vo && wo(d))), l !== o ? a = i = [
                  i,
                  c,
                  l
                ] : (io = a, a = o)) : (io = a, a = o), a === o && (a = null), a !== o ? (L = a, t = e = {
                  column: e,
                  collate: n,
                  opclass: u,
                  order: (f = s) && f.toLowerCase() || 'asc',
                  nulls: L && `${ L[0].toLowerCase() } ${ L[2].toLowerCase() }`
                }) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o), t;
              }
              function So() {
                var t;
                return (t = Io()) === o && (t = go()) === o && (t = Oo()) === o && (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u, s, a;
                    t = io, (e = Uo()) === o && (e = null);
                    e !== o && mi() !== o ? ('primary key' === r.substr(io, 11).toLowerCase() ? (n = r.substr(io, 11), io += 11) : (n = o, 0 === vo && wo(M)), n !== o && mi() !== o ? ((u = Vo()) === o && (u = null), u !== o && mi() !== o && (s = Ho()) !== o && mi() !== o ? ((a = Ko()) === o && (a = null), a !== o ? (c = n, l = u, f = s, v = a, e = {
                      constraint: (i = e) && i.constraint,
                      definition: f,
                      constraint_type: c.toLowerCase(),
                      keyword: i && i.keyword,
                      index_type: l,
                      resource: 'constraint',
                      index_options: v
                    }, t = e) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o);
                    var i, c, l, f, v;
                    return t;
                  }()) === o && (t = function () {
                    var r, t, e, n, u, s, a, i;
                    r = io, (t = Uo()) === o && (t = null);
                    t !== o && mi() !== o && (e = bi()) !== o && mi() !== o ? ((n = fi()) === o && (n = vi()), n === o && (n = null), n !== o && mi() !== o ? ((u = Us()) === o && (u = null), u !== o && mi() !== o ? ((s = Vo()) === o && (s = null), s !== o && mi() !== o && (a = Ho()) !== o && mi() !== o ? ((i = Ko()) === o && (i = null), i !== o ? (l = e, f = n, v = u, b = s, d = a, L = i, t = {
                      constraint: (c = t) && c.constraint,
                      definition: d,
                      constraint_type: f && `${ l.toLowerCase() } ${ f.toLowerCase() }` || l.toLowerCase(),
                      keyword: c && c.keyword,
                      index_type: b,
                      index: v,
                      resource: 'constraint',
                      index_options: L
                    }, r = t) : (io = r, r = o)) : (io = r, r = o)) : (io = r, r = o)) : (io = r, r = o)) : (io = r, r = o);
                    var c, l, f, v, b, d, L;
                    return r;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a;
                    t = io, (e = Uo()) === o && (e = null);
                    e !== o && mi() !== o ? ('foreign key' === r.substr(io, 11).toLowerCase() ? (n = r.substr(io, 11), io += 11) : (n = o, 0 === vo && wo(D)), n !== o && mi() !== o ? ((u = Us()) === o && (u = null), u !== o && mi() !== o && (s = Ho()) !== o && mi() !== o ? ((a = xo()) === o && (a = null), a !== o ? (c = n, l = u, f = s, v = a, e = {
                      constraint: (i = e) && i.constraint,
                      definition: f,
                      constraint_type: c,
                      keyword: i && i.keyword,
                      index: l,
                      resource: 'constraint',
                      reference_definition: v
                    }, t = e) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o);
                    var i, c, l, f, v;
                    return t;
                  }());
                  return t;
                }()), t;
              }
              function Io() {
                var t, e, n, u, s, a, i, c, l, f, v, b, d, I, N, R, _, g, O, U, x, M, D;
                return t = io, (e = _s()) !== o && mi() !== o && (n = ji()) !== o && mi() !== o ? ((u = function () {
                  var r, t, e;
                  r = io, (t = Ys()) === o && (t = js());
                  t !== o && mi() !== o ? ((e = Ro()) === o && (e = null), e !== o ? (u = e, (n = t) && !n.value && (n.value = 'null'), r = t = {
                    default_val: u,
                    nullable: n
                  }) : (io = r, r = o)) : (io = r, r = o);
                  var n, u;
                  r === o && (r = io, (t = Ro()) !== o && mi() !== o ? ((e = Ys()) === o && (e = js()), e === o && (e = null), e !== o ? (t = function (r, t) {
                    return t && !t.value && (t.value = 'null'), {
                      default_val: r,
                      nullable: t
                    };
                  }(t, e), r = t) : (io = r, r = o)) : (io = r, r = o));
                  return r;
                }()) === o && (u = null), u !== o && mi() !== o ? ('auto_increment' === r.substr(io, 14).toLowerCase() ? (s = r.substr(io, 14), io += 14) : (s = o, 0 === vo && wo(L)), s === o && (s = null), s !== o && mi() !== o ? ('unique' === r.substr(io, 6).toLowerCase() ? (a = r.substr(io, 6), io += 6) : (a = o, 0 === vo && wo(C)), a === o && (a = io, 'primary' === r.substr(io, 7).toLowerCase() ? (i = r.substr(io, 7), io += 7) : (i = o, 0 === vo && wo(p)), i !== o && (c = mi()) !== o ? ('key' === r.substr(io, 3).toLowerCase() ? (l = r.substr(io, 3), io += 3) : (l = o, 0 === vo && wo(w)), l !== o ? a = i = [
                  i,
                  c,
                  l
                ] : (io = a, a = o)) : (io = a, a = o)), a === o && (a = null), a !== o && (i = mi()) !== o ? ((c = Ni()) === o && (c = null), c !== o && (l = mi()) !== o ? ((f = No()) === o && (f = null), f !== o && mi() !== o ? ((v = function () {
                  var t, e, n;
                  t = io, 'column_format' === r.substr(io, 13).toLowerCase() ? (e = r.substr(io, 13), io += 13) : (e = o, 0 === vo && wo(E));
                  e !== o && mi() !== o ? ('fixed' === r.substr(io, 5).toLowerCase() ? (n = r.substr(io, 5), io += 5) : (n = o, 0 === vo && wo(h)), n === o && ('dynamic' === r.substr(io, 7).toLowerCase() ? (n = r.substr(io, 7), io += 7) : (n = o, 0 === vo && wo(A)), n === o && ('default' === r.substr(io, 7).toLowerCase() ? (n = r.substr(io, 7), io += 7) : (n = o, 0 === vo && wo(y)))), n !== o ? (e = function (r, t) {
                    return {
                      type: 'column_format',
                      value: t.toLowerCase()
                    };
                  }(0, n), t = e) : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()) === o && (v = null), v !== o && mi() !== o ? ((b = function () {
                  var t, e, n;
                  t = io, 'storage' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(T));
                  e !== o && mi() !== o ? ('disk' === r.substr(io, 4).toLowerCase() ? (n = r.substr(io, 4), io += 4) : (n = o, 0 === vo && wo(m)), n === o && ('memory' === r.substr(io, 6).toLowerCase() ? (n = r.substr(io, 6), io += 6) : (n = o, 0 === vo && wo(S))), n !== o ? (e = {
                    type: 'storage',
                    value: n.toLowerCase()
                  }, t = e) : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()) === o && (b = null), b !== o && mi() !== o ? ((d = xo()) === o && (d = null), d !== o ? (I = e, N = n, R = u, _ = s, g = a, O = c, U = f, x = v, M = b, D = d, tc.add(`create::${ I.table }::${ I.column }`), t = e = {
                  column: I,
                  definition: N,
                  nullable: R && R.nullable,
                  default_val: R && R.default_val,
                  auto_increment: _ && _.toLowerCase(),
                  unique_or_primary: Array.isArray(g) ? `${ g[0].toLowerCase() } ${ g[2].toLowerCase() }` : g,
                  comment: O,
                  collate: U,
                  column_format: x,
                  storage: M,
                  reference_definition: D,
                  resource: 'column'
                }) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o), t;
              }
              function No() {
                var t, e;
                return t = io, function () {
                  var t, e, n, u;
                  t = io, 'collate' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(Lr));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'COLLATE' : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }() !== o && mi() !== o && (e = gs()) !== o ? t = {
                  type: 'collate',
                  value: e
                } : (io = t, t = o), t;
              }
              function Ro() {
                var r, t;
                return r = io, ta() !== o && mi() !== o ? ((t = Gs()) === o && (t = ws()), t !== o ? r = {
                  type: 'default',
                  value: t
                } : (io = r, r = o)) : (io = r, r = o), r;
              }
              function _o() {
                var t;
                return (t = function () {
                  var r, t, e, n;
                  r = io, (t = ci()) !== o && mi() !== o ? ((e = li()) === o && (e = null), e !== o && mi() !== o && (n = Io()) !== o ? (u = e, s = n, t = {
                    action: 'add',
                    ...s,
                    keyword: u,
                    resource: 'column',
                    type: 'alter'
                  }, r = t) : (io = r, r = o)) : (io = r, r = o);
                  var u, s;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = io, na() !== o && mi() !== o ? ((t = li()) === o && (t = null), t !== o && mi() !== o && (e = _s()) !== o ? r = {
                    action: 'drop',
                    column: e,
                    keyword: t,
                    resource: 'column',
                    type: 'alter'
                  } : (io = r, r = o)) : (io = r, r = o);
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = io, (t = ci()) !== o && mi() !== o && (e = go()) !== o ? (n = e, t = {
                    action: 'add',
                    type: 'alter',
                    ...n
                  }, r = t) : (io = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = io, (t = ci()) !== o && mi() !== o && (e = Oo()) !== o ? (n = e, t = {
                    action: 'add',
                    type: 'alter',
                    ...n
                  }, r = t) : (io = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n;
                  r = io, (t = fa()) !== o && mi() !== o ? ((e = ea()) === o && (e = Ca()), e === o && (e = null), e !== o && mi() !== o && (n = gs()) !== o ? (s = n, t = {
                    action: 'rename',
                    type: 'alter',
                    resource: 'table',
                    keyword: (u = e) && u[0].toLowerCase(),
                    table: s
                  }, r = t) : (io = r, r = o)) : (io = r, r = o);
                  var u, s;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = io, 'algorithm' === r.substr(io, 9).toLowerCase() ? (e = r.substr(io, 9), io += 9) : (e = o, 0 === vo && wo(I));
                  e !== o && mi() !== o && ii() !== o && mi() !== o ? ('default' === r.substr(io, 7).toLowerCase() ? (n = r.substr(io, 7), io += 7) : (n = o, 0 === vo && wo(y)), n === o && ('instant' === r.substr(io, 7).toLowerCase() ? (n = r.substr(io, 7), io += 7) : (n = o, 0 === vo && wo(N)), n === o && ('inplace' === r.substr(io, 7).toLowerCase() ? (n = r.substr(io, 7), io += 7) : (n = o, 0 === vo && wo(R)), n === o && ('copy' === r.substr(io, 4).toLowerCase() ? (n = r.substr(io, 4), io += 4) : (n = o, 0 === vo && wo(_))))), n !== o ? t = e = {
                    type: 'alter',
                    keyword: 'algorithm',
                    resource: 'algorithm',
                    algorithm: n
                  } : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = io, 'lock' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(g));
                  e !== o && mi() !== o && ii() !== o && mi() !== o ? ('default' === r.substr(io, 7).toLowerCase() ? (n = r.substr(io, 7), io += 7) : (n = o, 0 === vo && wo(y)), n === o && ('none' === r.substr(io, 4).toLowerCase() ? (n = r.substr(io, 4), io += 4) : (n = o, 0 === vo && wo(O)), n === o && ('shared' === r.substr(io, 6).toLowerCase() ? (n = r.substr(io, 6), io += 6) : (n = o, 0 === vo && wo(U)), n === o && ('exclusive' === r.substr(io, 9).toLowerCase() ? (n = r.substr(io, 9), io += 9) : (n = o, 0 === vo && wo(x))))), n !== o ? t = e = {
                    type: 'alter',
                    keyword: 'lock',
                    resource: 'lock',
                    lock: n
                  } : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()), t;
              }
              function go() {
                var r, t, e, n, u, s, a, i;
                return r = io, (t = fi()) === o && (t = vi()), t !== o && mi() !== o ? ((e = Us()) === o && (e = null), e !== o && mi() !== o ? ((n = Vo()) === o && (n = null), n !== o && mi() !== o && (u = Ho()) !== o && mi() !== o ? ((s = Ko()) === o && (s = null), s !== o && mi() !== o ? (a = n, i = s, r = t = {
                  index: e,
                  definition: u,
                  keyword: t.toLowerCase(),
                  index_type: a,
                  resource: 'index',
                  index_options: i
                }) : (io = r, r = o)) : (io = r, r = o)) : (io = r, r = o)) : (io = r, r = o), r;
              }
              function Oo() {
                var t, e, n, u, s, a, i, c, l;
                return t = io, (e = function () {
                  var t, e, n, u;
                  t = io, 'fulltext' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(xu));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'FULLTEXT' : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()) === o && (e = function () {
                  var t, e, n, u;
                  t = io, 'spatial' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(Mu));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'SPATIAL' : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()), e !== o && mi() !== o ? ((n = fi()) === o && (n = vi()), n === o && (n = null), n !== o && mi() !== o ? ((u = Us()) === o && (u = null), u !== o && mi() !== o && (s = Ho()) !== o && mi() !== o ? ((a = Ko()) === o && (a = null), a !== o && mi() !== o ? (i = e, l = a, t = e = {
                  index: u,
                  definition: s,
                  keyword: (c = n) && `${ i.toLowerCase() } ${ c.toLowerCase() }` || i.toLowerCase(),
                  index_options: l,
                  resource: 'index'
                }) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Uo() {
                var r, t, e, n;
                return r = io, (t = Li()) !== o && mi() !== o ? ((e = gs()) === o && (e = null), e !== o ? (n = e, r = t = {
                  keyword: t.toLowerCase(),
                  constraint: n
                }) : (io = r, r = o)) : (io = r, r = o), r;
              }
              function xo() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = io, (e = function () {
                  var t, e, n, u;
                  t = io, 'references' === r.substr(io, 10).toLowerCase() ? (e = r.substr(io, 10), io += 10) : (e = o, 0 === vo && wo(Fu));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'REFERENCES' : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()) !== o && mi() !== o && (n = Zo()) !== o && mi() !== o && (u = Ho()) !== o && mi() !== o ? ('match full' === r.substr(io, 10).toLowerCase() ? (s = r.substr(io, 10), io += 10) : (s = o, 0 === vo && wo(k)), s === o && ('match partial' === r.substr(io, 13).toLowerCase() ? (s = r.substr(io, 13), io += 13) : (s = o, 0 === vo && wo($)), s === o && ('match simple' === r.substr(io, 12).toLowerCase() ? (s = r.substr(io, 12), io += 12) : (s = o, 0 === vo && wo(F)))), s === o && (s = null), s !== o && mi() !== o ? ((a = Mo()) === o && (a = null), a !== o && mi() !== o ? ((i = Mo()) === o && (i = null), i !== o ? (c = s, l = a, f = i, t = e = {
                  definition: u,
                  table: n,
                  keyword: e.toLowerCase(),
                  match: c && c.toLowerCase(),
                  on_delete: l,
                  on_update: f
                }) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Mo() {
                var t, e, n, u;
                return t = io, 'on delete' === r.substr(io, 9).toLowerCase() ? (e = r.substr(io, 9), io += 9) : (e = o, 0 === vo && wo(P)), e === o && ('on update' === r.substr(io, 9).toLowerCase() ? (e = r.substr(io, 9), io += 9) : (e = o, 0 === vo && wo(H))), e !== o && mi() !== o && (n = function () {
                  var e;
                  'restrict' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(G));
                  e === o && ('cascade' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(j)), e === o && ('set null' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(Y)), e === o && ('no action' === r.substr(io, 9).toLowerCase() ? (e = r.substr(io, 9), io += 9) : (e = o, 0 === vo && wo(B)), e === o && ('set default' === r.substr(io, 11).toLowerCase() ? (e = r.substr(io, 11), io += 11) : (e = o, 0 === vo && wo(X))))));
                  e !== o && (e = e.toLowerCase());
                  return e;
                }()) !== o ? (u = n, t = e = {
                  type: e.toLowerCase(),
                  value: u
                }) : (io = t, t = o), t;
              }
              function Do() {
                var t, e, n, u, s, a, i;
                return t = io, (e = ca()) === o && (e = ia()) === o && (e = ni()), e !== o && (i = e, e = { keyword: Array.isArray(i) ? i[0].toLowerCase() : i.toLowerCase() }), (t = e) === o && (t = io, (e = ua()) !== o && mi() !== o ? (n = io, 'of' === r.substr(io, 2).toLowerCase() ? (u = r.substr(io, 2), io += 2) : (u = o, 0 === vo && wo(Q)), u !== o && (s = mi()) !== o && (a = ns()) !== o ? n = u = [
                  u,
                  s,
                  a
                ] : (io = n, n = o), n === o && (n = null), n !== o ? t = e = function (r, t) {
                  return {
                    keyword: r && r[0] && r[0].toLowerCase(),
                    args: t && {
                      keyword: t[0],
                      columns: t[2]
                    } || null
                  };
                }(e, n) : (io = t, t = o)) : (io = t, t = o)), t;
              }
              function ko() {
                var t, e, n, u, s, a, i, c, l;
                return t = io, 'auto_increment' === r.substr(io, 14).toLowerCase() ? (e = r.substr(io, 14), io += 14) : (e = o, 0 === vo && wo(L)), e === o && ('avg_row_length' === r.substr(io, 14).toLowerCase() ? (e = r.substr(io, 14), io += 14) : (e = o, 0 === vo && wo(ir)), e === o && ('key_block_size' === r.substr(io, 14).toLowerCase() ? (e = r.substr(io, 14), io += 14) : (e = o, 0 === vo && wo(cr)), e === o && ('max_rows' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(lr)), e === o && ('min_rows' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(fr)), e === o && ('stats_sample_pages' === r.substr(io, 18).toLowerCase() ? (e = r.substr(io, 18), io += 18) : (e = o, 0 === vo && wo(vr))))))), e !== o && mi() !== o ? ((n = ii()) === o && (n = null), n !== o && mi() !== o && (u = Ks()) !== o ? (c = n, l = u, t = e = {
                  keyword: e.toLowerCase(),
                  symbol: c,
                  value: l.value
                }) : (io = t, t = o)) : (io = t, t = o), t === o && (t = io, (e = ta()) === o && (e = null), e !== o && mi() !== o ? ('character set' === r.substr(io, 13).toLowerCase() ? (n = r.substr(io, 13), io += 13) : (n = o, 0 === vo && wo(br)), n === o && ('charset' === r.substr(io, 7).toLowerCase() ? (n = r.substr(io, 7), io += 7) : (n = o, 0 === vo && wo(dr)), n === o && ('collate' === r.substr(io, 7).toLowerCase() ? (n = r.substr(io, 7), io += 7) : (n = o, 0 === vo && wo(Lr)))), n !== o && mi() !== o ? ((u = ii()) === o && (u = null), u !== o && (s = mi()) !== o && (a = xs()) !== o ? t = e = function (r, t, e, n) {
                  return {
                    keyword: r && `${ r[0].toLowerCase() } ${ t.toLowerCase() }` || t.toLowerCase(),
                    symbol: e,
                    value: n
                  };
                }(e, n, u, a) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o), t === o && (t = io, (e = di()) === o && ('connection' === r.substr(io, 10).toLowerCase() ? (e = r.substr(io, 10), io += 10) : (e = o, 0 === vo && wo(Cr))), e !== o && mi() !== o ? ((n = ii()) === o && (n = null), n !== o && mi() !== o && (u = Bs()) !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: `'${ e.value }'`
                  };
                }(e, n, u) : (io = t, t = o)) : (io = t, t = o), t === o && (t = io, 'compression' === r.substr(io, 11).toLowerCase() ? (e = r.substr(io, 11), io += 11) : (e = o, 0 === vo && wo(pr)), e !== o && mi() !== o ? ((n = ii()) === o && (n = null), n !== o && mi() !== o ? (u = io, 39 === r.charCodeAt(io) ? (s = '\'', io++) : (s = o, 0 === vo && wo(wr)), s !== o ? ('zlib' === r.substr(io, 4).toLowerCase() ? (a = r.substr(io, 4), io += 4) : (a = o, 0 === vo && wo(Er)), a === o && ('lz4' === r.substr(io, 3).toLowerCase() ? (a = r.substr(io, 3), io += 3) : (a = o, 0 === vo && wo(hr)), a === o && ('none' === r.substr(io, 4).toLowerCase() ? (a = r.substr(io, 4), io += 4) : (a = o, 0 === vo && wo(O)))), a !== o ? (39 === r.charCodeAt(io) ? (i = '\'', io++) : (i = o, 0 === vo && wo(wr)), i !== o ? u = s = [
                  s,
                  a,
                  i
                ] : (io = u, u = o)) : (io = u, u = o)) : (io = u, u = o), u !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: e.join('').toUpperCase()
                  };
                }(e, n, u) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o), t === o && (t = io, 'engine' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(Ar)), e !== o && mi() !== o ? ((n = ii()) === o && (n = null), n !== o && mi() !== o && (u = xs()) !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: e.toUpperCase()
                  };
                }(e, n, u) : (io = t, t = o)) : (io = t, t = o))))), t;
              }
              function $o() {
                var t, e, n, u, s, a, i;
                return (t = Go()) === o && (t = io, e = io, 40 === r.charCodeAt(io) ? (n = '(', io++) : (n = o, 0 === vo && wo(Ur)), n !== o && (u = mi()) !== o && (s = $o()) !== o && (a = mi()) !== o ? (41 === r.charCodeAt(io) ? (i = ')', io++) : (i = o, 0 === vo && wo(xr)), i !== o ? e = n = [
                  n,
                  u,
                  s,
                  a,
                  i
                ] : (io = e, e = o)) : (io = e, e = o), e !== o && (e = {
                  ...e[2],
                  parentheses_symbol: !0
                }), t = e), t;
              }
              function Fo() {
                var t, e, n, u, s, a, i, c, l;
                if (t = io, Ta() !== o)
                  if (mi() !== o)
                    if ((e = Po()) !== o) {
                      for (n = [], u = io, (s = mi()) !== o && (a = pi()) !== o && (i = mi()) !== o && (c = Po()) !== o ? u = s = [
                          s,
                          a,
                          i,
                          c
                        ] : (io = u, u = o); u !== o;)
                        n.push(u), u = io, (s = mi()) !== o && (a = pi()) !== o && (i = mi()) !== o && (c = Po()) !== o ? u = s = [
                          s,
                          a,
                          i,
                          c
                        ] : (io = u, u = o);
                      n !== o ? t = Ki(e, n) : (io = t, t = o);
                    } else
                      io = t, t = o;
                  else
                    io = t, t = o;
                else
                  io = t, t = o;
                return t === o && (t = io, mi() !== o && Ta() !== o && (e = mi()) !== o && (n = function () {
                  var t, e, n, u;
                  t = io, 'RECURSIVE' === r.substr(io, 9) ? (e = 'RECURSIVE', io += 9) : (e = o, 0 === vo && wo(ke));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()) !== o && (u = mi()) !== o && (s = Po()) !== o ? ((l = s).recursive = !0, t = [l]) : (io = t, t = o)), t;
              }
              function Po() {
                var r, t, e, n;
                return r = io, (t = xs()) !== o && mi() !== o ? ((e = Ho()) === o && (e = null), e !== o && mi() !== o && Ca() !== o && mi() !== o && Ei() !== o && mi() !== o && (n = To()) !== o && mi() !== o && hi() !== o ? r = t = {
                  name: t,
                  stmt: n,
                  columns: e
                } : (io = r, r = o)) : (io = r, r = o), r;
              }
              function Ho() {
                var r, t, e, n, u, s, a, i;
                if (r = io, Ei() !== o)
                  if (mi() !== o)
                    if ((t = Us()) !== o) {
                      for (e = [], n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = Us()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o); n !== o;)
                        e.push(n), n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = Us()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o);
                      e !== o && (n = mi()) !== o && (u = hi()) !== o ? r = Mr(t, e) : (io = r, r = o);
                    } else
                      io = r, r = o;
                  else
                    io = r, r = o;
                else
                  io = r, r = o;
                return r;
              }
              function Go() {
                var t, e, n, u, s, a, i, c, l, f, v;
                return t = io, mi() !== o ? ((e = Fo()) === o && (e = null), e !== o && mi() !== o && function () {
                  var t, e, n, u;
                  t = io, 'select' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(_e));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }() !== o && mi() !== o ? ((n = function () {
                  var r, t, e, n, u, s;
                  if (r = io, (t = jo()) !== o) {
                    for (e = [], n = io, (u = mi()) !== o && (s = jo()) !== o ? n = u = [
                        u,
                        s
                      ] : (io = n, n = o); n !== o;)
                      e.push(n), n = io, (u = mi()) !== o && (s = jo()) !== o ? n = u = [
                        u,
                        s
                      ] : (io = n, n = o);
                    e !== o ? (t = function (r, t) {
                      const e = [r];
                      for (let r = 0, n = t.length; r < n; ++r)
                        e.push(t[r][1]);
                      return e;
                    }(t, e), r = t) : (io = r, r = o);
                  } else
                    io = r, r = o;
                  return r;
                }()) === o && (n = null), n !== o && mi() !== o ? ((u = Ra()) === o && (u = null), u !== o && mi() !== o && (s = function () {
                  var r, t, e, n, u, s, a, i;
                  r = io, (t = Na()) === o && (t = io, (e = wi()) !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (io = t, t = o)) : (io = t, t = o), t === o && (t = wi()));
                  if (t !== o) {
                    for (e = [], n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = Yo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (io = n, n = o); n !== o;)
                      e.push(n), n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = Yo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (io = n, n = o);
                    e !== o ? (c = t, l = e, tc.add('select::null::(.*)'), t = l && l.length > 0 ? (c[0] = {
                      expr: {
                        type: 'column_ref',
                        table: null,
                        column: '*'
                      },
                      as: null
                    }, Ki(c[0], l)) : c[0], r = t) : (io = r, r = o);
                  } else
                    io = r, r = o;
                  var c, l;
                  if (r === o)
                    if (r = io, (t = Yo()) !== o) {
                      for (e = [], n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = Yo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o); n !== o;)
                        e.push(n), n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = Yo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o);
                      e !== o ? (t = function (r, t) {
                        return Ki(r, t);
                      }(t, e), r = t) : (io = r, r = o);
                    } else
                      io = r, r = o;
                  return r;
                }()) !== o && mi() !== o ? ((a = Xo()) === o && (a = null), a !== o && mi() !== o ? ((i = es()) === o && (i = null), i !== o && mi() !== o ? ((c = function () {
                  var t, e, n;
                  t = io, (e = function () {
                    var t, e, n, u;
                    t = io, 'group' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(un));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) !== o && mi() !== o && ma() !== o && mi() !== o && (n = ds()) !== o ? (e = n.value, t = e) : (io = t, t = o);
                  return t;
                }()) === o && (c = null), c !== o && mi() !== o ? ((l = function () {
                  var t, e;
                  t = io, function () {
                    var t, e, n, u;
                    t = io, 'having' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(an));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }() !== o && mi() !== o && (e = ws()) !== o ? t = e : (io = t, t = o);
                  return t;
                }()) === o && (l = null), l !== o && mi() !== o ? ((f = us()) === o && (f = null), f !== o && mi() !== o ? ((v = as()) === o && (v = null), v !== o ? t = function (r, t, e, n, u, o, s, a, i, c) {
                  return u && u.forEach(r => r.table && rc.add(`select::${ r.db }::${ r.table }`)), {
                    with: r,
                    type: 'select',
                    options: t,
                    distinct: e,
                    columns: n,
                    from: u,
                    where: o,
                    groupby: s,
                    having: a,
                    orderby: i,
                    limit: c
                  };
                }(e, n, u, s, a, i, c, l, f, v) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o), t;
              }
              function jo() {
                var e;
                return (e = function () {
                  var t;
                  'sql_calc_found_rows' === r.substr(io, 19).toLowerCase() ? (t = r.substr(io, 19), io += 19) : (t = o, 0 === vo && wo(Pu));
                  return t;
                }()) === o && ((e = function () {
                  var t;
                  'sql_cache' === r.substr(io, 9).toLowerCase() ? (t = r.substr(io, 9), io += 9) : (t = o, 0 === vo && wo(Hu));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_no_cache' === r.substr(io, 12).toLowerCase() ? (t = r.substr(io, 12), io += 12) : (t = o, 0 === vo && wo(Gu));
                  return t;
                }()), e === o && (e = function () {
                  var t;
                  'sql_big_result' === r.substr(io, 14).toLowerCase() ? (t = r.substr(io, 14), io += 14) : (t = o, 0 === vo && wo(Yu));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_small_result' === r.substr(io, 16).toLowerCase() ? (t = r.substr(io, 16), io += 16) : (t = o, 0 === vo && wo(ju));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_buffer_result' === r.substr(io, 17).toLowerCase() ? (t = r.substr(io, 17), io += 17) : (t = o, 0 === vo && wo(Bu));
                  return t;
                }())), e !== o && (e = e), e;
              }
              function Yo() {
                var r, t, e, n;
                return r = io, (t = ws()) !== o && ai() !== o && (e = ji()) !== o ? r = t = {
                  type: 'cast',
                  expr: t,
                  symbol: '::',
                  target: e
                } : (io = r, r = o), r === o && (r = io, (t = gs()) !== o && mi() !== o && (e = Ci()) !== o && mi() !== o && wi() !== o ? (n = t, tc.add(`select::${ n }::(.*)`), r = t = {
                  type: 'star_ref',
                  expr: {
                    type: 'column_ref',
                    table: n,
                    column: '*'
                  },
                  as: null
                }) : (io = r, r = o), r === o && (r = io, (t = ws()) !== o && mi() !== o ? ((e = Bo()) === o && (e = null), e !== o ? r = t = function (r, t) {
                  return {
                    type: 'expr',
                    expr: r,
                    as: t
                  };
                }(t, e) : (io = r, r = o)) : (io = r, r = o))), r;
              }
              function Bo() {
                var r, t, e;
                return r = io, (t = Ca()) !== o && mi() !== o && (e = function () {
                  var r, t;
                  r = io, (t = xs()) !== o ? (function (r) {
                    if (!0 === Bi[r.toUpperCase()])
                      throw new Error('Error: ' + JSON.stringify(r) + ' is a reserved word, can not as alias clause');
                    return !1;
                  }(t) ? o : void 0) !== o ? r = t = t : (io = r, r = o) : (io = r, r = o);
                  r === o && (r = io, (t = Os()) !== o && (t = t), r = t);
                  return r;
                }()) !== o ? r = t = e : (io = r, r = o), r === o && (r = io, (t = Ca()) === o && (t = null), t !== o && mi() !== o && (e = gs()) !== o ? r = t = e : (io = r, r = o)), r;
              }
              function Xo() {
                var r, t;
                return r = io, da() !== o && mi() !== o && (t = Zo()) !== o ? r = t : (io = r, r = o), r;
              }
              function Wo() {
                var r, t, e;
                return r = io, (t = rs()) !== o && mi() !== o && ea() !== o && mi() !== o && (e = rs()) !== o ? r = t = [
                  t,
                  e
                ] : (io = r, r = o), r;
              }
              function Vo() {
                var t, e;
                return t = io, ya() !== o && mi() !== o ? ('btree' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(Dr)), e === o && ('hash' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(kr)), e === o && ('gist' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo($r)), e === o && ('gin' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(Fr))))), e !== o ? t = {
                  keyword: 'using',
                  type: e.toLowerCase()
                } : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ko() {
                var r, t, e, n, u, s;
                if (r = io, (t = qo()) !== o) {
                  for (e = [], n = io, (u = mi()) !== o && (s = qo()) !== o ? n = u = [
                      u,
                      s
                    ] : (io = n, n = o); n !== o;)
                    e.push(n), n = io, (u = mi()) !== o && (s = qo()) !== o ? n = u = [
                      u,
                      s
                    ] : (io = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    const e = [r];
                    for (let r = 0; r < t.length; r++)
                      e.push(t[r][1]);
                    return e;
                  }(t, e) : (io = r, r = o);
                } else
                  io = r, r = o;
                return r;
              }
              function qo() {
                var t, e, n, u, s, a;
                return t = io, (e = function () {
                  var t, e, n, u;
                  t = io, 'key_block_size' === r.substr(io, 14).toLowerCase() ? (e = r.substr(io, 14), io += 14) : (e = o, 0 === vo && wo(cr));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'KEY_BLOCK_SIZE' : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()) !== o && mi() !== o ? ((n = ii()) === o && (n = null), n !== o && mi() !== o && (u = Ks()) !== o ? (s = n, a = u, t = e = {
                  type: e.toLowerCase(),
                  symbol: s,
                  expr: a
                }) : (io = t, t = o)) : (io = t, t = o), t === o && (t = io, (e = xs()) !== o && mi() !== o && (n = ii()) !== o && mi() !== o ? ((u = Ks()) === o && (u = gs()), u !== o ? t = e = function (r, t, e) {
                  return {
                    type: r.toLowerCase(),
                    symbol: t,
                    expr: 'string' == typeof e && {
                      type: 'origin',
                      value: e
                    } || e
                  };
                }(e, n, u) : (io = t, t = o)) : (io = t, t = o), t === o && (t = Vo()) === o && (t = io, 'with' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Pr)), e !== o && mi() !== o ? ('parser' === r.substr(io, 6).toLowerCase() ? (n = r.substr(io, 6), io += 6) : (n = o, 0 === vo && wo(Hr)), n !== o && mi() !== o && (u = xs()) !== o ? t = e = {
                  type: 'with parser',
                  expr: u
                } : (io = t, t = o)) : (io = t, t = o), t === o && (t = io, 'visible' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(Gr)), e === o && ('invisible' === r.substr(io, 9).toLowerCase() ? (e = r.substr(io, 9), io += 9) : (e = o, 0 === vo && wo(jr))), e !== o && (e = function (r) {
                  return {
                    type: r.toLowerCase(),
                    expr: r.toLowerCase()
                  };
                }(e)), (t = e) === o && (t = Ni())))), t;
              }
              function Zo() {
                var r, t, e, n, u, s;
                if (r = io, (t = Jo()) !== o) {
                  for (e = [], n = zo(); n !== o;)
                    e.push(n), n = zo();
                  e !== o ? (u = t, (s = e).unshift(u), s.forEach(r => {
                    const {
                      table: t,
                      as: e
                    } = r;
                    ec[t] = t, e && (ec[e] = t);
                  }), r = t = s) : (io = r, r = o);
                } else
                  io = r, r = o;
                return r;
              }
              function zo() {
                var r, t, e;
                return r = io, mi() !== o && (t = pi()) !== o && mi() !== o && (e = Jo()) !== o ? r = e : (io = r, r = o), r === o && (r = io, mi() !== o && (t = function () {
                  var r, t, e, n, u, s, a, i, c, l, f;
                  if (r = io, (t = Qo()) !== o)
                    if (mi() !== o)
                      if ((e = Jo()) !== o)
                        if (mi() !== o)
                          if ((n = ya()) !== o)
                            if (mi() !== o)
                              if (Ei() !== o)
                                if (mi() !== o)
                                  if ((u = xs()) !== o) {
                                    for (s = [], a = io, (i = mi()) !== o && (c = pi()) !== o && (l = mi()) !== o && (f = xs()) !== o ? a = i = [
                                        i,
                                        c,
                                        l,
                                        f
                                      ] : (io = a, a = o); a !== o;)
                                      s.push(a), a = io, (i = mi()) !== o && (c = pi()) !== o && (l = mi()) !== o && (f = xs()) !== o ? a = i = [
                                        i,
                                        c,
                                        l,
                                        f
                                      ] : (io = a, a = o);
                                    s !== o && (a = mi()) !== o && (i = hi()) !== o ? (v = t, d = u, L = s, (b = e).join = v, b.using = Ki(d, L), r = t = b) : (io = r, r = o);
                                  } else
                                    io = r, r = o;
                                else
                                  io = r, r = o;
                              else
                                io = r, r = o;
                            else
                              io = r, r = o;
                          else
                            io = r, r = o;
                        else
                          io = r, r = o;
                      else
                        io = r, r = o;
                    else
                      io = r, r = o;
                  else
                    io = r, r = o;
                  var v, b, d, L;
                  r === o && (r = io, (t = Qo()) !== o && mi() !== o && (e = Jo()) !== o && mi() !== o ? ((n = ts()) === o && (n = null), n !== o ? (t = function (r, t, e) {
                    return t.join = r, t.on = e, t;
                  }(t, e, n), r = t) : (io = r, r = o)) : (io = r, r = o), r === o && (r = io, (t = Qo()) !== o && mi() !== o && (e = Ei()) !== o && mi() !== o && (n = To()) !== o && mi() !== o && hi() !== o && mi() !== o ? ((u = Bo()) === o && (u = null), u !== o && (s = mi()) !== o ? ((a = ts()) === o && (a = null), a !== o ? (t = function (r, t, e, n) {
                    return t.parentheses = !0, {
                      expr: t,
                      as: e,
                      join: r,
                      on: n
                    };
                  }(t, n, u, a), r = t) : (io = r, r = o)) : (io = r, r = o)) : (io = r, r = o)));
                  return r;
                }()) !== o ? r = t : (io = r, r = o)), r;
              }
              function Jo() {
                var t, e, n, u, s, a;
                return t = io, (e = function () {
                  var t;
                  'dual' === r.substr(io, 4).toLowerCase() ? (t = r.substr(io, 4), io += 4) : (t = o, 0 === vo && wo(_u));
                  return t;
                }()) !== o && (e = { type: 'dual' }), (t = e) === o && (t = io, (e = rs()) !== o && mi() !== o ? ((n = Bo()) === o && (n = null), n !== o ? (a = n, t = e = 'var' === (s = e).type ? (s.as = a, s) : {
                  db: s.db,
                  table: s.table,
                  as: a
                }) : (io = t, t = o)) : (io = t, t = o), t === o && (t = io, (e = Ei()) !== o && mi() !== o && (n = To()) !== o && mi() !== o && hi() !== o && mi() !== o ? ((u = Bo()) === o && (u = null), u !== o ? t = e = function (r, t) {
                  return r.parentheses = !0, {
                    expr: r,
                    as: t
                  };
                }(n, u) : (io = t, t = o)) : (io = t, t = o))), t;
              }
              function Qo() {
                var t, e, n, u;
                return t = io, (e = function () {
                  var t, e, n, u;
                  t = io, 'left' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Ke));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()) !== o && (n = mi()) !== o ? ((u = ha()) === o && (u = null), u !== o && mi() !== o && Ea() !== o ? t = e = 'LEFT JOIN' : (io = t, t = o)) : (io = t, t = o), t === o && (t = io, (e = function () {
                  var t, e, n, u;
                  t = io, 'right' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(qe));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()) !== o && (n = mi()) !== o ? ((u = ha()) === o && (u = null), u !== o && mi() !== o && Ea() !== o ? t = e = 'RIGHT JOIN' : (io = t, t = o)) : (io = t, t = o), t === o && (t = io, (e = function () {
                  var t, e, n, u;
                  t = io, 'full' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Ze));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()) !== o && (n = mi()) !== o ? ((u = ha()) === o && (u = null), u !== o && mi() !== o && Ea() !== o ? t = e = 'FULL JOIN' : (io = t, t = o)) : (io = t, t = o), t === o && (t = io, e = io, (n = function () {
                  var t, e, n, u;
                  t = io, 'inner' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(ze));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()) !== o && (u = mi()) !== o ? e = n = [
                  n,
                  u
                ] : (io = e, e = o), e === o && (e = null), e !== o && (n = Ea()) !== o ? t = e = 'INNER JOIN' : (io = t, t = o)))), t;
              }
              function rs() {
                var r, t, e, n, u, s, a, i, c, l;
                return r = io, (t = gs()) !== o ? (e = io, (n = mi()) !== o && (u = Ci()) !== o && (s = mi()) !== o && (a = gs()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (io = e, e = o), e !== o ? (n = io, (u = mi()) !== o && (s = Ci()) !== o && (a = mi()) !== o && (i = gs()) !== o ? n = u = [
                  u,
                  s,
                  a,
                  i
                ] : (io = n, n = o), n !== o ? r = t = function (r, t, e) {
                  const n = {
                    db: null,
                    table: r
                  };
                  return null !== e && (n.db = `${ r }.${ t[3] }`, n.table = e[3]), n;
                }(t, e, n) : (io = r, r = o)) : (io = r, r = o)) : (io = r, r = o), r === o && (r = io, (t = gs()) !== o && (e = mi()) !== o && (n = Ci()) !== o && (u = mi()) !== o && (s = wi()) !== o ? (l = t, rc.add(`select::${ l }::(.*)`), r = t = {
                  db: l,
                  table: '*'
                }) : (io = r, r = o), r === o && (r = io, (t = gs()) !== o ? (e = io, (n = mi()) !== o && (u = Ci()) !== o && (s = mi()) !== o && (a = gs()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (io = e, e = o), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  const e = {
                    db: null,
                    table: r
                  };
                  return null !== t && (e.db = r, e.table = t[3]), e;
                }(t, e) : (io = r, r = o)) : (io = r, r = o), r === o && (r = io, (t = Hi()) !== o && ((c = t).db = null, c.table = c.name, t = c), r = t))), r;
              }
              function ts() {
                var r, t;
                return r = io, wa() !== o && mi() !== o && (t = ws()) !== o ? r = t : (io = r, r = o), r;
              }
              function es() {
                var t, e;
                return t = io, function () {
                  var t, e, n, u;
                  t = io, 'where' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(nn));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }() !== o && mi() !== o && (e = ws()) !== o ? t = e : (io = t, t = o), t;
              }
              function ns() {
                var r, t, e, n, u, s, a, i;
                if (r = io, (t = _s()) !== o) {
                  for (e = [], n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = _s()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o); n !== o;)
                    e.push(n), n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = _s()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o);
                  e !== o ? r = t = Ki(t, e) : (io = r, r = o);
                } else
                  io = r, r = o;
                return r;
              }
              function us() {
                var t, e;
                return t = io, function () {
                  var t, e, n, u;
                  t = io, 'order' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(sn));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }() !== o && mi() !== o && ma() !== o && mi() !== o && (e = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = io, (t = os()) !== o) {
                    for (e = [], n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = os()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (io = n, n = o); n !== o;)
                      e.push(n), n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = os()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (io = n, n = o);
                    e !== o ? (t = Ki(t, e), r = t) : (io = r, r = o);
                  } else
                    io = r, r = o;
                  return r;
                }()) !== o ? t = e : (io = t, t = o), t;
              }
              function os() {
                var r, t, e;
                return r = io, (t = ws()) !== o && mi() !== o ? ((e = Ia()) === o && (e = Sa()), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  const e = {
                    expr: r,
                    type: 'ASC'
                  };
                  return 'DESC' === t && (e.type = 'DESC'), e;
                }(t, e) : (io = r, r = o)) : (io = r, r = o), r;
              }
              function ss() {
                var r;
                return (r = Ks()) === o && (r = $s()), r;
              }
              function as() {
                var t, e, n, u, s, a;
                return t = io, function () {
                  var t, e, n, u;
                  t = io, 'limit' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(cn));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }() !== o && mi() !== o ? ((e = ss()) === o && (e = Na()), e !== o && mi() !== o ? (n = io, (u = function () {
                  var t, e, n, u;
                  t = io, 'offset' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(ln));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'OFFSET' : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()) !== o && (s = mi()) !== o && (a = ss()) !== o ? n = u = [
                  u,
                  s,
                  a
                ] : (io = n, n = o), n === o && (n = null), n !== o ? t = function (r, t) {
                  const e = [];
                  return 'string' == typeof r ? e.push({
                    type: 'origin',
                    value: 'all'
                  }) : e.push(r), t && e.push(t[2]), {
                    seperator: t && t[0] && t[0].toLowerCase() || '',
                    value: e
                  };
                }(e, n) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o), t;
              }
              function is() {
                var t, e, n, u, s, a, i, c;
                return t = io, e = io, (n = gs()) !== o && (u = mi()) !== o && (s = Ci()) !== o ? e = n = [
                  n,
                  u,
                  s
                ] : (io = e, e = o), e === o && (e = null), e !== o && (n = mi()) !== o && (u = Us()) !== o && (s = mi()) !== o ? (61 === r.charCodeAt(io) ? (a = '=', io++) : (a = o, 0 === vo && wo(Yr)), a !== o && mi() !== o && (i = ms()) !== o ? t = e = {
                  column: u,
                  value: i,
                  table: (c = e) && c[0]
                } : (io = t, t = o)) : (io = t, t = o), t;
              }
              function cs() {
                var t, e, n, u, s;
                return t = io, (e = function () {
                  var t, e, n, u;
                  t = io, 'returning' === r.substr(io, 9).toLowerCase() ? (e = r.substr(io, 9), io += 9) : (e = o, 0 === vo && wo(Fe));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'RETURNING' : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()) !== o && mi() !== o && (n = ns()) !== o ? (s = n, t = e = {
                  type: (u = e) && u.toLowerCase() || 'returning',
                  columns: s
                }) : (io = t, t = o), t;
              }
              function ls() {
                var t;
                return (t = function () {
                  var t, e;
                  t = io, function () {
                    var t, e, n, u;
                    t = io, 'values' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(tn));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }() !== o && mi() !== o && (e = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = io, (t = bs()) !== o) {
                      for (e = [], n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = bs()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o); n !== o;)
                        e.push(n), n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = bs()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o);
                      e !== o ? (t = Ki(t, e), r = t) : (io = r, r = o);
                    } else
                      io = r, r = o;
                    return r;
                  }()) !== o ? t = e : (io = t, t = o);
                  return t;
                }()) === o && (t = Go()), t;
              }
              function fs() {
                var r, t, e, n, u, s, a, i, c;
                if (r = io, va() !== o)
                  if (mi() !== o)
                    if ((t = Ei()) !== o)
                      if (mi() !== o)
                        if ((e = xs()) !== o) {
                          for (n = [], u = io, (s = mi()) !== o && (a = pi()) !== o && (i = mi()) !== o && (c = xs()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (io = u, u = o); u !== o;)
                            n.push(u), u = io, (s = mi()) !== o && (a = pi()) !== o && (i = mi()) !== o && (c = xs()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (io = u, u = o);
                          n !== o && (u = mi()) !== o && (s = hi()) !== o ? r = Ki(e, n) : (io = r, r = o);
                        } else
                          io = r, r = o;
                      else
                        io = r, r = o;
                    else
                      io = r, r = o;
                  else
                    io = r, r = o;
                else
                  io = r, r = o;
                return r === o && (r = io, va() !== o && mi() !== o && (t = bs()) !== o ? r = t : (io = r, r = o)), r;
              }
              function vs() {
                var r, t;
                return r = io, (t = ca()) !== o && (t = 'insert'), (r = t) === o && (r = io, (t = la()) !== o && (t = 'replace'), r = t), r;
              }
              function bs() {
                var r, t;
                return r = io, Ei() !== o && mi() !== o && (t = ds()) !== o && mi() !== o && hi() !== o ? r = t : (io = r, r = o), r;
              }
              function ds() {
                var r, t, e, n, u, s, a, i;
                if (r = io, (t = ws()) !== o) {
                  for (e = [], n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = ws()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o); n !== o;)
                    e.push(n), n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = ws()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    const e = { type: 'expr_list' };
                    return e.value = Ki(r, t), e;
                  }(t, e) : (io = r, r = o);
                } else
                  io = r, r = o;
                return r;
              }
              function Ls() {
                var t, e, n;
                return t = io, ui() !== o && mi() !== o && (e = ws()) !== o && mi() !== o && (n = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u;
                    t = io, 'year' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Vt));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'YEAR' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = io, 'month' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(Ht));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'MONTH' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = io, 'day' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(Rt));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'DAY' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = io, 'hour' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(xt));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'HOUR' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = io, 'minute' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(Pt));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'MINUTE' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = io, 'second' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(jt));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'SECOND' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }());
                  return t;
                }()) !== o ? t = {
                  type: 'interval',
                  expr: e,
                  unit: n.toLowerCase()
                } : (io = t, t = o), t === o && (t = io, ui() !== o && mi() !== o && (e = Bs()) !== o ? t = function (r) {
                  return {
                    type: 'interval',
                    expr: r,
                    unit: ''
                  };
                }(e) : (io = t, t = o)), t;
              }
              function Cs() {
                var t, e, n, u, s, a, i, c, l;
                if (t = io, Fa() !== o)
                  if (mi() !== o)
                    if ((e = ws()) === o && (e = null), e !== o)
                      if (mi() !== o) {
                        if (n = [], (u = ps()) !== o)
                          for (; u !== o;)
                            n.push(u), u = ps();
                        else
                          n = o;
                        n !== o && (u = mi()) !== o ? ((s = function () {
                          var t, e;
                          t = io, function () {
                            var t, e, n, u;
                            t = io, 'else' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(xn));
                            e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                              e,
                              n
                            ] : (io = t, t = o)) : (io = t, t = o);
                            return t;
                          }() !== o && mi() !== o && (e = ws()) !== o ? t = {
                            type: 'else',
                            result: e
                          } : (io = t, t = o);
                          return t;
                        }()) === o && (s = null), s !== o && mi() !== o && function () {
                          var t, e, n, u;
                          t = io, 'end' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(Mn));
                          e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                            e,
                            n
                          ] : (io = t, t = o)) : (io = t, t = o);
                          return t;
                        }() !== o && mi() !== o ? ((a = Fa()) === o && (a = null), a !== o ? (i = e, c = n, (l = s) && c.push(l), t = {
                          type: 'case',
                          expr: i || null,
                          args: c
                        }) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o);
                      } else
                        io = t, t = o;
                    else
                      io = t, t = o;
                  else
                    io = t, t = o;
                else
                  io = t, t = o;
                return t;
              }
              function ps() {
                var t, e, n;
                return t = io, Pa() !== o && mi() !== o && (e = ws()) !== o && mi() !== o && function () {
                  var t, e, n, u;
                  t = io, 'then' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Un));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }() !== o && mi() !== o && (n = ws()) !== o ? t = {
                  type: 'when',
                  cond: e,
                  result: n
                } : (io = t, t = o), t;
              }
              function ws() {
                var r;
                return (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = io, (t = Rs()) !== o) {
                    if (e = [], n = io, (u = mi()) !== o && (s = Ti()) !== o && (a = mi()) !== o && (i = Rs()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (io = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = io, (u = mi()) !== o && (s = Ti()) !== o && (a = mi()) !== o && (i = Rs()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (io = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = qi(t, e), r = t) : (io = r, r = o);
                  } else
                    io = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s;
                  if (r = io, (t = Ss()) !== o) {
                    if (e = [], n = io, (u = mi()) !== o && (s = Rs()) !== o ? n = u = [
                        u,
                        s
                      ] : (io = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = io, (u = mi()) !== o && (s = Rs()) !== o ? n = u = [
                          u,
                          s
                        ] : (io = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = Xi(t, e[0][1]), r = t) : (io = r, r = o);
                  } else
                    io = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = io, (t = Es()) !== o) {
                    for (e = [], n = io, (u = Si()) !== o && (s = $a()) !== o && (a = mi()) !== o && (i = Es()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (io = n, n = o); n !== o;)
                      e.push(n), n = io, (u = Si()) !== o && (s = $a()) !== o && (a = mi()) !== o && (i = Es()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (io = n, n = o);
                    e !== o ? (t = Br(t, e), r = t) : (io = r, r = o);
                  } else
                    io = r, r = o;
                  return r;
                }()) === o && (r = $o()), r;
              }
              function Es() {
                var r, t, e, n, u, s, a, i;
                if (r = io, (t = hs()) !== o) {
                  for (e = [], n = io, (u = Si()) !== o && (s = ka()) !== o && (a = mi()) !== o && (i = hs()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o); n !== o;)
                    e.push(n), n = io, (u = Si()) !== o && (s = ka()) !== o && (a = mi()) !== o && (i = hs()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o);
                  e !== o ? r = t = Br(t, e) : (io = r, r = o);
                } else
                  io = r, r = o;
                return r;
              }
              function hs() {
                var t, e, n, u, s;
                return (t = As()) === o && (t = function () {
                  var r, t, e;
                  r = io, (t = function () {
                    var r, t, e, n, u;
                    r = io, t = io, (e = Da()) !== o && (n = mi()) !== o && (u = Ma()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (io = t, t = o);
                    t !== o && (t = (s = t)[0] + ' ' + s[2]);
                    var s;
                    (r = t) === o && (r = Ma());
                    return r;
                  }()) !== o && mi() !== o && Ei() !== o && mi() !== o && (e = To()) !== o && mi() !== o && hi() !== o ? (n = t, (u = e).parentheses = !0, t = Xi(n, u), r = t) : (io = r, r = o);
                  var n, u;
                  return r;
                }()) === o && (t = io, (e = Da()) === o && (e = io, 33 === r.charCodeAt(io) ? (n = '!', io++) : (n = o, 0 === vo && wo(Xr)), n !== o ? (u = io, vo++, 61 === r.charCodeAt(io) ? (s = '=', io++) : (s = o, 0 === vo && wo(Yr)), vo--, s === o ? u = void 0 : (io = u, u = o), u !== o ? e = n = [
                  n,
                  u
                ] : (io = e, e = o)) : (io = e, e = o)), e !== o && (n = mi()) !== o && (u = hs()) !== o ? t = e = Xi('NOT', u) : (io = t, t = o)), t;
              }
              function As() {
                var t, e, n, u, s, a, i;
                return t = io, (e = ms()) !== o && mi() !== o ? (n = io, vo++, u = ka(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o && (u = mi()) !== o ? ((s = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u, s, a;
                    t = [], e = io, (n = mi()) !== o && (u = ys()) !== o && (s = mi()) !== o && (a = ms()) !== o ? e = n = [
                      n,
                      u,
                      s,
                      a
                    ] : (io = e, e = o);
                    if (e !== o)
                      for (; e !== o;)
                        t.push(e), e = io, (n = mi()) !== o && (u = ys()) !== o && (s = mi()) !== o && (a = ms()) !== o ? e = n = [
                          n,
                          u,
                          s,
                          a
                        ] : (io = e, e = o);
                    else
                      t = o;
                    t !== o && (t = {
                      type: 'arithmetic',
                      tail: t
                    });
                    return t;
                  }()) === o && (t = function () {
                    var r, t, e, n;
                    r = io, (t = Ts()) !== o && mi() !== o && (e = Ei()) !== o && mi() !== o && (n = ds()) !== o && mi() !== o && hi() !== o ? r = t = {
                      op: t,
                      right: n
                    } : (io = r, r = o);
                    r === o && (r = io, (t = Ts()) !== o && mi() !== o ? ((e = Hi()) === o && (e = Bs()), e !== o ? (t = function (r, t) {
                      return {
                        op: r,
                        right: t
                      };
                    }(t, e), r = t) : (io = r, r = o)) : (io = r, r = o));
                    return r;
                  }()) === o && (t = function () {
                    var r, t, e, n;
                    r = io, (t = function () {
                      var r, t, e, n, u;
                      r = io, t = io, (e = Da()) !== o && (n = mi()) !== o && (u = _a()) !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (io = t, t = o);
                      t !== o && (t = (s = t)[0] + ' ' + s[2]);
                      var s;
                      (r = t) === o && (r = _a());
                      return r;
                    }()) !== o && mi() !== o && (e = ms()) !== o && mi() !== o && ka() !== o && mi() !== o && (n = ms()) !== o ? r = t = {
                      op: t,
                      right: {
                        type: 'expr_list',
                        value: [
                          e,
                          n
                        ]
                      }
                    } : (io = r, r = o);
                    return r;
                  }()) === o && (t = function () {
                    var r, t, e, n, u, s, a, i, c;
                    r = io, (t = Oa()) !== o && (e = mi()) !== o && (n = ms()) !== o ? r = t = {
                      op: 'IS',
                      right: n
                    } : (io = r, r = o);
                    r === o && (r = io, (t = Oa()) !== o && (e = mi()) !== o ? (n = io, (u = Ra()) !== o && (s = mi()) !== o && (a = da()) !== o && (i = mi()) !== o && (c = rs()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c
                    ] : (io = n, n = o), n !== o ? (t = function (r) {
                      const {
                          db: t,
                          table: e
                        } = r.pop(), n = '*' === e ? '*' : `"${ e }"`;
                      return {
                        op: 'IS',
                        right: {
                          type: 'origin',
                          value: 'DISTINCT FROM ' + (t ? `"${ t }".${ n }` : n)
                        }
                      };
                    }(n), r = t) : (io = r, r = o)) : (io = r, r = o), r === o && (r = io, t = io, (e = Oa()) !== o && (n = mi()) !== o && (u = Da()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (io = t, t = o), t !== o && (e = mi()) !== o && (n = ms()) !== o ? (t = function (r) {
                      return {
                        op: 'IS NOT',
                        right: r
                      };
                    }(n), r = t) : (io = r, r = o)));
                    return r;
                  }()) === o && (t = function () {
                    var r, t, e;
                    r = io, (t = function () {
                      var r, t, e, n, u;
                      r = io, t = io, (e = Da()) !== o && (n = mi()) !== o ? ((u = Ua()) === o && (u = xa()), u !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (io = t, t = o)) : (io = t, t = o);
                      t !== o && (t = (s = t)[0] + ' ' + s[2]);
                      var s;
                      (r = t) === o && (r = Ua()) === o && (r = xa());
                      return r;
                    }()) !== o && mi() !== o && (e = As()) !== o ? r = t = {
                      op: t,
                      right: e
                    } : (io = r, r = o);
                    return r;
                  }()) === o && (t = function () {
                    var t, e, n;
                    t = io, '@>' === r.substr(io, 2) ? (e = '@>', io += 2) : (e = o, 0 === vo && wo(Jr));
                    e === o && ('<@' === r.substr(io, 2) ? (e = '<@', io += 2) : (e = o, 0 === vo && wo(Qr)), e === o && (e = yi()) === o && (e = function () {
                      var t;
                      '#>>' === r.substr(io, 3) ? (t = '#>>', io += 3) : (t = o, 0 === vo && wo(Ju));
                      return t;
                    }()) === o && (e = function () {
                      var t;
                      '#>' === r.substr(io, 2) ? (t = '#>', io += 2) : (t = o, 0 === vo && wo(zu));
                      return t;
                    }()) === o && (63 === r.charCodeAt(io) ? (e = '?', io++) : (e = o, 0 === vo && wo(rt)), e === o && ('?|' === r.substr(io, 2) ? (e = '?|', io += 2) : (e = o, 0 === vo && wo(tt)), e === o && ('?&' === r.substr(io, 2) ? (e = '?&', io += 2) : (e = o, 0 === vo && wo(et)), e === o && ('#-' === r.substr(io, 2) ? (e = '#-', io += 2) : (e = o, 0 === vo && wo(nt)))))));
                    e !== o && mi() !== o && (n = Yo()) !== o ? (e = {
                      op: e,
                      right: (u = n) && u.expr || u
                    }, t = e) : (io = t, t = o);
                    var u;
                    return t;
                  }());
                  return t;
                }()) === o && (s = null), s !== o ? (a = e, t = e = null === (i = s) ? a : 'arithmetic' === i.type ? qi(a, i.tail) : Wi(i.op, a, i.right)) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o), t === o && (t = Bs()) === o && (t = _s()), t;
              }
              function ys() {
                var t;
                return '>=' === r.substr(io, 2) ? (t = '>=', io += 2) : (t = o, 0 === vo && wo(Wr)), t === o && (62 === r.charCodeAt(io) ? (t = '>', io++) : (t = o, 0 === vo && wo(Vr)), t === o && ('<=' === r.substr(io, 2) ? (t = '<=', io += 2) : (t = o, 0 === vo && wo(Kr)), t === o && ('<>' === r.substr(io, 2) ? (t = '<>', io += 2) : (t = o, 0 === vo && wo(qr)), t === o && (60 === r.charCodeAt(io) ? (t = '<', io++) : (t = o, 0 === vo && wo(Zr)), t === o && (61 === r.charCodeAt(io) ? (t = '=', io++) : (t = o, 0 === vo && wo(Yr)), t === o && ('!=' === r.substr(io, 2) ? (t = '!=', io += 2) : (t = o, 0 === vo && wo(zr)))))))), t;
              }
              function Ts() {
                var r, t, e, n, u, s;
                return r = io, t = io, (e = Da()) !== o && (n = mi()) !== o && (u = ga()) !== o ? t = e = [
                  e,
                  n,
                  u
                ] : (io = t, t = o), t !== o && (t = (s = t)[0] + ' ' + s[2]), (r = t) === o && (r = ga()), r;
              }
              function ms() {
                var r, t, e, n, u, s, a, i;
                if (r = io, (t = Is()) !== o) {
                  for (e = [], n = io, (u = mi()) !== o && (s = Ss()) !== o && (a = mi()) !== o && (i = Is()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o); n !== o;)
                    e.push(n), n = io, (u = mi()) !== o && (s = Ss()) !== o && (a = mi()) !== o && (i = Is()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o);
                  e !== o ? r = t = Br(t, e) : (io = r, r = o);
                } else
                  io = r, r = o;
                return r;
              }
              function Ss() {
                var t;
                return 43 === r.charCodeAt(io) ? (t = '+', io++) : (t = o, 0 === vo && wo(ut)), t === o && (45 === r.charCodeAt(io) ? (t = '-', io++) : (t = o, 0 === vo && wo(ot))), t;
              }
              function Is() {
                var r, t, e, n, u, s, a, i;
                if (r = io, (t = Rs()) !== o) {
                  for (e = [], n = io, (u = mi()) !== o && (s = Ns()) !== o && (a = mi()) !== o && (i = Rs()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o); n !== o;)
                    e.push(n), n = io, (u = mi()) !== o && (s = Ns()) !== o && (a = mi()) !== o && (i = Rs()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o);
                  e !== o ? r = t = qi(t, e) : (io = r, r = o);
                } else
                  io = r, r = o;
                return r;
              }
              function Ns() {
                var t;
                return 42 === r.charCodeAt(io) ? (t = '*', io++) : (t = o, 0 === vo && wo(st)), t === o && (47 === r.charCodeAt(io) ? (t = '/', io++) : (t = o, 0 === vo && wo(at)), t === o && (37 === r.charCodeAt(io) ? (t = '%', io++) : (t = o, 0 === vo && wo(it)))), t;
              }
              function Rs() {
                var t, e, n, u, s;
                return (t = function () {
                  var t, e, n, u, s, a, i, c;
                  t = io, (e = Gs()) === o && (e = Fs()) === o && (e = Hs()) === o && (e = Cs()) === o && (e = Ls()) === o && (e = _s()) === o && (e = $s());
                  e !== o && ai() !== o && (n = ji()) !== o ? t = e = {
                    type: 'cast',
                    expr: e,
                    symbol: '::',
                    target: n
                  } : (io = t, t = o);
                  t === o && (t = io, (e = Ha()) !== o && mi() !== o && (n = Ei()) !== o && mi() !== o && (u = ws()) !== o && mi() !== o && Ca() !== o && mi() !== o && (s = ji()) !== o && mi() !== o && (a = hi()) !== o ? (e = function (r, t) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: t
                    };
                  }(u, s), t = e) : (io = t, t = o), t === o && (t = io, (e = Ha()) !== o && mi() !== o && (n = Ei()) !== o && mi() !== o && (u = ws()) !== o && mi() !== o && Ca() !== o && mi() !== o && (s = Ba()) !== o && mi() !== o && (a = Ei()) !== o && mi() !== o && (i = qs()) !== o && mi() !== o && hi() !== o && mi() !== o && (c = hi()) !== o ? (e = function (r, t) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: 'DECIMAL(' + t + ')' }
                    };
                  }(u, i), t = e) : (io = t, t = o), t === o && (t = io, (e = Ha()) !== o && mi() !== o && (n = Ei()) !== o && mi() !== o && (u = ws()) !== o && mi() !== o && Ca() !== o && mi() !== o && (s = Ba()) !== o && mi() !== o && (a = Ei()) !== o && mi() !== o && (i = qs()) !== o && mi() !== o && pi() !== o && mi() !== o && (c = qs()) !== o && mi() !== o && hi() !== o && mi() !== o && hi() !== o ? (e = function (r, t, e) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: 'DECIMAL(' + t + ', ' + e + ')' }
                    };
                  }(u, i, c), t = e) : (io = t, t = o), t === o && (t = io, (e = Ha()) !== o && mi() !== o && (n = Ei()) !== o && mi() !== o && (u = ws()) !== o && mi() !== o && Ca() !== o && mi() !== o && (s = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = io, 'signed' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(jn));
                      e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'SIGNED' : (io = t, t = o)) : (io = t, t = o);
                      return t;
                    }()) === o && (t = Xa());
                    return t;
                  }()) !== o && mi() !== o ? ((a = Va()) === o && (a = null), a !== o && mi() !== o && (i = hi()) !== o ? (e = function (r, t, e) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: t + (e ? ' ' + e : '') }
                    };
                  }(u, s, a), t = e) : (io = t, t = o)) : (io = t, t = o)))));
                  return t;
                }()) === o && (t = Gs()) === o && (t = Fs()) === o && (t = Hs()) === o && (t = Cs()) === o && (t = Ls()) === o && (t = _s()) === o && (t = $s()) === o && (t = io, Ei() !== o && (e = mi()) !== o && (n = ws()) !== o && mi() !== o && hi() !== o ? ((s = n).parentheses = !0, t = s) : (io = t, t = o), t === o && (t = io, Ei() !== o && (e = mi()) !== o && (n = ds()) !== o && mi() !== o && hi() !== o ? ((u = n).parentheses = !0, t = u) : (io = t, t = o), t === o && (t = Hi()) === o && (t = io, mi() !== o ? (36 === r.charCodeAt(io) ? (e = '$', io++) : (e = o, 0 === vo && wo(ct)), e !== o && (n = Ks()) !== o ? t = {
                  type: 'origin',
                  value: '$' + n.value
                } : (io = t, t = o)) : (io = t, t = o)))), t;
              }
              function _s() {
                var t, e, n, u, s, a;
                return t = io, (e = gs()) !== o && mi() !== o && (n = Ci()) !== o && mi() !== o && (u = Us()) !== o ? (s = e, a = u, tc.add(`select::${ s }::${ a }`), t = e = {
                  type: 'column_ref',
                  table: s,
                  column: a
                }) : (io = t, t = o), t === o && (t = io, (e = gs()) !== o && mi() !== o && (n = Ci()) !== o && mi() !== o && (u = wi()) !== o ? t = e = function (r) {
                  return tc.add(`select::${ r }::(.*)`), {
                    type: 'column_ref',
                    table: r,
                    column: '*'
                  };
                }(e) : (io = t, t = o), t === o && (t = io, (e = Us()) !== o && mi() !== o ? ((n = function () {
                  var t;
                  '->>' === r.substr(io, 3) ? (t = '->>', io += 3) : (t = o, 0 === vo && wo(Zu));
                  return t;
                }()) === o && (n = function () {
                  var t;
                  '->' === r.substr(io, 2) ? (t = '->', io += 2) : (t = o, 0 === vo && wo(qu));
                  return t;
                }()), n !== o && mi() !== o ? ((u = Bs()) === o && (u = Ks()), u !== o ? t = e = function (r, t, e) {
                  return tc.add('select::null::' + r), {
                    type: 'column_ref',
                    table: null,
                    column: r,
                    arrow: t,
                    property: e
                  };
                }(e, n, u) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o), t === o && (t = io, (e = Us()) !== o && (e = function (r) {
                  return tc.add('select::null::' + r), {
                    type: 'column_ref',
                    table: null,
                    column: r
                  };
                }(e)), t = e))), t;
              }
              function gs() {
                var r, t;
                return r = io, (t = xs()) !== o ? (lt(t) ? o : void 0) !== o ? r = t = t : (io = r, r = o) : (io = r, r = o), r === o && (r = io, (t = Os()) !== o && (t = t), r = t), r;
              }
              function Os() {
                var t;
                return (t = function () {
                  var t, e, n, u;
                  t = io, 34 === r.charCodeAt(io) ? (e = '"', io++) : (e = o, 0 === vo && wo(ft));
                  if (e !== o) {
                    if (n = [], vt.test(r.charAt(io)) ? (u = r.charAt(io), io++) : (u = o, 0 === vo && wo(bt)), u !== o)
                      for (; u !== o;)
                        n.push(u), vt.test(r.charAt(io)) ? (u = r.charAt(io), io++) : (u = o, 0 === vo && wo(bt));
                    else
                      n = o;
                    n !== o ? (34 === r.charCodeAt(io) ? (u = '"', io++) : (u = o, 0 === vo && wo(ft)), u !== o ? (e = dt(n), t = e) : (io = t, t = o)) : (io = t, t = o);
                  } else
                    io = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = io, 39 === r.charCodeAt(io) ? (e = '\'', io++) : (e = o, 0 === vo && wo(wr));
                  if (e !== o) {
                    if (n = [], Lt.test(r.charAt(io)) ? (u = r.charAt(io), io++) : (u = o, 0 === vo && wo(Ct)), u !== o)
                      for (; u !== o;)
                        n.push(u), Lt.test(r.charAt(io)) ? (u = r.charAt(io), io++) : (u = o, 0 === vo && wo(Ct));
                    else
                      n = o;
                    n !== o ? (39 === r.charCodeAt(io) ? (u = '\'', io++) : (u = o, 0 === vo && wo(wr)), u !== o ? (e = dt(n), t = e) : (io = t, t = o)) : (io = t, t = o);
                  } else
                    io = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = io, 96 === r.charCodeAt(io) ? (e = '`', io++) : (e = o, 0 === vo && wo(pt));
                  if (e !== o) {
                    if (n = [], wt.test(r.charAt(io)) ? (u = r.charAt(io), io++) : (u = o, 0 === vo && wo(Et)), u !== o)
                      for (; u !== o;)
                        n.push(u), wt.test(r.charAt(io)) ? (u = r.charAt(io), io++) : (u = o, 0 === vo && wo(Et));
                    else
                      n = o;
                    n !== o ? (96 === r.charCodeAt(io) ? (u = '`', io++) : (u = o, 0 === vo && wo(pt)), u !== o ? (e = dt(n), t = e) : (io = t, t = o)) : (io = t, t = o);
                  } else
                    io = t, t = o;
                  return t;
                }()), t;
              }
              function Us() {
                var r, t;
                return r = io, (t = function () {
                  var r, t, e, n;
                  if (r = io, (t = Ms()) !== o) {
                    for (e = [], n = ks(); n !== o;)
                      e.push(n), n = ks();
                    e !== o ? (t = t + e.join(''), r = t) : (io = r, r = o);
                  } else
                    io = r, r = o;
                  return r;
                }()) !== o ? (lt(t) ? o : void 0) !== o ? r = t = t : (io = r, r = o) : (io = r, r = o), r === o && (r = Os()), r;
              }
              function xs() {
                var r, t, e, n;
                if (r = io, (t = Ms()) !== o) {
                  for (e = [], n = Ds(); n !== o;)
                    e.push(n), n = Ds();
                  e !== o ? r = t = t + e.join('') : (io = r, r = o);
                } else
                  io = r, r = o;
                return r;
              }
              function Ms() {
                var t;
                return ht.test(r.charAt(io)) ? (t = r.charAt(io), io++) : (t = o, 0 === vo && wo(At)), t;
              }
              function Ds() {
                var t;
                return yt.test(r.charAt(io)) ? (t = r.charAt(io), io++) : (t = o, 0 === vo && wo(Tt)), t;
              }
              function ks() {
                var t;
                return mt.test(r.charAt(io)) ? (t = r.charAt(io), io++) : (t = o, 0 === vo && wo(St)), t;
              }
              function $s() {
                var e, n, u;
                return e = io, 58 === r.charCodeAt(io) ? (n = ':', io++) : (n = o, 0 === vo && wo(It)), n !== o && (u = xs()) !== o ? e = n = [
                  n,
                  u
                ] : (io = e, e = o), e !== o && (e = {
                  type: 'param',
                  value: e[1]
                }), e;
              }
              function Fs() {
                var t;
                return (t = function () {
                  var t, e, n;
                  t = io, (e = function () {
                    var t, e, n, u;
                    t = io, 'count' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(Tn));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'COUNT' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) !== o && mi() !== o && Ei() !== o && mi() !== o && (n = function () {
                    var t, e;
                    t = io, (e = function () {
                      var e;
                      42 === r.charCodeAt(io) ? (e = '*', io++) : (e = o, 0 === vo && wo(st));
                      e !== o && (e = {
                        type: 'star',
                        value: '*'
                      });
                      return e;
                    }()) !== o && (e = { expr: e });
                    (t = e) === o && (t = Ps());
                    return t;
                  }()) !== o && mi() !== o && hi() !== o ? t = e = {
                    type: 'aggr_func',
                    name: e,
                    args: n
                  } : (io = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = io, (e = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = io, 'sum' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(In));
                      e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'SUM' : (io = t, t = o)) : (io = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = io, 'max' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(mn));
                      e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'MAX' : (io = t, t = o)) : (io = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = io, 'min' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(Sn));
                      e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'MIN' : (io = t, t = o)) : (io = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = io, 'avg' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(Nn));
                      e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'AVG' : (io = t, t = o)) : (io = t, t = o);
                      return t;
                    }());
                    return t;
                  }()) !== o && mi() !== o && Ei() !== o && mi() !== o && (n = ms()) !== o && mi() !== o && hi() !== o ? t = e = {
                    type: 'aggr_func',
                    name: e,
                    args: { expr: n }
                  } : (io = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = io, (e = function () {
                    var t, e, n, u;
                    t = io, 'array_agg' === r.substr(io, 9).toLowerCase() ? (e = r.substr(io, 9), io += 9) : (e = o, 0 === vo && wo(yn));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'ARRAY_AGG' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) !== o && mi() !== o && Ei() !== o && mi() !== o && (n = Ps()) !== o && mi() !== o ? ((u = us()) === o && (u = null), u !== o && mi() !== o && hi() !== o ? t = e = {
                    type: 'aggr_func',
                    name: e,
                    args: n,
                    orderby: u
                  } : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()), t;
              }
              function Ps() {
                var r, t, e;
                return r = io, (t = Ra()) === o && (t = null), t !== o && mi() !== o && (e = _s()) !== o ? r = t = {
                  distinct: t,
                  expr: e
                } : (io = r, r = o), r;
              }
              function Hs() {
                var t, e, n;
                return t = io, (e = $i()) !== o && mi() !== o && Ei() !== o && mi() !== o ? ((n = ds()) === o && (n = null), n !== o && mi() !== o && hi() !== o ? t = e = {
                  type: 'function',
                  name: e,
                  args: n || {
                    type: 'expr_list',
                    value: []
                  }
                } : (io = t, t = o)) : (io = t, t = o), t === o && (t = io, (e = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u;
                    t = io, 'current_date' === r.substr(io, 12).toLowerCase() ? (e = r.substr(io, 12), io += 12) : (e = o, 0 === vo && wo(vu));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'CURRENT_DATE' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = io, 'current_time' === r.substr(io, 12).toLowerCase() ? (e = r.substr(io, 12), io += 12) : (e = o, 0 === vo && wo(du));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'CURRENT_TIME' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (t = oi()) === o && (t = function () {
                    var t, e, n, u;
                    t = io, 'current_user' === r.substr(io, 12).toLowerCase() ? (e = r.substr(io, 12), io += 12) : (e = o, 0 === vo && wo(Cu));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'CURRENT_USER' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = io, 'user' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(lu));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'USER' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = io, 'session_user' === r.substr(io, 12).toLowerCase() ? (e = r.substr(io, 12), io += 12) : (e = o, 0 === vo && wo(pu));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'SESSION_USER' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = io, 'system_user' === r.substr(io, 11).toLowerCase() ? (e = r.substr(io, 11), io += 11) : (e = o, 0 === vo && wo(wu));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'SYSTEM_USER' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }());
                  return t;
                }()) !== o && mi() !== o && Ei() !== o && mi() !== o && (n = hi()) !== o ? t = e = function (r) {
                  return {
                    type: 'function',
                    name: r,
                    args: {
                      type: 'expr_list',
                      value: []
                    }
                  };
                }(e) : (io = t, t = o), t === o && (t = function () {
                  var t, e, n, u, s;
                  t = io, (e = function () {
                    var t, e, n, u;
                    t = io, 'extract' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(Rn));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'EXTRACT' : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) !== o && mi() !== o && Ei() !== o && mi() !== o && (n = function () {
                    var t, e;
                    'century' === r.substr(io, 7).toLowerCase() ? (t = r.substr(io, 7), io += 7) : (t = o, 0 === vo && wo(Nt));
                    t === o && ('day' === r.substr(io, 3).toLowerCase() ? (t = r.substr(io, 3), io += 3) : (t = o, 0 === vo && wo(Rt)), t === o && ('decade' === r.substr(io, 6).toLowerCase() ? (t = r.substr(io, 6), io += 6) : (t = o, 0 === vo && wo(_t)), t === o && ('dow' === r.substr(io, 3).toLowerCase() ? (t = r.substr(io, 3), io += 3) : (t = o, 0 === vo && wo(gt)), t === o && ('doy' === r.substr(io, 3).toLowerCase() ? (t = r.substr(io, 3), io += 3) : (t = o, 0 === vo && wo(Ot)), t === o && ('epoch' === r.substr(io, 5).toLowerCase() ? (t = r.substr(io, 5), io += 5) : (t = o, 0 === vo && wo(Ut)), t === o && ('hour' === r.substr(io, 4).toLowerCase() ? (t = r.substr(io, 4), io += 4) : (t = o, 0 === vo && wo(xt)), t === o && ('isodow' === r.substr(io, 6).toLowerCase() ? (t = r.substr(io, 6), io += 6) : (t = o, 0 === vo && wo(Mt)), t === o && ('isoyear' === r.substr(io, 7).toLowerCase() ? (t = r.substr(io, 7), io += 7) : (t = o, 0 === vo && wo(Dt)), t === o && ('microseconds' === r.substr(io, 12).toLowerCase() ? (t = r.substr(io, 12), io += 12) : (t = o, 0 === vo && wo(kt)), t === o && ('millennium' === r.substr(io, 10).toLowerCase() ? (t = r.substr(io, 10), io += 10) : (t = o, 0 === vo && wo($t)), t === o && ('milliseconds' === r.substr(io, 12).toLowerCase() ? (t = r.substr(io, 12), io += 12) : (t = o, 0 === vo && wo(Ft)), t === o && ('minute' === r.substr(io, 6).toLowerCase() ? (t = r.substr(io, 6), io += 6) : (t = o, 0 === vo && wo(Pt)), t === o && ('month' === r.substr(io, 5).toLowerCase() ? (t = r.substr(io, 5), io += 5) : (t = o, 0 === vo && wo(Ht)), t === o && ('quarter' === r.substr(io, 7).toLowerCase() ? (t = r.substr(io, 7), io += 7) : (t = o, 0 === vo && wo(Gt)), t === o && ('second' === r.substr(io, 6).toLowerCase() ? (t = r.substr(io, 6), io += 6) : (t = o, 0 === vo && wo(jt)), t === o && ('timezone' === r.substr(io, 8).toLowerCase() ? (t = r.substr(io, 8), io += 8) : (t = o, 0 === vo && wo(Yt)), t === o && ('timezone_hour' === r.substr(io, 13).toLowerCase() ? (t = r.substr(io, 13), io += 13) : (t = o, 0 === vo && wo(Bt)), t === o && ('timezone_minute' === r.substr(io, 15).toLowerCase() ? (t = r.substr(io, 15), io += 15) : (t = o, 0 === vo && wo(Xt)), t === o && ('week' === r.substr(io, 4).toLowerCase() ? (t = r.substr(io, 4), io += 4) : (t = o, 0 === vo && wo(Wt)), t === o && (t = io, 'year' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Vt)), e !== o && (e = f), t = e))))))))))))))))))));
                    return t;
                  }()) !== o && mi() !== o && da() !== o && mi() !== o ? ((u = ei()) === o && (u = ui()) === o && (u = ti()), u === o && (u = null), u !== o && mi() !== o && (s = ws()) !== o && mi() !== o && hi() !== o ? (e = function (r, t, e, n) {
                    return {
                      type: r.toLowerCase(),
                      args: {
                        field: t,
                        cast_type: e,
                        source: n
                      }
                    };
                  }(e, n, u, s), t = e) : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }())), t;
              }
              function Gs() {
                var t;
                return (t = Bs()) === o && (t = Ks()) === o && (t = function () {
                  var t, e;
                  t = io, (e = function () {
                    var t, e, n, u;
                    t = io, 'true' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Te));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !0
                  });
                  (t = e) === o && (t = io, (e = function () {
                    var t, e, n, u;
                    t = io, 'false' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(Se));
                    e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (io = t, t = o)) : (io = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !1
                  }), t = e);
                  return t;
                }()) === o && (t = js()) === o && (t = function () {
                  var t, e, n, u, s, a, i;
                  t = io, (e = ti()) === o && (e = Qa()) === o && (e = ei()) === o && (e = ri());
                  if (e !== o)
                    if (mi() !== o) {
                      if (n = io, 39 === r.charCodeAt(io) ? (u = '\'', io++) : (u = o, 0 === vo && wo(wr)), u !== o) {
                        for (s = [], a = Ws(); a !== o;)
                          s.push(a), a = Ws();
                        s !== o ? (39 === r.charCodeAt(io) ? (a = '\'', io++) : (a = o, 0 === vo && wo(wr)), a !== o ? n = u = [
                          u,
                          s,
                          a
                        ] : (io = n, n = o)) : (io = n, n = o);
                      } else
                        io = n, n = o;
                      n !== o ? (c = n, e = {
                        type: e.toLowerCase(),
                        value: c[1].join('')
                      }, t = e) : (io = t, t = o);
                    } else
                      io = t, t = o;
                  else
                    io = t, t = o;
                  var c;
                  t === o && (t = io, (e = oi()) !== o && mi() !== o ? ((n = Ei()) === o && (n = null), n !== o && (u = mi()) !== o ? ((s = hi()) === o && (s = null), s !== o ? (a = (a = function (r, t, e) {
                    if (t && e)
                      return !0;
                  }(0, n, s)) ? o : void 0) !== o && mi() !== o ? ('on update current_timestamp' === r.substr(io, 27).toLowerCase() ? (i = r.substr(io, 27), io += 27) : (i = o, 0 === vo && wo(Kt)), i === o && (i = null), i !== o ? (e = function (r, t, e, n) {
                    return {
                      type: 'origin',
                      value: (n ? `${ r } ${ n }` : r).toLowerCase()
                    };
                  }(e, 0, 0, i), t = e) : (io = t, t = o)) : (io = t, t = o) : (io = t, t = o)) : (io = t, t = o)) : (io = t, t = o));
                  return t;
                }()), t;
              }
              function js() {
                var e;
                return (e = function () {
                  var t, e, n, u;
                  t = io, 'null' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Ae));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()) !== o && (e = {
                  type: 'null',
                  value: null
                }), e;
              }
              function Ys() {
                var e;
                return (e = function () {
                  var t, e, n, u;
                  t = io, 'not null' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(ye));
                  e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (io = t, t = o)) : (io = t, t = o);
                  return t;
                }()) !== o && (e = {
                  type: 'not null',
                  value: 'not null'
                }), e;
              }
              function Bs() {
                var t, e, n, u, s;
                if (t = io, e = io, 39 === r.charCodeAt(io) ? (n = '\'', io++) : (n = o, 0 === vo && wo(wr)), n !== o) {
                  for (u = [], s = Ws(); s !== o;)
                    u.push(s), s = Ws();
                  u !== o ? (39 === r.charCodeAt(io) ? (s = '\'', io++) : (s = o, 0 === vo && wo(wr)), s !== o ? e = n = [
                    n,
                    u,
                    s
                  ] : (io = e, e = o)) : (io = e, e = o);
                } else
                  io = e, e = o;
                if (e !== o && (e = {
                    type: 'single_quote_string',
                    value: e[1].join('')
                  }), (t = e) === o) {
                  if (t = io, e = io, 34 === r.charCodeAt(io) ? (n = '"', io++) : (n = o, 0 === vo && wo(ft)), n !== o) {
                    for (u = [], s = Xs(); s !== o;)
                      u.push(s), s = Xs();
                    u !== o ? (34 === r.charCodeAt(io) ? (s = '"', io++) : (s = o, 0 === vo && wo(ft)), s !== o ? e = n = [
                      n,
                      u,
                      s
                    ] : (io = e, e = o)) : (io = e, e = o);
                  } else
                    io = e, e = o;
                  e !== o ? (n = io, vo++, u = Ci(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = function (r) {
                    return {
                      type: 'double_quote_string',
                      value: r[1].join('')
                    };
                  }(e) : (io = t, t = o)) : (io = t, t = o);
                }
                return t;
              }
              function Xs() {
                var t;
                return qt.test(r.charAt(io)) ? (t = r.charAt(io), io++) : (t = o, 0 === vo && wo(Zt)), t === o && (t = Vs()), t;
              }
              function Ws() {
                var t;
                return zt.test(r.charAt(io)) ? (t = r.charAt(io), io++) : (t = o, 0 === vo && wo(Jt)), t === o && (t = Vs()), t;
              }
              function Vs() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = io, '\\\'' === r.substr(io, 2) ? (e = '\\\'', io += 2) : (e = o, 0 === vo && wo(Qt)), e !== o && (e = '\''), (t = e) === o && (t = io, '\\"' === r.substr(io, 2) ? (e = '\\"', io += 2) : (e = o, 0 === vo && wo(re)), e !== o && (e = '"'), (t = e) === o && (t = io, '\\\\' === r.substr(io, 2) ? (e = '\\\\', io += 2) : (e = o, 0 === vo && wo(te)), e !== o && (e = '\\'), (t = e) === o && (t = io, '\\/' === r.substr(io, 2) ? (e = '\\/', io += 2) : (e = o, 0 === vo && wo(ee)), e !== o && (e = '/'), (t = e) === o && (t = io, '\\b' === r.substr(io, 2) ? (e = '\\b', io += 2) : (e = o, 0 === vo && wo(ne)), e !== o && (e = '\b'), (t = e) === o && (t = io, '\\f' === r.substr(io, 2) ? (e = '\\f', io += 2) : (e = o, 0 === vo && wo(ue)), e !== o && (e = '\f'), (t = e) === o && (t = io, '\\n' === r.substr(io, 2) ? (e = '\\n', io += 2) : (e = o, 0 === vo && wo(oe)), e !== o && (e = '\n'), (t = e) === o && (t = io, '\\r' === r.substr(io, 2) ? (e = '\\r', io += 2) : (e = o, 0 === vo && wo(se)), e !== o && (e = '\r'), (t = e) === o && (t = io, '\\t' === r.substr(io, 2) ? (e = '\\t', io += 2) : (e = o, 0 === vo && wo(ae)), e !== o && (e = '\t'), (t = e) === o && (t = io, '\\u' === r.substr(io, 2) ? (e = '\\u', io += 2) : (e = o, 0 === vo && wo(ie)), e !== o && (n = ra()) !== o && (u = ra()) !== o && (s = ra()) !== o && (a = ra()) !== o ? (i = n, c = u, l = s, f = a, t = e = String.fromCharCode(parseInt('0x' + i + c + l + f))) : (io = t, t = o), t === o && (t = io, 92 === r.charCodeAt(io) ? (e = '\\', io++) : (e = o, 0 === vo && wo(ce)), e !== o && (e = '\\'), t = e)))))))))), t;
              }
              function Ks() {
                var t, e;
                return (t = function () {
                  var r, t, e, n;
                  r = io, (t = qs()) !== o && (e = Zs()) !== o && (n = zs()) !== o ? r = t = {
                    type: 'bigint',
                    value: t + e + n
                  } : (io = r, r = o);
                  r === o && (r = io, (t = qs()) !== o && (e = Zs()) !== o ? (t = function (r, t) {
                    const e = r + t;
                    return Vi(r) ? {
                      type: 'bigint',
                      value: e
                    } : parseFloat(e);
                  }(t, e), r = t) : (io = r, r = o), r === o && (r = io, (t = qs()) !== o && (e = zs()) !== o ? (t = function (r, t) {
                    return {
                      type: 'bigint',
                      value: r + t
                    };
                  }(t, e), r = t) : (io = r, r = o), r === o && (r = io, (t = qs()) !== o && (t = function (r) {
                    return Vi(r) ? {
                      type: 'bigint',
                      value: r
                    } : parseFloat(r);
                  }(t)), r = t)));
                  return r;
                }()) !== o && (t = (e = t) && 'bigint' === e.type ? e : {
                  type: 'number',
                  value: e
                }), t;
              }
              function qs() {
                var t, e, n;
                return (t = Js()) === o && (t = Qs()) === o && (t = io, 45 === r.charCodeAt(io) ? (e = '-', io++) : (e = o, 0 === vo && wo(ot)), e === o && (43 === r.charCodeAt(io) ? (e = '+', io++) : (e = o, 0 === vo && wo(ut))), e !== o && (n = Js()) !== o ? t = e = '-' + n : (io = t, t = o), t === o && (t = io, 45 === r.charCodeAt(io) ? (e = '-', io++) : (e = o, 0 === vo && wo(ot)), e === o && (43 === r.charCodeAt(io) ? (e = '+', io++) : (e = o, 0 === vo && wo(ut))), e !== o && (n = Qs()) !== o ? t = e = '-' + n : (io = t, t = o))), t;
              }
              function Zs() {
                var t, e, n;
                return t = io, 46 === r.charCodeAt(io) ? (e = '.', io++) : (e = o, 0 === vo && wo(ve)), e !== o && (n = Js()) !== o ? t = e = '.' + n : (io = t, t = o), t;
              }
              function zs() {
                var t, e, n;
                return t = io, (e = function () {
                  var t, e, n;
                  t = io, pe.test(r.charAt(io)) ? (e = r.charAt(io), io++) : (e = o, 0 === vo && wo(we));
                  e !== o ? (Ee.test(r.charAt(io)) ? (n = r.charAt(io), io++) : (n = o, 0 === vo && wo(he)), n === o && (n = null), n !== o ? t = e = e + (null !== (u = n) ? u : '') : (io = t, t = o)) : (io = t, t = o);
                  var u;
                  return t;
                }()) !== o && (n = Js()) !== o ? t = e = e + n : (io = t, t = o), t;
              }
              function Js() {
                var t, e;
                if (t = [], (e = Qs()) !== o)
                  for (; e !== o;)
                    t.push(e), e = Qs();
                else
                  t = o;
                return t !== o && (t = t.join('')), t;
              }
              function Qs() {
                var t;
                return be.test(r.charAt(io)) ? (t = r.charAt(io), io++) : (t = o, 0 === vo && wo(de)), t;
              }
              function ra() {
                var t;
                return Le.test(r.charAt(io)) ? (t = r.charAt(io), io++) : (t = o, 0 === vo && wo(Ce)), t;
              }
              function ta() {
                var t, e, n, u;
                return t = io, 'default' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(y)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ea() {
                var t, e, n, u;
                return t = io, 'to' === r.substr(io, 2).toLowerCase() ? (e = r.substr(io, 2), io += 2) : (e = o, 0 === vo && wo(me)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function na() {
                var t, e, n, u;
                return t = io, 'drop' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Ie)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'DROP' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ua() {
                var t, e, n, u;
                return t = io, 'update' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(ge)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function oa() {
                var t, e, n, u;
                return t = io, 'create' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(Oe)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function sa() {
                var t, e, n, u;
                return t = io, 'temporary' === r.substr(io, 9).toLowerCase() ? (e = r.substr(io, 9), io += 9) : (e = o, 0 === vo && wo(Ue)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function aa() {
                var t, e, n, u;
                return t = io, 'if not exists' === r.substr(io, 13).toLowerCase() ? (e = r.substr(io, 13), io += 13) : (e = o, 0 === vo && wo(xe)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ia() {
                var t, e, n, u;
                return t = io, 'delete' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(Me)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ca() {
                var t, e, n, u;
                return t = io, 'insert' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(De)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function la() {
                var t, e, n, u;
                return t = io, 'replace' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo($e)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function fa() {
                var t, e, n, u;
                return t = io, 'rename' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(Pe)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function va() {
                var t, e, n, u;
                return t = io, 'partition' === r.substr(io, 9).toLowerCase() ? (e = r.substr(io, 9), io += 9) : (e = o, 0 === vo && wo(Ge)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'PARTITION' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ba() {
                var t, e, n, u;
                return t = io, 'into' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(je)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function da() {
                var t, e, n, u;
                return t = io, 'from' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Ye)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function La() {
                var t, e, n, u;
                return t = io, 'set' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(Be)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ca() {
                var t, e, n, u;
                return t = io, 'as' === r.substr(io, 2).toLowerCase() ? (e = r.substr(io, 2), io += 2) : (e = o, 0 === vo && wo(Xe)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function pa() {
                var t, e, n, u;
                return t = io, 'table' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(We)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'TABLE' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function wa() {
                var t, e, n, u;
                return t = io, 'on' === r.substr(io, 2).toLowerCase() ? (e = r.substr(io, 2), io += 2) : (e = o, 0 === vo && wo(Z)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ea() {
                var t, e, n, u;
                return t = io, 'join' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Je)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ha() {
                var t, e, n, u;
                return t = io, 'outer' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(Qe)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Aa() {
                var t, e, n, u;
                return t = io, 'union' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(rn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ya() {
                var t, e, n, u;
                return t = io, 'using' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(en)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ta() {
                var t, e, n, u;
                return t = io, 'with' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Pr)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ma() {
                var t, e, n, u;
                return t = io, 'by' === r.substr(io, 2).toLowerCase() ? (e = r.substr(io, 2), io += 2) : (e = o, 0 === vo && wo(on)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Sa() {
                var t, e, n, u;
                return t = io, 'asc' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(fn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'ASC' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ia() {
                var t, e, n, u;
                return t = io, 'desc' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(vn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'DESC' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Na() {
                var t, e, n, u;
                return t = io, 'all' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(bn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'ALL' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ra() {
                var t, e, n, u;
                return t = io, 'distinct' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(dn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'DISTINCT' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function _a() {
                var t, e, n, u;
                return t = io, 'between' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(Ln)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'BETWEEN' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ga() {
                var t, e, n, u;
                return t = io, 'in' === r.substr(io, 2).toLowerCase() ? (e = r.substr(io, 2), io += 2) : (e = o, 0 === vo && wo(yr)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'IN' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Oa() {
                var t, e, n, u;
                return t = io, 'is' === r.substr(io, 2).toLowerCase() ? (e = r.substr(io, 2), io += 2) : (e = o, 0 === vo && wo(Cn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'IS' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ua() {
                var t, e, n, u;
                return t = io, 'like' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(pn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'LIKE' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function xa() {
                var t, e, n, u;
                return t = io, 'ilike' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(wn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'ILIKE' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ma() {
                var t, e, n, u;
                return t = io, 'exists' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(En)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'EXISTS' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Da() {
                var t, e, n, u;
                return t = io, 'not' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(rr)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'NOT' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ka() {
                var t, e, n, u;
                return t = io, 'and' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(hn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'AND' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function $a() {
                var t, e, n, u;
                return t = io, 'or' === r.substr(io, 2).toLowerCase() ? (e = r.substr(io, 2), io += 2) : (e = o, 0 === vo && wo(An)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'OR' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Fa() {
                var t, e, n, u;
                return t = io, 'case' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(gn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Pa() {
                var t, e, n, u;
                return t = io, 'when' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(On)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ha() {
                var t, e, n, u;
                return t = io, 'cast' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Dn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ga() {
                var t, e, n, u;
                return t = io, 'char' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Fn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'CHAR' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ja() {
                var t, e, n, u;
                return t = io, 'varchar' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(Pn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'VARCHAR' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ya() {
                var t, e, n, u;
                return t = io, 'numeric' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(Hn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'NUMERIC' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ba() {
                var t, e, n, u;
                return t = io, 'decimal' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(Gn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'DECIMAL' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Xa() {
                var t, e, n, u;
                return t = io, 'unsigned' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(Yn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'UNSIGNED' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Wa() {
                var t, e, n, u;
                return t = io, 'int' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(Bn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'INT' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Va() {
                var t, e, n, u;
                return t = io, 'integer' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(Wn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'INTEGER' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ka() {
                var t, e, n, u;
                return t = io, 'smallint' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(Zn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'SMALLINT' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function qa() {
                var t, e, n, u;
                return t = io, 'tinyint' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(zn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'TINYINT' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Za() {
                var t, e, n, u;
                return t = io, 'bigint' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(eu)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'BIGINT' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function za() {
                var t, e, n, u;
                return t = io, 'float' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(nu)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'FLOAT' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ja() {
                var t, e, n, u;
                return t = io, 'double' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(uu)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'DOUBLE' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Qa() {
                var t, e, n, u;
                return t = io, 'date' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(ou)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'DATE' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ri() {
                var t, e, n, u;
                return t = io, 'datetime' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(su)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'DATETIME' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ti() {
                var t, e, n, u;
                return t = io, 'time' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(au)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'TIME' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ei() {
                var t, e, n, u;
                return t = io, 'timestamp' === r.substr(io, 9).toLowerCase() ? (e = r.substr(io, 9), io += 9) : (e = o, 0 === vo && wo(iu)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'TIMESTAMP' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ni() {
                var t, e, n, u;
                return t = io, 'truncate' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(cu)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'TRUNCATE' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function ui() {
                var t, e, n, u;
                return t = io, 'interval' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(bu)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'INTERVAL' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function oi() {
                var t, e, n, u;
                return t = io, 'current_timestamp' === r.substr(io, 17).toLowerCase() ? (e = r.substr(io, 17), io += 17) : (e = o, 0 === vo && wo(Lu)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'CURRENT_TIMESTAMP' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function si() {
                var t;
                return (t = function () {
                  var t;
                  return '@@' === r.substr(io, 2) ? (t = '@@', io += 2) : (t = o, 0 === vo && wo(Su)), t;
                }()) === o && (t = function () {
                  var t;
                  return 64 === r.charCodeAt(io) ? (t = '@', io++) : (t = o, 0 === vo && wo(mu)), t;
                }()) === o && (t = function () {
                  var t;
                  return 36 === r.charCodeAt(io) ? (t = '$', io++) : (t = o, 0 === vo && wo(ct)), t;
                }()), t;
              }
              function ai() {
                var t;
                return '::' === r.substr(io, 2) ? (t = '::', io += 2) : (t = o, 0 === vo && wo(Ru)), t;
              }
              function ii() {
                var t;
                return 61 === r.charCodeAt(io) ? (t = '=', io++) : (t = o, 0 === vo && wo(Yr)), t;
              }
              function ci() {
                var t, e, n, u;
                return t = io, 'add' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(gu)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'ADD' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function li() {
                var t, e, n, u;
                return t = io, 'column' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(Ou)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'COLUMN' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function fi() {
                var t, e, n, u;
                return t = io, 'index' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(Uu)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'INDEX' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function vi() {
                var t, e, n, u;
                return t = io, 'key' === r.substr(io, 3).toLowerCase() ? (e = r.substr(io, 3), io += 3) : (e = o, 0 === vo && wo(w)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'KEY' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function bi() {
                var t, e, n, u;
                return t = io, 'unique' === r.substr(io, 6).toLowerCase() ? (e = r.substr(io, 6), io += 6) : (e = o, 0 === vo && wo(C)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'UNIQUE' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function di() {
                var t, e, n, u;
                return t = io, 'comment' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo(Du)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'COMMENT' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Li() {
                var t, e, n, u;
                return t = io, 'constraint' === r.substr(io, 10).toLowerCase() ? (e = r.substr(io, 10), io += 10) : (e = o, 0 === vo && wo(ku)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'CONSTRAINT' : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ci() {
                var t;
                return 46 === r.charCodeAt(io) ? (t = '.', io++) : (t = o, 0 === vo && wo(ve)), t;
              }
              function pi() {
                var t;
                return 44 === r.charCodeAt(io) ? (t = ',', io++) : (t = o, 0 === vo && wo(Xu)), t;
              }
              function wi() {
                var t;
                return 42 === r.charCodeAt(io) ? (t = '*', io++) : (t = o, 0 === vo && wo(st)), t;
              }
              function Ei() {
                var t;
                return 40 === r.charCodeAt(io) ? (t = '(', io++) : (t = o, 0 === vo && wo(Ur)), t;
              }
              function hi() {
                var t;
                return 41 === r.charCodeAt(io) ? (t = ')', io++) : (t = o, 0 === vo && wo(xr)), t;
              }
              function Ai() {
                var t;
                return 59 === r.charCodeAt(io) ? (t = ';', io++) : (t = o, 0 === vo && wo(Ku)), t;
              }
              function yi() {
                var t;
                return '||' === r.substr(io, 2) ? (t = '||', io += 2) : (t = o, 0 === vo && wo(Qu)), t;
              }
              function Ti() {
                var t;
                return (t = yi()) === o && (t = function () {
                  var t;
                  return '&&' === r.substr(io, 2) ? (t = '&&', io += 2) : (t = o, 0 === vo && wo(ro)), t;
                }()), t;
              }
              function mi() {
                var r, t;
                for (r = [], (t = _i()) === o && (t = Ii()); t !== o;)
                  r.push(t), (t = _i()) === o && (t = Ii());
                return r;
              }
              function Si() {
                var r, t;
                if (r = [], (t = _i()) === o && (t = Ii()), t !== o)
                  for (; t !== o;)
                    r.push(t), (t = _i()) === o && (t = Ii());
                else
                  r = o;
                return r;
              }
              function Ii() {
                var t;
                return (t = function () {
                  var t, e, n, u, s, a;
                  t = io, '/*' === r.substr(io, 2) ? (e = '/*', io += 2) : (e = o, 0 === vo && wo(to));
                  if (e !== o) {
                    for (n = [], u = io, s = io, vo++, '*/' === r.substr(io, 2) ? (a = '*/', io += 2) : (a = o, 0 === vo && wo(eo)), vo--, a === o ? s = void 0 : (io = s, s = o), s !== o && (a = Ri()) !== o ? u = s = [
                        s,
                        a
                      ] : (io = u, u = o); u !== o;)
                      n.push(u), u = io, s = io, vo++, '*/' === r.substr(io, 2) ? (a = '*/', io += 2) : (a = o, 0 === vo && wo(eo)), vo--, a === o ? s = void 0 : (io = s, s = o), s !== o && (a = Ri()) !== o ? u = s = [
                        s,
                        a
                      ] : (io = u, u = o);
                    n !== o ? ('*/' === r.substr(io, 2) ? (u = '*/', io += 2) : (u = o, 0 === vo && wo(eo)), u !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (io = t, t = o)) : (io = t, t = o);
                  } else
                    io = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = io, '--' === r.substr(io, 2) ? (e = '--', io += 2) : (e = o, 0 === vo && wo(no));
                  if (e !== o) {
                    for (n = [], u = io, s = io, vo++, a = gi(), vo--, a === o ? s = void 0 : (io = s, s = o), s !== o && (a = Ri()) !== o ? u = s = [
                        s,
                        a
                      ] : (io = u, u = o); u !== o;)
                      n.push(u), u = io, s = io, vo++, a = gi(), vo--, a === o ? s = void 0 : (io = s, s = o), s !== o && (a = Ri()) !== o ? u = s = [
                        s,
                        a
                      ] : (io = u, u = o);
                    n !== o ? t = e = [
                      e,
                      n
                    ] : (io = t, t = o);
                  } else
                    io = t, t = o;
                  return t;
                }()), t;
              }
              function Ni() {
                var r, t, e, n, u, s, a;
                return r = io, (t = di()) !== o && mi() !== o ? ((e = ii()) === o && (e = null), e !== o && mi() !== o && (n = Bs()) !== o ? (s = e, a = n, r = t = {
                  type: (u = t).toLowerCase(),
                  keyword: u.toLowerCase(),
                  symbol: s,
                  value: a
                }) : (io = r, r = o)) : (io = r, r = o), r;
              }
              function Ri() {
                var t;
                return r.length > io ? (t = r.charAt(io), io++) : (t = o, 0 === vo && wo(uo)), t;
              }
              function _i() {
                var t;
                return oo.test(r.charAt(io)) ? (t = r.charAt(io), io++) : (t = o, 0 === vo && wo(so)), t;
              }
              function gi() {
                var t, e;
                if ((t = function () {
                    var t, e;
                    t = io, vo++, r.length > io ? (e = r.charAt(io), io++) : (e = o, 0 === vo && wo(uo));
                    vo--, e === o ? t = void 0 : (io = t, t = o);
                    return t;
                  }()) === o)
                  if (t = [], le.test(r.charAt(io)) ? (e = r.charAt(io), io++) : (e = o, 0 === vo && wo(fe)), e !== o)
                    for (; e !== o;)
                      t.push(e), le.test(r.charAt(io)) ? (e = r.charAt(io), io++) : (e = o, 0 === vo && wo(fe));
                  else
                    t = o;
                return t;
              }
              function Oi() {
                var t, e;
                return t = io, Qi = [], void 0 !== o && mi() !== o ? ((e = Ui()) === o && (e = function () {
                  var t, e;
                  t = io, function () {
                    var t;
                    return 'return' === r.substr(io, 6).toLowerCase() ? (t = r.substr(io, 6), io += 6) : (t = o, 0 === vo && wo(Iu)), t;
                  }() !== o && mi() !== o && (e = xi()) !== o ? t = {
                    type: 'return',
                    expr: e
                  } : (io = t, t = o);
                  return t;
                }()), e !== o ? t = {
                  type: 'proc',
                  stmt: e,
                  vars: Qi
                } : (io = t, t = o)) : (io = t, t = o), t;
              }
              function Ui() {
                var t, e, n, u;
                return t = io, (e = Hi()) === o && (e = Gi()), e !== o && mi() !== o ? ((n = function () {
                  var t;
                  return ':=' === r.substr(io, 2) ? (t = ':=', io += 2) : (t = o, 0 === vo && wo(Nu)), t;
                }()) === o && (n = ii()), n !== o && mi() !== o && (u = xi()) !== o ? t = e = {
                  type: 'assign',
                  left: e,
                  symbol: n,
                  right: u
                } : (io = t, t = o)) : (io = t, t = o), t;
              }
              function xi() {
                var t;
                return (t = $o()) === o && (t = function () {
                  var r, t, e, n, u;
                  r = io, (t = Hi()) !== o && mi() !== o && (e = Qo()) !== o && mi() !== o && (n = Hi()) !== o && mi() !== o && (u = ts()) !== o ? r = t = {
                    type: 'join',
                    ltable: t,
                    rtable: n,
                    op: e,
                    on: u
                  } : (io = r, r = o);
                  return r;
                }()) === o && (t = Mi()) === o && (t = function () {
                  var t, e;
                  t = io, function () {
                    var t;
                    return 91 === r.charCodeAt(io) ? (t = '[', io++) : (t = o, 0 === vo && wo(Wu)), t;
                  }() !== o && mi() !== o && (e = Pi()) !== o && mi() !== o && function () {
                    var t;
                    return 93 === r.charCodeAt(io) ? (t = ']', io++) : (t = o, 0 === vo && wo(Vu)), t;
                  }() !== o ? t = {
                    type: 'array',
                    value: e
                  } : (io = t, t = o);
                  return t;
                }()), t;
              }
              function Mi() {
                var r, t, e, n, u, s, a, i;
                if (r = io, (t = Di()) !== o) {
                  for (e = [], n = io, (u = mi()) !== o && (s = Ss()) !== o && (a = mi()) !== o && (i = Di()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o); n !== o;)
                    e.push(n), n = io, (u = mi()) !== o && (s = Ss()) !== o && (a = mi()) !== o && (i = Di()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o);
                  e !== o ? r = t = Br(t, e) : (io = r, r = o);
                } else
                  io = r, r = o;
                return r;
              }
              function Di() {
                var r, t, e, n, u, s, a, i;
                if (r = io, (t = ki()) !== o) {
                  for (e = [], n = io, (u = mi()) !== o && (s = Ns()) !== o && (a = mi()) !== o && (i = ki()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o); n !== o;)
                    e.push(n), n = io, (u = mi()) !== o && (s = Ns()) !== o && (a = mi()) !== o && (i = ki()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o);
                  e !== o ? r = t = Br(t, e) : (io = r, r = o);
                } else
                  io = r, r = o;
                return r;
              }
              function ki() {
                var r, t, e;
                return (r = Gs()) === o && (r = Hi()) === o && (r = Fi()) === o && (r = $s()) === o && (r = io, Ei() !== o && mi() !== o && (t = Mi()) !== o && mi() !== o && hi() !== o ? ((e = t).parentheses = !0, r = e) : (io = r, r = o)), r;
              }
              function $i() {
                var r, t, e, n, u, s, a;
                return r = io, (t = gs()) !== o ? (e = io, (n = mi()) !== o && (u = Ci()) !== o && (s = mi()) !== o && (a = gs()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (io = e, e = o), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  let e = r;
                  return null !== t && (e = `${ r }.${ t[3] }`), e;
                }(t, e) : (io = r, r = o)) : (io = r, r = o), r;
              }
              function Fi() {
                var r, t, e;
                return r = io, (t = $i()) !== o && mi() !== o && Ei() !== o && mi() !== o ? ((e = Pi()) === o && (e = null), e !== o && mi() !== o && hi() !== o ? r = t = {
                  type: 'function',
                  name: t,
                  args: {
                    type: 'expr_list',
                    value: e
                  }
                } : (io = r, r = o)) : (io = r, r = o), r === o && (r = io, (t = $i()) !== o && (t = function (r) {
                  return {
                    type: 'function',
                    name: r,
                    args: null
                  };
                }(t)), r = t), r;
              }
              function Pi() {
                var r, t, e, n, u, s, a, i;
                if (r = io, (t = ki()) !== o) {
                  for (e = [], n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = ki()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o); n !== o;)
                    e.push(n), n = io, (u = mi()) !== o && (s = pi()) !== o && (a = mi()) !== o && (i = ki()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (io = n, n = o);
                  e !== o ? r = t = Ki(t, e) : (io = r, r = o);
                } else
                  io = r, r = o;
                return r;
              }
              function Hi() {
                var r, t, e, n, u;
                return r = io, (t = si()) !== o && (e = Gi()) !== o ? (n = t, u = e, r = t = {
                  type: 'var',
                  ...u,
                  prefix: n
                }) : (io = r, r = o), r;
              }
              function Gi() {
                var t, e, n, u, s;
                return t = io, (e = xs()) !== o && (n = function () {
                  var e, n, u, s;
                  e = [], n = io, 46 === r.charCodeAt(io) ? (u = '.', io++) : (u = o, 0 === vo && wo(ve));
                  u !== o && (s = xs()) !== o ? n = u = [
                    u,
                    s
                  ] : (io = n, n = o);
                  for (; n !== o;)
                    e.push(n), n = io, 46 === r.charCodeAt(io) ? (u = '.', io++) : (u = o, 0 === vo && wo(ve)), u !== o && (s = xs()) !== o ? n = u = [
                      u,
                      s
                    ] : (io = n, n = o);
                  e !== o && (e = function (r) {
                    const t = [];
                    for (let e = 0; e < r.length; e++)
                      t.push(r[e][1]);
                    return t;
                  }(e));
                  return e;
                }()) !== o ? (u = e, s = n, Qi.push(u), t = e = {
                  type: 'var',
                  name: u,
                  members: s,
                  prefix: null
                }) : (io = t, t = o), t;
              }
              function ji() {
                var t;
                return (t = function () {
                  var t, e, n, u;
                  t = io, (e = Ga()) === o && (e = ja());
                  if (e !== o)
                    if (mi() !== o)
                      if (Ei() !== o)
                        if (mi() !== o) {
                          if (n = [], be.test(r.charAt(io)) ? (u = r.charAt(io), io++) : (u = o, 0 === vo && wo(de)), u !== o)
                            for (; u !== o;)
                              n.push(u), be.test(r.charAt(io)) ? (u = r.charAt(io), io++) : (u = o, 0 === vo && wo(de));
                          else
                            n = o;
                          n !== o && (u = mi()) !== o && hi() !== o ? (e = {
                            dataType: e,
                            length: parseInt(n.join(''), 10)
                          }, t = e) : (io = t, t = o);
                        } else
                          io = t, t = o;
                      else
                        io = t, t = o;
                    else
                      io = t, t = o;
                  else
                    io = t, t = o;
                  t === o && (t = io, (e = Ga()) !== o && (e = function (r) {
                    return { dataType: r };
                  }(e)), (t = e) === o && (t = io, (e = ja()) !== o && (e = ao(e)), t = e));
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, i, c, l, f, v, b;
                  t = io, (e = Ya()) === o && (e = Ba()) === o && (e = Wa()) === o && (e = Va()) === o && (e = Ka()) === o && (e = qa()) === o && (e = Za()) === o && (e = za()) === o && (e = Ja());
                  if (e !== o)
                    if ((n = mi()) !== o)
                      if ((u = Ei()) !== o)
                        if ((s = mi()) !== o) {
                          if (a = [], be.test(r.charAt(io)) ? (i = r.charAt(io), io++) : (i = o, 0 === vo && wo(de)), i !== o)
                            for (; i !== o;)
                              a.push(i), be.test(r.charAt(io)) ? (i = r.charAt(io), io++) : (i = o, 0 === vo && wo(de));
                          else
                            a = o;
                          if (a !== o)
                            if ((i = mi()) !== o) {
                              if (c = io, (l = pi()) !== o)
                                if ((f = mi()) !== o) {
                                  if (v = [], be.test(r.charAt(io)) ? (b = r.charAt(io), io++) : (b = o, 0 === vo && wo(de)), b !== o)
                                    for (; b !== o;)
                                      v.push(b), be.test(r.charAt(io)) ? (b = r.charAt(io), io++) : (b = o, 0 === vo && wo(de));
                                  else
                                    v = o;
                                  v !== o ? c = l = [
                                    l,
                                    f,
                                    v
                                  ] : (io = c, c = o);
                                } else
                                  io = c, c = o;
                              else
                                io = c, c = o;
                              c === o && (c = null), c !== o && (l = mi()) !== o && (f = hi()) !== o && (v = mi()) !== o ? ((b = Yi()) === o && (b = null), b !== o ? (d = c, L = b, e = {
                                dataType: e,
                                length: parseInt(a.join(''), 10),
                                scale: d && parseInt(d[2].join(''), 10),
                                parentheses: !0,
                                suffix: L
                              }, t = e) : (io = t, t = o)) : (io = t, t = o);
                            } else
                              io = t, t = o;
                          else
                            io = t, t = o;
                        } else
                          io = t, t = o;
                      else
                        io = t, t = o;
                    else
                      io = t, t = o;
                  else
                    io = t, t = o;
                  var d, L;
                  if (t === o) {
                    if (t = io, (e = Ya()) === o && (e = Ba()) === o && (e = Wa()) === o && (e = Va()) === o && (e = Ka()) === o && (e = qa()) === o && (e = Za()) === o && (e = za()) === o && (e = Ja()), e !== o) {
                      if (n = [], be.test(r.charAt(io)) ? (u = r.charAt(io), io++) : (u = o, 0 === vo && wo(de)), u !== o)
                        for (; u !== o;)
                          n.push(u), be.test(r.charAt(io)) ? (u = r.charAt(io), io++) : (u = o, 0 === vo && wo(de));
                      else
                        n = o;
                      n !== o && (u = mi()) !== o ? ((s = Yi()) === o && (s = null), s !== o ? (e = function (r, t, e) {
                        return {
                          dataType: r,
                          length: parseInt(t.join(''), 10),
                          suffix: e
                        };
                      }(e, n, s), t = e) : (io = t, t = o)) : (io = t, t = o);
                    } else
                      io = t, t = o;
                    t === o && (t = io, (e = Ya()) === o && (e = Ba()) === o && (e = Wa()) === o && (e = Va()) === o && (e = Ka()) === o && (e = qa()) === o && (e = Za()) === o && (e = za()) === o && (e = Ja()), e !== o && (n = mi()) !== o ? ((u = Yi()) === o && (u = null), u !== o && (s = mi()) !== o ? (e = function (r, t) {
                      return {
                        dataType: r,
                        suffix: t
                      };
                    }(e, u), t = e) : (io = t, t = o)) : (io = t, t = o));
                  }
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = io, (e = Qa()) === o && (e = ri()) === o && (e = ti()) === o && (e = ei());
                  if (e !== o)
                    if (mi() !== o)
                      if (Ei() !== o)
                        if (mi() !== o) {
                          if (n = [], be.test(r.charAt(io)) ? (u = r.charAt(io), io++) : (u = o, 0 === vo && wo(de)), u !== o)
                            for (; u !== o;)
                              n.push(u), be.test(r.charAt(io)) ? (u = r.charAt(io), io++) : (u = o, 0 === vo && wo(de));
                          else
                            n = o;
                          n !== o && (u = mi()) !== o && hi() !== o ? (e = {
                            dataType: e,
                            length: parseInt(n.join(''), 10)
                          }, t = e) : (io = t, t = o);
                        } else
                          io = t, t = o;
                      else
                        io = t, t = o;
                    else
                      io = t, t = o;
                  else
                    io = t, t = o;
                  t === o && (t = io, (e = Qa()) === o && (e = ri()) === o && (e = ti()) === o && (e = ei()), e !== o && (e = ao(e)), t = e);
                  return t;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = io, 'json' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Vn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'JSON' : (io = t, t = o)) : (io = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = io, 'jsonb' === r.substr(io, 5).toLowerCase() ? (e = r.substr(io, 5), io += 5) : (e = o, 0 === vo && wo(Kn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'JSONB' : (io = t, t = o)) : (io = t, t = o), t;
                  }());
                  e !== o && (e = ao(e));
                  return e;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = io, 'geometry' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(qn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'GEOMETRY' : (io = t, t = o)) : (io = t, t = o), t;
                  }()) !== o && (e = { dataType: e });
                  return e;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = io, 'tinytext' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(Jn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'TINYTEXT' : (io = t, t = o)) : (io = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = io, 'text' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(Qn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'TEXT' : (io = t, t = o)) : (io = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = io, 'mediumtext' === r.substr(io, 10).toLowerCase() ? (e = r.substr(io, 10), io += 10) : (e = o, 0 === vo && wo(ru)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'MEDIUMTEXT' : (io = t, t = o)) : (io = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = io, 'longtext' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(tu)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'LONGTEXT' : (io = t, t = o)) : (io = t, t = o), t;
                  }());
                  e !== o && (e = { dataType: e });
                  return e;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = io, 'uuid' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(fu)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'UUID' : (io = t, t = o)) : (io = t, t = o), t;
                  }()) !== o && (e = { dataType: e });
                  return e;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = io, 'bool' === r.substr(io, 4).toLowerCase() ? (e = r.substr(io, 4), io += 4) : (e = o, 0 === vo && wo(kn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'BOOL' : (io = t, t = o)) : (io = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = io, 'boolean' === r.substr(io, 7).toLowerCase() ? (e = r.substr(io, 7), io += 7) : (e = o, 0 === vo && wo($n)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'BOOLEAN' : (io = t, t = o)) : (io = t, t = o), t;
                  }());
                  e !== o && (e = { dataType: e });
                  return e;
                }()), t;
              }
              function Yi() {
                var t, e, n;
                return t = io, (e = Xa()) === o && (e = null), e !== o && mi() !== o ? ((n = function () {
                  var t, e, n, u;
                  return t = io, 'zerofill' === r.substr(io, 8).toLowerCase() ? (e = r.substr(io, 8), io += 8) : (e = o, 0 === vo && wo(Xn)), e !== o ? (n = io, vo++, u = Ms(), vo--, u === o ? n = void 0 : (io = n, n = o), n !== o ? t = e = 'ZEROFILL' : (io = t, t = o)) : (io = t, t = o), t;
                }()) === o && (n = null), n !== o ? t = e = function (r, t) {
                  const e = [];
                  return r && e.push(r), t && e.push(t), e;
                }(e, n) : (io = t, t = o)) : (io = t, t = o), t;
              }
              const Bi = {
                ALTER: !0,
                ALL: !0,
                ADD: !0,
                AND: !0,
                AS: !0,
                ASC: !0,
                BETWEEN: !0,
                BY: !0,
                CALL: !0,
                CASE: !0,
                CREATE: !0,
                CONTAINS: !0,
                CURRENT_DATE: !0,
                CURRENT_TIME: !0,
                CURRENT_TIMESTAMP: !0,
                CURRENT_USER: !0,
                DELETE: !0,
                DESC: !0,
                DISTINCT: !0,
                DROP: !0,
                ELSE: !0,
                END: !0,
                EXISTS: !0,
                EXPLAIN: !0,
                FALSE: !0,
                FROM: !0,
                FULL: !0,
                GROUP: !0,
                HAVING: !0,
                IN: !0,
                INNER: !0,
                INSERT: !0,
                INTO: !0,
                INTERVAL: !0,
                IS: !0,
                JOIN: !0,
                JSON: !0,
                KEY: !0,
                LIKE: !0,
                LIMIT: !0,
                NOT: !0,
                NULL: !0,
                NULLS: !0,
                ON: !0,
                OR: !0,
                ORDER: !0,
                OUTER: !0,
                RECURSIVE: !0,
                RENAME: !0,
                RIGHT: !0,
                SELECT: !0,
                SESSION_USER: !0,
                SET: !0,
                SHOW: !0,
                STATUS: !0,
                SYSTEM_USER: !0,
                TABLE: !0,
                THEN: !0,
                TRUE: !0,
                TRUNCATE: !0,
                TYPE: !0,
                UNION: !0,
                UPDATE: !0,
                USING: !0,
                VALUES: !0,
                WITH: !0,
                WHEN: !0,
                WHERE: !0,
                GLOBAL: !0,
                SESSION: !0,
                LOCAL: !0,
                PERSIST: !0,
                PERSIST_ONLY: !0
              };
              function Xi(r, t) {
                return {
                  type: 'unary_expr',
                  operator: r,
                  expr: t
                };
              }
              function Wi(r, t, e) {
                return {
                  type: 'binary_expr',
                  operator: r,
                  left: t,
                  right: e
                };
              }
              function Vi(r) {
                const t = n(Number.MAX_SAFE_INTEGER);
                return !(n(r) < t);
              }
              function Ki(r, t) {
                const e = [r];
                for (let r = 0; r < t.length; r++)
                  e.push(t[r][3]);
                return e;
              }
              function qi(r, t) {
                let e = r;
                for (let r = 0; r < t.length; r++)
                  e = Wi(t[r][1], e, t[r][3]);
                return e;
              }
              function Zi(r) {
                const t = ec[r];
                return t || (r || null);
              }
              function zi(r) {
                const t = [];
                for (let e of r.keys()) {
                  const r = e.split('::');
                  if (!r) {
                    t.push(e);
                    break;
                  }
                  r && r[1] && (r[1] = Zi(r[1])), t.push(r.join('::'));
                }
                return t;
              }
              function Ji(r) {
                return 'string' == typeof r ? {
                  type: 'same',
                  value: r
                } : r;
              }
              let Qi = [];
              const rc = new Set(), tc = new Set(), ec = {};
              if ((e = a()) !== o && io === r.length)
                return e;
              throw e !== o && io < r.length && wo({ type: 'end' }), Eo(fo, lo < r.length ? r.charAt(lo) : null, lo < r.length ? po(lo, lo + 1) : po(lo, lo));
            }
          };
        },
        function (r, t, e) {
          var n = e(0);
          function u(r, t, e, n) {
            this.message = r, this.expected = t, this.found = e, this.location = n, this.name = 'SyntaxError', 'function' == typeof Error.captureStackTrace && Error.captureStackTrace(this, u);
          }
          !function (r, t) {
            function e() {
              this.constructor = r;
            }
            e.prototype = t.prototype, r.prototype = new e();
          }(u, Error), u.buildMessage = function (r, t) {
            var e = {
              literal: function (r) {
                return '"' + u(r.text) + '"';
              },
              class: function (r) {
                var t, e = '';
                for (t = 0; t < r.parts.length; t++)
                  e += r.parts[t] instanceof Array ? o(r.parts[t][0]) + '-' + o(r.parts[t][1]) : o(r.parts[t]);
                return '[' + (r.inverted ? '^' : '') + e + ']';
              },
              any: function (r) {
                return 'any character';
              },
              end: function (r) {
                return 'end of input';
              },
              other: function (r) {
                return r.description;
              }
            };
            function n(r) {
              return r.charCodeAt(0).toString(16).toUpperCase();
            }
            function u(r) {
              return r.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            function o(r) {
              return r.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            return 'Expected ' + function (r) {
              var t, n, u, o = new Array(r.length);
              for (t = 0; t < r.length; t++)
                o[t] = (u = r[t], e[u.type](u));
              if (o.sort(), o.length > 0) {
                for (t = 1, n = 1; t < o.length; t++)
                  o[t - 1] !== o[t] && (o[n] = o[t], n++);
                o.length = n;
              }
              switch (o.length) {
              case 1:
                return o[0];
              case 2:
                return o[0] + ' or ' + o[1];
              default:
                return o.slice(0, -1).join(', ') + ', or ' + o[o.length - 1];
              }
            }(r) + ' but ' + function (r) {
              return r ? '"' + u(r) + '"' : 'end of input';
            }(t) + ' found.';
          }, r.exports = {
            SyntaxError: u,
            parse: function (r, t) {
              t = void 0 !== t ? t : {};
              var e, o = {}, s = { start: lo }, a = lo, i = function (r, t) {
                  return Gi(r, t);
                }, c = uo('INCLUDE', !0), l = uo('FILESTREAM_ON', !0), f = function (r, t) {
                  return Gi(r, t);
                }, v = uo('IDENTITY', !0), b = uo('UNIQUE', !0), d = uo('PRIMARY', !0), L = uo('KEY', !0), C = uo('COLUMN_FORMAT', !0), p = uo('FIXED', !0), w = uo('DYNAMIC', !0), E = uo('DEFAULT', !0), h = uo('STORAGE', !0), A = uo('DISK', !0), y = uo('MEMORY', !0), T = uo('CURSOR', !0), m = uo('PROCEDURE', !0), S = uo('ALGORITHM', !0), I = uo('INSTANT', !0), N = uo('INPLACE', !0), R = uo('COPY', !0), _ = uo('LOCK', !0), g = uo('NONE', !0), O = uo('SHARED', !0), U = uo('EXCLUSIVE', !0), x = uo('CHECK', !0), M = uo('NOCHECK', !0), D = uo('PRIMARY KEY', !0), k = uo('NOT', !0), $ = uo('FOR', !0), F = uo('REPLICATION', !0), P = uo('FOREIGN KEY', !0), H = uo('MATCH FULL', !0), G = uo('MATCH PARTIAL', !0), j = uo('MATCH SIMPLE', !0), Y = uo('ON DELETE', !0), B = uo('ON UPDATE', !0), X = uo('RESTRICT', !0), W = uo('CASCADE', !0), V = uo('SET NULL', !0), K = uo('NO ACTION', !0), q = uo('SET DEFAULT', !0), Z = uo('AUTO_INCREMENT', !0), z = uo('AVG_ROW_LENGTH', !0), J = uo('KEY_BLOCK_SIZE', !0), Q = uo('MAX_ROWS', !0), rr = uo('MIN_ROWS', !0), tr = uo('STATS_SAMPLE_PAGES', !0), er = uo('CHARACTER SET', !0), nr = uo('CHARSET', !0), ur = uo('COLLATE', !0), or = uo('CONNECTION', !0), sr = uo('COMPRESSION', !0), ar = uo('\'', !1), ir = uo('ZLIB', !0), cr = uo('LZ4', !0), lr = uo('ENGINE', !0), fr = uo('READ', !0), vr = uo('LOCAL', !0), br = uo('LOW_PRIORITY', !0), dr = uo('WRITE', !0), Lr = uo('(', !1), Cr = uo(')', !1), pr = uo('PERCENT', !0), wr = uo('BTREE', !0), Er = uo('HASH', !0), hr = uo('NONCLUSTERED', !0), Ar = uo('PARTITIONS', !0), yr = function (r, t, e) {
                  return {
                    type: r.toLowerCase(),
                    symbol: t,
                    expr: e
                  };
                }, Tr = uo('FILLFACTOR', !0), mr = uo('MAX_DURATION', !0), Sr = uo('MAXDOP', !0), Ir = uo('WITH', !0), Nr = uo('PARSER', !0), Rr = uo('VISIBLE', !0), _r = uo('INVISIBLE', !0), gr = uo('PAD_INDEX', !0), Or = uo('SORT_IN_TEMPDB', !0), Ur = uo('IGNORE_DUP_KEY', !0), xr = uo('STATISTICS_NORECOMPUTE', !0), Mr = uo('STATISTICS_INCREMENTAL', !0), Dr = uo('DROP_EXISTING', !0), kr = uo('ONLINE', !0), $r = uo('RESUMABLE', !0), Fr = uo('ALLOW_ROW_LOCKS', !0), Pr = uo('ALLOW_PAGE_LOCKS', !0), Hr = uo('OPTIMIZE_FOR_SEQUENTIAL_KEY', !0), Gr = uo('DATA_COMPRESSION', !0), jr = uo('ROW', !0), Yr = uo('PAGE', !1), Br = uo('=', !1), Xr = function (r, t) {
                  return ji(r, t);
                }, Wr = uo('!', !1), Vr = function (r) {
                  return r[0] + ' ' + r[2];
                }, Kr = uo('>=', !1), qr = uo('>', !1), Zr = uo('<=', !1), zr = uo('<>', !1), Jr = uo('<', !1), Qr = uo('!=', !1), rt = uo('+', !1), tt = uo('-', !1), et = uo('*', !1), nt = uo('/', !1), ut = uo('%', !1), ot = function (r) {
                  return r.parentheses = !0, r;
                }, st = function (r) {
                  return !0 === $i[r.toUpperCase()];
                }, at = uo('"', !1), it = /^[^"]/, ct = oo(['"'], !0, !1), lt = function (r) {
                  return r.join('');
                }, ft = /^[^']/, vt = oo(['\''], !0, !1), bt = uo('`', !1), dt = /^[^`]/, Lt = oo(['`'], !0, !1), Ct = uo('[', !1), pt = /^[^\]]/, wt = oo([']'], !0, !1), Et = uo(']', !1), ht = function (r, t) {
                  return r + t.join('');
                }, At = /^[A-Za-z_]/, yt = oo([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  '_'
                ], !1, !1), Tt = /^[A-Za-z0-9_]/, mt = oo([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_'
                ], !1, !1), St = /^[A-Za-z0-9_:]/, It = oo([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_',
                  ':'
                ], !1, !1), Nt = uo(':', !1), Rt = function (r) {
                  return {
                    type: 'string',
                    value: r[1].join('')
                  };
                }, _t = uo('ON UPDATE CURRENT_TIMESTAMP', !0), gt = /^[^"\\\0-\x1F\x7F]/, Ot = oo([
                  '"',
                  '\\',
                  [
                    '\0',
                    '\x1F'
                  ],
                  '\x7F'
                ], !0, !1), Ut = /^[^'\\]/, xt = oo([
                  '\'',
                  '\\'
                ], !0, !1), Mt = uo('\\\'', !1), Dt = uo('\\"', !1), kt = uo('\\\\', !1), $t = uo('\\/', !1), Ft = uo('\\b', !1), Pt = uo('\\f', !1), Ht = uo('\\n', !1), Gt = uo('\\r', !1), jt = uo('\\t', !1), Yt = uo('\\u', !1), Bt = uo('\\', !1), Xt = /^[\n\r]/, Wt = oo([
                  '\n',
                  '\r'
                ], !1, !1), Vt = uo('.', !1), Kt = /^[0-9]/, qt = oo([[
                    '0',
                    '9'
                  ]], !1, !1), Zt = /^[0-9a-fA-F]/, zt = oo([
                  [
                    '0',
                    '9'
                  ],
                  [
                    'a',
                    'f'
                  ],
                  [
                    'A',
                    'F'
                  ]
                ], !1, !1), Jt = /^[eE]/, Qt = oo([
                  'e',
                  'E'
                ], !1, !1), re = /^[+\-]/, te = oo([
                  '+',
                  '-'
                ], !1, !1), ee = uo('NULL', !0), ne = uo('NOT NULL', !0), ue = uo('TRUE', !0), oe = uo('TO', !0), se = uo('TOP', !0), ae = uo('FALSE', !0), ie = uo('DROP', !0), ce = uo('DECLARE', !0), le = uo('USE', !0), fe = uo('ALTER', !0), ve = uo('SELECT', !0), be = uo('UPDATE', !0), de = uo('CREATE', !0), Le = uo('TEMPORARY', !0), Ce = uo('IF NOT EXISTS', !0), pe = uo('DELETE', !0), we = uo('INSERT', !0), Ee = uo('RECURSIVE', !1), he = uo('REPLACE', !0), Ae = uo('RENAME', !0), ye = uo('IGNORE', !0), Te = uo('PARTITION', !0), me = uo('INTO', !0), Se = uo('FROM', !0), Ie = uo('SET', !0), Ne = uo('UNLOCK', !0), Re = uo('AS', !0), _e = uo('TABLE', !0), ge = uo('TABLES', !0), Oe = uo('ON', !0), Ue = uo('OFF', !0), xe = uo('LEFT', !0), Me = uo('RIGHT', !0), De = uo('FULL', !0), ke = uo('INNER', !0), $e = uo('JOIN', !0), Fe = uo('OUTER', !0), Pe = uo('OVER', !0), He = uo('UNION', !0), Ge = uo('VALUES', !0), je = uo('USING', !0), Ye = uo('WHERE', !0), Be = uo('GROUP', !0), Xe = uo('BY', !0), We = uo('ORDER', !0), Ve = uo('HAVING', !0), Ke = uo('LIMIT', !0), qe = uo('OFFSET', !0), Ze = uo('ASC', !0), ze = uo('DESC', !0), Je = uo('ALL', !0), Qe = uo('DISTINCT', !0), rn = uo('BETWEEN', !0), tn = uo('IN', !0), en = uo('IS', !0), nn = uo('LIKE', !0), un = uo('EXISTS', !0), on = uo('AND', !0), sn = uo('OR', !0), an = uo('COUNT', !0), cn = uo('MAX', !0), ln = uo('MIN', !0), fn = uo('SUM', !0), vn = uo('AVG', !0), bn = uo('CALL', !0), dn = uo('CASE', !0), Ln = uo('WHEN', !0), Cn = uo('THEN', !0), pn = uo('ELSE', !0), wn = uo('END', !0), En = uo('CAST', !0), hn = uo('BIT', !0), An = uo('MONEY', !0), yn = uo('SMALLMONEY', !0), Tn = uo('CHAR', !0), mn = uo('VARCHAR', !0), Sn = uo('NCHAR', !0), In = uo('NVARCHAR', !0), Nn = uo('NUMERIC', !0), Rn = uo('DECIMAL', !0), _n = uo('SIGNED', !0), gn = uo('UNSIGNED', !0), On = uo('INT', !0), Un = uo('ZEROFILL', !0), xn = uo('INTEGER', !0), Mn = uo('JSON', !0), Dn = uo('SMALLINT', !0), kn = uo('TINYINT', !0), $n = uo('TINYTEXT', !0), Fn = uo('TEXT', !0), Pn = uo('MEDIUMTEXT', !0), Hn = uo('LONGTEXT', !0), Gn = uo('BIGINT', !0), jn = uo('FLOAT', !0), Yn = uo('REAL', !0), Bn = uo('DOUBLE', !0), Xn = uo('DATE', !0), Wn = uo('SMALLDATETIME', !0), Vn = uo('DATETIME', !0), Kn = uo('DATETIME2', !0), qn = uo('DATETIMEOFFSET', !0), Zn = uo('TIME', !0), zn = uo('TIMESTAMP', !0), Jn = uo('TRUNCATE', !0), Qn = uo('UNIQUEIDENTIFIER', !0), ru = uo('USER', !0), tu = uo('CURRENT_DATE', !0), eu = uo('INTERVAL', !0), nu = uo('YEAR', !0), uu = uo('MONTH', !0), ou = uo('DAY', !0), su = uo('HOUR', !0), au = uo('MINUTE', !0), iu = uo('SECOND', !0), cu = uo('CURRENT_TIME', !0), lu = uo('CURRENT_TIMESTAMP', !0), fu = uo('CURRENT_USER', !0), vu = uo('SESSION_USER', !0), bu = uo('SYSTEM_USER', !0), du = uo('GLOBAL', !0), Lu = uo('SESSION', !0), Cu = uo('PERSIST', !0), pu = uo('PERSIST_ONLY', !0), wu = uo('@', !1), Eu = uo('@@', !1), hu = uo('$', !1), Au = uo('return', !0), yu = uo(':=', !1), Tu = uo('DUAL', !0), mu = uo('ADD', !0), Su = uo('COLUMN', !0), Iu = uo('INDEX', !0), Nu = uo('FULLTEXT', !0), Ru = uo('SPATIAL', !0), _u = uo('CLUSTERED', !0), gu = uo('COMMENT', !0), Ou = uo('CONSTRAINT', !0), Uu = uo('REFERENCES', !0), xu = uo('SQL_CALC_FOUND_ROWS', !0), Mu = uo('SQL_CACHE', !0), Du = uo('SQL_NO_CACHE', !0), ku = uo('SQL_SMALL_RESULT', !0), $u = uo('SQL_BIG_RESULT', !0), Fu = uo('SQL_BUFFER_RESULT', !0), Pu = uo(',', !1), Hu = uo(';', !1), Gu = uo('||', !1), ju = uo('&&', !1), Yu = uo('/*', !1), Bu = uo('*/', !1), Xu = uo('--', !1), Wu = uo('#', !1), Vu = { type: 'any' }, Ku = /^[ \t\n\r]/, qu = oo([
                  ' ',
                  '\t',
                  '\n',
                  '\r'
                ], !1, !1), Zu = function (r, t, e) {
                  return r && !e || !r && e;
                }, zu = function (r, t, e) {
                  return { dataType: t };
                }, Ju = function (r, t, e) {
                  return { dataType: t };
                }, Qu = 0, ro = [{
                    line: 1,
                    column: 1
                  }], to = 0, eo = [], no = 0;
              if ('startRule' in t) {
                if (!(t.startRule in s))
                  throw new Error('Can\'t start parsing from rule "' + t.startRule + '".');
                a = s[t.startRule];
              }
              function uo(r, t) {
                return {
                  type: 'literal',
                  text: r,
                  ignoreCase: t
                };
              }
              function oo(r, t, e) {
                return {
                  type: 'class',
                  parts: r,
                  inverted: t,
                  ignoreCase: e
                };
              }
              function so(t) {
                var e, n = ro[t];
                if (n)
                  return n;
                for (e = t - 1; !ro[e];)
                  e--;
                for (n = {
                    line: (n = ro[e]).line,
                    column: n.column
                  }; e < t;)
                  10 === r.charCodeAt(e) ? (n.line++, n.column = 1) : n.column++, e++;
                return ro[t] = n, n;
              }
              function ao(r, t) {
                var e = so(r), n = so(t);
                return {
                  start: {
                    offset: r,
                    line: e.line,
                    column: e.column
                  },
                  end: {
                    offset: t,
                    line: n.line,
                    column: n.column
                  }
                };
              }
              function io(r) {
                Qu < to || (Qu > to && (to = Qu, eo = []), eo.push(r));
              }
              function co(r, t, e) {
                return new u(u.buildMessage(r, t), r, t, e);
              }
              function lo() {
                var r, t;
                return r = Qu, pi() !== o ? ((t = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = Qu, (t = vo()) !== o) {
                    if (e = [], n = Qu, (u = pi()) !== o && (s = Li()) !== o && (a = pi()) !== o && (i = vo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (Qu = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = Qu, (u = pi()) !== o && (s = Li()) !== o && (a = pi()) !== o && (i = vo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = function (r, t) {
                      const e = [r && r.ast || r];
                      for (let r = 0; r < t.length; r++)
                        t[r][3] && 0 !== t[r][3].length && e.push(t[r][3] && t[r][3].ast || t[r][3]);
                      return {
                        tableList: Array.from(Wi),
                        columnList: Bi(Vi),
                        ast: e
                      };
                    }(t, e), r = t) : (Qu = r, r = o);
                  } else
                    Qu = r, r = o;
                  return r;
                }()) === o && (t = fo()) === o && (t = vo()), t !== o ? r = t : (Qu = r, r = o)) : (Qu = r, r = o), r;
              }
              function fo() {
                var t;
                return (t = function () {
                  var t, e, n, u;
                  t = Qu, (e = Zs()) !== o && pi() !== o && (n = ia()) !== o && pi() !== o && (u = Wo()) !== o ? (s = e, a = n, (i = u) && i.forEach(r => Wi.add(`${ s }::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(Wi),
                    columnList: Bi(Vi),
                    ast: {
                      type: s.toLowerCase(),
                      keyword: a.toLowerCase(),
                      name: i
                    }
                  }, t = e) : (Qu = t, t = o);
                  var s, a, i;
                  t === o && (t = Qu, (e = Zs()) !== o && pi() !== o ? ('procedure' === r.substr(Qu, 9).toLowerCase() ? (n = r.substr(Qu, 9), Qu += 9) : (n = o, 0 === no && io(m)), n !== o && pi() !== o && (u = Ss()) !== o ? (e = function (r, t, e) {
                    return {
                      tableList: Array.from(Wi),
                      columnList: Bi(Vi),
                      ast: {
                        type: r.toLowerCase(),
                        keyword: t.toLowerCase(),
                        name: e
                      }
                    };
                  }(e, n, u), t = e) : (Qu = t, t = o)) : (Qu = t, t = o));
                  return t;
                }()) === o && (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u, s, a, c, l, f, v;
                    t = Qu, (e = Qs()) !== o && pi() !== o ? ((n = ra()) === o && (n = null), n !== o && pi() !== o && ia() !== o && pi() !== o ? ((u = ta()) === o && (u = null), u !== o && pi() !== o && (s = Wo()) !== o && pi() !== o && (a = po()) !== o && pi() !== o ? ((c = function () {
                      var r, t, e, n, u, s, a, c;
                      if (r = Qu, (t = Ro()) !== o) {
                        for (e = [], n = Qu, (u = pi()) !== o ? ((s = ci()) === o && (s = null), s !== o && (a = pi()) !== o && (c = Ro()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            c
                          ] : (Qu = n, n = o)) : (Qu = n, n = o); n !== o;)
                          e.push(n), n = Qu, (u = pi()) !== o ? ((s = ci()) === o && (s = null), s !== o && (a = pi()) !== o && (c = Ro()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            c
                          ] : (Qu = n, n = o)) : (Qu = n, n = o);
                        e !== o ? (t = i(t, e), r = t) : (Qu = r, r = o);
                      } else
                        Qu = r, r = o;
                      return r;
                    }()) === o && (c = null), c !== o && pi() !== o ? ((l = function () {
                      var t, e, n, u;
                      t = Qu, 'ignore' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(ye));
                      e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                        e,
                        n
                      ] : (Qu = t, t = o)) : (Qu = t, t = o);
                      return t;
                    }()) === o && (l = ea()), l === o && (l = null), l !== o && pi() !== o ? ((f = aa()) === o && (f = null), f !== o && pi() !== o ? ((v = bo()) === o && (v = null), v !== o ? (b = e, d = n, L = u, p = a, w = c, E = l, h = f, A = v, (C = s) && C.forEach(r => Wi.add(`create::${ r.db }::${ r.table }`)), e = {
                      tableList: Array.from(Wi),
                      columnList: Bi(Vi),
                      ast: {
                        type: b[0].toLowerCase(),
                        keyword: 'table',
                        temporary: d && d[0].toLowerCase(),
                        if_not_exists: L && L[0].toLowerCase(),
                        table: C,
                        ignore_replace: E && E[0].toLowerCase(),
                        as: h && h[0].toLowerCase(),
                        query_expr: A && A.ast,
                        create_definitions: p,
                        table_options: w
                      }
                    }, t = e) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o);
                    var b, d, L, C, p, w, E, h, A;
                    t === o && (t = Qu, (e = Qs()) !== o && pi() !== o ? ((n = ra()) === o && (n = null), n !== o && pi() !== o && ia() !== o && pi() !== o ? ((u = ta()) === o && (u = null), u !== o && pi() !== o && (s = Wo()) !== o && pi() !== o && (a = function r() {
                      var t, e;
                      (t = function () {
                        var r, t, e;
                        r = Qu, (t = ma()) !== o && pi() !== o && (e = Wo()) !== o ? (t = function (r) {
                          return {
                            type: 'like',
                            table: r
                          };
                        }(e), r = t) : (Qu = r, r = o);
                        return r;
                      }()) === o && (t = Qu, fi() !== o && pi() !== o && (e = r()) !== o && pi() !== o && vi() !== o ? ((n = e).parentheses = !0, t = n) : (Qu = t, t = o));
                      var n;
                      return t;
                    }()) !== o ? (e = function (r, t, e, n, u) {
                      return n && n.forEach(r => Wi.add(`create::${ r.db }::${ r.table }`)), {
                        tableList: Array.from(Wi),
                        columnList: Bi(Vi),
                        ast: {
                          type: r[0].toLowerCase(),
                          keyword: 'table',
                          temporary: t && t[0].toLowerCase(),
                          if_not_exists: e && e[0].toLowerCase(),
                          table: n,
                          like: u
                        }
                      };
                    }(e, n, u, s, a), t = e) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o));
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a, f, v, b, d, L, C, p, w, E, h, A, y;
                    t = Qu, (e = Qs()) !== o && pi() !== o ? ((n = oi()) === o && (n = function () {
                      var t, e, n, u;
                      t = Qu, 'clustered' === r.substr(Qu, 9).toLowerCase() ? (e = r.substr(Qu, 9), Qu += 9) : (e = o, 0 === no && io(_u));
                      e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'CLUSTERED' : (Qu = t, t = o)) : (Qu = t, t = o);
                      return t;
                    }()) === o && (n = function () {
                      var t, e, n, u;
                      t = Qu, 'nonclustered' === r.substr(Qu, 12).toLowerCase() ? (e = r.substr(Qu, 12), Qu += 12) : (e = o, 0 === no && io(hr));
                      e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'NONCLUSTERED' : (Qu = t, t = o)) : (Qu = t, t = o);
                      return t;
                    }()), n === o && (n = null), n !== o && pi() !== o && (u = ni()) !== o && pi() !== o && (s = Ss()) !== o && pi() !== o && (a = la()) !== o && pi() !== o && (f = Zo()) !== o && pi() !== o && fi() !== o && pi() !== o && (v = function () {
                      var r, t;
                      r = Qu, bi() !== o && pi() !== o && (t = Lo()) !== o && pi() !== o && di() !== o ? r = t : (Qu = r, r = o);
                      r === o && (r = Lo());
                      return r;
                    }()) !== o && pi() !== o && vi() !== o && pi() !== o ? ((b = function () {
                      var t, e, n;
                      t = Qu, 'include' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(c));
                      e !== o && pi() !== o && fi() !== o && pi() !== o && (n = ms()) !== o && pi() !== o && vi() !== o ? (s = n, e = {
                        type: (u = e).toLowerCase(),
                        keyword: u.toLowerCase(),
                        columns: s
                      }, t = e) : (Qu = t, t = o);
                      var u, s;
                      return t;
                    }()) === o && (b = null), b !== o && pi() !== o ? ((d = Jo()) === o && (d = null), d !== o && pi() !== o ? (L = Qu, (C = La()) !== o && (p = pi()) !== o && (w = fi()) !== o && (E = pi()) !== o && (h = function () {
                      var r, t, e, n, u, s, a, c;
                      if (r = Qu, (t = Xo()) !== o) {
                        for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (c = Xo()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            c
                          ] : (Qu = n, n = o); n !== o;)
                          e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (c = Xo()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            c
                          ] : (Qu = n, n = o);
                        e !== o ? (t = i(t, e), r = t) : (Qu = r, r = o);
                      } else
                        Qu = r, r = o;
                      return r;
                    }()) !== o && (A = pi()) !== o && (y = vi()) !== o ? L = C = [
                      C,
                      p,
                      w,
                      E,
                      h,
                      A,
                      y
                    ] : (Qu = L, L = o), L === o && (L = null), L !== o && (C = pi()) !== o ? ((p = zo()) === o && (p = null), p !== o && (w = pi()) !== o ? (E = Qu, 'filestream_on' === r.substr(Qu, 13).toLowerCase() ? (h = r.substr(Qu, 13), Qu += 13) : (h = o, 0 === no && io(l)), h !== o && (A = pi()) !== o && (y = Ss()) !== o ? E = h = [
                      h,
                      A,
                      y
                    ] : (Qu = E, E = o), E === o && (E = null), E !== o ? (T = e, m = n, S = u, I = s, N = a, R = f, _ = v, g = b, O = d, U = L, x = p, M = E, e = {
                      tableList: Array.from(Wi),
                      columnList: Bi(Vi),
                      ast: {
                        type: T[0].toLowerCase(),
                        index_type: m && m.toLowerCase(),
                        keyword: S.toLowerCase(),
                        index: I,
                        on_kw: N[0].toLowerCase(),
                        table: R,
                        index_columns: _,
                        include: g,
                        where: O,
                        with: U && U[4],
                        on: x,
                        filestream_on: M && { value: M[2] }
                      }
                    }, t = e) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o);
                    var T, m, S, I, N, R, _, g, O, U, x, M;
                    return t;
                  }());
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Qu, (e = function () {
                    var t, e, n, u;
                    t = Qu, 'truncate' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(Jn));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'TRUNCATE' : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) !== o && pi() !== o ? ((n = ia()) === o && (n = null), n !== o && pi() !== o && (u = Wo()) !== o ? (s = e, a = n, (i = u) && i.forEach(r => Wi.add(`${ s }::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(Wi),
                    columnList: Bi(Vi),
                    ast: {
                      type: s.toLowerCase(),
                      keyword: a && a.toLowerCase() || 'table',
                      name: i
                    }
                  }, t = e) : (Qu = t, t = o)) : (Qu = t, t = o);
                  var s, a, i;
                  return t;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = Qu, (t = na()) !== o && pi() !== o && ia() !== o && pi() !== o && (e = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = Qu, (t = Ho()) !== o) {
                      for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = Ho()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o); n !== o;)
                        e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = Ho()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o);
                      e !== o ? (t = f(t, e), r = t) : (Qu = r, r = o);
                    } else
                      Qu = r, r = o;
                    return r;
                  }()) !== o ? ((n = e).forEach(r => r.forEach(r => r.table && Wi.add(`rename::${ r.db }::${ r.table }`))), t = {
                    tableList: Array.from(Wi),
                    columnList: Bi(Vi),
                    ast: {
                      type: 'rename',
                      table: n
                    }
                  }, r = t) : (Qu = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = Qu, (e = function () {
                    var t, e, n, u;
                    t = Qu, 'call' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(bn));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'CALL' : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) !== o && pi() !== o && (n = Oi()) !== o ? (u = n, e = {
                    tableList: Array.from(Wi),
                    columnList: Bi(Vi),
                    ast: {
                      type: 'call',
                      expr: u
                    }
                  }, t = e) : (Qu = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = Qu, (e = function () {
                    var t, e, n, u;
                    t = Qu, 'use' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(le));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) !== o && pi() !== o && (n = Ss()) !== o ? (u = n, Wi.add(`use::${ u }::null`), e = {
                    tableList: Array.from(Wi),
                    columnList: Bi(Vi),
                    ast: {
                      type: 'use',
                      db: u
                    }
                  }, t = e) : (Qu = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var r, t, e, n;
                  r = Qu, (t = Js()) !== o && pi() !== o && ia() !== o && pi() !== o && (e = Wo()) !== o && pi() !== o && (n = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = Qu, (t = Ao()) !== o) {
                      for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = Ao()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o); n !== o;)
                        e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = Ao()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o);
                      e !== o ? (t = f(t, e), r = t) : (Qu = r, r = o);
                    } else
                      Qu = r, r = o;
                    return r;
                  }()) !== o ? (s = n, (u = e) && u.length > 0 && u.forEach(r => Wi.add(`alter::${ r.db }::${ r.table }`)), t = {
                    tableList: Array.from(Wi),
                    columnList: Bi(Vi),
                    ast: {
                      type: 'alter',
                      table: u,
                      expr: s
                    }
                  }, r = t) : (Qu = r, r = o);
                  var u, s;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Qu, (e = sa()) !== o && pi() !== o ? ((n = function () {
                    var t, e, n, u;
                    t = Qu, 'global' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(du));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'GLOBAL' : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = Qu, 'session' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(Lu));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'SESSION' : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = Qu, 'local' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(vr));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'LOCAL' : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = Qu, 'persist' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(Cu));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'PERSIST' : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = Qu, 'persist_only' === r.substr(Qu, 12).toLowerCase() ? (e = r.substr(Qu, 12), Qu += 12) : (e = o, 0 === no && io(pu));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'PERSIST_ONLY' : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()), n === o && (n = null), n !== o && pi() !== o && (u = Si()) !== o ? (s = n, (a = u).keyword = s, e = {
                    tableList: Array.from(Wi),
                    columnList: Bi(Vi),
                    ast: {
                      type: 'set',
                      expr: a
                    }
                  }, t = e) : (Qu = t, t = o)) : (Qu = t, t = o);
                  var s, a;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = Qu, (e = function () {
                    var t, e, n, u;
                    t = Qu, 'lock' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(_));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) !== o && pi() !== o && ca() !== o && pi() !== o && (n = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = Qu, (t = _o()) !== o) {
                      for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = _o()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o); n !== o;)
                        e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = _o()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o);
                      e !== o ? (t = Gi(t, e), r = t) : (Qu = r, r = o);
                    } else
                      Qu = r, r = o;
                    return r;
                  }()) !== o ? (u = n, e = {
                    tableList: Array.from(Wi),
                    columnList: Bi(Vi),
                    ast: {
                      type: 'lock',
                      keyword: 'tables',
                      tables: u
                    }
                  }, t = e) : (Qu = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e;
                  t = Qu, (e = function () {
                    var t, e, n, u;
                    t = Qu, 'unlock' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(Ne));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) !== o && pi() !== o && ca() !== o ? (e = {
                    tableList: Array.from(Wi),
                    columnList: Bi(Vi),
                    ast: {
                      type: 'unlock',
                      keyword: 'tables'
                    }
                  }, t = e) : (Qu = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var r, t, e, n, u, s;
                  r = Qu, (t = zs()) !== o && pi() !== o && (e = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = Qu, (t = ho()) !== o) {
                      for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = ho()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o); n !== o;)
                        e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = ho()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o);
                      e !== o ? (t = f(t, e), r = t) : (Qu = r, r = o);
                    } else
                      Qu = r, r = o;
                    return r;
                  }()) !== o ? (a = e, t = {
                    tableList: Array.from(Wi),
                    columnList: Bi(Vi),
                    ast: {
                      type: 'declare',
                      declare: a
                    }
                  }, r = t) : (Qu = r, r = o);
                  var a;
                  r === o && (r = Qu, (t = zs()) !== o && pi() !== o && (e = Ja()) !== o && pi() !== o && (n = Rs()) !== o && pi() !== o ? ((u = aa()) === o && (u = null), u !== o && pi() !== o && ia() !== o && pi() !== o && (s = po()) !== o ? (i = n, c = u, l = s, t = {
                    tableList: Array.from(Wi),
                    columnList: Bi(Vi),
                    ast: {
                      type: 'declare',
                      declare: [{
                          at: '@',
                          name: i,
                          as: c && c[0].toLowerCase(),
                          keyword: 'table',
                          prefix: 'table',
                          definition: l
                        }]
                    }
                  }, r = t) : (Qu = r, r = o)) : (Qu = r, r = o));
                  var i, c, l;
                  return r;
                }()), t;
              }
              function vo() {
                var t;
                return (t = bo()) === o && (t = function () {
                  var t, e, n, u, s;
                  t = Qu, (e = function () {
                    var t, e, n, u;
                    t = Qu, 'update' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(be));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) !== o && pi() !== o && (n = Wo()) !== o && pi() !== o && sa() !== o && pi() !== o && (u = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = Qu, (t = ns()) !== o) {
                      for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = ns()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o); n !== o;)
                        e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = ns()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o);
                      e !== o ? (t = f(t, e), r = t) : (Qu = r, r = o);
                    } else
                      Qu = r, r = o;
                    return r;
                  }()) !== o && pi() !== o ? ((s = Jo()) === o && (s = null), s !== o ? (i = u, c = s, (a = n) && a.forEach(r => {
                    const {
                      db: t,
                      as: e,
                      table: n
                    } = r;
                    Wi.add(`update::${ t }::${ n }`);
                  }), i && i.forEach(r => Vi.add(`update::${ r.table }::${ r.column }`)), e = {
                    tableList: Array.from(Wi),
                    columnList: Bi(Vi),
                    ast: {
                      type: 'update',
                      table: a,
                      set: i,
                      where: c
                    }
                  }, t = e) : (Qu = t, t = o)) : (Qu = t, t = o);
                  var a, i, c;
                  return t;
                }()) === o && (t = function () {
                  var r, t, e, n, u, s, a;
                  r = Qu, (t = ss()) !== o && pi() !== o ? ((e = oa()) === o && (e = null), e !== o && pi() !== o && (n = Zo()) !== o && pi() !== o ? ((u = os()) === o && (u = null), u !== o && pi() !== o && fi() !== o && pi() !== o && (s = ms()) !== o && pi() !== o && vi() !== o && pi() !== o && (a = us()) !== o ? (t = function (r, t, e, n, u) {
                    if (t && (Wi.add(`insert::${ t.db }::${ t.table }`), t.as = null), n) {
                      let r = t && t.table || null;
                      n.forEach(t => Vi.add(`insert::${ r }::${ t }`));
                    }
                    return {
                      tableList: Array.from(Wi),
                      columnList: Bi(Vi),
                      ast: {
                        type: r,
                        table: [t],
                        columns: n,
                        values: u,
                        partition: e
                      }
                    };
                  }(t, n, u, s, a), r = t) : (Qu = r, r = o)) : (Qu = r, r = o)) : (Qu = r, r = o);
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n, u;
                  r = Qu, (t = ss()) !== o && pi() !== o && oa() !== o && pi() !== o && (e = Zo()) !== o && pi() !== o ? ((n = os()) === o && (n = null), n !== o && pi() !== o && (u = us()) !== o ? (s = t, i = n, c = u, (a = e) && (Wi.add(`insert::${ a.db }::${ a.table }`), Vi.add(`insert::${ a.table }::(.*)`), a.as = null), t = {
                    tableList: Array.from(Wi),
                    columnList: Bi(Vi),
                    ast: {
                      type: s,
                      table: [a],
                      columns: null,
                      values: c,
                      partition: i
                    }
                  }, r = t) : (Qu = r, r = o)) : (Qu = r, r = o);
                  var s, a, i, c;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n, u, s;
                  t = Qu, (e = function () {
                    var t, e, n, u;
                    t = Qu, 'delete' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(pe));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) !== o && pi() !== o ? ((n = Wo()) === o && (n = null), n !== o && pi() !== o && (u = Po()) !== o && pi() !== o ? ((s = Jo()) === o && (s = null), s !== o ? (e = function (r, t, e) {
                    if (t && t.forEach(r => {
                        r.table && Wi.add(`delete::${ r.db }::${ r.table }`), Vi.add(`delete::${ r.table }::(.*)`);
                      }), null === r && 1 === t.length) {
                      const e = t[0];
                      r = [{
                          db: e.db,
                          table: e.table,
                          as: e.as,
                          addition: !0
                        }];
                    }
                    return {
                      tableList: Array.from(Wi),
                      columnList: Bi(Vi),
                      ast: {
                        type: 'delete',
                        table: r,
                        from: t,
                        where: e
                      }
                    };
                  }(n, u, s), t = e) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) === o && (t = fo()) === o && (t = function () {
                  var r, t;
                  r = [], t = mi();
                  for (; t !== o;)
                    r.push(t), t = mi();
                  return r;
                }()), t;
              }
              function bo() {
                var r, t, e, n, u, s, a, i, c, l;
                if (r = Qu, (t = go()) !== o) {
                  for (e = [], n = Qu, (u = pi()) !== o && (s = ba()) !== o && (a = pi()) !== o ? ((i = Ea()) === o && (i = null), i !== o && (c = pi()) !== o && (l = go()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c,
                      l
                    ] : (Qu = n, n = o)) : (Qu = n, n = o); n !== o;)
                    e.push(n), n = Qu, (u = pi()) !== o && (s = ba()) !== o && (a = pi()) !== o ? ((i = Ea()) === o && (i = null), i !== o && (c = pi()) !== o && (l = go()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c,
                      l
                    ] : (Qu = n, n = o)) : (Qu = n, n = o);
                  e !== o && (n = pi()) !== o ? ((u = Qo()) === o && (u = null), u !== o && (s = pi()) !== o ? ((a = es()) === o && (a = null), a !== o ? r = t = function (r, t, e, n) {
                    let u = r;
                    for (let r = 0; r < t.length; r++)
                      u._next = t[r][5], u.union = t[r][3] ? 'union all' : 'union', u = u._next;
                    return e && (r._orderby = e), n && (r._limit = n), {
                      tableList: Array.from(Wi),
                      columnList: Bi(Vi),
                      ast: r
                    };
                  }(t, e, u, a) : (Qu = r, r = o)) : (Qu = r, r = o)) : (Qu = r, r = o);
                } else
                  Qu = r, r = o;
                return r;
              }
              function Lo() {
                var r, t, e, n, u, s, a, c;
                if (r = Qu, (t = Co()) !== o) {
                  for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (c = Co()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (Qu = n, n = o); n !== o;)
                    e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (c = Co()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      c
                    ] : (Qu = n, n = o);
                  e !== o ? r = t = i(t, e) : (Qu = r, r = o);
                } else
                  Qu = r, r = o;
                return r;
              }
              function Co() {
                var r, t, e, n;
                return r = Qu, (t = Ts()) !== o && pi() !== o ? ((e = pa()) === o && (e = wa()), e === o && (e = null), e !== o ? r = t = {
                  column: t,
                  order: (n = e) && n.toLowerCase() || 'asc'
                } : (Qu = r, r = o)) : (Qu = r, r = o), r;
              }
              function po() {
                var r, t, e, n, u, s, a, i;
                if (r = Qu, fi() !== o)
                  if (pi() !== o)
                    if ((t = wo()) !== o) {
                      for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = wo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o); n !== o;)
                        e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = wo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o);
                      e !== o && (n = pi()) !== o ? ((u = ci()) === o && (u = null), u !== o && (s = pi()) !== o && (a = vi()) !== o ? r = f(t, e) : (Qu = r, r = o)) : (Qu = r, r = o);
                    } else
                      Qu = r, r = o;
                  else
                    Qu = r, r = o;
                else
                  Qu = r, r = o;
                return r;
              }
              function wo() {
                var t;
                return (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u, s, a;
                    t = Qu, (e = mo()) === o && (e = null);
                    e !== o && pi() !== o ? ('primary key' === r.substr(Qu, 11).toLowerCase() ? (n = r.substr(Qu, 11), Qu += 11) : (n = o, 0 === no && io(D)), n !== o && pi() !== o ? ((u = Go()) === o && (u = null), u !== o && pi() !== o && (s = xo()) !== o && pi() !== o ? ((a = jo()) === o && (a = null), a !== o ? (c = n, l = u, f = s, v = a, e = {
                      constraint: (i = e) && i.constraint,
                      definition: f,
                      constraint_type: c.toLowerCase(),
                      keyword: i && i.keyword,
                      index_type: l,
                      resource: 'constraint',
                      index_options: v
                    }, t = e) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o);
                    var i, c, l, f, v;
                    return t;
                  }()) === o && (t = function () {
                    var r, t, e, n, u, s, a, i;
                    r = Qu, (t = mo()) === o && (t = null);
                    t !== o && pi() !== o && (e = oi()) !== o && pi() !== o ? ((n = ni()) === o && (n = ui()), n === o && (n = null), n !== o && pi() !== o ? ((u = Ns()) === o && (u = null), u !== o && pi() !== o ? ((s = Go()) === o && (s = null), s !== o && pi() !== o && (a = xo()) !== o && pi() !== o ? ((i = jo()) === o && (i = null), i !== o ? (l = e, f = n, v = u, b = s, d = a, L = i, t = {
                      constraint: (c = t) && c.constraint,
                      definition: d,
                      constraint_type: f && `${ l.toLowerCase() } ${ f.toLowerCase() }` || l.toLowerCase(),
                      keyword: c && c.keyword,
                      index_type: b,
                      index: v,
                      resource: 'constraint',
                      index_options: L
                    }, r = t) : (Qu = r, r = o)) : (Qu = r, r = o)) : (Qu = r, r = o)) : (Qu = r, r = o)) : (Qu = r, r = o);
                    var c, l, f, v, b, d, L;
                    return r;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a;
                    t = Qu, (e = mo()) === o && (e = null);
                    e !== o && pi() !== o ? ('foreign key' === r.substr(Qu, 11).toLowerCase() ? (n = r.substr(Qu, 11), Qu += 11) : (n = o, 0 === no && io(P)), n !== o && pi() !== o ? ((u = Ns()) === o && (u = null), u !== o && pi() !== o && (s = xo()) !== o && pi() !== o ? ((a = Io()) === o && (a = null), a !== o ? (c = n, l = u, f = s, v = a, e = {
                      constraint: (i = e) && i.constraint,
                      definition: f,
                      constraint_type: c,
                      keyword: i && i.keyword,
                      index: l,
                      resource: 'constraint',
                      reference_definition: v
                    }, t = e) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o);
                    var i, c, l, f, v;
                    return t;
                  }()) === o && (t = So());
                  return t;
                }()) === o && (t = Eo()) === o && (t = yo()) === o && (t = To()), t;
              }
              function Eo() {
                var t, e, n, u, s, a, i, c, l, f, T, m, S, I, N, R, _, g, O, U, x, M, D, k, $;
                return t = Qu, (e = Ts()) !== o && pi() !== o && (n = Di()) !== o && (u = pi()) !== o ? ((s = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    t = Qu, 'not null' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(ne));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'not null',
                    value: 'not null'
                  });
                  return e;
                }()) === o && (s = Ds()), s === o && (s = null), s !== o && (a = pi()) !== o ? ((i = function () {
                  var r, t;
                  r = Qu, Ks() !== o && pi() !== o ? ((t = Ms()) === o && (t = vs()), t !== o ? r = {
                    type: 'default',
                    value: t
                  } : (Qu = r, r = o)) : (Qu = r, r = o);
                  return r;
                }()) === o && (i = null), i !== o && pi() !== o ? ((c = So()) === o && (c = null), c !== o ? ((l = function () {
                  var t, e, n, u, s, a, i, c, l;
                  t = Qu, 'unique' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(b));
                  e === o && (e = Qu, 'primary' === r.substr(Qu, 7).toLowerCase() ? (n = r.substr(Qu, 7), Qu += 7) : (n = o, 0 === no && io(d)), n !== o && (u = pi()) !== o ? ('key' === r.substr(Qu, 3).toLowerCase() ? (s = r.substr(Qu, 3), Qu += 3) : (s = o, 0 === no && io(L)), s !== o ? e = n = [
                    n,
                    u,
                    s
                  ] : (Qu = e, e = o)) : (Qu = e, e = o));
                  e === o && (e = null);
                  e !== o && (n = pi()) !== o ? ((u = function () {
                    var t, e, n, u, s, a, i, c, l, f, b, d;
                    t = Qu, 'identity' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(v));
                    e !== o && pi() !== o ? (n = Qu, (u = fi()) !== o && (s = pi()) !== o && (a = Hs()) !== o && (i = pi()) !== o && (c = ci()) !== o && (l = pi()) !== o && (f = Hs()) !== o && (b = pi()) !== o && (d = vi()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c,
                      l,
                      f,
                      b,
                      d
                    ] : (Qu = n, n = o), n === o && (n = null), n !== o ? (e = {
                      keyword: 'identity',
                      seed: (L = n) && L[2],
                      increment: L && L[6],
                      parentheses: !!L
                    }, t = e) : (Qu = t, t = o)) : (Qu = t, t = o);
                    var L;
                    return t;
                  }()) === o && (u = null), u !== o && (s = pi()) !== o ? ('unique' === r.substr(Qu, 6).toLowerCase() ? (a = r.substr(Qu, 6), Qu += 6) : (a = o, 0 === no && io(b)), a === o && (a = Qu, 'primary' === r.substr(Qu, 7).toLowerCase() ? (i = r.substr(Qu, 7), Qu += 7) : (i = o, 0 === no && io(d)), i !== o && (c = pi()) !== o ? ('key' === r.substr(Qu, 3).toLowerCase() ? (l = r.substr(Qu, 3), Qu += 3) : (l = o, 0 === no && io(L)), l !== o ? a = i = [
                    i,
                    c,
                    l
                  ] : (Qu = a, a = o)) : (Qu = a, a = o)), a === o && (a = null), a !== o ? (e = function (r, t, e) {
                    let n = r || e;
                    return n && Array.isArray(n) && (n = `${ n[0].toLowerCase() } ${ n[2].toLowerCase() }`), {
                      identity: t,
                      unique_or_primary: n
                    };
                  }(e, u, a), t = e) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) === o && (l = null), l !== o && pi() !== o ? ((f = hi()) === o && (f = null), f !== o && pi() !== o ? ((T = function () {
                  var t, e;
                  t = Qu, function () {
                    var t, e, n, u;
                    t = Qu, 'collate' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(ur));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'COLLATE' : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }() !== o && pi() !== o && (e = Rs()) !== o ? t = {
                    type: 'collate',
                    value: e
                  } : (Qu = t, t = o);
                  return t;
                }()) === o && (T = null), T !== o && pi() !== o ? ((m = function () {
                  var t, e, n;
                  t = Qu, 'column_format' === r.substr(Qu, 13).toLowerCase() ? (e = r.substr(Qu, 13), Qu += 13) : (e = o, 0 === no && io(C));
                  e !== o && pi() !== o ? ('fixed' === r.substr(Qu, 5).toLowerCase() ? (n = r.substr(Qu, 5), Qu += 5) : (n = o, 0 === no && io(p)), n === o && ('dynamic' === r.substr(Qu, 7).toLowerCase() ? (n = r.substr(Qu, 7), Qu += 7) : (n = o, 0 === no && io(w)), n === o && ('default' === r.substr(Qu, 7).toLowerCase() ? (n = r.substr(Qu, 7), Qu += 7) : (n = o, 0 === no && io(E)))), n !== o ? (e = function (r, t) {
                    return {
                      type: 'column_format',
                      value: t.toLowerCase()
                    };
                  }(0, n), t = e) : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) === o && (m = null), m !== o && pi() !== o ? ((S = function () {
                  var t, e, n;
                  t = Qu, 'storage' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(h));
                  e !== o && pi() !== o ? ('disk' === r.substr(Qu, 4).toLowerCase() ? (n = r.substr(Qu, 4), Qu += 4) : (n = o, 0 === no && io(A)), n === o && ('memory' === r.substr(Qu, 6).toLowerCase() ? (n = r.substr(Qu, 6), Qu += 6) : (n = o, 0 === no && io(y))), n !== o ? (e = {
                    type: 'storage',
                    value: n.toLowerCase()
                  }, t = e) : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) === o && (S = null), S !== o && pi() !== o ? ((I = Io()) === o && (I = null), I !== o ? (N = e, R = n, _ = s, g = i, O = c, U = l, x = f, M = T, D = m, k = S, $ = I, Vi.add(`create::${ N.table }::${ N.column }`), _ && !_.value && (_.value = 'null'), t = e = {
                  column: N,
                  definition: R,
                  nullable: _,
                  default_val: g,
                  auto_increment: U && U.identity,
                  unique_or_primary: U && U.unique_or_primary,
                  check: O,
                  comment: x,
                  collate: M,
                  column_format: D,
                  storage: k,
                  reference_definition: $,
                  resource: 'column'
                }) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, (e = Ts()) !== o && pi() !== o ? (n = Qu, (u = aa()) !== o && (s = pi()) !== o && (a = vs()) !== o ? n = u = [
                  u,
                  s,
                  a
                ] : (Qu = n, n = o), n === o && (n = null), n !== o ? t = e = function (r, t) {
                  return t && (r.as = t[2]), {
                    column: r,
                    resource: 'column'
                  };
                }(e, n) : (Qu = t, t = o)) : (Qu = t, t = o)), t;
              }
              function ho() {
                var t, e, n, u, s, a, i, c, l, f, v;
                return t = Qu, Ja() !== o && pi() !== o && (e = Rs()) !== o && pi() !== o ? ((n = aa()) === o && (n = null), n !== o && pi() !== o && (u = Di()) !== o && pi() !== o ? (s = Qu, (a = ri()) !== o && (i = pi()) !== o && (c = vs()) !== o ? s = a = [
                  a,
                  i,
                  c
                ] : (Qu = s, s = o), s === o && (s = null), s !== o ? (f = u, v = s, t = {
                  at: '@',
                  name: e,
                  as: (l = n) && l[0].toLowerCase(),
                  prefix: f,
                  keyword: 'variable',
                  definition: v && v[2]
                }) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, Ja() !== o && pi() !== o && (e = Rs()) !== o && pi() !== o ? ('cursor' === r.substr(Qu, 6).toLowerCase() ? (n = r.substr(Qu, 6), Qu += 6) : (n = o, 0 === no && io(T)), n !== o ? t = function (r, t) {
                  return {
                    at: '@',
                    name: t,
                    keyword: 'cursor',
                    prefix: 'cursor'
                  };
                }(0, e) : (Qu = t, t = o)) : (Qu = t, t = o)), t;
              }
              function Ao() {
                var t;
                return (t = function () {
                  var r, t, e;
                  r = Qu, (t = ti()) !== o && pi() !== o && (e = So()) !== o ? (n = e, t = {
                    action: 'add',
                    ...n,
                    type: 'alter'
                  }, r = t) : (Qu = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n;
                  r = Qu, (t = Zs()) !== o && pi() !== o && (e = ai()) !== o && pi() !== o && (n = Rs()) !== o ? (t = {
                    action: 'drop',
                    constraint: n,
                    keyword: e.toLowerCase(),
                    resource: 'constraint',
                    type: 'alter'
                  }, r = t) : (Qu = r, r = o);
                  return r;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Qu, La() !== o && pi() !== o ? ('check' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(x)), e !== o && pi() !== o ? ('check' === r.substr(Qu, 5).toLowerCase() ? (n = r.substr(Qu, 5), Qu += 5) : (n = o, 0 === no && io(x)), n !== o && pi() !== o && ai() !== o && pi() !== o && (u = Rs()) !== o ? t = {
                    action: 'with',
                    constraint: u,
                    keyword: 'check check constraint',
                    resource: 'constraint',
                    type: 'alter'
                  } : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = Qu, 'nocheck' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(M));
                  e !== o && pi() !== o && ai() !== o && pi() !== o && (n = Rs()) !== o ? t = e = {
                    action: 'nocheck',
                    keyword: 'constraint',
                    constraint: n,
                    resource: 'constraint',
                    type: 'alter'
                  } : (Qu = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var r, t, e, n;
                  r = Qu, (t = ti()) === o && (t = Js());
                  t !== o && pi() !== o ? ((e = ei()) === o && (e = null), e !== o && pi() !== o && (n = Eo()) !== o ? (u = e, s = n, t = {
                    action: t.toLowerCase(),
                    ...s,
                    keyword: u,
                    resource: 'column',
                    type: 'alter'
                  }, r = t) : (Qu = r, r = o)) : (Qu = r, r = o);
                  var u, s;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = Qu, Zs() !== o && pi() !== o ? ((t = ei()) === o && (t = null), t !== o && pi() !== o && (e = Ts()) !== o ? r = {
                    action: 'drop',
                    column: e,
                    keyword: t,
                    resource: 'column',
                    type: 'alter'
                  } : (Qu = r, r = o)) : (Qu = r, r = o);
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = Qu, (t = ti()) !== o && pi() !== o && (e = yo()) !== o ? (n = e, t = {
                    action: 'add',
                    type: 'alter',
                    ...n
                  }, r = t) : (Qu = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = Qu, (t = ti()) !== o && pi() !== o && (e = To()) !== o ? (n = e, t = {
                    action: 'add',
                    type: 'alter',
                    ...n
                  }, r = t) : (Qu = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n;
                  r = Qu, (t = na()) !== o && pi() !== o ? ((e = qs()) === o && (e = aa()), e === o && (e = null), e !== o && pi() !== o && (n = Ss()) !== o ? (s = n, t = {
                    action: 'rename',
                    type: 'alter',
                    resource: 'table',
                    keyword: (u = e) && u[0].toLowerCase(),
                    table: s
                  }, r = t) : (Qu = r, r = o)) : (Qu = r, r = o);
                  var u, s;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = Qu, 'algorithm' === r.substr(Qu, 9).toLowerCase() ? (e = r.substr(Qu, 9), Qu += 9) : (e = o, 0 === no && io(S));
                  e !== o && pi() !== o && ri() !== o && pi() !== o ? ('default' === r.substr(Qu, 7).toLowerCase() ? (n = r.substr(Qu, 7), Qu += 7) : (n = o, 0 === no && io(E)), n === o && ('instant' === r.substr(Qu, 7).toLowerCase() ? (n = r.substr(Qu, 7), Qu += 7) : (n = o, 0 === no && io(I)), n === o && ('inplace' === r.substr(Qu, 7).toLowerCase() ? (n = r.substr(Qu, 7), Qu += 7) : (n = o, 0 === no && io(N)), n === o && ('copy' === r.substr(Qu, 4).toLowerCase() ? (n = r.substr(Qu, 4), Qu += 4) : (n = o, 0 === no && io(R))))), n !== o ? t = e = {
                    type: 'alter',
                    keyword: 'algorithm',
                    resource: 'algorithm',
                    algorithm: n
                  } : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = Qu, 'lock' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(_));
                  e !== o && pi() !== o && ri() !== o && pi() !== o ? ('default' === r.substr(Qu, 7).toLowerCase() ? (n = r.substr(Qu, 7), Qu += 7) : (n = o, 0 === no && io(E)), n === o && ('none' === r.substr(Qu, 4).toLowerCase() ? (n = r.substr(Qu, 4), Qu += 4) : (n = o, 0 === no && io(g)), n === o && ('shared' === r.substr(Qu, 6).toLowerCase() ? (n = r.substr(Qu, 6), Qu += 6) : (n = o, 0 === no && io(O)), n === o && ('exclusive' === r.substr(Qu, 9).toLowerCase() ? (n = r.substr(Qu, 9), Qu += 9) : (n = o, 0 === no && io(U))))), n !== o ? t = e = {
                    type: 'alter',
                    keyword: 'lock',
                    resource: 'lock',
                    lock: n
                  } : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()), t;
              }
              function yo() {
                var r, t, e, n, u, s, a, i;
                return r = Qu, (t = ni()) === o && (t = ui()), t !== o && pi() !== o ? ((e = Ns()) === o && (e = null), e !== o && pi() !== o ? ((n = Go()) === o && (n = null), n !== o && pi() !== o && (u = xo()) !== o && pi() !== o ? ((s = jo()) === o && (s = null), s !== o && pi() !== o ? (a = n, i = s, r = t = {
                  index: e,
                  definition: u,
                  keyword: t.toLowerCase(),
                  index_type: a,
                  resource: 'index',
                  index_options: i
                }) : (Qu = r, r = o)) : (Qu = r, r = o)) : (Qu = r, r = o)) : (Qu = r, r = o), r;
              }
              function To() {
                var t, e, n, u, s, a, i, c, l;
                return t = Qu, (e = function () {
                  var t, e, n, u;
                  t = Qu, 'fulltext' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(Nu));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'FULLTEXT' : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) === o && (e = function () {
                  var t, e, n, u;
                  t = Qu, 'spatial' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(Ru));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'SPATIAL' : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()), e !== o && pi() !== o ? ((n = ni()) === o && (n = ui()), n === o && (n = null), n !== o && pi() !== o ? ((u = Ns()) === o && (u = null), u !== o && pi() !== o && (s = xo()) !== o && pi() !== o ? ((a = jo()) === o && (a = null), a !== o && pi() !== o ? (i = e, l = a, t = e = {
                  index: u,
                  definition: s,
                  keyword: (c = n) && `${ i.toLowerCase() } ${ c.toLowerCase() }` || i.toLowerCase(),
                  index_options: l,
                  resource: 'index'
                }) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function mo() {
                var r, t, e, n;
                return r = Qu, (t = ai()) !== o && pi() !== o ? ((e = Ss()) === o && (e = null), e !== o ? (n = e, r = t = {
                  keyword: t.toLowerCase(),
                  constraint: n
                }) : (Qu = r, r = o)) : (Qu = r, r = o), r;
              }
              function So() {
                var t, e, n, u, s, a, i, c, l, f, v, b, d;
                return t = Qu, (e = mo()) === o && (e = null), e !== o && pi() !== o ? ('check' === r.substr(Qu, 5).toLowerCase() ? (n = r.substr(Qu, 5), Qu += 5) : (n = o, 0 === no && io(x)), n !== o && pi() !== o ? (u = Qu, 'not' === r.substr(Qu, 3).toLowerCase() ? (s = r.substr(Qu, 3), Qu += 3) : (s = o, 0 === no && io(k)), s !== o && (a = pi()) !== o ? ('for' === r.substr(Qu, 3).toLowerCase() ? (i = r.substr(Qu, 3), Qu += 3) : (i = o, 0 === no && io($)), i !== o && (c = pi()) !== o ? ('replication' === r.substr(Qu, 11).toLowerCase() ? (l = r.substr(Qu, 11), Qu += 11) : (l = o, 0 === no && io(F)), l !== o && (f = pi()) !== o ? u = s = [
                  s,
                  a,
                  i,
                  c,
                  l,
                  f
                ] : (Qu = u, u = o)) : (Qu = u, u = o)) : (Qu = u, u = o), u === o && (u = null), u !== o && (s = fi()) !== o && (a = pi()) !== o && (i = vs()) !== o && (c = pi()) !== o && (l = vi()) !== o ? (v = e, b = u, d = i, t = e = {
                  constraint_type: n.toLowerCase(),
                  keyword: v && v.keyword,
                  constraint: v && v.constraint,
                  index_type: b && {
                    keyword: 'not for replication',
                    type: ''
                  },
                  definition: [d],
                  resource: 'constraint'
                }) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Io() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = Qu, (e = function () {
                  var t, e, n, u;
                  t = Qu, 'references' === r.substr(Qu, 10).toLowerCase() ? (e = r.substr(Qu, 10), Qu += 10) : (e = o, 0 === no && io(Uu));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'REFERENCES' : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) !== o && pi() !== o && (n = Wo()) !== o && pi() !== o && (u = xo()) !== o && pi() !== o ? ('match full' === r.substr(Qu, 10).toLowerCase() ? (s = r.substr(Qu, 10), Qu += 10) : (s = o, 0 === no && io(H)), s === o && ('match partial' === r.substr(Qu, 13).toLowerCase() ? (s = r.substr(Qu, 13), Qu += 13) : (s = o, 0 === no && io(G)), s === o && ('match simple' === r.substr(Qu, 12).toLowerCase() ? (s = r.substr(Qu, 12), Qu += 12) : (s = o, 0 === no && io(j)))), s === o && (s = null), s !== o && pi() !== o ? ((a = No()) === o && (a = null), a !== o && pi() !== o ? ((i = No()) === o && (i = null), i !== o ? (c = s, l = a, f = i, t = e = {
                  definition: u,
                  table: n,
                  keyword: e.toLowerCase(),
                  match: c && c.toLowerCase(),
                  on_delete: l,
                  on_update: f
                }) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function No() {
                var t, e, n, u;
                return t = Qu, 'on delete' === r.substr(Qu, 9).toLowerCase() ? (e = r.substr(Qu, 9), Qu += 9) : (e = o, 0 === no && io(Y)), e === o && ('on update' === r.substr(Qu, 9).toLowerCase() ? (e = r.substr(Qu, 9), Qu += 9) : (e = o, 0 === no && io(B))), e !== o && pi() !== o && (n = function () {
                  var e;
                  'restrict' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(X));
                  e === o && ('cascade' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(W)), e === o && ('set null' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(V)), e === o && ('no action' === r.substr(Qu, 9).toLowerCase() ? (e = r.substr(Qu, 9), Qu += 9) : (e = o, 0 === no && io(K)), e === o && ('set default' === r.substr(Qu, 11).toLowerCase() ? (e = r.substr(Qu, 11), Qu += 11) : (e = o, 0 === no && io(q))))));
                  e !== o && (e = e.toLowerCase());
                  return e;
                }()) !== o ? (u = n, t = e = {
                  type: e.toLowerCase(),
                  value: u
                }) : (Qu = t, t = o), t;
              }
              function Ro() {
                var t, e, n, u, s, a, i, c, l;
                return t = Qu, 'auto_increment' === r.substr(Qu, 14).toLowerCase() ? (e = r.substr(Qu, 14), Qu += 14) : (e = o, 0 === no && io(Z)), e === o && ('avg_row_length' === r.substr(Qu, 14).toLowerCase() ? (e = r.substr(Qu, 14), Qu += 14) : (e = o, 0 === no && io(z)), e === o && ('key_block_size' === r.substr(Qu, 14).toLowerCase() ? (e = r.substr(Qu, 14), Qu += 14) : (e = o, 0 === no && io(J)), e === o && ('max_rows' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(Q)), e === o && ('min_rows' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(rr)), e === o && ('stats_sample_pages' === r.substr(Qu, 18).toLowerCase() ? (e = r.substr(Qu, 18), Qu += 18) : (e = o, 0 === no && io(tr))))))), e !== o && pi() !== o ? ((n = ri()) === o && (n = null), n !== o && pi() !== o && (u = Hs()) !== o ? (c = n, l = u, t = e = {
                  keyword: e.toLowerCase(),
                  symbol: c,
                  value: l.value
                }) : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, (e = Ks()) === o && (e = null), e !== o && pi() !== o ? ('character set' === r.substr(Qu, 13).toLowerCase() ? (n = r.substr(Qu, 13), Qu += 13) : (n = o, 0 === no && io(er)), n === o && ('charset' === r.substr(Qu, 7).toLowerCase() ? (n = r.substr(Qu, 7), Qu += 7) : (n = o, 0 === no && io(nr)), n === o && ('collate' === r.substr(Qu, 7).toLowerCase() ? (n = r.substr(Qu, 7), Qu += 7) : (n = o, 0 === no && io(ur)))), n !== o && pi() !== o ? ((u = ri()) === o && (u = null), u !== o && (s = pi()) !== o && (a = Rs()) !== o ? t = e = function (r, t, e, n) {
                  return {
                    keyword: r && `${ r[0].toLowerCase() } ${ t.toLowerCase() }` || t.toLowerCase(),
                    symbol: e,
                    value: n
                  };
                }(e, n, u, a) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, (e = si()) === o && ('connection' === r.substr(Qu, 10).toLowerCase() ? (e = r.substr(Qu, 10), Qu += 10) : (e = o, 0 === no && io(or))), e !== o && pi() !== o ? ((n = ri()) === o && (n = null), n !== o && pi() !== o && (u = ks()) !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: `'${ e.value }'`
                  };
                }(e, n, u) : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, 'compression' === r.substr(Qu, 11).toLowerCase() ? (e = r.substr(Qu, 11), Qu += 11) : (e = o, 0 === no && io(sr)), e !== o && pi() !== o ? ((n = ri()) === o && (n = null), n !== o && pi() !== o ? (u = Qu, 39 === r.charCodeAt(Qu) ? (s = '\'', Qu++) : (s = o, 0 === no && io(ar)), s !== o ? ('zlib' === r.substr(Qu, 4).toLowerCase() ? (a = r.substr(Qu, 4), Qu += 4) : (a = o, 0 === no && io(ir)), a === o && ('lz4' === r.substr(Qu, 3).toLowerCase() ? (a = r.substr(Qu, 3), Qu += 3) : (a = o, 0 === no && io(cr)), a === o && ('none' === r.substr(Qu, 4).toLowerCase() ? (a = r.substr(Qu, 4), Qu += 4) : (a = o, 0 === no && io(g)))), a !== o ? (39 === r.charCodeAt(Qu) ? (i = '\'', Qu++) : (i = o, 0 === no && io(ar)), i !== o ? u = s = [
                  s,
                  a,
                  i
                ] : (Qu = u, u = o)) : (Qu = u, u = o)) : (Qu = u, u = o), u !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: e.join('').toUpperCase()
                  };
                }(e, n, u) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, 'engine' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(lr)), e !== o && pi() !== o ? ((n = ri()) === o && (n = null), n !== o && pi() !== o && (u = Rs()) !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: e.toUpperCase()
                  };
                }(e, n, u) : (Qu = t, t = o)) : (Qu = t, t = o))))), t;
              }
              function _o() {
                var t, e, n, u, s;
                return t = Qu, (e = Ko()) !== o && pi() !== o && (n = function () {
                  var t, e, n;
                  return t = Qu, 'read' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(fr)), e !== o && pi() !== o ? ('local' === r.substr(Qu, 5).toLowerCase() ? (n = r.substr(Qu, 5), Qu += 5) : (n = o, 0 === no && io(vr)), n === o && (n = null), n !== o ? t = e = {
                    type: 'read',
                    suffix: n && 'local'
                  } : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, 'low_priority' === r.substr(Qu, 12).toLowerCase() ? (e = r.substr(Qu, 12), Qu += 12) : (e = o, 0 === no && io(br)), e === o && (e = null), e !== o && pi() !== o ? ('write' === r.substr(Qu, 5).toLowerCase() ? (n = r.substr(Qu, 5), Qu += 5) : (n = o, 0 === no && io(dr)), n !== o ? t = e = {
                    type: 'write',
                    prefix: e && 'low_priority'
                  } : (Qu = t, t = o)) : (Qu = t, t = o)), t;
                }()) !== o ? (u = e, s = n, Wi.add(`lock::${ u.db }::${ u.table }`), t = e = {
                  table: u,
                  lock_type: s
                }) : (Qu = t, t = o), t;
              }
              function go() {
                var t, e, n, u, s, a, i;
                return (t = Mo()) === o && (t = Qu, e = Qu, 40 === r.charCodeAt(Qu) ? (n = '(', Qu++) : (n = o, 0 === no && io(Lr)), n !== o && (u = pi()) !== o && (s = go()) !== o && (a = pi()) !== o ? (41 === r.charCodeAt(Qu) ? (i = ')', Qu++) : (i = o, 0 === no && io(Cr)), i !== o ? e = n = [
                  n,
                  u,
                  s,
                  a,
                  i
                ] : (Qu = e, e = o)) : (Qu = e, e = o), e !== o && (e = {
                  ...e[2],
                  parentheses_symbol: !0
                }), t = e), t;
              }
              function Oo() {
                var t, e, n, u, s, a, i, c, l;
                if (t = Qu, La() !== o)
                  if (pi() !== o)
                    if ((e = Uo()) !== o) {
                      for (n = [], u = Qu, (s = pi()) !== o && (a = ci()) !== o && (i = pi()) !== o && (c = Uo()) !== o ? u = s = [
                          s,
                          a,
                          i,
                          c
                        ] : (Qu = u, u = o); u !== o;)
                        n.push(u), u = Qu, (s = pi()) !== o && (a = ci()) !== o && (i = pi()) !== o && (c = Uo()) !== o ? u = s = [
                          s,
                          a,
                          i,
                          c
                        ] : (Qu = u, u = o);
                      n !== o ? t = f(e, n) : (Qu = t, t = o);
                    } else
                      Qu = t, t = o;
                  else
                    Qu = t, t = o;
                else
                  Qu = t, t = o;
                return t === o && (t = Qu, pi() !== o && La() !== o && (e = pi()) !== o && (n = function () {
                  var t, e, n, u;
                  t = Qu, 'RECURSIVE' === r.substr(Qu, 9) ? (e = 'RECURSIVE', Qu += 9) : (e = o, 0 === no && io(Ee));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) !== o && (u = pi()) !== o && (s = Uo()) !== o ? ((l = s).recursive = !0, t = [l]) : (Qu = t, t = o)), t;
              }
              function Uo() {
                var r, t, e, n;
                return r = Qu, (t = Rs()) !== o && pi() !== o ? ((e = xo()) === o && (e = null), e !== o && pi() !== o && aa() !== o && pi() !== o && fi() !== o && pi() !== o && (n = bo()) !== o && pi() !== o && vi() !== o ? r = t = {
                  name: t,
                  stmt: n,
                  columns: e
                } : (Qu = r, r = o)) : (Qu = r, r = o), r;
              }
              function xo() {
                var r, t, e, n, u, s, a, i;
                if (r = Qu, fi() !== o)
                  if (pi() !== o)
                    if ((t = Ns()) !== o) {
                      for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = Ns()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o); n !== o;)
                        e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = Ns()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o);
                      e !== o && (n = pi()) !== o && (u = vi()) !== o ? r = f(t, e) : (Qu = r, r = o);
                    } else
                      Qu = r, r = o;
                  else
                    Qu = r, r = o;
                else
                  Qu = r, r = o;
                return r;
              }
              function Mo() {
                var t, e, n, u, s, a, i, c, l, f, v, b;
                return t = Qu, pi() !== o ? ((e = Oo()) === o && (e = null), e !== o && pi() !== o && function () {
                  var t, e, n, u;
                  t = Qu, 'select' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(ve));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }() !== o && pi() !== o ? ((n = function () {
                  var r, t, e, n, u, s;
                  if (r = Qu, (t = Do()) !== o) {
                    for (e = [], n = Qu, (u = pi()) !== o && (s = Do()) !== o ? n = u = [
                        u,
                        s
                      ] : (Qu = n, n = o); n !== o;)
                      e.push(n), n = Qu, (u = pi()) !== o && (s = Do()) !== o ? n = u = [
                        u,
                        s
                      ] : (Qu = n, n = o);
                    e !== o ? (t = function (r, t) {
                      const e = [r];
                      for (let r = 0, n = t.length; r < n; ++r)
                        e.push(t[r][1]);
                      return e;
                    }(t, e), r = t) : (Qu = r, r = o);
                  } else
                    Qu = r, r = o;
                  return r;
                }()) === o && (n = null), n !== o && pi() !== o ? ((u = function () {
                  var t, e, n, u;
                  t = Qu, (e = function () {
                    var t, e, n, u;
                    t = Qu, 'top' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(se));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) !== o && pi() !== o && (n = Gs()) !== o && pi() !== o ? ('percent' === r.substr(Qu, 7).toLowerCase() ? (u = r.substr(Qu, 7), Qu += 7) : (u = o, 0 === no && io(pr)), u === o && (u = null), u !== o ? (e = {
                    value: n,
                    percent: (s = u) && s.toLowerCase()
                  }, t = e) : (Qu = t, t = o)) : (Qu = t, t = o);
                  var s;
                  return t;
                }()) === o && (u = null), u !== o && pi() !== o ? ((s = ha()) === o && (s = null), s !== o && pi() !== o && (a = ko()) !== o && pi() !== o ? ((i = Po()) === o && (i = null), i !== o && pi() !== o ? ((c = Jo()) === o && (c = null), c !== o && pi() !== o ? ((l = function () {
                  var t, e, n;
                  t = Qu, (e = function () {
                    var t, e, n, u;
                    t = Qu, 'group' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(Be));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) !== o && pi() !== o && Ca() !== o && pi() !== o && (n = is()) !== o ? (e = n.value, t = e) : (Qu = t, t = o);
                  return t;
                }()) === o && (l = null), l !== o && pi() !== o ? ((f = function () {
                  var t, e;
                  t = Qu, function () {
                    var t, e, n, u;
                    t = Qu, 'having' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(Ve));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }() !== o && pi() !== o && (e = vs()) !== o ? t = e : (Qu = t, t = o);
                  return t;
                }()) === o && (f = null), f !== o && pi() !== o ? ((v = Qo()) === o && (v = null), v !== o && pi() !== o ? ((b = es()) === o && (b = null), b !== o ? t = function (r, t, e, n, u, o, s, a, i, c, l) {
                  return o && o.forEach(r => r.table && Wi.add(`select::${ r.db }::${ r.table }`)), {
                    with: r,
                    type: 'select',
                    options: t,
                    distinct: n,
                    columns: u,
                    from: o,
                    where: s,
                    groupby: a,
                    having: i,
                    top: e,
                    orderby: c,
                    limit: l
                  };
                }(e, n, u, s, a, i, c, l, f, v, b) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Do() {
                var e;
                return (e = function () {
                  var t;
                  'sql_calc_found_rows' === r.substr(Qu, 19).toLowerCase() ? (t = r.substr(Qu, 19), Qu += 19) : (t = o, 0 === no && io(xu));
                  return t;
                }()) === o && ((e = function () {
                  var t;
                  'sql_cache' === r.substr(Qu, 9).toLowerCase() ? (t = r.substr(Qu, 9), Qu += 9) : (t = o, 0 === no && io(Mu));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_no_cache' === r.substr(Qu, 12).toLowerCase() ? (t = r.substr(Qu, 12), Qu += 12) : (t = o, 0 === no && io(Du));
                  return t;
                }()), e === o && (e = function () {
                  var t;
                  'sql_big_result' === r.substr(Qu, 14).toLowerCase() ? (t = r.substr(Qu, 14), Qu += 14) : (t = o, 0 === no && io($u));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_small_result' === r.substr(Qu, 16).toLowerCase() ? (t = r.substr(Qu, 16), Qu += 16) : (t = o, 0 === no && io(ku));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_buffer_result' === r.substr(Qu, 17).toLowerCase() ? (t = r.substr(Qu, 17), Qu += 17) : (t = o, 0 === no && io(Fu));
                  return t;
                }())), e !== o && (e = e), e;
              }
              function ko() {
                var r, t, e, n, u, s, a, i, c, l;
                if (r = Qu, (t = Ea()) === o && (t = Qu, (e = li()) !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = li())), t !== o) {
                  for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = $o()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o); n !== o;)
                    e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = $o()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o);
                  e !== o ? (c = t, l = e, Vi.add('select::null::(.*)'), r = t = l && l.length > 0 ? (c[0] = {
                    expr: {
                      type: 'column_ref',
                      table: null,
                      column: '*'
                    },
                    as: null
                  }, Gi(c[0], l)) : c[0]) : (Qu = r, r = o);
                } else
                  Qu = r, r = o;
                if (r === o)
                  if (r = Qu, (t = $o()) !== o) {
                    for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = $o()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (Qu = n, n = o); n !== o;)
                      e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = $o()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (Qu = n, n = o);
                    e !== o ? r = t = f(t, e) : (Qu = r, r = o);
                  } else
                    Qu = r, r = o;
                return r;
              }
              function $o() {
                var r, t, e, n;
                return r = Qu, (t = Ss()) !== o && pi() !== o && (e = ii()) !== o && pi() !== o && li() !== o ? (n = t, Vi.add(`select::${ n }::(.*)`), r = t = {
                  expr: {
                    type: 'column_ref',
                    table: n,
                    column: '*'
                  },
                  as: null
                }) : (Qu = r, r = o), r === o && (r = Qu, (t = vs()) !== o && pi() !== o ? ((e = Fo()) === o && (e = null), e !== o ? r = t = {
                  expr: t,
                  as: e
                } : (Qu = r, r = o)) : (Qu = r, r = o)), r;
              }
              function Fo() {
                var r, t, e;
                return r = Qu, (t = aa()) !== o && pi() !== o && (e = function () {
                  var r, t;
                  r = Qu, (t = Rs()) !== o ? (function (r) {
                    if (!0 === $i[r.toUpperCase()])
                      throw new Error('Error: ' + JSON.stringify(r) + ' is a reserved word, can not as alias clause');
                    return !1;
                  }(t) ? o : void 0) !== o ? r = t = t : (Qu = r, r = o) : (Qu = r, r = o);
                  r === o && (r = Qu, (t = Is()) !== o && (t = t), r = t);
                  return r;
                }()) !== o ? r = t = e : (Qu = r, r = o), r === o && (r = Qu, (t = aa()) === o && (t = null), t !== o && pi() !== o && (e = Ss()) !== o ? r = t = e : (Qu = r, r = o)), r;
              }
              function Po() {
                var t, e;
                return t = Qu, function () {
                  var t, e, n, u;
                  t = Qu, 'from' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(Se));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }() !== o && pi() !== o && (e = Wo()) !== o ? t = e : (Qu = t, t = o), t;
              }
              function Ho() {
                var r, t, e;
                return r = Qu, (t = Zo()) !== o && pi() !== o && qs() !== o && pi() !== o && (e = Zo()) !== o ? r = t = [
                  t,
                  e
                ] : (Qu = r, r = o), r;
              }
              function Go() {
                var t, e, n;
                return t = Qu, (e = da()) !== o && pi() !== o ? ('btree' === r.substr(Qu, 5).toLowerCase() ? (n = r.substr(Qu, 5), Qu += 5) : (n = o, 0 === no && io(wr)), n === o && ('hash' === r.substr(Qu, 4).toLowerCase() ? (n = r.substr(Qu, 4), Qu += 4) : (n = o, 0 === no && io(Er))), n !== o ? t = e = {
                  keyword: 'using',
                  type: n.toLowerCase()
                } : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, 'nonclustered' === r.substr(Qu, 12).toLowerCase() ? (e = r.substr(Qu, 12), Qu += 12) : (e = o, 0 === no && io(hr)), e !== o && (e = { keyword: e.toLowerCase() }), t = e), t;
              }
              function jo() {
                var r, t, e, n, u, s;
                if (r = Qu, (t = Xo()) !== o) {
                  for (e = [], n = Qu, (u = pi()) !== o && (s = Xo()) !== o ? n = u = [
                      u,
                      s
                    ] : (Qu = n, n = o); n !== o;)
                    e.push(n), n = Qu, (u = pi()) !== o && (s = Xo()) !== o ? n = u = [
                      u,
                      s
                    ] : (Qu = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    const e = [r];
                    for (let r = 0; r < t.length; r++)
                      e.push(t[r][1]);
                    return e;
                  }(t, e) : (Qu = r, r = o);
                } else
                  Qu = r, r = o;
                return r;
              }
              function Yo() {
                var r, t, e, n;
                return r = Qu, (t = Hs()) !== o && pi() !== o && (e = qs()) !== o && pi() !== o && Hs() !== o ? (n = t, r = t = {
                  type: 'range',
                  symbol: e[0],
                  start: n,
                  end: n
                }) : (Qu = r, r = o), r === o && (r = Hs()), r;
              }
              function Bo() {
                var t, e, n;
                return t = Qu, la() !== o && pi() !== o ? ('partitions' === r.substr(Qu, 10).toLowerCase() ? (e = r.substr(Qu, 10), Qu += 10) : (e = o, 0 === no && io(Ar)), e !== o && pi() !== o && fi() !== o && pi() !== o && (n = function () {
                  var r, t, e, n, u, s, a, c;
                  if (r = Qu, (t = Yo()) !== o) {
                    for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (c = Yo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (Qu = n, n = o); n !== o;)
                      e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (c = Yo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        c
                      ] : (Qu = n, n = o);
                    e !== o ? r = t = i(t, e) : (Qu = r, r = o);
                  } else
                    Qu = r, r = o;
                  return r;
                }()) !== o && pi() !== o && vi() !== o ? t = {
                  type: 'on partitions',
                  partitions: n
                } : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Xo() {
                var t, e, n, u, s, a;
                return t = Qu, (e = function () {
                  var t, e, n, u;
                  t = Qu, 'key_block_size' === r.substr(Qu, 14).toLowerCase() ? (e = r.substr(Qu, 14), Qu += 14) : (e = o, 0 === no && io(J));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'KEY_BLOCK_SIZE' : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) !== o && pi() !== o ? ((n = ri()) === o && (n = null), n !== o && pi() !== o && (u = Hs()) !== o ? t = e = yr(e, n, u) : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, 'fillfactor' === r.substr(Qu, 10).toLowerCase() ? (e = r.substr(Qu, 10), Qu += 10) : (e = o, 0 === no && io(Tr)), e === o && ('max_duration' === r.substr(Qu, 12).toLowerCase() ? (e = r.substr(Qu, 12), Qu += 12) : (e = o, 0 === no && io(mr)), e === o && ('maxdop' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(Sr)))), e !== o && pi() !== o && (n = ri()) !== o && pi() !== o && (u = Hs()) !== o ? t = e = yr(e, n, u) : (Qu = t, t = o), t === o && (t = Go()) === o && (t = Qu, 'with' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(Ir)), e !== o && pi() !== o ? ('parser' === r.substr(Qu, 6).toLowerCase() ? (n = r.substr(Qu, 6), Qu += 6) : (n = o, 0 === no && io(Nr)), n !== o && pi() !== o && (u = Rs()) !== o ? t = e = {
                  type: 'with parser',
                  expr: u
                } : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, 'visible' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(Rr)), e === o && ('invisible' === r.substr(Qu, 9).toLowerCase() ? (e = r.substr(Qu, 9), Qu += 9) : (e = o, 0 === no && io(_r))), e !== o && (e = {
                  type: (a = e).toLowerCase(),
                  expr: a.toLowerCase()
                }), (t = e) === o && (t = Qu, 'pad_index' === r.substr(Qu, 9).toLowerCase() ? (e = r.substr(Qu, 9), Qu += 9) : (e = o, 0 === no && io(gr)), e === o && ('sort_in_tempdb' === r.substr(Qu, 14).toLowerCase() ? (e = r.substr(Qu, 14), Qu += 14) : (e = o, 0 === no && io(Or)), e === o && ('ignore_dup_key' === r.substr(Qu, 14).toLowerCase() ? (e = r.substr(Qu, 14), Qu += 14) : (e = o, 0 === no && io(Ur)), e === o && ('statistics_norecompute' === r.substr(Qu, 22).toLowerCase() ? (e = r.substr(Qu, 22), Qu += 22) : (e = o, 0 === no && io(xr)), e === o && ('statistics_incremental' === r.substr(Qu, 22).toLowerCase() ? (e = r.substr(Qu, 22), Qu += 22) : (e = o, 0 === no && io(Mr)), e === o && ('drop_existing' === r.substr(Qu, 13).toLowerCase() ? (e = r.substr(Qu, 13), Qu += 13) : (e = o, 0 === no && io(Dr)), e === o && ('online' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(kr)), e === o && ('resumable' === r.substr(Qu, 9).toLowerCase() ? (e = r.substr(Qu, 9), Qu += 9) : (e = o, 0 === no && io($r)), e === o && ('allow_row_locks' === r.substr(Qu, 15).toLowerCase() ? (e = r.substr(Qu, 15), Qu += 15) : (e = o, 0 === no && io(Fr)), e === o && ('allow_page_locks' === r.substr(Qu, 16).toLowerCase() ? (e = r.substr(Qu, 16), Qu += 16) : (e = o, 0 === no && io(Pr)), e === o && ('optimize_for_sequential_key' === r.substr(Qu, 27).toLowerCase() ? (e = r.substr(Qu, 27), Qu += 27) : (e = o, 0 === no && io(Hr)))))))))))), e !== o && pi() !== o && (n = ri()) !== o && pi() !== o ? ((u = la()) === o && (u = function () {
                  var t, e, n, u;
                  t = Qu, 'off' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(Ue));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()), u !== o ? t = e = function (r, t, e) {
                  return {
                    type: r.toLowerCase(),
                    symbol: t,
                    expr: {
                      type: 'origin',
                      value: e[0]
                    }
                  };
                }(e, n, u) : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, 'data_compression' === r.substr(Qu, 16).toLowerCase() ? (e = r.substr(Qu, 16), Qu += 16) : (e = o, 0 === no && io(Gr)), e !== o && pi() !== o && (n = ri()) !== o && pi() !== o ? ('none' === r.substr(Qu, 4).toLowerCase() ? (u = r.substr(Qu, 4), Qu += 4) : (u = o, 0 === no && io(g)), u === o && ('row' === r.substr(Qu, 3).toLowerCase() ? (u = r.substr(Qu, 3), Qu += 3) : (u = o, 0 === no && io(jr)), u === o && ('PAGE' === r.substr(Qu, 4) ? (u = 'PAGE', Qu += 4) : (u = o, 0 === no && io(Yr)))), u !== o && pi() !== o ? ((s = Bo()) === o && (s = null), s !== o ? t = e = function (r, t, e, n) {
                  return {
                    type: r.toLowerCase(),
                    symbol: t,
                    expr: {
                      value: e,
                      on: n
                    }
                  };
                }(e, n, u, s) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = hi())))))), t;
              }
              function Wo() {
                var r, t, e, n, u, s;
                if (r = Qu, (t = Ko()) !== o) {
                  for (e = [], n = Vo(); n !== o;)
                    e.push(n), n = Vo();
                  e !== o ? (u = t, (s = e).unshift(u), s.forEach(r => {
                    const {
                      table: t,
                      as: e
                    } = r;
                    Ki[t] = t, e && (Ki[e] = t);
                  }), r = t = s) : (Qu = r, r = o);
                } else
                  Qu = r, r = o;
                return r;
              }
              function Vo() {
                var r, t, e;
                return r = Qu, pi() !== o && (t = ci()) !== o && pi() !== o && (e = Ko()) !== o ? r = e : (Qu = r, r = o), r === o && (r = Qu, pi() !== o && (t = function () {
                  var r, t, e, n, u, s, a, i, c, l, f;
                  if (r = Qu, (t = qo()) !== o)
                    if (pi() !== o)
                      if ((e = Ko()) !== o)
                        if (pi() !== o)
                          if ((n = da()) !== o)
                            if (pi() !== o)
                              if (fi() !== o)
                                if (pi() !== o)
                                  if ((u = Rs()) !== o) {
                                    for (s = [], a = Qu, (i = pi()) !== o && (c = ci()) !== o && (l = pi()) !== o && (f = Rs()) !== o ? a = i = [
                                        i,
                                        c,
                                        l,
                                        f
                                      ] : (Qu = a, a = o); a !== o;)
                                      s.push(a), a = Qu, (i = pi()) !== o && (c = ci()) !== o && (l = pi()) !== o && (f = Rs()) !== o ? a = i = [
                                        i,
                                        c,
                                        l,
                                        f
                                      ] : (Qu = a, a = o);
                                    s !== o && (a = pi()) !== o && (i = vi()) !== o ? (v = t, d = u, L = s, (b = e).join = v, b.using = Gi(d, L), r = t = b) : (Qu = r, r = o);
                                  } else
                                    Qu = r, r = o;
                                else
                                  Qu = r, r = o;
                              else
                                Qu = r, r = o;
                            else
                              Qu = r, r = o;
                          else
                            Qu = r, r = o;
                        else
                          Qu = r, r = o;
                      else
                        Qu = r, r = o;
                    else
                      Qu = r, r = o;
                  else
                    Qu = r, r = o;
                  var v, b, d, L;
                  r === o && (r = Qu, (t = qo()) !== o && pi() !== o && (e = Ko()) !== o && pi() !== o ? ((n = zo()) === o && (n = null), n !== o ? (t = function (r, t, e) {
                    return t.join = r, t.on = e, t;
                  }(t, e, n), r = t) : (Qu = r, r = o)) : (Qu = r, r = o), r === o && (r = Qu, (t = qo()) !== o && pi() !== o && (e = fi()) !== o && pi() !== o && (n = bo()) !== o && pi() !== o && vi() !== o && pi() !== o ? ((u = Fo()) === o && (u = null), u !== o && (s = pi()) !== o ? ((a = zo()) === o && (a = null), a !== o ? (t = function (r, t, e, n) {
                    return t.parentheses = !0, {
                      expr: t,
                      as: e,
                      join: r,
                      on: n
                    };
                  }(t, n, u, a), r = t) : (Qu = r, r = o)) : (Qu = r, r = o)) : (Qu = r, r = o)));
                  return r;
                }()) !== o ? r = t : (Qu = r, r = o)), r;
              }
              function Ko() {
                var t, e, n, u, s, a;
                return t = Qu, (e = function () {
                  var t;
                  'dual' === r.substr(Qu, 4).toLowerCase() ? (t = r.substr(Qu, 4), Qu += 4) : (t = o, 0 === no && io(Tu));
                  return t;
                }()) !== o && (e = { type: 'dual' }), (t = e) === o && (t = Qu, (e = Zo()) !== o && pi() !== o ? ((n = Fo()) === o && (n = null), n !== o ? (a = n, t = e = 'var' === (s = e).type ? (s.as = a, s) : {
                  db: s.db,
                  table: s.table,
                  as: a
                }) : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, (e = fi()) !== o && pi() !== o && (n = bo()) !== o && pi() !== o && vi() !== o && pi() !== o ? ((u = Fo()) === o && (u = null), u !== o ? t = e = function (r, t) {
                  return r.parentheses = !0, {
                    expr: r,
                    as: t
                  };
                }(n, u) : (Qu = t, t = o)) : (Qu = t, t = o))), t;
              }
              function qo() {
                var t, e, n, u;
                return t = Qu, (e = function () {
                  var t, e, n, u;
                  t = Qu, 'left' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(xe));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) !== o && (n = pi()) !== o ? ((u = va()) === o && (u = null), u !== o && pi() !== o && fa() !== o ? t = e = 'LEFT JOIN' : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, (e = function () {
                  var t, e, n, u;
                  t = Qu, 'right' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(Me));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) !== o && (n = pi()) !== o ? ((u = va()) === o && (u = null), u !== o && pi() !== o && fa() !== o ? t = e = 'RIGHT JOIN' : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, (e = function () {
                  var t, e, n, u;
                  t = Qu, 'full' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(De));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) !== o && (n = pi()) !== o ? ((u = va()) === o && (u = null), u !== o && pi() !== o && fa() !== o ? t = e = 'FULL JOIN' : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, e = Qu, (n = function () {
                  var t, e, n, u;
                  t = Qu, 'inner' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(ke));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) !== o && (u = pi()) !== o ? e = n = [
                  n,
                  u
                ] : (Qu = e, e = o), e === o && (e = null), e !== o && (n = fa()) !== o ? t = e = 'INNER JOIN' : (Qu = t, t = o)))), t;
              }
              function Zo() {
                var r, t, e, n, u, s, a, i, c;
                return r = Qu, (t = Ss()) !== o ? (e = Qu, (n = pi()) !== o && (u = ii()) !== o && (s = pi()) !== o && (a = Ss()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (Qu = e, e = o), e !== o ? (n = Qu, (u = pi()) !== o && (s = ii()) !== o && (a = pi()) !== o && (i = Ss()) !== o ? n = u = [
                  u,
                  s,
                  a,
                  i
                ] : (Qu = n, n = o), n !== o ? r = t = function (r, t, e) {
                  const n = {
                    db: null,
                    table: r
                  };
                  return null !== e && (n.db = `${ r }.${ t[3] }`, n.table = e[3]), n;
                }(t, e, n) : (Qu = r, r = o)) : (Qu = r, r = o)) : (Qu = r, r = o), r === o && (r = Qu, (t = Ss()) !== o ? (e = Qu, (n = pi()) !== o && (u = ii()) !== o && (s = pi()) !== o && (a = Ss()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (Qu = e, e = o), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  const e = {
                    db: null,
                    table: r
                  };
                  return null !== t && (e.db = r, e.table = t[3]), e;
                }(t, e) : (Qu = r, r = o)) : (Qu = r, r = o), r === o && (r = Qu, (t = xi()) !== o && ((c = t).db = null, c.table = c.name, t = c), r = t)), r;
              }
              function zo() {
                var r, t;
                return r = Qu, la() !== o && pi() !== o && (t = vs()) !== o ? r = t : (Qu = r, r = o), r;
              }
              function Jo() {
                var t, e;
                return t = Qu, function () {
                  var t, e, n, u;
                  t = Qu, 'where' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(Ye));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }() !== o && pi() !== o && (e = vs()) !== o ? t = e : (Qu = t, t = o), t;
              }
              function Qo() {
                var t, e;
                return t = Qu, function () {
                  var t, e, n, u;
                  t = Qu, 'order' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(We));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }() !== o && pi() !== o && Ca() !== o && pi() !== o && (e = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = Qu, (t = rs()) !== o) {
                    for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = rs()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (Qu = n, n = o); n !== o;)
                      e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = rs()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (Qu = n, n = o);
                    e !== o ? (t = f(t, e), r = t) : (Qu = r, r = o);
                  } else
                    Qu = r, r = o;
                  return r;
                }()) !== o ? t = e : (Qu = t, t = o), t;
              }
              function rs() {
                var r, t, e;
                return r = Qu, (t = vs()) !== o && pi() !== o ? ((e = wa()) === o && (e = pa()), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  const e = {
                    expr: r,
                    type: 'ASC'
                  };
                  return 'DESC' === t && (e.type = 'DESC'), e;
                }(t, e) : (Qu = r, r = o)) : (Qu = r, r = o), r;
              }
              function ts() {
                var r;
                return (r = Hs()) === o && (r = Us()), r;
              }
              function es() {
                var t, e, n, u, s, a;
                return t = Qu, function () {
                  var t, e, n, u;
                  t = Qu, 'limit' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(Ke));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }() !== o && pi() !== o && (e = ts()) !== o && pi() !== o ? (n = Qu, (u = ci()) === o && (u = function () {
                  var t, e, n, u;
                  t = Qu, 'offset' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(qe));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'OFFSET' : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()), u !== o && (s = pi()) !== o && (a = ts()) !== o ? n = u = [
                  u,
                  s,
                  a
                ] : (Qu = n, n = o), n === o && (n = null), n !== o ? t = function (r, t) {
                  const e = [r];
                  return t && e.push(t[2]), {
                    seperator: t && t[0] && t[0].toLowerCase() || '',
                    value: e
                  };
                }(e, n) : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ns() {
                var t, e, n, u, s, a, i, c;
                return t = Qu, e = Qu, (n = Ss()) !== o && (u = pi()) !== o && (s = ii()) !== o ? e = n = [
                  n,
                  u,
                  s
                ] : (Qu = e, e = o), e === o && (e = null), e !== o && (n = pi()) !== o && (u = Ns()) !== o && (s = pi()) !== o ? (61 === r.charCodeAt(Qu) ? (a = '=', Qu++) : (a = o, 0 === no && io(Br)), a !== o && pi() !== o && (i = ws()) !== o ? t = e = {
                  column: u,
                  value: i,
                  table: (c = e) && c[0]
                } : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function us() {
                var t;
                return (t = function () {
                  var t, e;
                  t = Qu, function () {
                    var t, e, n, u;
                    t = Qu, 'values' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(Ge));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }() !== o && pi() !== o && (e = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = Qu, (t = as()) !== o) {
                      for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = as()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o); n !== o;)
                        e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = as()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o);
                      e !== o ? (t = f(t, e), r = t) : (Qu = r, r = o);
                    } else
                      Qu = r, r = o;
                    return r;
                  }()) !== o ? t = e : (Qu = t, t = o);
                  return t;
                }()) === o && (t = Mo()), t;
              }
              function os() {
                var r, t, e, n, u, s, a, i, c;
                if (r = Qu, ua() !== o)
                  if (pi() !== o)
                    if ((t = fi()) !== o)
                      if (pi() !== o)
                        if ((e = Rs()) !== o) {
                          for (n = [], u = Qu, (s = pi()) !== o && (a = ci()) !== o && (i = pi()) !== o && (c = Rs()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (Qu = u, u = o); u !== o;)
                            n.push(u), u = Qu, (s = pi()) !== o && (a = ci()) !== o && (i = pi()) !== o && (c = Rs()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (Qu = u, u = o);
                          n !== o && (u = pi()) !== o && (s = vi()) !== o ? r = Gi(e, n) : (Qu = r, r = o);
                        } else
                          Qu = r, r = o;
                      else
                        Qu = r, r = o;
                    else
                      Qu = r, r = o;
                  else
                    Qu = r, r = o;
                else
                  Qu = r, r = o;
                return r === o && (r = Qu, ua() !== o && pi() !== o && (t = as()) !== o ? r = t : (Qu = r, r = o)), r;
              }
              function ss() {
                var t, e;
                return t = Qu, (e = function () {
                  var t, e, n, u;
                  t = Qu, 'insert' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(we));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) !== o && (e = 'insert'), (t = e) === o && (t = Qu, (e = ea()) !== o && (e = 'replace'), t = e), t;
              }
              function as() {
                var r, t;
                return r = Qu, fi() !== o && pi() !== o && (t = is()) !== o && pi() !== o && vi() !== o ? r = t : (Qu = r, r = o), r;
              }
              function is() {
                var r, t, e, n, u, s, a, i;
                if (r = Qu, (t = vs()) !== o) {
                  for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = vs()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o); n !== o;)
                    e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = vs()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    const e = { type: 'expr_list' };
                    return e.value = Gi(r, t), e;
                  }(t, e) : (Qu = r, r = o);
                } else
                  Qu = r, r = o;
                return r;
              }
              function cs() {
                var t, e, n;
                return t = Qu, function () {
                  var t, e, n, u;
                  t = Qu, 'interval' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(eu));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'INTERVAL' : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }() !== o && pi() !== o && (e = vs()) !== o && pi() !== o && (n = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u;
                    t = Qu, 'year' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(nu));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'YEAR' : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = Qu, 'month' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(uu));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'MONTH' : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = Qu, 'day' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(ou));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'DAY' : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = Qu, 'hour' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(su));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'HOUR' : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = Qu, 'minute' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(au));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'MINUTE' : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = Qu, 'second' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(iu));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'SECOND' : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }());
                  return t;
                }()) !== o ? t = {
                  type: 'interval',
                  expr: e,
                  unit: n.toLowerCase()
                } : (Qu = t, t = o), t;
              }
              function ls() {
                var t, e, n, u, s, a, i, c, l;
                if (t = Qu, _a() !== o)
                  if (pi() !== o)
                    if ((e = vs()) === o && (e = null), e !== o)
                      if (pi() !== o) {
                        if (n = [], (u = fs()) !== o)
                          for (; u !== o;)
                            n.push(u), u = fs();
                        else
                          n = o;
                        n !== o && (u = pi()) !== o ? ((s = function () {
                          var t, e;
                          t = Qu, function () {
                            var t, e, n, u;
                            t = Qu, 'else' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(pn));
                            e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                              e,
                              n
                            ] : (Qu = t, t = o)) : (Qu = t, t = o);
                            return t;
                          }() !== o && pi() !== o && (e = vs()) !== o ? t = {
                            type: 'else',
                            result: e
                          } : (Qu = t, t = o);
                          return t;
                        }()) === o && (s = null), s !== o && pi() !== o && function () {
                          var t, e, n, u;
                          t = Qu, 'end' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(wn));
                          e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                            e,
                            n
                          ] : (Qu = t, t = o)) : (Qu = t, t = o);
                          return t;
                        }() !== o && pi() !== o ? ((a = _a()) === o && (a = null), a !== o ? (i = e, c = n, (l = s) && c.push(l), t = {
                          type: 'case',
                          expr: i || null,
                          args: c
                        }) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o);
                      } else
                        Qu = t, t = o;
                    else
                      Qu = t, t = o;
                  else
                    Qu = t, t = o;
                else
                  Qu = t, t = o;
                return t;
              }
              function fs() {
                var t, e, n;
                return t = Qu, function () {
                  var t, e, n, u;
                  t = Qu, 'when' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(Ln));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }() !== o && pi() !== o && (e = vs()) !== o && pi() !== o && function () {
                  var t, e, n, u;
                  t = Qu, 'then' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(Cn));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }() !== o && pi() !== o && (n = vs()) !== o ? t = {
                  type: 'when',
                  cond: e,
                  result: n
                } : (Qu = t, t = o), t;
              }
              function vs() {
                var r;
                return (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = Qu, (t = ys()) !== o) {
                    if (e = [], n = Qu, (u = pi()) !== o && (s = Ci()) !== o && (a = pi()) !== o && (i = ys()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (Qu = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = Qu, (u = pi()) !== o && (s = Ci()) !== o && (a = pi()) !== o && (i = ys()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (Qu = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = ji(t, e), r = t) : (Qu = r, r = o);
                  } else
                    Qu = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s;
                  if (r = Qu, (t = Es()) !== o) {
                    if (e = [], n = Qu, (u = pi()) !== o && (s = ys()) !== o ? n = u = [
                        u,
                        s
                      ] : (Qu = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = Qu, (u = pi()) !== o && (s = ys()) !== o ? n = u = [
                          u,
                          s
                        ] : (Qu = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = Fi(t, e[0][1]), r = t) : (Qu = r, r = o);
                  } else
                    Qu = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = Qu, (t = bs()) !== o) {
                    for (e = [], n = Qu, (u = wi()) !== o && (s = Ra()) !== o && (a = pi()) !== o && (i = bs()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (Qu = n, n = o); n !== o;)
                      e.push(n), n = Qu, (u = wi()) !== o && (s = Ra()) !== o && (a = pi()) !== o && (i = bs()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (Qu = n, n = o);
                    e !== o ? (t = Xr(t, e), r = t) : (Qu = r, r = o);
                  } else
                    Qu = r, r = o;
                  return r;
                }()) === o && (r = go()), r;
              }
              function bs() {
                var r, t, e, n, u, s, a, i;
                if (r = Qu, (t = ds()) !== o) {
                  for (e = [], n = Qu, (u = wi()) !== o && (s = Na()) !== o && (a = pi()) !== o && (i = ds()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o); n !== o;)
                    e.push(n), n = Qu, (u = wi()) !== o && (s = Na()) !== o && (a = pi()) !== o && (i = ds()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o);
                  e !== o ? r = t = Xr(t, e) : (Qu = r, r = o);
                } else
                  Qu = r, r = o;
                return r;
              }
              function ds() {
                var t, e, n, u, s;
                return (t = Ls()) === o && (t = function () {
                  var r, t, e;
                  r = Qu, (t = function () {
                    var r, t, e, n, u;
                    r = Qu, t = Qu, (e = Ia()) !== o && (n = pi()) !== o && (u = Sa()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (Qu = t, t = o);
                    t !== o && (t = Vr(t));
                    (r = t) === o && (r = Sa());
                    return r;
                  }()) !== o && pi() !== o && fi() !== o && pi() !== o && (e = bo()) !== o && pi() !== o && vi() !== o ? (n = t, (u = e).parentheses = !0, t = Fi(n, u), r = t) : (Qu = r, r = o);
                  var n, u;
                  return r;
                }()) === o && (t = Qu, (e = Ia()) === o && (e = Qu, 33 === r.charCodeAt(Qu) ? (n = '!', Qu++) : (n = o, 0 === no && io(Wr)), n !== o ? (u = Qu, no++, 61 === r.charCodeAt(Qu) ? (s = '=', Qu++) : (s = o, 0 === no && io(Br)), no--, s === o ? u = void 0 : (Qu = u, u = o), u !== o ? e = n = [
                  n,
                  u
                ] : (Qu = e, e = o)) : (Qu = e, e = o)), e !== o && (n = pi()) !== o && (u = ds()) !== o ? t = e = Fi('NOT', u) : (Qu = t, t = o)), t;
              }
              function Ls() {
                var r, t, e, n, u, s, a;
                return r = Qu, (t = ws()) !== o && pi() !== o ? (e = Qu, no++, n = Na(), no--, n === o ? e = void 0 : (Qu = e, e = o), e !== o && (n = pi()) !== o ? ((u = function () {
                  var r;
                  (r = function () {
                    var t, e, n, u, s, a;
                    t = [], e = Qu, (n = pi()) !== o && (u = Cs()) !== o && (s = pi()) !== o && (a = ws()) !== o ? e = n = [
                      n,
                      u,
                      s,
                      a
                    ] : (Qu = e, e = o);
                    if (e !== o)
                      for (; e !== o;)
                        t.push(e), e = Qu, (n = pi()) !== o && (u = Cs()) !== o && (s = pi()) !== o && (a = ws()) !== o ? e = n = [
                          n,
                          u,
                          s,
                          a
                        ] : (Qu = e, e = o);
                    else
                      t = o;
                    t !== o && (t = {
                      type: 'arithmetic',
                      tail: t
                    });
                    return t;
                  }()) === o && (r = function () {
                    var r, t, e, n;
                    r = Qu, (t = ps()) !== o && pi() !== o && (e = fi()) !== o && pi() !== o && (n = is()) !== o && pi() !== o && vi() !== o ? r = t = {
                      op: t,
                      right: n
                    } : (Qu = r, r = o);
                    r === o && (r = Qu, (t = ps()) !== o && pi() !== o ? ((e = xi()) === o && (e = ks()), e !== o ? (t = function (r, t) {
                      return {
                        op: r,
                        right: t
                      };
                    }(t, e), r = t) : (Qu = r, r = o)) : (Qu = r, r = o));
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e, n;
                    r = Qu, (t = function () {
                      var r, t, e, n, u;
                      r = Qu, t = Qu, (e = Ia()) !== o && (n = pi()) !== o && (u = Aa()) !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (Qu = t, t = o);
                      t !== o && (t = Vr(t));
                      (r = t) === o && (r = Aa());
                      return r;
                    }()) !== o && pi() !== o && (e = ws()) !== o && pi() !== o && Na() !== o && pi() !== o && (n = ws()) !== o ? r = t = {
                      op: t,
                      right: {
                        type: 'expr_list',
                        value: [
                          e,
                          n
                        ]
                      }
                    } : (Qu = r, r = o);
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e, n, u;
                    r = Qu, (t = Ta()) !== o && (e = pi()) !== o && (n = ws()) !== o ? r = t = {
                      op: 'IS',
                      right: n
                    } : (Qu = r, r = o);
                    r === o && (r = Qu, t = Qu, (e = Ta()) !== o && (n = pi()) !== o && (u = Ia()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (Qu = t, t = o), t !== o && (e = pi()) !== o && (n = ws()) !== o ? (t = function (r) {
                      return {
                        op: 'IS NOT',
                        right: r
                      };
                    }(n), r = t) : (Qu = r, r = o));
                    return r;
                  }()) === o && (r = function () {
                    var r, t, e;
                    r = Qu, (t = function () {
                      var r, t, e, n, u;
                      r = Qu, t = Qu, (e = Ia()) !== o && (n = pi()) !== o && (u = ma()) !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (Qu = t, t = o);
                      t !== o && (t = Vr(t));
                      (r = t) === o && (r = ma());
                      return r;
                    }()) !== o && pi() !== o && (e = Ls()) !== o ? r = t = {
                      op: t,
                      right: e
                    } : (Qu = r, r = o);
                    return r;
                  }());
                  return r;
                }()) === o && (u = null), u !== o ? (s = t, r = t = null === (a = u) ? s : 'arithmetic' === a.type ? ji(s, a.tail) : Pi(a.op, s, a.right)) : (Qu = r, r = o)) : (Qu = r, r = o)) : (Qu = r, r = o), r === o && (r = ks()) === o && (r = Ts()), r;
              }
              function Cs() {
                var t;
                return '>=' === r.substr(Qu, 2) ? (t = '>=', Qu += 2) : (t = o, 0 === no && io(Kr)), t === o && (62 === r.charCodeAt(Qu) ? (t = '>', Qu++) : (t = o, 0 === no && io(qr)), t === o && ('<=' === r.substr(Qu, 2) ? (t = '<=', Qu += 2) : (t = o, 0 === no && io(Zr)), t === o && ('<>' === r.substr(Qu, 2) ? (t = '<>', Qu += 2) : (t = o, 0 === no && io(zr)), t === o && (60 === r.charCodeAt(Qu) ? (t = '<', Qu++) : (t = o, 0 === no && io(Jr)), t === o && (61 === r.charCodeAt(Qu) ? (t = '=', Qu++) : (t = o, 0 === no && io(Br)), t === o && ('!=' === r.substr(Qu, 2) ? (t = '!=', Qu += 2) : (t = o, 0 === no && io(Qr)))))))), t;
              }
              function ps() {
                var r, t, e, n, u;
                return r = Qu, t = Qu, (e = Ia()) !== o && (n = pi()) !== o && (u = ya()) !== o ? t = e = [
                  e,
                  n,
                  u
                ] : (Qu = t, t = o), t !== o && (t = Vr(t)), (r = t) === o && (r = ya()), r;
              }
              function ws() {
                var r, t, e, n, u, s, a, i;
                if (r = Qu, (t = hs()) !== o) {
                  for (e = [], n = Qu, (u = pi()) !== o && (s = Es()) !== o && (a = pi()) !== o && (i = hs()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o); n !== o;)
                    e.push(n), n = Qu, (u = pi()) !== o && (s = Es()) !== o && (a = pi()) !== o && (i = hs()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o);
                  e !== o ? r = t = Xr(t, e) : (Qu = r, r = o);
                } else
                  Qu = r, r = o;
                return r;
              }
              function Es() {
                var t;
                return 43 === r.charCodeAt(Qu) ? (t = '+', Qu++) : (t = o, 0 === no && io(rt)), t === o && (45 === r.charCodeAt(Qu) ? (t = '-', Qu++) : (t = o, 0 === no && io(tt))), t;
              }
              function hs() {
                var r, t, e, n, u, s, a, i;
                if (r = Qu, (t = ys()) !== o) {
                  for (e = [], n = Qu, (u = pi()) !== o && (s = As()) !== o && (a = pi()) !== o && (i = ys()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o); n !== o;)
                    e.push(n), n = Qu, (u = pi()) !== o && (s = As()) !== o && (a = pi()) !== o && (i = ys()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o);
                  e !== o ? r = t = ji(t, e) : (Qu = r, r = o);
                } else
                  Qu = r, r = o;
                return r;
              }
              function As() {
                var t;
                return 42 === r.charCodeAt(Qu) ? (t = '*', Qu++) : (t = o, 0 === no && io(et)), t === o && (47 === r.charCodeAt(Qu) ? (t = '/', Qu++) : (t = o, 0 === no && io(nt)), t === o && (37 === r.charCodeAt(Qu) ? (t = '%', Qu++) : (t = o, 0 === no && io(ut)))), t;
              }
              function ys() {
                var t, e, n;
                return (t = function () {
                  var t, e, n, u, s, a, i;
                  t = Qu, (e = ga()) !== o && pi() !== o && fi() !== o && pi() !== o && (n = vs()) !== o && pi() !== o && aa() !== o && pi() !== o && (u = Di()) !== o && pi() !== o && (s = vi()) !== o ? t = e = {
                    type: 'cast',
                    expr: n,
                    symbol: 'as',
                    target: u
                  } : (Qu = t, t = o);
                  t === o && (t = Qu, (e = ga()) !== o && pi() !== o && fi() !== o && pi() !== o && (n = vs()) !== o && pi() !== o && aa() !== o && pi() !== o && (u = Da()) !== o && pi() !== o && (s = fi()) !== o && pi() !== o && (a = js()) !== o && pi() !== o && vi() !== o && pi() !== o && (i = vi()) !== o ? (e = function (r, t) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: 'DECIMAL(' + t + ')' }
                    };
                  }(n, a), t = e) : (Qu = t, t = o), t === o && (t = Qu, (e = ga()) !== o && pi() !== o && fi() !== o && pi() !== o && (n = vs()) !== o && pi() !== o && aa() !== o && pi() !== o && (u = Da()) !== o && pi() !== o && (s = fi()) !== o && pi() !== o && (a = js()) !== o && pi() !== o && ci() !== o && pi() !== o && (i = js()) !== o && pi() !== o && vi() !== o && pi() !== o && vi() !== o ? (e = function (r, t, e) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: 'DECIMAL(' + t + ', ' + e + ')' }
                    };
                  }(n, a, i), t = e) : (Qu = t, t = o), t === o && (t = Qu, (e = ga()) !== o && pi() !== o && fi() !== o && pi() !== o && (n = vs()) !== o && pi() !== o && aa() !== o && pi() !== o && (u = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = Qu, 'signed' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(_n));
                      e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'SIGNED' : (Qu = t, t = o)) : (Qu = t, t = o);
                      return t;
                    }()) === o && (t = ka());
                    return t;
                  }()) !== o && pi() !== o ? ((s = Fa()) === o && (s = null), s !== o && pi() !== o && (a = vi()) !== o ? (e = function (r, t, e) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: t + (e ? ' ' + e : '') }
                    };
                  }(n, u, s), t = e) : (Qu = t, t = o)) : (Qu = t, t = o))));
                  return t;
                }()) === o && (t = Ms()) === o && (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u;
                    t = Qu, (e = function () {
                      var t, e, n, u;
                      t = Qu, 'count' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(an));
                      e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'COUNT' : (Qu = t, t = o)) : (Qu = t, t = o);
                      return t;
                    }()) !== o && pi() !== o && fi() !== o && pi() !== o && (n = function () {
                      var t, e, n;
                      t = Qu, (e = function () {
                        var e;
                        42 === r.charCodeAt(Qu) ? (e = '*', Qu++) : (e = o, 0 === no && io(et));
                        e !== o && (e = {
                          type: 'star',
                          value: '*'
                        });
                        return e;
                      }()) !== o && (e = { expr: e });
                      (t = e) === o && (t = Qu, (e = ha()) === o && (e = null), e !== o && pi() !== o && (n = Ts()) !== o ? t = e = {
                        distinct: e,
                        expr: n
                      } : (Qu = t, t = o));
                      return t;
                    }()) !== o && pi() !== o && vi() !== o && pi() !== o && (u = xs()) !== o ? t = e = {
                      type: 'aggr_func',
                      name: e,
                      args: n,
                      over: u
                    } : (Qu = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n;
                    t = Qu, (e = function () {
                      var t;
                      (t = function () {
                        var t, e, n, u;
                        t = Qu, 'sum' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(fn));
                        e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'SUM' : (Qu = t, t = o)) : (Qu = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = Qu, 'max' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(cn));
                        e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'MAX' : (Qu = t, t = o)) : (Qu = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = Qu, 'min' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(ln));
                        e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'MIN' : (Qu = t, t = o)) : (Qu = t, t = o);
                        return t;
                      }()) === o && (t = function () {
                        var t, e, n, u;
                        t = Qu, 'avg' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(vn));
                        e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'AVG' : (Qu = t, t = o)) : (Qu = t, t = o);
                        return t;
                      }());
                      return t;
                    }()) !== o && pi() !== o && fi() !== o && pi() !== o && (n = ws()) !== o && pi() !== o && vi() !== o ? t = e = {
                      type: 'aggr_func',
                      name: e,
                      args: { expr: n }
                    } : (Qu = t, t = o);
                    return t;
                  }());
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s;
                  t = Qu, (e = gi()) !== o && pi() !== o && fi() !== o && pi() !== o ? ((n = is()) === o && (n = null), n !== o && pi() !== o && (u = vi()) !== o && pi() !== o ? ((s = xs()) === o && (s = null), s !== o ? t = e = {
                    type: 'function',
                    name: e,
                    args: n || {
                      type: 'expr_list',
                      value: []
                    },
                    over: s
                  } : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o);
                  t === o && (t = Qu, (e = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = Qu, 'current_date' === r.substr(Qu, 12).toLowerCase() ? (e = r.substr(Qu, 12), Qu += 12) : (e = o, 0 === no && io(tu));
                      e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'CURRENT_DATE' : (Qu = t, t = o)) : (Qu = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = Qu, 'current_time' === r.substr(Qu, 12).toLowerCase() ? (e = r.substr(Qu, 12), Qu += 12) : (e = o, 0 === no && io(cu));
                      e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'CURRENT_TIME' : (Qu = t, t = o)) : (Qu = t, t = o);
                      return t;
                    }()) === o && (t = za()) === o && (t = function () {
                      var t, e, n, u;
                      t = Qu, 'current_user' === r.substr(Qu, 12).toLowerCase() ? (e = r.substr(Qu, 12), Qu += 12) : (e = o, 0 === no && io(fu));
                      e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'CURRENT_USER' : (Qu = t, t = o)) : (Qu = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = Qu, 'user' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(ru));
                      e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'USER' : (Qu = t, t = o)) : (Qu = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = Qu, 'session_user' === r.substr(Qu, 12).toLowerCase() ? (e = r.substr(Qu, 12), Qu += 12) : (e = o, 0 === no && io(vu));
                      e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'SESSION_USER' : (Qu = t, t = o)) : (Qu = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = Qu, 'system_user' === r.substr(Qu, 11).toLowerCase() ? (e = r.substr(Qu, 11), Qu += 11) : (e = o, 0 === no && io(bu));
                      e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'SYSTEM_USER' : (Qu = t, t = o)) : (Qu = t, t = o);
                      return t;
                    }());
                    return t;
                  }()) !== o && pi() !== o && fi() !== o && pi() !== o && (n = vi()) !== o && pi() !== o ? ((u = xs()) === o && (u = null), u !== o ? (e = function (r, t) {
                    return {
                      type: 'function',
                      name: r,
                      args: {
                        type: 'expr_list',
                        value: []
                      },
                      over: t
                    };
                  }(e, u), t = e) : (Qu = t, t = o)) : (Qu = t, t = o));
                  return t;
                }()) === o && (t = ls()) === o && (t = cs()) === o && (t = Ts()) === o && (t = Us()) === o && (t = Qu, fi() !== o && pi() !== o && (e = vs()) !== o && pi() !== o && vi() !== o ? t = ot(e) : (Qu = t, t = o), t === o && (t = Qu, fi() !== o && pi() !== o && (e = is()) !== o && pi() !== o && vi() !== o ? ((n = e).parentheses = !0, t = n) : (Qu = t, t = o), t === o && (t = xi()))), t;
              }
              function Ts() {
                var r, t, e, n, u;
                return r = Qu, (t = Ss()) !== o && pi() !== o && ii() !== o && pi() !== o && (e = Ns()) !== o ? (n = t, u = e, Vi.add(`select::${ n }::${ u }`), r = t = {
                  type: 'column_ref',
                  table: n,
                  column: u
                }) : (Qu = r, r = o), r === o && (r = Qu, (t = Ns()) !== o && (t = function (r) {
                  return Vi.add('select::null::' + r), {
                    type: 'column_ref',
                    table: null,
                    column: r
                  };
                }(t)), r = t), r;
              }
              function ms() {
                var r, t, e, n, u, s, a, i;
                if (r = Qu, (t = Ns()) !== o) {
                  for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = Ns()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o); n !== o;)
                    e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = Ns()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o);
                  e !== o ? r = t = f(t, e) : (Qu = r, r = o);
                } else
                  Qu = r, r = o;
                return r;
              }
              function Ss() {
                var r, t;
                return r = Qu, (t = Rs()) !== o ? (st(t) ? o : void 0) !== o ? r = t = t : (Qu = r, r = o) : (Qu = r, r = o), r === o && (r = Qu, (t = Is()) !== o && (t = t), r = t), r;
              }
              function Is() {
                var t;
                return (t = function () {
                  var t, e, n, u;
                  t = Qu, 34 === r.charCodeAt(Qu) ? (e = '"', Qu++) : (e = o, 0 === no && io(at));
                  if (e !== o) {
                    if (n = [], it.test(r.charAt(Qu)) ? (u = r.charAt(Qu), Qu++) : (u = o, 0 === no && io(ct)), u !== o)
                      for (; u !== o;)
                        n.push(u), it.test(r.charAt(Qu)) ? (u = r.charAt(Qu), Qu++) : (u = o, 0 === no && io(ct));
                    else
                      n = o;
                    n !== o ? (34 === r.charCodeAt(Qu) ? (u = '"', Qu++) : (u = o, 0 === no && io(at)), u !== o ? (e = lt(n), t = e) : (Qu = t, t = o)) : (Qu = t, t = o);
                  } else
                    Qu = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Qu, 39 === r.charCodeAt(Qu) ? (e = '\'', Qu++) : (e = o, 0 === no && io(ar));
                  if (e !== o) {
                    if (n = [], ft.test(r.charAt(Qu)) ? (u = r.charAt(Qu), Qu++) : (u = o, 0 === no && io(vt)), u !== o)
                      for (; u !== o;)
                        n.push(u), ft.test(r.charAt(Qu)) ? (u = r.charAt(Qu), Qu++) : (u = o, 0 === no && io(vt));
                    else
                      n = o;
                    n !== o ? (39 === r.charCodeAt(Qu) ? (u = '\'', Qu++) : (u = o, 0 === no && io(ar)), u !== o ? (e = lt(n), t = e) : (Qu = t, t = o)) : (Qu = t, t = o);
                  } else
                    Qu = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Qu, 96 === r.charCodeAt(Qu) ? (e = '`', Qu++) : (e = o, 0 === no && io(bt));
                  if (e !== o) {
                    if (n = [], dt.test(r.charAt(Qu)) ? (u = r.charAt(Qu), Qu++) : (u = o, 0 === no && io(Lt)), u !== o)
                      for (; u !== o;)
                        n.push(u), dt.test(r.charAt(Qu)) ? (u = r.charAt(Qu), Qu++) : (u = o, 0 === no && io(Lt));
                    else
                      n = o;
                    n !== o ? (96 === r.charCodeAt(Qu) ? (u = '`', Qu++) : (u = o, 0 === no && io(bt)), u !== o ? (e = lt(n), t = e) : (Qu = t, t = o)) : (Qu = t, t = o);
                  } else
                    Qu = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Qu, 91 === r.charCodeAt(Qu) ? (e = '[', Qu++) : (e = o, 0 === no && io(Ct));
                  if (e !== o) {
                    if (n = [], pt.test(r.charAt(Qu)) ? (u = r.charAt(Qu), Qu++) : (u = o, 0 === no && io(wt)), u !== o)
                      for (; u !== o;)
                        n.push(u), pt.test(r.charAt(Qu)) ? (u = r.charAt(Qu), Qu++) : (u = o, 0 === no && io(wt));
                    else
                      n = o;
                    n !== o ? (93 === r.charCodeAt(Qu) ? (u = ']', Qu++) : (u = o, 0 === no && io(Et)), u !== o ? (e = lt(n), t = e) : (Qu = t, t = o)) : (Qu = t, t = o);
                  } else
                    Qu = t, t = o;
                  return t;
                }()), t;
              }
              function Ns() {
                var r, t;
                return r = Qu, (t = function () {
                  var r, t, e, n;
                  if (r = Qu, (t = _s()) !== o) {
                    for (e = [], n = Os(); n !== o;)
                      e.push(n), n = Os();
                    e !== o ? (t = ht(t, e), r = t) : (Qu = r, r = o);
                  } else
                    Qu = r, r = o;
                  return r;
                }()) !== o ? (st(t) ? o : void 0) !== o ? r = t = t : (Qu = r, r = o) : (Qu = r, r = o), r === o && (r = Is()), r;
              }
              function Rs() {
                var r, t, e, n;
                if (r = Qu, (t = _s()) !== o) {
                  for (e = [], n = gs(); n !== o;)
                    e.push(n), n = gs();
                  e !== o ? r = t = ht(t, e) : (Qu = r, r = o);
                } else
                  Qu = r, r = o;
                return r;
              }
              function _s() {
                var t;
                return At.test(r.charAt(Qu)) ? (t = r.charAt(Qu), Qu++) : (t = o, 0 === no && io(yt)), t;
              }
              function gs() {
                var t;
                return Tt.test(r.charAt(Qu)) ? (t = r.charAt(Qu), Qu++) : (t = o, 0 === no && io(mt)), t;
              }
              function Os() {
                var t;
                return St.test(r.charAt(Qu)) ? (t = r.charAt(Qu), Qu++) : (t = o, 0 === no && io(It)), t;
              }
              function Us() {
                var e, n, u;
                return e = Qu, 58 === r.charCodeAt(Qu) ? (n = ':', Qu++) : (n = o, 0 === no && io(Nt)), n !== o && (u = Rs()) !== o ? e = n = [
                  n,
                  u
                ] : (Qu = e, e = o), e !== o && (e = {
                  type: 'param',
                  value: e[1]
                }), e;
              }
              function xs() {
                var t, e, n;
                return t = Qu, function () {
                  var t, e, n, u;
                  t = Qu, 'over' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(Pe));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }() !== o && pi() !== o && fi() !== o && pi() !== o && ua() !== o && pi() !== o && Ca() !== o && pi() !== o && (e = ko()) !== o && pi() !== o ? ((n = Qo()) === o && (n = null), n !== o && pi() !== o && vi() !== o ? t = {
                  partitionby: e,
                  orderby: n
                } : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Ms() {
                var t;
                return (t = ks()) === o && (t = Hs()) === o && (t = function () {
                  var t, e;
                  t = Qu, (e = function () {
                    var t, e, n, u;
                    t = Qu, 'true' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(ue));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !0
                  });
                  (t = e) === o && (t = Qu, (e = function () {
                    var t, e, n, u;
                    t = Qu, 'false' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(ae));
                    e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (Qu = t, t = o)) : (Qu = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !1
                  }), t = e);
                  return t;
                }()) === o && (t = Ds()) === o && (t = function () {
                  var t, e, n, u, s, a, i;
                  t = Qu, (e = qa()) === o && (e = Xa()) === o && (e = Za()) === o && (e = Wa());
                  if (e !== o)
                    if (pi() !== o) {
                      if (n = Qu, 39 === r.charCodeAt(Qu) ? (u = '\'', Qu++) : (u = o, 0 === no && io(ar)), u !== o) {
                        for (s = [], a = Fs(); a !== o;)
                          s.push(a), a = Fs();
                        s !== o ? (39 === r.charCodeAt(Qu) ? (a = '\'', Qu++) : (a = o, 0 === no && io(ar)), a !== o ? n = u = [
                          u,
                          s,
                          a
                        ] : (Qu = n, n = o)) : (Qu = n, n = o);
                      } else
                        Qu = n, n = o;
                      n !== o ? (c = n, e = {
                        type: e.toLowerCase(),
                        value: c[1].join('')
                      }, t = e) : (Qu = t, t = o);
                    } else
                      Qu = t, t = o;
                  else
                    Qu = t, t = o;
                  var c;
                  t === o && (t = Qu, (e = za()) !== o && pi() !== o ? ((n = fi()) === o && (n = null), n !== o && (u = pi()) !== o ? ((s = vi()) === o && (s = null), s !== o ? (a = (a = function (r, t, e) {
                    if (t && e)
                      return !0;
                  }(0, n, s)) ? o : void 0) !== o && pi() !== o ? ('on update current_timestamp' === r.substr(Qu, 27).toLowerCase() ? (i = r.substr(Qu, 27), Qu += 27) : (i = o, 0 === no && io(_t)), i === o && (i = null), i !== o ? (e = function (r, t, e, n) {
                    return {
                      type: 'origin',
                      value: (n ? `${ r } ${ n }` : r).toLowerCase()
                    };
                  }(e, 0, 0, i), t = e) : (Qu = t, t = o)) : (Qu = t, t = o) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o));
                  return t;
                }()), t;
              }
              function Ds() {
                var e;
                return (e = function () {
                  var t, e, n, u;
                  t = Qu, 'null' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(ee));
                  e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) !== o && (e = {
                  type: 'null',
                  value: null
                }), e;
              }
              function ks() {
                var t, e, n, u, s;
                if (t = Qu, e = Qu, 39 === r.charCodeAt(Qu) ? (n = '\'', Qu++) : (n = o, 0 === no && io(ar)), n !== o) {
                  for (u = [], s = Fs(); s !== o;)
                    u.push(s), s = Fs();
                  u !== o ? (39 === r.charCodeAt(Qu) ? (s = '\'', Qu++) : (s = o, 0 === no && io(ar)), s !== o ? e = n = [
                    n,
                    u,
                    s
                  ] : (Qu = e, e = o)) : (Qu = e, e = o);
                } else
                  Qu = e, e = o;
                if (e !== o && (e = Rt(e)), (t = e) === o) {
                  if (t = Qu, e = Qu, 34 === r.charCodeAt(Qu) ? (n = '"', Qu++) : (n = o, 0 === no && io(at)), n !== o) {
                    for (u = [], s = $s(); s !== o;)
                      u.push(s), s = $s();
                    u !== o ? (34 === r.charCodeAt(Qu) ? (s = '"', Qu++) : (s = o, 0 === no && io(at)), s !== o ? e = n = [
                      n,
                      u,
                      s
                    ] : (Qu = e, e = o)) : (Qu = e, e = o);
                  } else
                    Qu = e, e = o;
                  e !== o && (e = Rt(e)), t = e;
                }
                return t;
              }
              function $s() {
                var t;
                return gt.test(r.charAt(Qu)) ? (t = r.charAt(Qu), Qu++) : (t = o, 0 === no && io(Ot)), t === o && (t = Ps()), t;
              }
              function Fs() {
                var t;
                return Ut.test(r.charAt(Qu)) ? (t = r.charAt(Qu), Qu++) : (t = o, 0 === no && io(xt)), t === o && (t = Ps()), t;
              }
              function Ps() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = Qu, '\\\'' === r.substr(Qu, 2) ? (e = '\\\'', Qu += 2) : (e = o, 0 === no && io(Mt)), e !== o && (e = '\''), (t = e) === o && (t = Qu, '\\"' === r.substr(Qu, 2) ? (e = '\\"', Qu += 2) : (e = o, 0 === no && io(Dt)), e !== o && (e = '"'), (t = e) === o && (t = Qu, '\\\\' === r.substr(Qu, 2) ? (e = '\\\\', Qu += 2) : (e = o, 0 === no && io(kt)), e !== o && (e = '\\'), (t = e) === o && (t = Qu, '\\/' === r.substr(Qu, 2) ? (e = '\\/', Qu += 2) : (e = o, 0 === no && io($t)), e !== o && (e = '/'), (t = e) === o && (t = Qu, '\\b' === r.substr(Qu, 2) ? (e = '\\b', Qu += 2) : (e = o, 0 === no && io(Ft)), e !== o && (e = '\b'), (t = e) === o && (t = Qu, '\\f' === r.substr(Qu, 2) ? (e = '\\f', Qu += 2) : (e = o, 0 === no && io(Pt)), e !== o && (e = '\f'), (t = e) === o && (t = Qu, '\\n' === r.substr(Qu, 2) ? (e = '\\n', Qu += 2) : (e = o, 0 === no && io(Ht)), e !== o && (e = '\n'), (t = e) === o && (t = Qu, '\\r' === r.substr(Qu, 2) ? (e = '\\r', Qu += 2) : (e = o, 0 === no && io(Gt)), e !== o && (e = '\r'), (t = e) === o && (t = Qu, '\\t' === r.substr(Qu, 2) ? (e = '\\t', Qu += 2) : (e = o, 0 === no && io(jt)), e !== o && (e = '\t'), (t = e) === o && (t = Qu, '\\u' === r.substr(Qu, 2) ? (e = '\\u', Qu += 2) : (e = o, 0 === no && io(Yt)), e !== o && (n = Vs()) !== o && (u = Vs()) !== o && (s = Vs()) !== o && (a = Vs()) !== o ? (i = n, c = u, l = s, f = a, t = e = String.fromCharCode(parseInt('0x' + i + c + l + f))) : (Qu = t, t = o), t === o && (t = Qu, 92 === r.charCodeAt(Qu) ? (e = '\\', Qu++) : (e = o, 0 === no && io(Bt)), e !== o && (e = '\\'), t = e)))))))))), t;
              }
              function Hs() {
                var t, e;
                return (t = Gs()) !== o && (t = (e = t) && 'bigint' === e.type ? e : {
                  type: 'number',
                  value: e
                }), t;
              }
              function Gs() {
                var r, t, e, n;
                return r = Qu, (t = js()) !== o && (e = Ys()) !== o && (n = Bs()) !== o ? r = t = {
                  type: 'bigint',
                  value: t + e + n
                } : (Qu = r, r = o), r === o && (r = Qu, (t = js()) !== o && (e = Ys()) !== o ? r = t = function (r, t) {
                  const e = r + t;
                  return Hi(r) ? {
                    type: 'bigint',
                    value: e
                  } : parseFloat(e);
                }(t, e) : (Qu = r, r = o), r === o && (r = Qu, (t = js()) !== o && (e = Bs()) !== o ? r = t = function (r, t) {
                  return {
                    type: 'bigint',
                    value: r + t
                  };
                }(t, e) : (Qu = r, r = o), r === o && (r = Qu, (t = js()) !== o && (t = function (r) {
                  return Hi(r) ? {
                    type: 'bigint',
                    value: r
                  } : parseFloat(r);
                }(t)), r = t))), r;
              }
              function js() {
                var t, e, n;
                return (t = Xs()) === o && (t = Ws()) === o && (t = Qu, 45 === r.charCodeAt(Qu) ? (e = '-', Qu++) : (e = o, 0 === no && io(tt)), e === o && (43 === r.charCodeAt(Qu) ? (e = '+', Qu++) : (e = o, 0 === no && io(rt))), e !== o && (n = Xs()) !== o ? t = e = '-' + n : (Qu = t, t = o), t === o && (t = Qu, 45 === r.charCodeAt(Qu) ? (e = '-', Qu++) : (e = o, 0 === no && io(tt)), e === o && (43 === r.charCodeAt(Qu) ? (e = '+', Qu++) : (e = o, 0 === no && io(rt))), e !== o && (n = Ws()) !== o ? t = e = '-' + n : (Qu = t, t = o))), t;
              }
              function Ys() {
                var t, e, n;
                return t = Qu, 46 === r.charCodeAt(Qu) ? (e = '.', Qu++) : (e = o, 0 === no && io(Vt)), e !== o && (n = Xs()) !== o ? t = e = '.' + n : (Qu = t, t = o), t;
              }
              function Bs() {
                var t, e, n;
                return t = Qu, (e = function () {
                  var t, e, n;
                  t = Qu, Jt.test(r.charAt(Qu)) ? (e = r.charAt(Qu), Qu++) : (e = o, 0 === no && io(Qt));
                  e !== o ? (re.test(r.charAt(Qu)) ? (n = r.charAt(Qu), Qu++) : (n = o, 0 === no && io(te)), n === o && (n = null), n !== o ? t = e = e + (null !== (u = n) ? u : '') : (Qu = t, t = o)) : (Qu = t, t = o);
                  var u;
                  return t;
                }()) !== o && (n = Xs()) !== o ? t = e = e + n : (Qu = t, t = o), t;
              }
              function Xs() {
                var t, e;
                if (t = [], (e = Ws()) !== o)
                  for (; e !== o;)
                    t.push(e), e = Ws();
                else
                  t = o;
                return t !== o && (t = t.join('')), t;
              }
              function Ws() {
                var t;
                return Kt.test(r.charAt(Qu)) ? (t = r.charAt(Qu), Qu++) : (t = o, 0 === no && io(qt)), t;
              }
              function Vs() {
                var t;
                return Zt.test(r.charAt(Qu)) ? (t = r.charAt(Qu), Qu++) : (t = o, 0 === no && io(zt)), t;
              }
              function Ks() {
                var t, e, n, u;
                return t = Qu, 'default' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(E)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function qs() {
                var t, e, n, u;
                return t = Qu, 'to' === r.substr(Qu, 2).toLowerCase() ? (e = r.substr(Qu, 2), Qu += 2) : (e = o, 0 === no && io(oe)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Zs() {
                var t, e, n, u;
                return t = Qu, 'drop' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(ie)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'DROP' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function zs() {
                var t, e, n, u;
                return t = Qu, 'declare' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(ce)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'DECLARE' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Js() {
                var t, e, n, u;
                return t = Qu, 'alter' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(fe)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'ALTER' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Qs() {
                var t, e, n, u;
                return t = Qu, 'create' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(de)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ra() {
                var t, e, n, u;
                return t = Qu, 'temporary' === r.substr(Qu, 9).toLowerCase() ? (e = r.substr(Qu, 9), Qu += 9) : (e = o, 0 === no && io(Le)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ta() {
                var t, e, n, u;
                return t = Qu, 'if not exists' === r.substr(Qu, 13).toLowerCase() ? (e = r.substr(Qu, 13), Qu += 13) : (e = o, 0 === no && io(Ce)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ea() {
                var t, e, n, u;
                return t = Qu, 'replace' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(he)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function na() {
                var t, e, n, u;
                return t = Qu, 'rename' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(Ae)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ua() {
                var t, e, n, u;
                return t = Qu, 'partition' === r.substr(Qu, 9).toLowerCase() ? (e = r.substr(Qu, 9), Qu += 9) : (e = o, 0 === no && io(Te)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'PARTITION' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function oa() {
                var t, e, n, u;
                return t = Qu, 'into' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(me)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function sa() {
                var t, e, n, u;
                return t = Qu, 'set' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(Ie)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function aa() {
                var t, e, n, u;
                return t = Qu, 'as' === r.substr(Qu, 2).toLowerCase() ? (e = r.substr(Qu, 2), Qu += 2) : (e = o, 0 === no && io(Re)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ia() {
                var t, e, n, u;
                return t = Qu, 'table' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(_e)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'TABLE' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ca() {
                var t, e, n, u;
                return t = Qu, 'tables' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(ge)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'TABLES' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function la() {
                var t, e, n, u;
                return t = Qu, 'on' === r.substr(Qu, 2).toLowerCase() ? (e = r.substr(Qu, 2), Qu += 2) : (e = o, 0 === no && io(Oe)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function fa() {
                var t, e, n, u;
                return t = Qu, 'join' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io($e)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function va() {
                var t, e, n, u;
                return t = Qu, 'outer' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(Fe)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ba() {
                var t, e, n, u;
                return t = Qu, 'union' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(He)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function da() {
                var t, e, n, u;
                return t = Qu, 'using' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(je)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function La() {
                var t, e, n, u;
                return t = Qu, 'with' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(Ir)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Ca() {
                var t, e, n, u;
                return t = Qu, 'by' === r.substr(Qu, 2).toLowerCase() ? (e = r.substr(Qu, 2), Qu += 2) : (e = o, 0 === no && io(Xe)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function pa() {
                var t, e, n, u;
                return t = Qu, 'asc' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(Ze)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'ASC' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function wa() {
                var t, e, n, u;
                return t = Qu, 'desc' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(ze)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'DESC' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Ea() {
                var t, e, n, u;
                return t = Qu, 'all' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(Je)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'ALL' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ha() {
                var t, e, n, u;
                return t = Qu, 'distinct' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(Qe)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'DISTINCT' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Aa() {
                var t, e, n, u;
                return t = Qu, 'between' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(rn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'BETWEEN' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ya() {
                var t, e, n, u;
                return t = Qu, 'in' === r.substr(Qu, 2).toLowerCase() ? (e = r.substr(Qu, 2), Qu += 2) : (e = o, 0 === no && io(tn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'IN' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Ta() {
                var t, e, n, u;
                return t = Qu, 'is' === r.substr(Qu, 2).toLowerCase() ? (e = r.substr(Qu, 2), Qu += 2) : (e = o, 0 === no && io(en)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'IS' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ma() {
                var t, e, n, u;
                return t = Qu, 'like' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(nn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'LIKE' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Sa() {
                var t, e, n, u;
                return t = Qu, 'exists' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(un)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'EXISTS' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Ia() {
                var t, e, n, u;
                return t = Qu, 'not' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(k)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'NOT' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Na() {
                var t, e, n, u;
                return t = Qu, 'and' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(on)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'AND' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Ra() {
                var t, e, n, u;
                return t = Qu, 'or' === r.substr(Qu, 2).toLowerCase() ? (e = r.substr(Qu, 2), Qu += 2) : (e = o, 0 === no && io(sn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'OR' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function _a() {
                var t, e, n, u;
                return t = Qu, 'case' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(dn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ga() {
                var t, e, n, u;
                return t = Qu, 'cast' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(En)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Oa() {
                var t, e, n, u;
                return t = Qu, 'char' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(Tn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'CHAR' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Ua() {
                var t, e, n, u;
                return t = Qu, 'varchar' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(mn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'VARCHAR' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function xa() {
                var t, e, n, u;
                return t = Qu, 'nvarchar' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(In)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'NVARCHAR' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Ma() {
                var t, e, n, u;
                return t = Qu, 'numeric' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(Nn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'NUMERIC' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Da() {
                var t, e, n, u;
                return t = Qu, 'decimal' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(Rn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'DECIMAL' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ka() {
                var t, e, n, u;
                return t = Qu, 'unsigned' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(gn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'UNSIGNED' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function $a() {
                var t, e, n, u;
                return t = Qu, 'int' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(On)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'INT' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Fa() {
                var t, e, n, u;
                return t = Qu, 'integer' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(xn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'INTEGER' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Pa() {
                var t, e, n, u;
                return t = Qu, 'smallint' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(Dn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'SMALLINT' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Ha() {
                var t, e, n, u;
                return t = Qu, 'tinyint' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(kn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'TINYINT' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Ga() {
                var t, e, n, u;
                return t = Qu, 'bigint' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(Gn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'BIGINT' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ja() {
                var t, e, n, u;
                return t = Qu, 'float' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(jn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'FLOAT' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Ya() {
                var t, e, n, u;
                return t = Qu, 'real' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(Yn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'REAL' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Ba() {
                var t, e, n, u;
                return t = Qu, 'double' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(Bn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'DOUBLE' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Xa() {
                var t, e, n, u;
                return t = Qu, 'date' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(Xn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'DATE' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Wa() {
                var t, e, n, u;
                return t = Qu, 'datetime' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(Vn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'DATETIME' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Va() {
                var t, e, n, u;
                return t = Qu, 'datetime2' === r.substr(Qu, 9).toLowerCase() ? (e = r.substr(Qu, 9), Qu += 9) : (e = o, 0 === no && io(Kn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'DATETIME2' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Ka() {
                var t, e, n, u;
                return t = Qu, 'datetimeoffset' === r.substr(Qu, 14).toLowerCase() ? (e = r.substr(Qu, 14), Qu += 14) : (e = o, 0 === no && io(qn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'DATETIMEOFFSET' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function qa() {
                var t, e, n, u;
                return t = Qu, 'time' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(Zn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'TIME' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Za() {
                var t, e, n, u;
                return t = Qu, 'timestamp' === r.substr(Qu, 9).toLowerCase() ? (e = r.substr(Qu, 9), Qu += 9) : (e = o, 0 === no && io(zn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'TIMESTAMP' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function za() {
                var t, e, n, u;
                return t = Qu, 'current_timestamp' === r.substr(Qu, 17).toLowerCase() ? (e = r.substr(Qu, 17), Qu += 17) : (e = o, 0 === no && io(lu)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'CURRENT_TIMESTAMP' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Ja() {
                var t;
                return 64 === r.charCodeAt(Qu) ? (t = '@', Qu++) : (t = o, 0 === no && io(wu)), t;
              }
              function Qa() {
                var t;
                return (t = function () {
                  var t;
                  return '@@' === r.substr(Qu, 2) ? (t = '@@', Qu += 2) : (t = o, 0 === no && io(Eu)), t;
                }()) === o && (t = Ja()) === o && (t = function () {
                  var t;
                  return 36 === r.charCodeAt(Qu) ? (t = '$', Qu++) : (t = o, 0 === no && io(hu)), t;
                }()), t;
              }
              function ri() {
                var t;
                return 61 === r.charCodeAt(Qu) ? (t = '=', Qu++) : (t = o, 0 === no && io(Br)), t;
              }
              function ti() {
                var t, e, n, u;
                return t = Qu, 'add' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(mu)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'ADD' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ei() {
                var t, e, n, u;
                return t = Qu, 'column' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(Su)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'COLUMN' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ni() {
                var t, e, n, u;
                return t = Qu, 'index' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(Iu)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'INDEX' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ui() {
                var t, e, n, u;
                return t = Qu, 'key' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(L)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'KEY' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function oi() {
                var t, e, n, u;
                return t = Qu, 'unique' === r.substr(Qu, 6).toLowerCase() ? (e = r.substr(Qu, 6), Qu += 6) : (e = o, 0 === no && io(b)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'UNIQUE' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function si() {
                var t, e, n, u;
                return t = Qu, 'comment' === r.substr(Qu, 7).toLowerCase() ? (e = r.substr(Qu, 7), Qu += 7) : (e = o, 0 === no && io(gu)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'COMMENT' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ai() {
                var t, e, n, u;
                return t = Qu, 'constraint' === r.substr(Qu, 10).toLowerCase() ? (e = r.substr(Qu, 10), Qu += 10) : (e = o, 0 === no && io(Ou)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'CONSTRAINT' : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function ii() {
                var t;
                return 46 === r.charCodeAt(Qu) ? (t = '.', Qu++) : (t = o, 0 === no && io(Vt)), t;
              }
              function ci() {
                var t;
                return 44 === r.charCodeAt(Qu) ? (t = ',', Qu++) : (t = o, 0 === no && io(Pu)), t;
              }
              function li() {
                var t;
                return 42 === r.charCodeAt(Qu) ? (t = '*', Qu++) : (t = o, 0 === no && io(et)), t;
              }
              function fi() {
                var t;
                return 40 === r.charCodeAt(Qu) ? (t = '(', Qu++) : (t = o, 0 === no && io(Lr)), t;
              }
              function vi() {
                var t;
                return 41 === r.charCodeAt(Qu) ? (t = ')', Qu++) : (t = o, 0 === no && io(Cr)), t;
              }
              function bi() {
                var t;
                return 91 === r.charCodeAt(Qu) ? (t = '[', Qu++) : (t = o, 0 === no && io(Ct)), t;
              }
              function di() {
                var t;
                return 93 === r.charCodeAt(Qu) ? (t = ']', Qu++) : (t = o, 0 === no && io(Et)), t;
              }
              function Li() {
                var t;
                return 59 === r.charCodeAt(Qu) ? (t = ';', Qu++) : (t = o, 0 === no && io(Hu)), t;
              }
              function Ci() {
                var t;
                return (t = function () {
                  var t;
                  return '||' === r.substr(Qu, 2) ? (t = '||', Qu += 2) : (t = o, 0 === no && io(Gu)), t;
                }()) === o && (t = function () {
                  var t;
                  return '&&' === r.substr(Qu, 2) ? (t = '&&', Qu += 2) : (t = o, 0 === no && io(ju)), t;
                }()), t;
              }
              function pi() {
                var r, t;
                for (r = [], (t = yi()) === o && (t = Ei()); t !== o;)
                  r.push(t), (t = yi()) === o && (t = Ei());
                return r;
              }
              function wi() {
                var r, t;
                if (r = [], (t = yi()) === o && (t = Ei()), t !== o)
                  for (; t !== o;)
                    r.push(t), (t = yi()) === o && (t = Ei());
                else
                  r = o;
                return r;
              }
              function Ei() {
                var t;
                return (t = function () {
                  var t, e, n, u, s, a;
                  t = Qu, '/*' === r.substr(Qu, 2) ? (e = '/*', Qu += 2) : (e = o, 0 === no && io(Yu));
                  if (e !== o) {
                    for (n = [], u = Qu, s = Qu, no++, '*/' === r.substr(Qu, 2) ? (a = '*/', Qu += 2) : (a = o, 0 === no && io(Bu)), no--, a === o ? s = void 0 : (Qu = s, s = o), s !== o && (a = Ai()) !== o ? u = s = [
                        s,
                        a
                      ] : (Qu = u, u = o); u !== o;)
                      n.push(u), u = Qu, s = Qu, no++, '*/' === r.substr(Qu, 2) ? (a = '*/', Qu += 2) : (a = o, 0 === no && io(Bu)), no--, a === o ? s = void 0 : (Qu = s, s = o), s !== o && (a = Ai()) !== o ? u = s = [
                        s,
                        a
                      ] : (Qu = u, u = o);
                    n !== o ? ('*/' === r.substr(Qu, 2) ? (u = '*/', Qu += 2) : (u = o, 0 === no && io(Bu)), u !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (Qu = t, t = o)) : (Qu = t, t = o);
                  } else
                    Qu = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = Qu, '--' === r.substr(Qu, 2) ? (e = '--', Qu += 2) : (e = o, 0 === no && io(Xu));
                  if (e !== o) {
                    for (n = [], u = Qu, s = Qu, no++, a = Ti(), no--, a === o ? s = void 0 : (Qu = s, s = o), s !== o && (a = Ai()) !== o ? u = s = [
                        s,
                        a
                      ] : (Qu = u, u = o); u !== o;)
                      n.push(u), u = Qu, s = Qu, no++, a = Ti(), no--, a === o ? s = void 0 : (Qu = s, s = o), s !== o && (a = Ai()) !== o ? u = s = [
                        s,
                        a
                      ] : (Qu = u, u = o);
                    n !== o ? t = e = [
                      e,
                      n
                    ] : (Qu = t, t = o);
                  } else
                    Qu = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = Qu, 35 === r.charCodeAt(Qu) ? (e = '#', Qu++) : (e = o, 0 === no && io(Wu));
                  if (e !== o) {
                    for (n = [], u = Qu, s = Qu, no++, a = Ti(), no--, a === o ? s = void 0 : (Qu = s, s = o), s !== o && (a = Ai()) !== o ? u = s = [
                        s,
                        a
                      ] : (Qu = u, u = o); u !== o;)
                      n.push(u), u = Qu, s = Qu, no++, a = Ti(), no--, a === o ? s = void 0 : (Qu = s, s = o), s !== o && (a = Ai()) !== o ? u = s = [
                        s,
                        a
                      ] : (Qu = u, u = o);
                    n !== o ? t = e = [
                      e,
                      n
                    ] : (Qu = t, t = o);
                  } else
                    Qu = t, t = o;
                  return t;
                }()), t;
              }
              function hi() {
                var r, t, e, n, u, s, a;
                return r = Qu, (t = si()) !== o && pi() !== o ? ((e = ri()) === o && (e = null), e !== o && pi() !== o && (n = ks()) !== o ? (s = e, a = n, r = t = {
                  type: (u = t).toLowerCase(),
                  keyword: u.toLowerCase(),
                  symbol: s,
                  value: a
                }) : (Qu = r, r = o)) : (Qu = r, r = o), r;
              }
              function Ai() {
                var t;
                return r.length > Qu ? (t = r.charAt(Qu), Qu++) : (t = o, 0 === no && io(Vu)), t;
              }
              function yi() {
                var t;
                return Ku.test(r.charAt(Qu)) ? (t = r.charAt(Qu), Qu++) : (t = o, 0 === no && io(qu)), t;
              }
              function Ti() {
                var t, e;
                if ((t = function () {
                    var t, e;
                    t = Qu, no++, r.length > Qu ? (e = r.charAt(Qu), Qu++) : (e = o, 0 === no && io(Vu));
                    no--, e === o ? t = void 0 : (Qu = t, t = o);
                    return t;
                  }()) === o)
                  if (t = [], Xt.test(r.charAt(Qu)) ? (e = r.charAt(Qu), Qu++) : (e = o, 0 === no && io(Wt)), e !== o)
                    for (; e !== o;)
                      t.push(e), Xt.test(r.charAt(Qu)) ? (e = r.charAt(Qu), Qu++) : (e = o, 0 === no && io(Wt));
                  else
                    t = o;
                return t;
              }
              function mi() {
                var t, e;
                return t = Qu, Xi = [], void 0 !== o && pi() !== o ? ((e = Si()) === o && (e = function () {
                  var t, e;
                  t = Qu, function () {
                    var t;
                    return 'return' === r.substr(Qu, 6).toLowerCase() ? (t = r.substr(Qu, 6), Qu += 6) : (t = o, 0 === no && io(Au)), t;
                  }() !== o && pi() !== o && (e = Ii()) !== o ? t = {
                    type: 'return',
                    expr: e
                  } : (Qu = t, t = o);
                  return t;
                }()), e !== o ? t = {
                  stmt: e,
                  vars: Xi
                } : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Si() {
                var t, e, n, u;
                return t = Qu, (e = xi()) === o && (e = Mi()), e !== o && pi() !== o ? ((n = function () {
                  var t;
                  return ':=' === r.substr(Qu, 2) ? (t = ':=', Qu += 2) : (t = o, 0 === no && io(yu)), t;
                }()) === o && (n = ri()), n !== o && pi() !== o && (u = Ii()) !== o ? t = e = {
                  type: 'assign',
                  left: e,
                  symbol: n,
                  right: u
                } : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              function Ii() {
                var r;
                return (r = go()) === o && (r = function () {
                  var r, t, e, n, u;
                  r = Qu, (t = xi()) !== o && pi() !== o && (e = qo()) !== o && pi() !== o && (n = xi()) !== o && pi() !== o && (u = zo()) !== o ? r = t = {
                    type: 'join',
                    ltable: t,
                    rtable: n,
                    op: e,
                    on: u
                  } : (Qu = r, r = o);
                  return r;
                }()) === o && (r = Ni()) === o && (r = function () {
                  var r, t;
                  r = Qu, bi() !== o && pi() !== o && (t = Ui()) !== o && pi() !== o && di() !== o ? r = {
                    type: 'array',
                    value: t
                  } : (Qu = r, r = o);
                  return r;
                }()), r;
              }
              function Ni() {
                var r, t, e, n, u, s, a, i;
                if (r = Qu, (t = Ri()) !== o) {
                  for (e = [], n = Qu, (u = pi()) !== o && (s = Es()) !== o && (a = pi()) !== o && (i = Ri()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o); n !== o;)
                    e.push(n), n = Qu, (u = pi()) !== o && (s = Es()) !== o && (a = pi()) !== o && (i = Ri()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o);
                  e !== o ? r = t = Xr(t, e) : (Qu = r, r = o);
                } else
                  Qu = r, r = o;
                return r;
              }
              function Ri() {
                var r, t, e, n, u, s, a, i;
                if (r = Qu, (t = _i()) !== o) {
                  for (e = [], n = Qu, (u = pi()) !== o && (s = As()) !== o && (a = pi()) !== o && (i = _i()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o); n !== o;)
                    e.push(n), n = Qu, (u = pi()) !== o && (s = As()) !== o && (a = pi()) !== o && (i = _i()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o);
                  e !== o ? r = t = Xr(t, e) : (Qu = r, r = o);
                } else
                  Qu = r, r = o;
                return r;
              }
              function _i() {
                var r, t;
                return (r = Ms()) === o && (r = xi()) === o && (r = Oi()) === o && (r = Us()) === o && (r = Qu, fi() !== o && pi() !== o && (t = Ni()) !== o && pi() !== o && vi() !== o ? r = ot(t) : (Qu = r, r = o)), r;
              }
              function gi() {
                var r, t, e, n, u, s, a;
                return r = Qu, (t = Ss()) !== o ? (e = Qu, (n = pi()) !== o && (u = ii()) !== o && (s = pi()) !== o && (a = Ss()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (Qu = e, e = o), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  let e = r;
                  return null !== t && (e = `${ r }.${ t[3] }`), e;
                }(t, e) : (Qu = r, r = o)) : (Qu = r, r = o), r;
              }
              function Oi() {
                var r, t, e;
                return r = Qu, (t = gi()) !== o && pi() !== o && fi() !== o && pi() !== o ? ((e = Ui()) === o && (e = null), e !== o && pi() !== o && vi() !== o ? r = t = {
                  type: 'function',
                  name: t,
                  args: {
                    type: 'expr_list',
                    value: e
                  }
                } : (Qu = r, r = o)) : (Qu = r, r = o), r === o && (r = Qu, (t = gi()) !== o && (t = function (r) {
                  return {
                    type: 'function',
                    name: r,
                    args: null
                  };
                }(t)), r = t), r;
              }
              function Ui() {
                var r, t, e, n, u, s, a, i;
                if (r = Qu, (t = _i()) !== o) {
                  for (e = [], n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = _i()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o); n !== o;)
                    e.push(n), n = Qu, (u = pi()) !== o && (s = ci()) !== o && (a = pi()) !== o && (i = _i()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (Qu = n, n = o);
                  e !== o ? r = t = f(t, e) : (Qu = r, r = o);
                } else
                  Qu = r, r = o;
                return r;
              }
              function xi() {
                var r, t, e, n, u;
                return r = Qu, (t = Qa()) !== o && (e = Mi()) !== o ? (n = t, u = e, r = t = {
                  type: 'var',
                  ...u,
                  prefix: n
                }) : (Qu = r, r = o), r;
              }
              function Mi() {
                var t, e, n, u, s;
                return t = Qu, (e = Rs()) !== o && (n = function () {
                  var e, n, u, s;
                  e = [], n = Qu, 46 === r.charCodeAt(Qu) ? (u = '.', Qu++) : (u = o, 0 === no && io(Vt));
                  u !== o && (s = Rs()) !== o ? n = u = [
                    u,
                    s
                  ] : (Qu = n, n = o);
                  for (; n !== o;)
                    e.push(n), n = Qu, 46 === r.charCodeAt(Qu) ? (u = '.', Qu++) : (u = o, 0 === no && io(Vt)), u !== o && (s = Rs()) !== o ? n = u = [
                      u,
                      s
                    ] : (Qu = n, n = o);
                  e !== o && (e = function (r) {
                    const t = [];
                    for (let e = 0; e < r.length; e++)
                      t.push(r[e][1]);
                    return t;
                  }(e));
                  return e;
                }()) !== o ? (u = e, s = n, Xi.push(u), t = e = {
                  type: 'var',
                  name: u,
                  members: s,
                  prefix: null
                }) : (Qu = t, t = o), t;
              }
              function Di() {
                var t;
                return (t = function () {
                  var t, e, n, u, s, a;
                  t = Qu, (e = bi()) === o && (e = null);
                  if (e !== o)
                    if (pi() !== o)
                      if ((n = Oa()) === o && (n = Ua()) === o && (n = function () {
                          var t, e, n, u;
                          return t = Qu, 'nchar' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(Sn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'NCHAR' : (Qu = t, t = o)) : (Qu = t, t = o), t;
                        }()) === o && (n = xa()), n !== o)
                        if (pi() !== o)
                          if ((u = di()) === o && (u = null), u !== o)
                            if ((Zu(e, 0, u) ? o : void 0) !== o)
                              if (pi() !== o)
                                if (fi() !== o)
                                  if (pi() !== o) {
                                    if (s = [], Kt.test(r.charAt(Qu)) ? (a = r.charAt(Qu), Qu++) : (a = o, 0 === no && io(qt)), a !== o)
                                      for (; a !== o;)
                                        s.push(a), Kt.test(r.charAt(Qu)) ? (a = r.charAt(Qu), Qu++) : (a = o, 0 === no && io(qt));
                                    else
                                      s = o;
                                    s !== o && (a = pi()) !== o && vi() !== o ? (e = {
                                      dataType: n,
                                      length: parseInt(s.join(''), 10)
                                    }, t = e) : (Qu = t, t = o);
                                  } else
                                    Qu = t, t = o;
                                else
                                  Qu = t, t = o;
                              else
                                Qu = t, t = o;
                            else
                              Qu = t, t = o;
                          else
                            Qu = t, t = o;
                        else
                          Qu = t, t = o;
                      else
                        Qu = t, t = o;
                    else
                      Qu = t, t = o;
                  else
                    Qu = t, t = o;
                  t === o && (t = Qu, (e = bi()) === o && (e = null), e !== o && pi() !== o ? ((n = Oa()) === o && (n = Ua()), n !== o && pi() !== o ? ((u = di()) === o && (u = null), u !== o ? (Zu(e, 0, u) ? o : void 0) !== o ? (e = zu(0, n), t = e) : (Qu = t, t = o) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o), t === o && (t = Qu, (e = bi()) === o && (e = null), e !== o && pi() !== o && (n = xa()) !== o && pi() !== o ? ((u = di()) === o && (u = null), u !== o ? (Zu(e, 0, u) ? o : void 0) !== o && pi() !== o && fi() !== o && pi() !== o ? ('max' === r.substr(Qu, 3).toLowerCase() ? (s = r.substr(Qu, 3), Qu += 3) : (s = o, 0 === no && io(cn)), s !== o && (a = pi()) !== o && vi() !== o ? (e = function (r, t, e, n) {
                    return {
                      dataType: t,
                      length: 'max'
                    };
                  }(0, n), t = e) : (Qu = t, t = o)) : (Qu = t, t = o) : (Qu = t, t = o)) : (Qu = t, t = o)));
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, i, c, l, f, v, b, d, L, C;
                  t = Qu, (e = bi()) === o && (e = null);
                  if (e !== o)
                    if (pi() !== o)
                      if ((n = Ma()) === o && (n = Da()) === o && (n = $a()) === o && (n = Fa()) === o && (n = Pa()) === o && (n = Ha()) === o && (n = Ga()) === o && (n = ja()) === o && (n = Ya()) === o && (n = Ba()), n !== o)
                        if ((u = pi()) !== o)
                          if ((s = di()) === o && (s = null), s !== o)
                            if ((Zu(e, 0, s) ? o : void 0) !== o)
                              if ((a = pi()) !== o)
                                if ((i = fi()) !== o)
                                  if ((c = pi()) !== o) {
                                    if (l = [], Kt.test(r.charAt(Qu)) ? (f = r.charAt(Qu), Qu++) : (f = o, 0 === no && io(qt)), f !== o)
                                      for (; f !== o;)
                                        l.push(f), Kt.test(r.charAt(Qu)) ? (f = r.charAt(Qu), Qu++) : (f = o, 0 === no && io(qt));
                                    else
                                      l = o;
                                    if (l !== o)
                                      if ((f = pi()) !== o) {
                                        if (v = Qu, (b = ci()) !== o)
                                          if ((d = pi()) !== o) {
                                            if (L = [], Kt.test(r.charAt(Qu)) ? (C = r.charAt(Qu), Qu++) : (C = o, 0 === no && io(qt)), C !== o)
                                              for (; C !== o;)
                                                L.push(C), Kt.test(r.charAt(Qu)) ? (C = r.charAt(Qu), Qu++) : (C = o, 0 === no && io(qt));
                                            else
                                              L = o;
                                            L !== o ? v = b = [
                                              b,
                                              d,
                                              L
                                            ] : (Qu = v, v = o);
                                          } else
                                            Qu = v, v = o;
                                        else
                                          Qu = v, v = o;
                                        v === o && (v = null), v !== o && (b = pi()) !== o && (d = vi()) !== o && (L = pi()) !== o ? ((C = ki()) === o && (C = null), C !== o ? (p = v, w = C, e = {
                                          dataType: n,
                                          length: parseInt(l.join(''), 10),
                                          scale: p && parseInt(p[2].join(''), 10),
                                          parentheses: !0,
                                          suffix: w
                                        }, t = e) : (Qu = t, t = o)) : (Qu = t, t = o);
                                      } else
                                        Qu = t, t = o;
                                    else
                                      Qu = t, t = o;
                                  } else
                                    Qu = t, t = o;
                                else
                                  Qu = t, t = o;
                              else
                                Qu = t, t = o;
                            else
                              Qu = t, t = o;
                          else
                            Qu = t, t = o;
                        else
                          Qu = t, t = o;
                      else
                        Qu = t, t = o;
                    else
                      Qu = t, t = o;
                  else
                    Qu = t, t = o;
                  var p, w;
                  if (t === o) {
                    if (t = Qu, (e = bi()) === o && (e = null), e !== o)
                      if (pi() !== o)
                        if ((n = Ma()) === o && (n = Da()) === o && (n = $a()) === o && (n = Fa()) === o && (n = Pa()) === o && (n = Ha()) === o && (n = Ga()) === o && (n = ja()) === o && (n = Ya()) === o && (n = Ba()), n !== o)
                          if ((u = di()) === o && (u = null), u !== o)
                            if ((s = (s = Zu(e, 0, u)) ? o : void 0) !== o)
                              if (pi() !== o) {
                                if (a = [], Kt.test(r.charAt(Qu)) ? (i = r.charAt(Qu), Qu++) : (i = o, 0 === no && io(qt)), i !== o)
                                  for (; i !== o;)
                                    a.push(i), Kt.test(r.charAt(Qu)) ? (i = r.charAt(Qu), Qu++) : (i = o, 0 === no && io(qt));
                                else
                                  a = o;
                                a !== o && (i = pi()) !== o ? ((c = ki()) === o && (c = null), c !== o ? (e = function (r, t, e, n, u) {
                                  return {
                                    dataType: t,
                                    length: parseInt(n.join(''), 10),
                                    suffix: u
                                  };
                                }(0, n, 0, a, c), t = e) : (Qu = t, t = o)) : (Qu = t, t = o);
                              } else
                                Qu = t, t = o;
                            else
                              Qu = t, t = o;
                          else
                            Qu = t, t = o;
                        else
                          Qu = t, t = o;
                      else
                        Qu = t, t = o;
                    else
                      Qu = t, t = o;
                    t === o && (t = Qu, (e = bi()) === o && (e = null), e !== o && pi() !== o ? ((n = Ma()) === o && (n = Da()) === o && (n = $a()) === o && (n = Fa()) === o && (n = Pa()) === o && (n = Ha()) === o && (n = Ga()) === o && (n = ja()) === o && (n = Ya()) === o && (n = Ba()) === o && (n = function () {
                      var t, e, n, u;
                      return t = Qu, 'bit' === r.substr(Qu, 3).toLowerCase() ? (e = r.substr(Qu, 3), Qu += 3) : (e = o, 0 === no && io(hn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'BIT' : (Qu = t, t = o)) : (Qu = t, t = o), t;
                    }()) === o && (n = function () {
                      var t, e, n, u;
                      return t = Qu, 'money' === r.substr(Qu, 5).toLowerCase() ? (e = r.substr(Qu, 5), Qu += 5) : (e = o, 0 === no && io(An)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'MONEY' : (Qu = t, t = o)) : (Qu = t, t = o), t;
                    }()) === o && (n = function () {
                      var t, e, n, u;
                      return t = Qu, 'smallmoney' === r.substr(Qu, 10).toLowerCase() ? (e = r.substr(Qu, 10), Qu += 10) : (e = o, 0 === no && io(yn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'SMALLMONEY' : (Qu = t, t = o)) : (Qu = t, t = o), t;
                    }()), n !== o && (u = pi()) !== o ? ((s = di()) === o && (s = null), s !== o ? (Zu(e, 0, s) ? o : void 0) !== o && (a = pi()) !== o ? ((i = ki()) === o && (i = null), i !== o && (c = pi()) !== o ? (e = function (r, t, e, n) {
                      return {
                        dataType: t,
                        suffix: n
                      };
                    }(0, n, 0, i), t = e) : (Qu = t, t = o)) : (Qu = t, t = o) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o));
                  }
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, i, c, l, f, v;
                  t = Qu, (e = bi()) === o && (e = null);
                  if (e !== o)
                    if (pi() !== o)
                      if ((n = Va()) === o && (n = Ka()) === o && (n = qa()), n !== o)
                        if (pi() !== o)
                          if ((u = di()) === o && (u = null), u !== o)
                            if ((Zu(e, 0, u) ? o : void 0) !== o)
                              if (fi() !== o)
                                if (pi() !== o) {
                                  if (s = [], Kt.test(r.charAt(Qu)) ? (a = r.charAt(Qu), Qu++) : (a = o, 0 === no && io(qt)), a !== o)
                                    for (; a !== o;)
                                      s.push(a), Kt.test(r.charAt(Qu)) ? (a = r.charAt(Qu), Qu++) : (a = o, 0 === no && io(qt));
                                  else
                                    s = o;
                                  if (s !== o)
                                    if ((a = pi()) !== o) {
                                      if (i = Qu, (c = ci()) !== o)
                                        if ((l = pi()) !== o) {
                                          if (f = [], Kt.test(r.charAt(Qu)) ? (v = r.charAt(Qu), Qu++) : (v = o, 0 === no && io(qt)), v !== o)
                                            for (; v !== o;)
                                              f.push(v), Kt.test(r.charAt(Qu)) ? (v = r.charAt(Qu), Qu++) : (v = o, 0 === no && io(qt));
                                          else
                                            f = o;
                                          f !== o ? i = c = [
                                            c,
                                            l,
                                            f
                                          ] : (Qu = i, i = o);
                                        } else
                                          Qu = i, i = o;
                                      else
                                        Qu = i, i = o;
                                      i === o && (i = null), i !== o && (c = pi()) !== o && (l = vi()) !== o ? (e = {
                                        dataType: n,
                                        length: parseInt(s.join(''), 10)
                                      }, t = e) : (Qu = t, t = o);
                                    } else
                                      Qu = t, t = o;
                                  else
                                    Qu = t, t = o;
                                } else
                                  Qu = t, t = o;
                              else
                                Qu = t, t = o;
                            else
                              Qu = t, t = o;
                          else
                            Qu = t, t = o;
                        else
                          Qu = t, t = o;
                      else
                        Qu = t, t = o;
                    else
                      Qu = t, t = o;
                  else
                    Qu = t, t = o;
                  t === o && (t = Qu, (e = bi()) === o && (e = null), e !== o && pi() !== o ? ((n = Xa()) === o && (n = function () {
                    var t, e, n, u;
                    return t = Qu, 'smalldatetime' === r.substr(Qu, 13).toLowerCase() ? (e = r.substr(Qu, 13), Qu += 13) : (e = o, 0 === no && io(Wn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'SMALLDATETIME' : (Qu = t, t = o)) : (Qu = t, t = o), t;
                  }()) === o && (n = Wa()) === o && (n = Va()) === o && (n = Ka()) === o && (n = qa()) === o && (n = Za()), n !== o && pi() !== o ? ((u = di()) === o && (u = null), u !== o ? (Zu(e, 0, u) ? o : void 0) !== o ? (e = zu(0, n), t = e) : (Qu = t, t = o) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o));
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Qu, (e = bi()) === o && (e = null);
                  e !== o && pi() !== o && (n = function () {
                    var t, e, n, u;
                    return t = Qu, 'json' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(Mn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'JSON' : (Qu = t, t = o)) : (Qu = t, t = o), t;
                  }()) !== o && pi() !== o ? ((u = di()) === o && (u = null), u !== o ? (Zu(e, 0, u) ? o : void 0) !== o ? (e = zu(0, n), t = e) : (Qu = t, t = o) : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Qu, (e = bi()) === o && (e = null);
                  e !== o && pi() !== o ? ((n = function () {
                    var t, e, n, u;
                    return t = Qu, 'tinytext' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io($n)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'TINYTEXT' : (Qu = t, t = o)) : (Qu = t, t = o), t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    return t = Qu, 'text' === r.substr(Qu, 4).toLowerCase() ? (e = r.substr(Qu, 4), Qu += 4) : (e = o, 0 === no && io(Fn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'TEXT' : (Qu = t, t = o)) : (Qu = t, t = o), t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    return t = Qu, 'mediumtext' === r.substr(Qu, 10).toLowerCase() ? (e = r.substr(Qu, 10), Qu += 10) : (e = o, 0 === no && io(Pn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'MEDIUMTEXT' : (Qu = t, t = o)) : (Qu = t, t = o), t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    return t = Qu, 'longtext' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(Hn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'LONGTEXT' : (Qu = t, t = o)) : (Qu = t, t = o), t;
                  }()), n !== o && pi() !== o ? ((u = di()) === o && (u = null), u !== o ? (Zu(e, 0, u) ? o : void 0) !== o ? (e = Ju(0, n), t = e) : (Qu = t, t = o) : (Qu = t, t = o)) : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = Qu, (e = bi()) === o && (e = null);
                  e !== o && pi() !== o && (n = function () {
                    var t, e, n, u;
                    return t = Qu, 'uniqueidentifier' === r.substr(Qu, 16).toLowerCase() ? (e = r.substr(Qu, 16), Qu += 16) : (e = o, 0 === no && io(Qn)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'UNIQUEIDENTIFIER' : (Qu = t, t = o)) : (Qu = t, t = o), t;
                  }()) !== o && pi() !== o ? ((u = di()) === o && (u = null), u !== o ? (Zu(e, 0, u) ? o : void 0) !== o ? (e = Ju(0, n), t = e) : (Qu = t, t = o) : (Qu = t, t = o)) : (Qu = t, t = o);
                  return t;
                }()), t;
              }
              function ki() {
                var t, e, n;
                return t = Qu, (e = ka()) === o && (e = null), e !== o && pi() !== o ? ((n = function () {
                  var t, e, n, u;
                  return t = Qu, 'zerofill' === r.substr(Qu, 8).toLowerCase() ? (e = r.substr(Qu, 8), Qu += 8) : (e = o, 0 === no && io(Un)), e !== o ? (n = Qu, no++, u = _s(), no--, u === o ? n = void 0 : (Qu = n, n = o), n !== o ? t = e = 'ZEROFILL' : (Qu = t, t = o)) : (Qu = t, t = o), t;
                }()) === o && (n = null), n !== o ? t = e = function (r, t) {
                  const e = [];
                  return r && e.push(r), t && e.push(t), e;
                }(e, n) : (Qu = t, t = o)) : (Qu = t, t = o), t;
              }
              const $i = {
                ALTER: !0,
                ALL: !0,
                ADD: !0,
                AND: !0,
                AS: !0,
                ASC: !0,
                BETWEEN: !0,
                BY: !0,
                CALL: !0,
                CASE: !0,
                CREATE: !0,
                CONTAINS: !0,
                CURRENT_DATE: !0,
                CURRENT_TIME: !0,
                CURRENT_TIMESTAMP: !0,
                CURRENT_USER: !0,
                DELETE: !0,
                DESC: !0,
                DISTINCT: !0,
                DROP: !0,
                ELSE: !0,
                END: !0,
                EXISTS: !0,
                EXPLAIN: !0,
                FALSE: !0,
                FROM: !0,
                FULL: !0,
                GROUP: !0,
                HAVING: !0,
                IN: !0,
                INNER: !0,
                INSERT: !0,
                INTO: !0,
                IS: !0,
                JOIN: !0,
                JSON: !0,
                KEY: !0,
                LEFT: !0,
                LIKE: !0,
                LIMIT: !0,
                LOW_PRIORITY: !0,
                NOT: !0,
                NULL: !0,
                NOCHECK: !0,
                ON: !0,
                OR: !0,
                ORDER: !0,
                OUTER: !0,
                RECURSIVE: !0,
                RENAME: !0,
                READ: !0,
                RIGHT: !0,
                SELECT: !0,
                SESSION_USER: !0,
                SET: !0,
                SHOW: !0,
                STATUS: !0,
                SYSTEM_USER: !0,
                TABLE: !0,
                THEN: !0,
                TRUE: !0,
                TRUNCATE: !0,
                TYPE: !0,
                UNION: !0,
                UPDATE: !0,
                USING: !0,
                VALUES: !0,
                WITH: !0,
                WHEN: !0,
                WHERE: !0,
                WRITE: !0,
                GLOBAL: !0,
                SESSION: !0,
                LOCAL: !0,
                PERSIST: !0,
                PERSIST_ONLY: !0
              };
              function Fi(r, t) {
                return {
                  type: 'unary_expr',
                  operator: r,
                  expr: t
                };
              }
              function Pi(r, t, e) {
                return {
                  type: 'binary_expr',
                  operator: r,
                  left: t,
                  right: e
                };
              }
              function Hi(r) {
                const t = n(Number.MAX_SAFE_INTEGER);
                return !(n(r) < t);
              }
              function Gi(r, t) {
                const e = [r];
                for (let r = 0; r < t.length; r++)
                  e.push(t[r][3]);
                return e;
              }
              function ji(r, t) {
                let e = r;
                for (let r = 0; r < t.length; r++)
                  e = Pi(t[r][1], e, t[r][3]);
                return e;
              }
              function Yi(r) {
                const t = Ki[r];
                return t || (r || null);
              }
              function Bi(r) {
                const t = [];
                for (let e of r.keys()) {
                  const r = e.split('::');
                  if (!r) {
                    t.push(e);
                    break;
                  }
                  r && r[1] && (r[1] = Yi(r[1])), t.push(r.join('::'));
                }
                return t;
              }
              let Xi = [];
              const Wi = new Set(), Vi = new Set(), Ki = {};
              if ((e = a()) !== o && Qu === r.length)
                return e;
              throw e !== o && Qu < r.length && io({ type: 'end' }), co(eo, to < r.length ? r.charAt(to) : null, to < r.length ? ao(to, to + 1) : ao(to, to));
            }
          };
        },
        function (r, t, e) {
          var n = e(0);
          function u(r, t, e, n) {
            this.message = r, this.expected = t, this.found = e, this.location = n, this.name = 'SyntaxError', 'function' == typeof Error.captureStackTrace && Error.captureStackTrace(this, u);
          }
          !function (r, t) {
            function e() {
              this.constructor = r;
            }
            e.prototype = t.prototype, r.prototype = new e();
          }(u, Error), u.buildMessage = function (r, t) {
            var e = {
              literal: function (r) {
                return '"' + u(r.text) + '"';
              },
              class: function (r) {
                var t, e = '';
                for (t = 0; t < r.parts.length; t++)
                  e += r.parts[t] instanceof Array ? o(r.parts[t][0]) + '-' + o(r.parts[t][1]) : o(r.parts[t]);
                return '[' + (r.inverted ? '^' : '') + e + ']';
              },
              any: function (r) {
                return 'any character';
              },
              end: function (r) {
                return 'end of input';
              },
              other: function (r) {
                return r.description;
              }
            };
            function n(r) {
              return r.charCodeAt(0).toString(16).toUpperCase();
            }
            function u(r) {
              return r.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            function o(r) {
              return r.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (r) {
                return '\\x0' + n(r);
              }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (r) {
                return '\\x' + n(r);
              });
            }
            return 'Expected ' + function (r) {
              var t, n, u, o = new Array(r.length);
              for (t = 0; t < r.length; t++)
                o[t] = (u = r[t], e[u.type](u));
              if (o.sort(), o.length > 0) {
                for (t = 1, n = 1; t < o.length; t++)
                  o[t - 1] !== o[t] && (o[n] = o[t], n++);
                o.length = n;
              }
              switch (o.length) {
              case 1:
                return o[0];
              case 2:
                return o[0] + ' or ' + o[1];
              default:
                return o.slice(0, -1).join(', ') + ', or ' + o[o.length - 1];
              }
            }(r) + ' but ' + function (r) {
              return r ? '"' + u(r) + '"' : 'end of input';
            }(t) + ' found.';
          }, r.exports = {
            SyntaxError: u,
            parse: function (r, t) {
              t = void 0 !== t ? t : {};
              var e, o = {}, s = { start: To }, a = To, i = po('EXTENSION', !0), c = po('SCHEMA', !0), l = po('VERSION', !0), v = po('NULLS', !0), b = po('FIRST', !0), d = po('LAST', !0), L = po('AUTO_INCREMENT', !0), C = po('UNIQUE', !0), p = po('PRIMARY', !0), w = po('KEY', !0), E = po('COLUMN_FORMAT', !0), h = po('FIXED', !0), A = po('DYNAMIC', !0), y = po('DEFAULT', !0), T = po('STORAGE', !0), m = po('DISK', !0), S = po('MEMORY', !0), I = po('ALGORITHM', !0), N = po('INSTANT', !0), R = po('INPLACE', !0), _ = po('COPY', !0), g = po('LOCK', !0), O = po('NONE', !0), U = po('SHARED', !0), x = po('EXCLUSIVE', !0), M = po('PRIMARY KEY', !0), D = po('FOREIGN KEY', !0), k = po('MATCH FULL', !0), $ = po('MATCH PARTIAL', !0), F = po('MATCH SIMPLE', !0), P = po('ON DELETE', !0), H = po('ON UPDATE', !0), G = po('RESTRICT', !0), j = po('CASCADE', !0), Y = po('SET NULL', !0), B = po('NO ACTION', !0), X = po('SET DEFAULT', !0), W = po('TRIGGER', !0), V = po('BEFORE', !0), K = po('AFTER', !0), q = po('INSTEAD OF', !0), Z = po('ON', !0), z = po('EXECUTE', !0), J = po('PROCEDURE', !0), Q = po('OF', !0), rr = po('NOT', !0), tr = po('DEFERRABLE', !0), er = po('INITIALLY IMMEDIATE', !0), nr = po('INITIALLY DEFERRED', !0), ur = po('FOR', !0), or = po('EACH', !0), sr = po('ROW', !0), ar = po('STATEMENT', !0), ir = po('AVG_ROW_LENGTH', !0), cr = po('KEY_BLOCK_SIZE', !0), lr = po('MAX_ROWS', !0), fr = po('MIN_ROWS', !0), vr = po('STATS_SAMPLE_PAGES', !0), br = po('CHARACTER SET', !0), dr = po('CHARSET', !0), Lr = po('COLLATE', !0), Cr = po('CONNECTION', !0), pr = po('COMPRESSION', !0), wr = po('\'', !1), Er = po('ZLIB', !0), hr = po('LZ4', !0), Ar = po('ENGINE', !0), yr = po('IN', !0), Tr = po('ACCESS SHARE', !0), mr = po('ROW SHARE', !0), Sr = po('ROW EXCLUSIVE', !0), Ir = po('SHARE UPDATE EXCLUSIVE', !0), Nr = po('SHARE ROW EXCLUSIVE', !0), Rr = po('ACCESS EXCLUSIVE', !0), _r = po('SHARE', !0), gr = po('MODE', !0), Or = po('NOWAIT', !0), Ur = po('(', !1), xr = po(')', !1), Mr = function (r, t) {
                  return qi(r, t);
                }, Dr = po('BTREE', !0), kr = po('HASH', !0), $r = po('GIST', !0), Fr = po('GIN', !0), Pr = po('WITH', !0), Hr = po('PARSER', !0), Gr = po('VISIBLE', !0), jr = po('INVISIBLE', !0), Yr = po('=', !1), Br = function (r, t) {
                  return Zi(r, t);
                }, Xr = po('!', !1), Wr = po('>=', !1), Vr = po('>', !1), Kr = po('<=', !1), qr = po('<>', !1), Zr = po('<', !1), zr = po('!=', !1), Jr = po('@>', !1), Qr = po('<@', !1), rt = po('?', !1), tt = po('?|', !1), et = po('?&', !1), nt = po('#-', !1), ut = po('+', !1), ot = po('-', !1), st = po('*', !1), at = po('/', !1), it = po('%', !1), ct = po('$', !1), lt = function (r) {
                  return !0 === Xi[r.toUpperCase()];
                }, ft = po('"', !1), vt = /^[^"]/, bt = wo(['"'], !0, !1), dt = function (r) {
                  return r.join('');
                }, Lt = /^[^']/, Ct = wo(['\''], !0, !1), pt = po('`', !1), wt = /^[^`]/, Et = wo(['`'], !0, !1), ht = /^[A-Za-z_]/, At = wo([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  '_'
                ], !1, !1), yt = /^[A-Za-z0-9_\-]/, Tt = wo([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_',
                  '-'
                ], !1, !1), mt = /^[A-Za-z0-9_]/, St = wo([
                  [
                    'A',
                    'Z'
                  ],
                  [
                    'a',
                    'z'
                  ],
                  [
                    '0',
                    '9'
                  ],
                  '_'
                ], !1, !1), It = po(':', !1), Nt = po('CENTURY', !0), Rt = po('DAY', !0), _t = po('DECADE', !0), gt = po('DOW', !0), Ot = po('DOY', !0), Ut = po('EPOCH', !0), xt = po('HOUR', !0), Mt = po('ISODOW', !0), Dt = po('ISOYEAR', !0), kt = po('MICROSECONDS', !0), $t = po('MILLENNIUM', !0), Ft = po('MILLISECONDS', !0), Pt = po('MINUTE', !0), Ht = po('MONTH', !0), Gt = po('QUARTER', !0), jt = po('SECOND', !0), Yt = po('TIMEZONE', !0), Bt = po('TIMEZONE_HOUR', !0), Xt = po('TIMEZONE_MINUTE', !0), Wt = po('WEEK', !0), Vt = po('YEAR', !0), Kt = po('ON UPDATE CURRENT_TIMESTAMP', !0), qt = /^[^"\\\0-\x1F\x7F]/, Zt = wo([
                  '"',
                  '\\',
                  [
                    '\0',
                    '\x1F'
                  ],
                  '\x7F'
                ], !0, !1), zt = /^[^'\\]/, Jt = wo([
                  '\'',
                  '\\'
                ], !0, !1), Qt = po('\\\'', !1), re = po('\\"', !1), te = po('\\\\', !1), ee = po('\\/', !1), ne = po('\\b', !1), ue = po('\\f', !1), oe = po('\\n', !1), se = po('\\r', !1), ae = po('\\t', !1), ie = po('\\u', !1), ce = po('\\', !1), le = /^[\n\r]/, fe = wo([
                  '\n',
                  '\r'
                ], !1, !1), ve = po('.', !1), be = /^[0-9]/, de = wo([[
                    '0',
                    '9'
                  ]], !1, !1), Le = /^[0-9a-fA-F]/, Ce = wo([
                  [
                    '0',
                    '9'
                  ],
                  [
                    'a',
                    'f'
                  ],
                  [
                    'A',
                    'F'
                  ]
                ], !1, !1), pe = /^[eE]/, we = wo([
                  'e',
                  'E'
                ], !1, !1), Ee = /^[+\-]/, he = wo([
                  '+',
                  '-'
                ], !1, !1), Ae = po('NULL', !0), ye = po('NOT NULL', !0), Te = po('TRUE', !0), me = po('TO', !0), Se = po('FALSE', !0), Ie = po('DROP', !0), Ne = po('USE', !0), Re = po('ALTER', !0), _e = po('SELECT', !0), ge = po('UPDATE', !0), Oe = po('CREATE', !0), Ue = po('TEMPORARY', !0), xe = po('IF NOT EXISTS', !0), Me = po('DELETE', !0), De = po('INSERT', !0), ke = po('RECURSIVE', !1), $e = po('REPLACE', !0), Fe = po('RETURNING', !0), Pe = po('RENAME', !0), He = po('IGNORE', !0), Ge = po('PARTITION', !0), je = po('INTO', !0), Ye = po('FROM', !0), Be = po('SET', !0), Xe = po('AS', !0), We = po('TABLE', !0), Ve = po('TABLESPACE', !0), Ke = po('LEFT', !0), qe = po('RIGHT', !0), Ze = po('FULL', !0), ze = po('INNER', !0), Je = po('JOIN', !0), Qe = po('OUTER', !0), rn = po('UNION', !0), tn = po('VALUES', !0), en = po('USING', !0), nn = po('WHERE', !0), un = po('GROUP', !0), on = po('BY', !0), sn = po('ORDER', !0), an = po('HAVING', !0), cn = po('LIMIT', !0), ln = po('OFFSET', !0), fn = po('ASC', !0), vn = po('DESC', !0), bn = po('ALL', !0), dn = po('DISTINCT', !0), Ln = po('BETWEEN', !0), Cn = po('IS', !0), pn = po('LIKE', !0), wn = po('EXISTS', !0), En = po('AND', !0), hn = po('OR', !0), An = po('COUNT', !0), yn = po('MAX', !0), Tn = po('MIN', !0), mn = po('SUM', !0), Sn = po('AVG', !0), In = po('COLLECT', !0), Nn = po('RANK', !0), Rn = po('DENSE_RANK', !0), _n = po('LISTAGG', !0), gn = po('ROW_NUMBER', !0), On = po('EXTRACT', !0), Un = po('CALL', !0), xn = po('CASE', !0), Mn = po('WHEN', !0), Dn = po('THEN', !0), kn = po('ELSE', !0), $n = po('END', !0), Fn = po('CAST', !0), Pn = po('BOOL', !0), Hn = po('BOOLEAN', !0), Gn = po('CHAR', !0), jn = po('VARCHAR', !0), Yn = po('NUMERIC', !0), Bn = po('DECIMAL', !0), Xn = po('SIGNED', !0), Wn = po('UNSIGNED', !0), Vn = po('INT', !0), Kn = po('ZEROFILL', !0), qn = po('INTEGER', !0), Zn = po('JSON', !0), zn = po('JSONB', !0), Jn = po('GEOMETRY', !0), Qn = po('SMALLINT', !0), ru = po('TINYINT', !0), tu = po('TINYTEXT', !0), eu = po('TEXT', !0), nu = po('MEDIUMTEXT', !0), uu = po('LONGTEXT', !0), ou = po('BIGINT', !0), su = po('FLOAT', !0), au = po('DOUBLE', !0), iu = po('DATE', !0), cu = po('DATETIME', !0), lu = po('TIME', !0), fu = po('TIMESTAMP', !0), vu = po('TRUNCATE', !0), bu = po('USER', !0), du = po('UUID', !0), Lu = po('CURRENT_DATE', !0), Cu = po('INTERVAL', !0), pu = po('CURRENT_TIME', !0), wu = po('CURRENT_TIMESTAMP', !0), Eu = po('CURRENT_USER', !0), hu = po('SESSION_USER', !0), Au = po('SYSTEM_USER', !0), yu = po('GLOBAL', !0), Tu = po('SESSION', !0), mu = po('LOCAL', !0), Su = po('PERSIST', !0), Iu = po('PERSIST_ONLY', !0), Nu = po('@', !1), Ru = po('@@', !1), _u = po('return', !0), gu = po(':=', !1), Ou = po('::', !1), Uu = po('DUAL', !0), xu = po('ADD', !0), Mu = po('COLUMN', !0), Du = po('INDEX', !0), ku = po('FULLTEXT', !0), $u = po('SPATIAL', !0), Fu = po('COMMENT', !0), Pu = po('CONSTRAINT', !0), Hu = po('CONCURRENTLY', !0), Gu = po('REFERENCES', !0), ju = po('SQL_CALC_FOUND_ROWS', !0), Yu = po('SQL_CACHE', !0), Bu = po('SQL_NO_CACHE', !0), Xu = po('SQL_SMALL_RESULT', !0), Wu = po('SQL_BIG_RESULT', !0), Vu = po('SQL_BUFFER_RESULT', !0), Ku = po(',', !1), qu = po('[', !1), Zu = po(']', !1), zu = po(';', !1), Ju = po('->', !1), Qu = po('->>', !1), ro = po('#>', !1), to = po('#>>', !1), eo = po('||', !1), no = po('&&', !1), uo = po('/*', !1), oo = po('*/', !1), so = po('--', !1), ao = { type: 'any' }, io = /^[ \t\n\r]/, co = wo([
                  ' ',
                  '\t',
                  '\n',
                  '\r'
                ], !1, !1), lo = function (r) {
                  return { dataType: r };
                }, fo = 0, vo = [{
                    line: 1,
                    column: 1
                  }], bo = 0, Lo = [], Co = 0;
              if ('startRule' in t) {
                if (!(t.startRule in s))
                  throw new Error('Can\'t start parsing from rule "' + t.startRule + '".');
                a = s[t.startRule];
              }
              function po(r, t) {
                return {
                  type: 'literal',
                  text: r,
                  ignoreCase: t
                };
              }
              function wo(r, t, e) {
                return {
                  type: 'class',
                  parts: r,
                  inverted: t,
                  ignoreCase: e
                };
              }
              function Eo(t) {
                var e, n = vo[t];
                if (n)
                  return n;
                for (e = t - 1; !vo[e];)
                  e--;
                for (n = {
                    line: (n = vo[e]).line,
                    column: n.column
                  }; e < t;)
                  10 === r.charCodeAt(e) ? (n.line++, n.column = 1) : n.column++, e++;
                return vo[t] = n, n;
              }
              function ho(r, t) {
                var e = Eo(r), n = Eo(t);
                return {
                  start: {
                    offset: r,
                    line: e.line,
                    column: e.column
                  },
                  end: {
                    offset: t,
                    line: n.line,
                    column: n.column
                  }
                };
              }
              function Ao(r) {
                fo < bo || (fo > bo && (bo = fo, Lo = []), Lo.push(r));
              }
              function yo(r, t, e) {
                return new u(u.buildMessage(r, t), r, t, e);
              }
              function To() {
                var r, t;
                return r = fo, Si() !== o ? ((t = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = fo, (t = So()) !== o) {
                    if (e = [], n = fo, (u = Si()) !== o && (s = yi()) !== o && (a = Si()) !== o && (i = So()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (fo = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = fo, (u = Si()) !== o && (s = yi()) !== o && (a = Si()) !== o && (i = So()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = function (r, t) {
                      const e = [r && r.ast || r];
                      for (let r = 0; r < t.length; r++)
                        t[r][3] && 0 !== t[r][3].length && e.push(t[r][3] && t[r][3].ast || t[r][3]);
                      return {
                        tableList: Array.from(tc),
                        columnList: Ji(ec),
                        ast: e
                      };
                    }(t, e), r = t) : (fo = r, r = o);
                  } else
                    fo = r, r = o;
                  return r;
                }()) === o && (t = mo()) === o && (t = So()), t !== o ? r = t : (fo = r, r = o)) : (fo = r, r = o), r;
              }
              function mo() {
                var t;
                return (t = function () {
                  var r, t, e, n;
                  r = fo, (t = oa()) !== o && Si() !== o && (e = Ea()) !== o && Si() !== o && (n = Qo()) !== o ? (u = t, s = e, (a = n) && a.forEach(r => tc.add(`${ u }::${ r.db }::${ r.table }`)), t = {
                    tableList: Array.from(tc),
                    columnList: Ji(ec),
                    ast: {
                      type: u.toLowerCase(),
                      keyword: s.toLowerCase(),
                      name: a
                    }
                  }, r = t) : (fo = r, r = o);
                  var u, s, a;
                  return r;
                }()) === o && (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u, s, a, i, c, l, f;
                    t = fo, (e = aa()) !== o && Si() !== o ? ((n = ia()) === o && (n = null), n !== o && Si() !== o && Ea() !== o && Si() !== o ? ((u = ca()) === o && (u = null), u !== o && Si() !== o && (s = Qo()) !== o && Si() !== o && (a = function () {
                      var r, t, e, n, u, s, a, i, c;
                      if (r = fo, (t = hi()) !== o)
                        if (Si() !== o)
                          if ((e = Ro()) !== o) {
                            for (n = [], u = fo, (s = Si()) !== o && (a = wi()) !== o && (i = Si()) !== o && (c = Ro()) !== o ? u = s = [
                                s,
                                a,
                                i,
                                c
                              ] : (fo = u, u = o); u !== o;)
                              n.push(u), u = fo, (s = Si()) !== o && (a = wi()) !== o && (i = Si()) !== o && (c = Ro()) !== o ? u = s = [
                                s,
                                a,
                                i,
                                c
                              ] : (fo = u, u = o);
                            n !== o && (u = Si()) !== o && (s = Ai()) !== o ? (t = qi(e, n), r = t) : (fo = r, r = o);
                          } else
                            fo = r, r = o;
                        else
                          fo = r, r = o;
                      else
                        fo = r, r = o;
                      return r;
                    }()) !== o && Si() !== o ? ((i = function () {
                      var r, t, e, n, u, s, a, i;
                      if (r = fo, (t = Po()) !== o) {
                        for (e = [], n = fo, (u = Si()) !== o ? ((s = wi()) === o && (s = null), s !== o && (a = Si()) !== o && (i = Po()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (fo = n, n = o)) : (fo = n, n = o); n !== o;)
                          e.push(n), n = fo, (u = Si()) !== o ? ((s = wi()) === o && (s = null), s !== o && (a = Si()) !== o && (i = Po()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (fo = n, n = o)) : (fo = n, n = o);
                        e !== o ? (t = qi(t, e), r = t) : (fo = r, r = o);
                      } else
                        fo = r, r = o;
                      return r;
                    }()) === o && (i = null), i !== o && Si() !== o ? ((c = function () {
                      var t, e, n, u;
                      t = fo, 'ignore' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(He));
                      e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                        e,
                        n
                      ] : (fo = t, t = o)) : (fo = t, t = o);
                      return t;
                    }()) === o && (c = va()), c === o && (c = null), c !== o && Si() !== o ? ((l = wa()) === o && (l = null), l !== o && Si() !== o ? ((f = Io()) === o && (f = null), f !== o ? (v = e, b = n, d = u, C = a, p = i, w = c, E = l, h = f, (L = s) && L.forEach(r => tc.add(`create::${ r.db }::${ r.table }`)), e = {
                      tableList: Array.from(tc),
                      columnList: Ji(ec),
                      ast: {
                        type: v[0].toLowerCase(),
                        keyword: 'table',
                        temporary: b && b[0].toLowerCase(),
                        if_not_exists: d && d[0].toLowerCase(),
                        table: L,
                        ignore_replace: w && w[0].toLowerCase(),
                        as: E && E[0].toLowerCase(),
                        query_expr: h && h.ast,
                        create_definitions: C,
                        table_options: p
                      }
                    }, t = e) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o);
                    var v, b, d, L, C, p, w, E, h;
                    t === o && (t = fo, (e = aa()) !== o && Si() !== o ? ((n = ia()) === o && (n = null), n !== o && Si() !== o && Ea() !== o && Si() !== o ? ((u = ca()) === o && (u = null), u !== o && Si() !== o && (s = Qo()) !== o && Si() !== o && (a = function r() {
                      var t, e;
                      (t = function () {
                        var r, t;
                        r = fo, Ma() !== o && Si() !== o && (t = Qo()) !== o ? r = {
                          type: 'like',
                          table: t
                        } : (fo = r, r = o);
                        return r;
                      }()) === o && (t = fo, hi() !== o && Si() !== o && (e = r()) !== o && Si() !== o && Ai() !== o ? ((n = e).parentheses = !0, t = n) : (fo = t, t = o));
                      var n;
                      return t;
                    }()) !== o ? (e = function (r, t, e, n, u) {
                      return n && n.forEach(r => tc.add(`create::${ r.db }::${ r.table }`)), {
                        tableList: Array.from(tc),
                        columnList: Ji(ec),
                        ast: {
                          type: r[0].toLowerCase(),
                          keyword: 'table',
                          temporary: t && t[0].toLowerCase(),
                          if_not_exists: e && e[0].toLowerCase(),
                          table: n,
                          like: u
                        }
                      };
                    }(e, n, u, s, a), t = e) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o));
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a, i, c, l, f, v, b, d, L, C, p, w, E;
                    t = fo, (e = aa()) !== o && Si() !== o ? ((n = Ci()) === o && (n = null), n !== o && Si() !== o ? ('trigger' === r.substr(fo, 7).toLowerCase() ? (u = r.substr(fo, 7), fo += 7) : (u = o, 0 === Co && Ao(W)), u !== o && Si() !== o && (s = ks()) !== o && Si() !== o ? ('before' === r.substr(fo, 6).toLowerCase() ? (a = r.substr(fo, 6), fo += 6) : (a = o, 0 === Co && Ao(V)), a === o && ('after' === r.substr(fo, 5).toLowerCase() ? (a = r.substr(fo, 5), fo += 5) : (a = o, 0 === Co && Ao(K)), a === o && ('instead of' === r.substr(fo, 10).toLowerCase() ? (a = r.substr(fo, 10), fo += 10) : (a = o, 0 === Co && Ao(q)))), a !== o && Si() !== o && (i = function () {
                      var r, t, e, n, u, s, a, i;
                      if (r = fo, (t = Fo()) !== o) {
                        for (e = [], n = fo, (u = Si()) !== o && (s = Fa()) !== o && (a = Si()) !== o && (i = Fo()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (fo = n, n = o); n !== o;)
                          e.push(n), n = fo, (u = Si()) !== o && (s = Fa()) !== o && (a = Si()) !== o && (i = Fo()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (fo = n, n = o);
                        e !== o ? (t = qi(t, e), r = t) : (fo = r, r = o);
                      } else
                        fo = r, r = o;
                      return r;
                    }()) !== o && Si() !== o ? ('on' === r.substr(fo, 2).toLowerCase() ? (c = r.substr(fo, 2), fo += 2) : (c = o, 0 === Co && Ao(Z)), c !== o && Si() !== o && (l = ns()) !== o && Si() !== o ? (f = fo, (v = Ca()) !== o && (b = Si()) !== o && (d = ns()) !== o ? f = v = [
                      v,
                      b,
                      d
                    ] : (fo = f, f = o), f === o && (f = null), f !== o && (v = Si()) !== o ? ((b = function () {
                      var t, e, n, u, s;
                      t = fo, e = fo, 'not' === r.substr(fo, 3).toLowerCase() ? (n = r.substr(fo, 3), fo += 3) : (n = o, 0 === Co && Ao(rr));
                      n === o && (n = null);
                      n !== o && (u = Si()) !== o ? ('deferrable' === r.substr(fo, 10).toLowerCase() ? (s = r.substr(fo, 10), fo += 10) : (s = o, 0 === Co && Ao(tr)), s !== o ? e = n = [
                        n,
                        u,
                        s
                      ] : (fo = e, e = o)) : (fo = e, e = o);
                      e !== o && (n = Si()) !== o ? ('initially immediate' === r.substr(fo, 19).toLowerCase() ? (u = r.substr(fo, 19), fo += 19) : (u = o, 0 === Co && Ao(er)), u === o && ('initially deferred' === r.substr(fo, 18).toLowerCase() ? (u = r.substr(fo, 18), fo += 18) : (u = o, 0 === Co && Ao(nr))), u !== o ? (i = u, e = {
                        keyword: (a = e) && a[0] ? a[0].toLowerCase() + ' deferrable' : 'deferrable',
                        args: i && i.toLowerCase()
                      }, t = e) : (fo = t, t = o)) : (fo = t, t = o);
                      var a, i;
                      return t;
                    }()) === o && (b = null), b !== o && (d = Si()) !== o ? ((L = function () {
                      var t, e, n, u;
                      t = fo, 'for' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(ur));
                      e !== o && Si() !== o ? ('each' === r.substr(fo, 4).toLowerCase() ? (n = r.substr(fo, 4), fo += 4) : (n = o, 0 === Co && Ao(or)), n === o && (n = null), n !== o && Si() !== o ? ('row' === r.substr(fo, 3).toLowerCase() ? (u = r.substr(fo, 3), fo += 3) : (u = o, 0 === Co && Ao(sr)), u === o && ('statement' === r.substr(fo, 9).toLowerCase() ? (u = r.substr(fo, 9), fo += 9) : (u = o, 0 === Co && Ao(ar))), u !== o ? (s = e, i = u, e = {
                        keyword: (a = n) ? `${ s.toLowerCase() } ${ a.toLowerCase() }` : s.toLowerCase(),
                        args: i.toLowerCase()
                      }, t = e) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o);
                      var s, a, i;
                      return t;
                    }()) === o && (L = null), L !== o && Si() !== o ? ((C = function () {
                      var r, t;
                      r = fo, Ha() !== o && Si() !== o && hi() !== o && Si() !== o && (t = As()) !== o && Si() !== o && Ai() !== o ? r = {
                        type: 'when',
                        cond: t,
                        parentheses: !0
                      } : (fo = r, r = o);
                      return r;
                    }()) === o && (C = null), C !== o && Si() !== o ? ('execute' === r.substr(fo, 7).toLowerCase() ? (p = r.substr(fo, 7), fo += 7) : (p = o, 0 === Co && Ao(z)), p !== o && Si() !== o ? ('procedure' === r.substr(fo, 9).toLowerCase() ? (w = r.substr(fo, 9), fo += 9) : (w = o, 0 === Co && Ao(J)), w !== o && Si() !== o && (E = Pi()) !== o ? (h = n, A = u, T = i, m = l, S = f, I = b, N = L, R = C, _ = E, e = {
                      type: 'create',
                      constraint: s,
                      location: (y = a) && y.toLowerCase(),
                      events: T,
                      table: m,
                      from: S && S[2],
                      deferrable: I,
                      for_each: N,
                      when: R,
                      execute: {
                        keyword: 'execute procedure',
                        expr: _
                      },
                      constraint_type: A && A.toLowerCase(),
                      keyword: A && A.toLowerCase(),
                      constraint_kw: h && h.toLowerCase(),
                      resource: 'constraint'
                    }, t = e) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o);
                    var h, A, y, T, m, S, I, N, R, _;
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a, f, v, b, d, L, C, p, w;
                    t = fo, (e = aa()) !== o && Si() !== o ? ('extension' === r.substr(fo, 9).toLowerCase() ? (n = r.substr(fo, 9), fo += 9) : (n = o, 0 === Co && Ao(i)), n !== o && Si() !== o ? ((u = ca()) === o && (u = null), u !== o && Si() !== o ? ((s = ks()) === o && (s = Ws()), s !== o && Si() !== o ? ((a = Sa()) === o && (a = null), a !== o && Si() !== o ? (f = fo, 'schema' === r.substr(fo, 6).toLowerCase() ? (v = r.substr(fo, 6), fo += 6) : (v = o, 0 === Co && Ao(c)), v !== o && (b = Si()) !== o && (d = ks()) !== o ? f = v = [
                      v,
                      b,
                      d
                    ] : (fo = f, f = o), f === o && (f = Ws()), f === o && (f = null), f !== o && (v = Si()) !== o ? (b = fo, 'version' === r.substr(fo, 7).toLowerCase() ? (d = r.substr(fo, 7), fo += 7) : (d = o, 0 === Co && Ao(l)), d !== o && (L = Si()) !== o ? ((C = ks()) === o && (C = Ws()), C !== o ? b = d = [
                      d,
                      L,
                      C
                    ] : (fo = b, b = o)) : (fo = b, b = o), b === o && (b = null), b !== o && (d = Si()) !== o ? (L = fo, (C = Ca()) !== o && (p = Si()) !== o ? ((w = ks()) === o && (w = Ws()), w !== o ? L = C = [
                      C,
                      p,
                      w
                    ] : (fo = L, L = o)) : (fo = L, L = o), L === o && (L = null), L !== o ? (e = function (r, t, e, n, u, o, s, a) {
                      return {
                        type: 'create',
                        keyword: t.toLowerCase(),
                        if_not_exists: e && e[0].toLowerCase(),
                        extension: Qi(n),
                        with: u && u[0].toLowerCase(),
                        schema: Qi(o && o[2].toLowerCase()),
                        version: Qi(s && s[2]),
                        from: Qi(a && a[2])
                      };
                    }(0, n, u, s, a, f, b, L), t = e) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a, i, c, l, f, v, b, d, L, C, p, w, E;
                    t = fo, (e = aa()) !== o && Si() !== o ? ((n = di()) === o && (n = null), n !== o && Si() !== o && (u = vi()) !== o && Si() !== o ? ((s = function () {
                      var t, e, n, u;
                      t = fo, 'concurrently' === r.substr(fo, 12).toLowerCase() ? (e = r.substr(fo, 12), fo += 12) : (e = o, 0 === Co && Ao(Hu));
                      e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'CONCURRENTLY' : (fo = t, t = o)) : (fo = t, t = o);
                      return t;
                    }()) === o && (s = null), s !== o && Si() !== o ? ((a = xs()) === o && (a = null), a !== o && Si() !== o && (i = ha()) !== o && Si() !== o && (c = ns()) !== o && Si() !== o ? ((l = Zo()) === o && (l = null), l !== o && Si() !== o && hi() !== o && Si() !== o && (f = function () {
                      var r, t, e, n, u, s, a, i;
                      if (r = fo, (t = No()) !== o) {
                        for (e = [], n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = No()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (fo = n, n = o); n !== o;)
                          e.push(n), n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = No()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (fo = n, n = o);
                        e !== o ? (t = qi(t, e), r = t) : (fo = r, r = o);
                      } else
                        fo = r, r = o;
                      return r;
                    }()) !== o && Si() !== o && Ai() !== o && Si() !== o ? (v = fo, (b = Sa()) !== o && (d = Si()) !== o && (L = hi()) !== o && (C = Si()) !== o && (p = function () {
                      var r, t, e, n, u, s, a, i;
                      if (r = fo, (t = Jo()) !== o) {
                        for (e = [], n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Jo()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (fo = n, n = o); n !== o;)
                          e.push(n), n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Jo()) !== o ? n = u = [
                            u,
                            s,
                            a,
                            i
                          ] : (fo = n, n = o);
                        e !== o ? (t = qi(t, e), r = t) : (fo = r, r = o);
                      } else
                        fo = r, r = o;
                      return r;
                    }()) !== o && (w = Si()) !== o && (E = Ai()) !== o ? v = b = [
                      b,
                      d,
                      L,
                      C,
                      p,
                      w,
                      E
                    ] : (fo = v, v = o), v === o && (v = null), v !== o && (b = Si()) !== o ? (d = fo, (L = function () {
                      var t, e, n, u;
                      t = fo, 'tablespace' === r.substr(fo, 10).toLowerCase() ? (e = r.substr(fo, 10), fo += 10) : (e = o, 0 === Co && Ao(Ve));
                      e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'TABLESPACE' : (fo = t, t = o)) : (fo = t, t = o);
                      return t;
                    }()) !== o && (C = Si()) !== o && (p = ks()) !== o ? d = L = [
                      L,
                      C,
                      p
                    ] : (fo = d, d = o), d === o && (d = null), d !== o && (L = Si()) !== o ? ((C = os()) === o && (C = null), C !== o && (p = Si()) !== o ? (h = e, A = n, y = u, T = s, m = a, S = i, I = c, N = l, R = f, _ = v, g = d, O = C, e = {
                      tableList: Array.from(tc),
                      columnList: Ji(ec),
                      ast: {
                        type: h[0].toLowerCase(),
                        index_type: A && A.toLowerCase(),
                        keyword: y.toLowerCase(),
                        concurrently: T && T.toLowerCase(),
                        index: m,
                        on_kw: S[0].toLowerCase(),
                        table: I,
                        index_using: N,
                        index_columns: R,
                        with: _ && _[4],
                        with_before_where: !0,
                        tablespace: g && {
                          type: 'origin',
                          value: g[2]
                        },
                        where: O
                      }
                    }, t = e) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o);
                    var h, A, y, T, m, S, I, N, R, _, g, O;
                    return t;
                  }());
                  return t;
                }()) === o && (t = function () {
                  var r, t, e, n;
                  r = fo, (t = ui()) !== o && Si() !== o ? ((e = Ea()) === o && (e = null), e !== o && Si() !== o && (n = Qo()) !== o ? (u = t, s = e, (a = n) && a.forEach(r => tc.add(`${ u }::${ r.db }::${ r.table }`)), t = {
                    tableList: Array.from(tc),
                    columnList: Ji(ec),
                    ast: {
                      type: u.toLowerCase(),
                      keyword: s && s.toLowerCase() || 'table',
                      name: a
                    }
                  }, r = t) : (fo = r, r = o)) : (fo = r, r = o);
                  var u, s, a;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = fo, (t = ba()) !== o && Si() !== o && Ea() !== o && Si() !== o && (e = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = fo, (t = qo()) !== o) {
                      for (e = [], n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = qo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o); n !== o;)
                        e.push(n), n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = qo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o);
                      e !== o ? (t = qi(t, e), r = t) : (fo = r, r = o);
                    } else
                      fo = r, r = o;
                    return r;
                  }()) !== o ? ((n = e).forEach(r => r.forEach(r => r.table && tc.add(`rename::${ r.db }::${ r.table }`))), t = {
                    tableList: Array.from(tc),
                    columnList: Ji(ec),
                    ast: {
                      type: 'rename',
                      table: n
                    }
                  }, r = t) : (fo = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = fo, (e = function () {
                    var t, e, n, u;
                    t = fo, 'call' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Un));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'CALL' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) !== o && Si() !== o && (n = Pi()) !== o ? (u = n, e = {
                    tableList: Array.from(tc),
                    columnList: Ji(ec),
                    ast: {
                      type: 'call',
                      expr: u
                    }
                  }, t = e) : (fo = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = fo, (e = function () {
                    var t, e, n, u;
                    t = fo, 'use' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(Ne));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) !== o && Si() !== o && (n = xs()) !== o ? (u = n, tc.add(`use::${ u }::null`), e = {
                    tableList: Array.from(tc),
                    columnList: Ji(ec),
                    ast: {
                      type: 'use',
                      db: u
                    }
                  }, t = e) : (fo = t, t = o);
                  var u;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = fo, (e = function () {
                    var t, e, n, u;
                    t = fo, 'alter' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(Re));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) !== o && Si() !== o && Ea() !== o && Si() !== o && (n = Qo()) !== o && Si() !== o && (u = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = fo, (t = Uo()) !== o) {
                      for (e = [], n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Uo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o); n !== o;)
                        e.push(n), n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Uo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o);
                      e !== o ? (t = qi(t, e), r = t) : (fo = r, r = o);
                    } else
                      fo = r, r = o;
                    return r;
                  }()) !== o ? (a = u, (s = n) && s.length > 0 && s.forEach(r => tc.add(`alter::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(tc),
                    columnList: Ji(ec),
                    ast: {
                      type: 'alter',
                      table: s,
                      expr: a
                    }
                  }, t = e) : (fo = t, t = o);
                  var s, a;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = fo, (e = pa()) !== o && Si() !== o ? ((n = function () {
                    var t, e, n, u;
                    t = fo, 'global' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(yu));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'GLOBAL' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = fo, 'session' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(Tu));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'SESSION' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = fo, 'local' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(mu));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'LOCAL' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = fo, 'persist' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(Su));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'PERSIST' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (n = function () {
                    var t, e, n, u;
                    t = fo, 'persist_only' === r.substr(fo, 12).toLowerCase() ? (e = r.substr(fo, 12), fo += 12) : (e = o, 0 === Co && Ao(Iu));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'PERSIST_ONLY' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()), n === o && (n = null), n !== o && Si() !== o && (u = xi()) !== o ? (s = n, (a = u).keyword = s, e = {
                    tableList: Array.from(tc),
                    columnList: Ji(ec),
                    ast: {
                      type: 'set',
                      expr: a
                    }
                  }, t = e) : (fo = t, t = o)) : (fo = t, t = o);
                  var s, a;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = fo, (e = function () {
                    var t, e, n, u;
                    t = fo, 'lock' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(g));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) !== o && Si() !== o ? ((n = Ea()) === o && (n = null), n !== o && Si() !== o && (u = Qo()) !== o && Si() !== o ? ((s = function () {
                    var t, e, n, u;
                    t = fo, 'in' === r.substr(fo, 2).toLowerCase() ? (e = r.substr(fo, 2), fo += 2) : (e = o, 0 === Co && Ao(yr));
                    e !== o && Si() !== o ? ('access share' === r.substr(fo, 12).toLowerCase() ? (n = r.substr(fo, 12), fo += 12) : (n = o, 0 === Co && Ao(Tr)), n === o && ('row share' === r.substr(fo, 9).toLowerCase() ? (n = r.substr(fo, 9), fo += 9) : (n = o, 0 === Co && Ao(mr)), n === o && ('row exclusive' === r.substr(fo, 13).toLowerCase() ? (n = r.substr(fo, 13), fo += 13) : (n = o, 0 === Co && Ao(Sr)), n === o && ('share update exclusive' === r.substr(fo, 22).toLowerCase() ? (n = r.substr(fo, 22), fo += 22) : (n = o, 0 === Co && Ao(Ir)), n === o && ('share row exclusive' === r.substr(fo, 19).toLowerCase() ? (n = r.substr(fo, 19), fo += 19) : (n = o, 0 === Co && Ao(Nr)), n === o && ('exclusive' === r.substr(fo, 9).toLowerCase() ? (n = r.substr(fo, 9), fo += 9) : (n = o, 0 === Co && Ao(x)), n === o && ('access exclusive' === r.substr(fo, 16).toLowerCase() ? (n = r.substr(fo, 16), fo += 16) : (n = o, 0 === Co && Ao(Rr)), n === o && ('share' === r.substr(fo, 5).toLowerCase() ? (n = r.substr(fo, 5), fo += 5) : (n = o, 0 === Co && Ao(_r))))))))), n !== o && Si() !== o ? ('mode' === r.substr(fo, 4).toLowerCase() ? (u = r.substr(fo, 4), fo += 4) : (u = o, 0 === Co && Ao(gr)), u !== o ? (e = { mode: `in ${ n.toLowerCase() } mode` }, t = e) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (s = null), s !== o && Si() !== o ? ('nowait' === r.substr(fo, 6).toLowerCase() ? (a = r.substr(fo, 6), fo += 6) : (a = o, 0 === Co && Ao(Or)), a === o && (a = null), a !== o ? (i = n, l = s, f = a, (c = u) && c.forEach(r => tc.add(`lock::${ r.db }::${ r.table }`)), e = {
                    tableList: Array.from(tc),
                    columnList: Ji(ec),
                    ast: {
                      type: 'lock',
                      keyword: i && i.toLowerCase(),
                      tables: c.map(r => ({ table: r })),
                      lock_mode: l,
                      nowait: f
                    }
                  }, t = e) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o);
                  var i, c, l, f;
                  return t;
                }()), t;
              }
              function So() {
                var r;
                return (r = Io()) === o && (r = function () {
                  var r, t, e, n, u, s;
                  r = fo, (t = sa()) !== o && Si() !== o && (e = Qo()) !== o && Si() !== o && pa() !== o && Si() !== o && (n = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = fo, (t = fs()) !== o) {
                      for (e = [], n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = fs()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o); n !== o;)
                        e.push(n), n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = fs()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o);
                      e !== o ? (t = qi(t, e), r = t) : (fo = r, r = o);
                    } else
                      fo = r, r = o;
                    return r;
                  }()) !== o && Si() !== o ? ((u = os()) === o && (u = null), u !== o && Si() !== o ? ((s = vs()) === o && (s = null), s !== o ? (i = n, c = u, l = s, (a = e) && a.forEach(r => {
                    const {
                      db: t,
                      as: e,
                      table: n
                    } = r;
                    tc.add(`update::${ t }::${ n }`);
                  }), i && i.forEach(r => ec.add(`update::${ r.table }::${ r.column }`)), t = {
                    tableList: Array.from(tc),
                    columnList: Ji(ec),
                    ast: {
                      type: 'update',
                      table: a,
                      set: i,
                      where: c,
                      returning: l
                    }
                  }, r = t) : (fo = r, r = o)) : (fo = r, r = o)) : (fo = r, r = o);
                  var a, i, c, l;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s, a, i;
                  r = fo, (t = Ls()) !== o && Si() !== o ? ((e = La()) === o && (e = null), e !== o && Si() !== o && (n = ns()) !== o && Si() !== o ? ((u = ds()) === o && (u = null), u !== o && Si() !== o && hi() !== o && Si() !== o && (s = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = fo, (t = Ds()) !== o) {
                      for (e = [], n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Ds()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o); n !== o;)
                        e.push(n), n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Ds()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o);
                      e !== o ? (t = Mr(t, e), r = t) : (fo = r, r = o);
                    } else
                      fo = r, r = o;
                    return r;
                  }()) !== o && Si() !== o && Ai() !== o && Si() !== o && (a = bs()) !== o && Si() !== o ? ((i = vs()) === o && (i = null), i !== o ? (t = function (r, t, e, n, u, o) {
                    if (t && (tc.add(`insert::${ t.db }::${ t.table }`), t.as = null), n) {
                      let r = t && t.table || null;
                      n.forEach(t => ec.add(`insert::${ r }::${ t }`));
                    }
                    return {
                      tableList: Array.from(tc),
                      columnList: Ji(ec),
                      ast: {
                        type: r,
                        table: [t],
                        columns: n,
                        values: u,
                        partition: e,
                        returning: o
                      }
                    };
                  }(t, n, u, s, a, i), r = t) : (fo = r, r = o)) : (fo = r, r = o)) : (fo = r, r = o)) : (fo = r, r = o);
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s;
                  r = fo, (t = Ls()) !== o && Si() !== o && La() !== o && Si() !== o && (e = ns()) !== o && Si() !== o ? ((n = ds()) === o && (n = null), n !== o && Si() !== o && (u = bs()) !== o && Si() !== o ? ((s = vs()) === o && (s = null), s !== o ? (a = t, c = n, l = u, f = s, (i = e) && (tc.add(`insert::${ i.db }::${ i.table }`), ec.add(`insert::${ i.table }::(.*)`), i.as = null), t = {
                    tableList: Array.from(tc),
                    columnList: Ji(ec),
                    ast: {
                      type: a,
                      table: [i],
                      columns: null,
                      values: l,
                      partition: c,
                      returning: f
                    }
                  }, r = t) : (fo = r, r = o)) : (fo = r, r = o)) : (fo = r, r = o);
                  var a, i, c, l, f;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u;
                  r = fo, (t = la()) !== o && Si() !== o ? ((e = Qo()) === o && (e = null), e !== o && Si() !== o && (n = Ko()) !== o && Si() !== o ? ((u = os()) === o && (u = null), u !== o ? (t = function (r, t, e) {
                    if (t && t.forEach(r => {
                        r.table && tc.add(`delete::${ r.db }::${ r.table }`), ec.add(`delete::${ r.table }::(.*)`);
                      }), null === r && 1 === t.length) {
                      const e = t[0];
                      r = [{
                          db: e.db,
                          table: e.table,
                          as: e.as,
                          addition: !0
                        }];
                    }
                    return {
                      tableList: Array.from(tc),
                      columnList: Ji(ec),
                      ast: {
                        type: 'delete',
                        table: r,
                        from: t,
                        where: e
                      }
                    };
                  }(e, n, u), r = t) : (fo = r, r = o)) : (fo = r, r = o)) : (fo = r, r = o);
                  return r;
                }()) === o && (r = mo()) === o && (r = function () {
                  var r, t;
                  r = [], t = Ui();
                  for (; t !== o;)
                    r.push(t), t = Ui();
                  return r;
                }()), r;
              }
              function Io() {
                var r, t, e, n, u, s, a, i, c, l;
                if (r = fo, (t = Ho()) !== o) {
                  for (e = [], n = fo, (u = Si()) !== o && (s = Ta()) !== o && (a = Si()) !== o ? ((i = _a()) === o && (i = null), i !== o && (c = Si()) !== o && (l = Ho()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c,
                      l
                    ] : (fo = n, n = o)) : (fo = n, n = o); n !== o;)
                    e.push(n), n = fo, (u = Si()) !== o && (s = Ta()) !== o && (a = Si()) !== o ? ((i = _a()) === o && (i = null), i !== o && (c = Si()) !== o && (l = Ho()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c,
                      l
                    ] : (fo = n, n = o)) : (fo = n, n = o);
                  e !== o && (n = Si()) !== o ? ((u = as()) === o && (u = null), u !== o && (s = Si()) !== o ? ((a = ls()) === o && (a = null), a !== o ? r = t = function (r, t, e, n) {
                    let u = r;
                    for (let r = 0; r < t.length; r++)
                      u._next = t[r][5], u.union = t[r][3] ? 'union all' : 'union', u = u._next;
                    return e && (r._orderby = e), n && (r._limit = n), {
                      tableList: Array.from(tc),
                      columnList: Ji(ec),
                      ast: r
                    };
                  }(t, e, u, a) : (fo = r, r = o)) : (fo = r, r = o)) : (fo = r, r = o);
                } else
                  fo = r, r = o;
                return r;
              }
              function No() {
                var t, e, n, u, s, a, i, c, l, f, L;
                return t = fo, (e = As()) !== o && Si() !== o ? ((n = go()) === o && (n = null), n !== o && Si() !== o ? ((u = xs()) === o && (u = null), u !== o && Si() !== o ? ((s = Na()) === o && (s = Ra()), s === o && (s = null), s !== o && Si() !== o ? (a = fo, 'nulls' === r.substr(fo, 5).toLowerCase() ? (i = r.substr(fo, 5), fo += 5) : (i = o, 0 === Co && Ao(v)), i !== o && (c = Si()) !== o ? ('first' === r.substr(fo, 5).toLowerCase() ? (l = r.substr(fo, 5), fo += 5) : (l = o, 0 === Co && Ao(b)), l === o && ('last' === r.substr(fo, 4).toLowerCase() ? (l = r.substr(fo, 4), fo += 4) : (l = o, 0 === Co && Ao(d))), l !== o ? a = i = [
                  i,
                  c,
                  l
                ] : (fo = a, a = o)) : (fo = a, a = o), a === o && (a = null), a !== o ? (L = a, t = e = {
                  column: e,
                  collate: n,
                  opclass: u,
                  order: (f = s) && f.toLowerCase() || 'asc',
                  nulls: L && `${ L[0].toLowerCase() } ${ L[2].toLowerCase() }`
                }) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Ro() {
                var t;
                return (t = _o()) === o && (t = xo()) === o && (t = Mo()) === o && (t = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u, s, a;
                    t = fo, (e = Do()) === o && (e = null);
                    e !== o && Si() !== o ? ('primary key' === r.substr(fo, 11).toLowerCase() ? (n = r.substr(fo, 11), fo += 11) : (n = o, 0 === Co && Ao(M)), n !== o && Si() !== o ? ((u = Zo()) === o && (u = null), u !== o && Si() !== o && (s = Yo()) !== o && Si() !== o ? ((a = zo()) === o && (a = null), a !== o ? (c = n, l = u, f = s, v = a, e = {
                      constraint: (i = e) && i.constraint,
                      definition: f,
                      constraint_type: c.toLowerCase(),
                      keyword: i && i.keyword,
                      index_type: l,
                      resource: 'constraint',
                      index_options: v
                    }, t = e) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o);
                    var i, c, l, f, v;
                    return t;
                  }()) === o && (t = function () {
                    var r, t, e, n, u, s, a, i;
                    r = fo, (t = Do()) === o && (t = null);
                    t !== o && Si() !== o && (e = di()) !== o && Si() !== o ? ((n = vi()) === o && (n = bi()), n === o && (n = null), n !== o && Si() !== o ? ((u = Ds()) === o && (u = null), u !== o && Si() !== o ? ((s = Zo()) === o && (s = null), s !== o && Si() !== o && (a = Yo()) !== o && Si() !== o ? ((i = zo()) === o && (i = null), i !== o ? (l = e, f = n, v = u, b = s, d = a, L = i, t = {
                      constraint: (c = t) && c.constraint,
                      definition: d,
                      constraint_type: f && `${ l.toLowerCase() } ${ f.toLowerCase() }` || l.toLowerCase(),
                      keyword: c && c.keyword,
                      index_type: b,
                      index: v,
                      resource: 'constraint',
                      index_options: L
                    }, r = t) : (fo = r, r = o)) : (fo = r, r = o)) : (fo = r, r = o)) : (fo = r, r = o)) : (fo = r, r = o);
                    var c, l, f, v, b, d, L;
                    return r;
                  }()) === o && (t = function () {
                    var t, e, n, u, s, a;
                    t = fo, (e = Do()) === o && (e = null);
                    e !== o && Si() !== o ? ('foreign key' === r.substr(fo, 11).toLowerCase() ? (n = r.substr(fo, 11), fo += 11) : (n = o, 0 === Co && Ao(D)), n !== o && Si() !== o ? ((u = Ds()) === o && (u = null), u !== o && Si() !== o && (s = Yo()) !== o && Si() !== o ? ((a = ko()) === o && (a = null), a !== o ? (c = n, l = u, f = s, v = a, e = {
                      constraint: (i = e) && i.constraint,
                      definition: f,
                      constraint_type: c,
                      keyword: i && i.keyword,
                      index: l,
                      resource: 'constraint',
                      reference_definition: v
                    }, t = e) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o);
                    var i, c, l, f, v;
                    return t;
                  }());
                  return t;
                }()), t;
              }
              function _o() {
                var t, e, n, u, s, a, i, c, l, f, v, b, d, I, N, R, _, g, O, U, x, M, D;
                return t = fo, (e = Us()) !== o && Si() !== o && (n = Yi()) !== o && Si() !== o ? ((u = function () {
                  var r, t, e;
                  r = fo, (t = Xs()) === o && (t = Bs());
                  t !== o && Si() !== o ? ((e = Oo()) === o && (e = null), e !== o ? (u = e, (n = t) && !n.value && (n.value = 'null'), r = t = {
                    default_val: u,
                    nullable: n
                  }) : (fo = r, r = o)) : (fo = r, r = o);
                  var n, u;
                  r === o && (r = fo, (t = Oo()) !== o && Si() !== o ? ((e = Xs()) === o && (e = Bs()), e === o && (e = null), e !== o ? (t = function (r, t) {
                    return t && !t.value && (t.value = 'null'), {
                      default_val: r,
                      nullable: t
                    };
                  }(t, e), r = t) : (fo = r, r = o)) : (fo = r, r = o));
                  return r;
                }()) === o && (u = null), u !== o && Si() !== o ? ('auto_increment' === r.substr(fo, 14).toLowerCase() ? (s = r.substr(fo, 14), fo += 14) : (s = o, 0 === Co && Ao(L)), s === o && (s = null), s !== o && Si() !== o ? ('unique' === r.substr(fo, 6).toLowerCase() ? (a = r.substr(fo, 6), fo += 6) : (a = o, 0 === Co && Ao(C)), a === o && (a = fo, 'primary' === r.substr(fo, 7).toLowerCase() ? (i = r.substr(fo, 7), fo += 7) : (i = o, 0 === Co && Ao(p)), i !== o && (c = Si()) !== o ? ('key' === r.substr(fo, 3).toLowerCase() ? (l = r.substr(fo, 3), fo += 3) : (l = o, 0 === Co && Ao(w)), l !== o ? a = i = [
                  i,
                  c,
                  l
                ] : (fo = a, a = o)) : (fo = a, a = o)), a === o && (a = null), a !== o && (i = Si()) !== o ? ((c = Ri()) === o && (c = null), c !== o && (l = Si()) !== o ? ((f = go()) === o && (f = null), f !== o && Si() !== o ? ((v = function () {
                  var t, e, n;
                  t = fo, 'column_format' === r.substr(fo, 13).toLowerCase() ? (e = r.substr(fo, 13), fo += 13) : (e = o, 0 === Co && Ao(E));
                  e !== o && Si() !== o ? ('fixed' === r.substr(fo, 5).toLowerCase() ? (n = r.substr(fo, 5), fo += 5) : (n = o, 0 === Co && Ao(h)), n === o && ('dynamic' === r.substr(fo, 7).toLowerCase() ? (n = r.substr(fo, 7), fo += 7) : (n = o, 0 === Co && Ao(A)), n === o && ('default' === r.substr(fo, 7).toLowerCase() ? (n = r.substr(fo, 7), fo += 7) : (n = o, 0 === Co && Ao(y)))), n !== o ? (e = function (r, t) {
                    return {
                      type: 'column_format',
                      value: t.toLowerCase()
                    };
                  }(0, n), t = e) : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()) === o && (v = null), v !== o && Si() !== o ? ((b = function () {
                  var t, e, n;
                  t = fo, 'storage' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(T));
                  e !== o && Si() !== o ? ('disk' === r.substr(fo, 4).toLowerCase() ? (n = r.substr(fo, 4), fo += 4) : (n = o, 0 === Co && Ao(m)), n === o && ('memory' === r.substr(fo, 6).toLowerCase() ? (n = r.substr(fo, 6), fo += 6) : (n = o, 0 === Co && Ao(S))), n !== o ? (e = {
                    type: 'storage',
                    value: n.toLowerCase()
                  }, t = e) : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()) === o && (b = null), b !== o && Si() !== o ? ((d = ko()) === o && (d = null), d !== o ? (I = e, N = n, R = u, _ = s, g = a, O = c, U = f, x = v, M = b, D = d, ec.add(`create::${ I.table }::${ I.column }`), t = e = {
                  column: I,
                  definition: N,
                  nullable: R && R.nullable,
                  default_val: R && R.default_val,
                  auto_increment: _ && _.toLowerCase(),
                  unique_or_primary: Array.isArray(g) ? `${ g[0].toLowerCase() } ${ g[2].toLowerCase() }` : g,
                  comment: O,
                  collate: U,
                  column_format: x,
                  storage: M,
                  reference_definition: D,
                  resource: 'column'
                }) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function go() {
                var t, e;
                return t = fo, function () {
                  var t, e, n, u;
                  t = fo, 'collate' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(Lr));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'COLLATE' : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }() !== o && Si() !== o && (e = xs()) !== o ? t = {
                  type: 'collate',
                  value: e
                } : (fo = t, t = o), t;
              }
              function Oo() {
                var r, t;
                return r = fo, na() !== o && Si() !== o ? ((t = Ys()) === o && (t = As()), t !== o ? r = {
                  type: 'default',
                  value: t
                } : (fo = r, r = o)) : (fo = r, r = o), r;
              }
              function Uo() {
                var t;
                return (t = function () {
                  var r, t, e, n;
                  r = fo, (t = li()) !== o && Si() !== o ? ((e = fi()) === o && (e = null), e !== o && Si() !== o && (n = _o()) !== o ? (u = e, s = n, t = {
                    action: 'add',
                    ...s,
                    keyword: u,
                    resource: 'column',
                    type: 'alter'
                  }, r = t) : (fo = r, r = o)) : (fo = r, r = o);
                  var u, s;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = fo, oa() !== o && Si() !== o ? ((t = fi()) === o && (t = null), t !== o && Si() !== o && (e = Us()) !== o ? r = {
                    action: 'drop',
                    column: e,
                    keyword: t,
                    resource: 'column',
                    type: 'alter'
                  } : (fo = r, r = o)) : (fo = r, r = o);
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = fo, (t = li()) !== o && Si() !== o && (e = xo()) !== o ? (n = e, t = {
                    action: 'add',
                    type: 'alter',
                    ...n
                  }, r = t) : (fo = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e;
                  r = fo, (t = li()) !== o && Si() !== o && (e = Mo()) !== o ? (n = e, t = {
                    action: 'add',
                    type: 'alter',
                    ...n
                  }, r = t) : (fo = r, r = o);
                  var n;
                  return r;
                }()) === o && (t = function () {
                  var r, t, e, n;
                  r = fo, (t = ba()) !== o && Si() !== o ? ((e = ua()) === o && (e = wa()), e === o && (e = null), e !== o && Si() !== o && (n = xs()) !== o ? (s = n, t = {
                    action: 'rename',
                    type: 'alter',
                    resource: 'table',
                    keyword: (u = e) && u[0].toLowerCase(),
                    table: s
                  }, r = t) : (fo = r, r = o)) : (fo = r, r = o);
                  var u, s;
                  return r;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = fo, 'algorithm' === r.substr(fo, 9).toLowerCase() ? (e = r.substr(fo, 9), fo += 9) : (e = o, 0 === Co && Ao(I));
                  e !== o && Si() !== o && ci() !== o && Si() !== o ? ('default' === r.substr(fo, 7).toLowerCase() ? (n = r.substr(fo, 7), fo += 7) : (n = o, 0 === Co && Ao(y)), n === o && ('instant' === r.substr(fo, 7).toLowerCase() ? (n = r.substr(fo, 7), fo += 7) : (n = o, 0 === Co && Ao(N)), n === o && ('inplace' === r.substr(fo, 7).toLowerCase() ? (n = r.substr(fo, 7), fo += 7) : (n = o, 0 === Co && Ao(R)), n === o && ('copy' === r.substr(fo, 4).toLowerCase() ? (n = r.substr(fo, 4), fo += 4) : (n = o, 0 === Co && Ao(_))))), n !== o ? t = e = {
                    type: 'alter',
                    keyword: 'algorithm',
                    resource: 'algorithm',
                    algorithm: n
                  } : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n;
                  t = fo, 'lock' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(g));
                  e !== o && Si() !== o && ci() !== o && Si() !== o ? ('default' === r.substr(fo, 7).toLowerCase() ? (n = r.substr(fo, 7), fo += 7) : (n = o, 0 === Co && Ao(y)), n === o && ('none' === r.substr(fo, 4).toLowerCase() ? (n = r.substr(fo, 4), fo += 4) : (n = o, 0 === Co && Ao(O)), n === o && ('shared' === r.substr(fo, 6).toLowerCase() ? (n = r.substr(fo, 6), fo += 6) : (n = o, 0 === Co && Ao(U)), n === o && ('exclusive' === r.substr(fo, 9).toLowerCase() ? (n = r.substr(fo, 9), fo += 9) : (n = o, 0 === Co && Ao(x))))), n !== o ? t = e = {
                    type: 'alter',
                    keyword: 'lock',
                    resource: 'lock',
                    lock: n
                  } : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()), t;
              }
              function xo() {
                var r, t, e, n, u, s, a, i;
                return r = fo, (t = vi()) === o && (t = bi()), t !== o && Si() !== o ? ((e = Ds()) === o && (e = null), e !== o && Si() !== o ? ((n = Zo()) === o && (n = null), n !== o && Si() !== o && (u = Yo()) !== o && Si() !== o ? ((s = zo()) === o && (s = null), s !== o && Si() !== o ? (a = n, i = s, r = t = {
                  index: e,
                  definition: u,
                  keyword: t.toLowerCase(),
                  index_type: a,
                  resource: 'index',
                  index_options: i
                }) : (fo = r, r = o)) : (fo = r, r = o)) : (fo = r, r = o)) : (fo = r, r = o), r;
              }
              function Mo() {
                var t, e, n, u, s, a, i, c, l;
                return t = fo, (e = function () {
                  var t, e, n, u;
                  t = fo, 'fulltext' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(ku));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'FULLTEXT' : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()) === o && (e = function () {
                  var t, e, n, u;
                  t = fo, 'spatial' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao($u));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'SPATIAL' : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()), e !== o && Si() !== o ? ((n = vi()) === o && (n = bi()), n === o && (n = null), n !== o && Si() !== o ? ((u = Ds()) === o && (u = null), u !== o && Si() !== o && (s = Yo()) !== o && Si() !== o ? ((a = zo()) === o && (a = null), a !== o && Si() !== o ? (i = e, l = a, t = e = {
                  index: u,
                  definition: s,
                  keyword: (c = n) && `${ i.toLowerCase() } ${ c.toLowerCase() }` || i.toLowerCase(),
                  index_options: l,
                  resource: 'index'
                }) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Do() {
                var r, t, e, n;
                return r = fo, (t = Ci()) !== o && Si() !== o ? ((e = xs()) === o && (e = null), e !== o ? (n = e, r = t = {
                  keyword: t.toLowerCase(),
                  constraint: n
                }) : (fo = r, r = o)) : (fo = r, r = o), r;
              }
              function ko() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = fo, (e = function () {
                  var t, e, n, u;
                  t = fo, 'references' === r.substr(fo, 10).toLowerCase() ? (e = r.substr(fo, 10), fo += 10) : (e = o, 0 === Co && Ao(Gu));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'REFERENCES' : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()) !== o && Si() !== o && (n = Qo()) !== o && Si() !== o && (u = Yo()) !== o && Si() !== o ? ('match full' === r.substr(fo, 10).toLowerCase() ? (s = r.substr(fo, 10), fo += 10) : (s = o, 0 === Co && Ao(k)), s === o && ('match partial' === r.substr(fo, 13).toLowerCase() ? (s = r.substr(fo, 13), fo += 13) : (s = o, 0 === Co && Ao($)), s === o && ('match simple' === r.substr(fo, 12).toLowerCase() ? (s = r.substr(fo, 12), fo += 12) : (s = o, 0 === Co && Ao(F)))), s === o && (s = null), s !== o && Si() !== o ? ((a = $o()) === o && (a = null), a !== o && Si() !== o ? ((i = $o()) === o && (i = null), i !== o ? (c = s, l = a, f = i, t = e = {
                  definition: u,
                  table: n,
                  keyword: e.toLowerCase(),
                  match: c && c.toLowerCase(),
                  on_delete: l,
                  on_update: f
                }) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function $o() {
                var t, e, n, u;
                return t = fo, 'on delete' === r.substr(fo, 9).toLowerCase() ? (e = r.substr(fo, 9), fo += 9) : (e = o, 0 === Co && Ao(P)), e === o && ('on update' === r.substr(fo, 9).toLowerCase() ? (e = r.substr(fo, 9), fo += 9) : (e = o, 0 === Co && Ao(H))), e !== o && Si() !== o && (n = function () {
                  var e;
                  'restrict' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(G));
                  e === o && ('cascade' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(j)), e === o && ('set null' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(Y)), e === o && ('no action' === r.substr(fo, 9).toLowerCase() ? (e = r.substr(fo, 9), fo += 9) : (e = o, 0 === Co && Ao(B)), e === o && ('set default' === r.substr(fo, 11).toLowerCase() ? (e = r.substr(fo, 11), fo += 11) : (e = o, 0 === Co && Ao(X))))));
                  e !== o && (e = e.toLowerCase());
                  return e;
                }()) !== o ? (u = n, t = e = {
                  type: e.toLowerCase(),
                  value: u
                }) : (fo = t, t = o), t;
              }
              function Fo() {
                var t, e, n, u, s, a, i;
                return t = fo, (e = fa()) === o && (e = la()) === o && (e = ui()), e !== o && (i = e, e = { keyword: Array.isArray(i) ? i[0].toLowerCase() : i.toLowerCase() }), (t = e) === o && (t = fo, (e = sa()) !== o && Si() !== o ? (n = fo, 'of' === r.substr(fo, 2).toLowerCase() ? (u = r.substr(fo, 2), fo += 2) : (u = o, 0 === Co && Ao(Q)), u !== o && (s = Si()) !== o && (a = ss()) !== o ? n = u = [
                  u,
                  s,
                  a
                ] : (fo = n, n = o), n === o && (n = null), n !== o ? t = e = function (r, t) {
                  return {
                    keyword: r && r[0] && r[0].toLowerCase(),
                    args: t && {
                      keyword: t[0],
                      columns: t[2]
                    } || null
                  };
                }(e, n) : (fo = t, t = o)) : (fo = t, t = o)), t;
              }
              function Po() {
                var t, e, n, u, s, a, i, c, l;
                return t = fo, 'auto_increment' === r.substr(fo, 14).toLowerCase() ? (e = r.substr(fo, 14), fo += 14) : (e = o, 0 === Co && Ao(L)), e === o && ('avg_row_length' === r.substr(fo, 14).toLowerCase() ? (e = r.substr(fo, 14), fo += 14) : (e = o, 0 === Co && Ao(ir)), e === o && ('key_block_size' === r.substr(fo, 14).toLowerCase() ? (e = r.substr(fo, 14), fo += 14) : (e = o, 0 === Co && Ao(cr)), e === o && ('max_rows' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(lr)), e === o && ('min_rows' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(fr)), e === o && ('stats_sample_pages' === r.substr(fo, 18).toLowerCase() ? (e = r.substr(fo, 18), fo += 18) : (e = o, 0 === Co && Ao(vr))))))), e !== o && Si() !== o ? ((n = ci()) === o && (n = null), n !== o && Si() !== o && (u = Zs()) !== o ? (c = n, l = u, t = e = {
                  keyword: e.toLowerCase(),
                  symbol: c,
                  value: l.value
                }) : (fo = t, t = o)) : (fo = t, t = o), t === o && (t = fo, (e = na()) === o && (e = null), e !== o && Si() !== o ? ('character set' === r.substr(fo, 13).toLowerCase() ? (n = r.substr(fo, 13), fo += 13) : (n = o, 0 === Co && Ao(br)), n === o && ('charset' === r.substr(fo, 7).toLowerCase() ? (n = r.substr(fo, 7), fo += 7) : (n = o, 0 === Co && Ao(dr)), n === o && ('collate' === r.substr(fo, 7).toLowerCase() ? (n = r.substr(fo, 7), fo += 7) : (n = o, 0 === Co && Ao(Lr)))), n !== o && Si() !== o ? ((u = ci()) === o && (u = null), u !== o && (s = Si()) !== o && (a = ks()) !== o ? t = e = function (r, t, e, n) {
                  return {
                    keyword: r && `${ r[0].toLowerCase() } ${ t.toLowerCase() }` || t.toLowerCase(),
                    symbol: e,
                    value: n
                  };
                }(e, n, u, a) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o), t === o && (t = fo, (e = Li()) === o && ('connection' === r.substr(fo, 10).toLowerCase() ? (e = r.substr(fo, 10), fo += 10) : (e = o, 0 === Co && Ao(Cr))), e !== o && Si() !== o ? ((n = ci()) === o && (n = null), n !== o && Si() !== o && (u = Ws()) !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: `'${ e.value }'`
                  };
                }(e, n, u) : (fo = t, t = o)) : (fo = t, t = o), t === o && (t = fo, 'compression' === r.substr(fo, 11).toLowerCase() ? (e = r.substr(fo, 11), fo += 11) : (e = o, 0 === Co && Ao(pr)), e !== o && Si() !== o ? ((n = ci()) === o && (n = null), n !== o && Si() !== o ? (u = fo, 39 === r.charCodeAt(fo) ? (s = '\'', fo++) : (s = o, 0 === Co && Ao(wr)), s !== o ? ('zlib' === r.substr(fo, 4).toLowerCase() ? (a = r.substr(fo, 4), fo += 4) : (a = o, 0 === Co && Ao(Er)), a === o && ('lz4' === r.substr(fo, 3).toLowerCase() ? (a = r.substr(fo, 3), fo += 3) : (a = o, 0 === Co && Ao(hr)), a === o && ('none' === r.substr(fo, 4).toLowerCase() ? (a = r.substr(fo, 4), fo += 4) : (a = o, 0 === Co && Ao(O)))), a !== o ? (39 === r.charCodeAt(fo) ? (i = '\'', fo++) : (i = o, 0 === Co && Ao(wr)), i !== o ? u = s = [
                  s,
                  a,
                  i
                ] : (fo = u, u = o)) : (fo = u, u = o)) : (fo = u, u = o), u !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: e.join('').toUpperCase()
                  };
                }(e, n, u) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o), t === o && (t = fo, 'engine' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(Ar)), e !== o && Si() !== o ? ((n = ci()) === o && (n = null), n !== o && Si() !== o && (u = ks()) !== o ? t = e = function (r, t, e) {
                  return {
                    keyword: r.toLowerCase(),
                    symbol: t,
                    value: e.toUpperCase()
                  };
                }(e, n, u) : (fo = t, t = o)) : (fo = t, t = o))))), t;
              }
              function Ho() {
                var t, e, n, u, s, a, i;
                return (t = Bo()) === o && (t = fo, e = fo, 40 === r.charCodeAt(fo) ? (n = '(', fo++) : (n = o, 0 === Co && Ao(Ur)), n !== o && (u = Si()) !== o && (s = Ho()) !== o && (a = Si()) !== o ? (41 === r.charCodeAt(fo) ? (i = ')', fo++) : (i = o, 0 === Co && Ao(xr)), i !== o ? e = n = [
                  n,
                  u,
                  s,
                  a,
                  i
                ] : (fo = e, e = o)) : (fo = e, e = o), e !== o && (e = {
                  ...e[2],
                  parentheses_symbol: !0
                }), t = e), t;
              }
              function Go() {
                var t, e, n, u, s, a, i, c, l;
                if (t = fo, Sa() !== o)
                  if (Si() !== o)
                    if ((e = jo()) !== o) {
                      for (n = [], u = fo, (s = Si()) !== o && (a = wi()) !== o && (i = Si()) !== o && (c = jo()) !== o ? u = s = [
                          s,
                          a,
                          i,
                          c
                        ] : (fo = u, u = o); u !== o;)
                        n.push(u), u = fo, (s = Si()) !== o && (a = wi()) !== o && (i = Si()) !== o && (c = jo()) !== o ? u = s = [
                          s,
                          a,
                          i,
                          c
                        ] : (fo = u, u = o);
                      n !== o ? t = qi(e, n) : (fo = t, t = o);
                    } else
                      fo = t, t = o;
                  else
                    fo = t, t = o;
                else
                  fo = t, t = o;
                return t === o && (t = fo, Si() !== o && Sa() !== o && (e = Si()) !== o && (n = function () {
                  var t, e, n, u;
                  t = fo, 'RECURSIVE' === r.substr(fo, 9) ? (e = 'RECURSIVE', fo += 9) : (e = o, 0 === Co && Ao(ke));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()) !== o && (u = Si()) !== o && (s = jo()) !== o ? ((l = s).recursive = !0, t = [l]) : (fo = t, t = o)), t;
              }
              function jo() {
                var r, t, e, n;
                return r = fo, (t = ks()) !== o && Si() !== o ? ((e = Yo()) === o && (e = null), e !== o && Si() !== o && wa() !== o && Si() !== o && hi() !== o && Si() !== o && (n = Io()) !== o && Si() !== o && Ai() !== o ? r = t = {
                  name: t,
                  stmt: n,
                  columns: e
                } : (fo = r, r = o)) : (fo = r, r = o), r;
              }
              function Yo() {
                var r, t, e, n, u, s, a, i;
                if (r = fo, hi() !== o)
                  if (Si() !== o)
                    if ((t = Ds()) !== o) {
                      for (e = [], n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Ds()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o); n !== o;)
                        e.push(n), n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Ds()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o);
                      e !== o && (n = Si()) !== o && (u = Ai()) !== o ? r = Mr(t, e) : (fo = r, r = o);
                    } else
                      fo = r, r = o;
                  else
                    fo = r, r = o;
                else
                  fo = r, r = o;
                return r;
              }
              function Bo() {
                var t, e, n, u, s, a, i, c, l, f, v;
                return t = fo, Si() !== o ? ((e = Go()) === o && (e = null), e !== o && Si() !== o && function () {
                  var t, e, n, u;
                  t = fo, 'select' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(_e));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }() !== o && Si() !== o ? ((n = function () {
                  var r, t, e, n, u, s;
                  if (r = fo, (t = Xo()) !== o) {
                    for (e = [], n = fo, (u = Si()) !== o && (s = Xo()) !== o ? n = u = [
                        u,
                        s
                      ] : (fo = n, n = o); n !== o;)
                      e.push(n), n = fo, (u = Si()) !== o && (s = Xo()) !== o ? n = u = [
                        u,
                        s
                      ] : (fo = n, n = o);
                    e !== o ? (t = function (r, t) {
                      const e = [r];
                      for (let r = 0, n = t.length; r < n; ++r)
                        e.push(t[r][1]);
                      return e;
                    }(t, e), r = t) : (fo = r, r = o);
                  } else
                    fo = r, r = o;
                  return r;
                }()) === o && (n = null), n !== o && Si() !== o ? ((u = ga()) === o && (u = null), u !== o && Si() !== o && (s = function () {
                  var r, t, e, n, u, s, a, i;
                  r = fo, (t = _a()) === o && (t = fo, (e = Ei()) !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fo = t, t = o)) : (fo = t, t = o), t === o && (t = Ei()));
                  if (t !== o) {
                    for (e = [], n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Wo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (fo = n, n = o); n !== o;)
                      e.push(n), n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Wo()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (fo = n, n = o);
                    e !== o ? (c = t, l = e, ec.add('select::null::(.*)'), t = l && l.length > 0 ? (c[0] = {
                      expr: {
                        type: 'column_ref',
                        table: null,
                        column: '*'
                      },
                      as: null
                    }, qi(c[0], l)) : c[0], r = t) : (fo = r, r = o);
                  } else
                    fo = r, r = o;
                  var c, l;
                  if (r === o)
                    if (r = fo, (t = Wo()) !== o) {
                      for (e = [], n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Wo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o); n !== o;)
                        e.push(n), n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Wo()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o);
                      e !== o ? (t = function (r, t) {
                        return qi(r, t);
                      }(t, e), r = t) : (fo = r, r = o);
                    } else
                      fo = r, r = o;
                  return r;
                }()) !== o && Si() !== o ? ((a = Ko()) === o && (a = null), a !== o && Si() !== o ? ((i = os()) === o && (i = null), i !== o && Si() !== o ? ((c = function () {
                  var t, e, n;
                  t = fo, (e = function () {
                    var t, e, n, u;
                    t = fo, 'group' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(un));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) !== o && Si() !== o && Ia() !== o && Si() !== o && (n = ps()) !== o ? (e = n.value, t = e) : (fo = t, t = o);
                  return t;
                }()) === o && (c = null), c !== o && Si() !== o ? ((l = function () {
                  var t, e;
                  t = fo, function () {
                    var t, e, n, u;
                    t = fo, 'having' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(an));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }() !== o && Si() !== o && (e = As()) !== o ? t = e : (fo = t, t = o);
                  return t;
                }()) === o && (l = null), l !== o && Si() !== o ? ((f = as()) === o && (f = null), f !== o && Si() !== o ? ((v = ls()) === o && (v = null), v !== o ? t = function (r, t, e, n, u, o, s, a, i, c) {
                  return u && u.forEach(r => r.table && tc.add(`select::${ r.db }::${ r.table }`)), {
                    with: r,
                    type: 'select',
                    options: t,
                    distinct: e,
                    columns: n,
                    from: u,
                    where: o,
                    groupby: s,
                    having: a,
                    orderby: i,
                    limit: c
                  };
                }(e, n, u, s, a, i, c, l, f, v) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Xo() {
                var e;
                return (e = function () {
                  var t;
                  'sql_calc_found_rows' === r.substr(fo, 19).toLowerCase() ? (t = r.substr(fo, 19), fo += 19) : (t = o, 0 === Co && Ao(ju));
                  return t;
                }()) === o && ((e = function () {
                  var t;
                  'sql_cache' === r.substr(fo, 9).toLowerCase() ? (t = r.substr(fo, 9), fo += 9) : (t = o, 0 === Co && Ao(Yu));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_no_cache' === r.substr(fo, 12).toLowerCase() ? (t = r.substr(fo, 12), fo += 12) : (t = o, 0 === Co && Ao(Bu));
                  return t;
                }()), e === o && (e = function () {
                  var t;
                  'sql_big_result' === r.substr(fo, 14).toLowerCase() ? (t = r.substr(fo, 14), fo += 14) : (t = o, 0 === Co && Ao(Wu));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_small_result' === r.substr(fo, 16).toLowerCase() ? (t = r.substr(fo, 16), fo += 16) : (t = o, 0 === Co && Ao(Xu));
                  return t;
                }()) === o && (e = function () {
                  var t;
                  'sql_buffer_result' === r.substr(fo, 17).toLowerCase() ? (t = r.substr(fo, 17), fo += 17) : (t = o, 0 === Co && Ao(Vu));
                  return t;
                }())), e !== o && (e = e), e;
              }
              function Wo() {
                var r, t, e, n;
                return r = fo, (t = As()) !== o && ii() !== o && (e = Yi()) !== o ? r = t = {
                  type: 'cast',
                  expr: t,
                  symbol: '::',
                  target: e
                } : (fo = r, r = o), r === o && (r = fo, (t = xs()) !== o && Si() !== o && (e = pi()) !== o && Si() !== o && Ei() !== o ? (n = t, ec.add(`select::${ n }::(.*)`), r = t = {
                  type: 'star_ref',
                  expr: {
                    type: 'column_ref',
                    table: n,
                    column: '*'
                  },
                  as: null
                }) : (fo = r, r = o), r === o && (r = fo, (t = As()) !== o && Si() !== o ? ((e = Vo()) === o && (e = null), e !== o ? r = t = function (r, t) {
                  return {
                    type: 'expr',
                    expr: r,
                    as: t
                  };
                }(t, e) : (fo = r, r = o)) : (fo = r, r = o))), r;
              }
              function Vo() {
                var r, t, e;
                return r = fo, (t = wa()) !== o && Si() !== o && (e = function () {
                  var r, t;
                  r = fo, (t = ks()) !== o ? (function (r) {
                    if (!0 === Xi[r.toUpperCase()])
                      throw new Error('Error: ' + JSON.stringify(r) + ' is a reserved word, can not as alias clause');
                    return !1;
                  }(t) ? o : void 0) !== o ? r = t = t : (fo = r, r = o) : (fo = r, r = o);
                  r === o && (r = fo, (t = Ms()) !== o && (t = t), r = t);
                  return r;
                }()) !== o ? r = t = e : (fo = r, r = o), r === o && (r = fo, (t = wa()) === o && (t = null), t !== o && Si() !== o && (e = xs()) !== o ? r = t = e : (fo = r, r = o)), r;
              }
              function Ko() {
                var r, t;
                return r = fo, Ca() !== o && Si() !== o && (t = Qo()) !== o ? r = t : (fo = r, r = o), r;
              }
              function qo() {
                var r, t, e;
                return r = fo, (t = ns()) !== o && Si() !== o && ua() !== o && Si() !== o && (e = ns()) !== o ? r = t = [
                  t,
                  e
                ] : (fo = r, r = o), r;
              }
              function Zo() {
                var t, e;
                return t = fo, ma() !== o && Si() !== o ? ('btree' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(Dr)), e === o && ('hash' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(kr)), e === o && ('gist' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao($r)), e === o && ('gin' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(Fr))))), e !== o ? t = {
                  keyword: 'using',
                  type: e.toLowerCase()
                } : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function zo() {
                var r, t, e, n, u, s;
                if (r = fo, (t = Jo()) !== o) {
                  for (e = [], n = fo, (u = Si()) !== o && (s = Jo()) !== o ? n = u = [
                      u,
                      s
                    ] : (fo = n, n = o); n !== o;)
                    e.push(n), n = fo, (u = Si()) !== o && (s = Jo()) !== o ? n = u = [
                      u,
                      s
                    ] : (fo = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    const e = [r];
                    for (let r = 0; r < t.length; r++)
                      e.push(t[r][1]);
                    return e;
                  }(t, e) : (fo = r, r = o);
                } else
                  fo = r, r = o;
                return r;
              }
              function Jo() {
                var t, e, n, u, s, a;
                return t = fo, (e = function () {
                  var t, e, n, u;
                  t = fo, 'key_block_size' === r.substr(fo, 14).toLowerCase() ? (e = r.substr(fo, 14), fo += 14) : (e = o, 0 === Co && Ao(cr));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'KEY_BLOCK_SIZE' : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()) !== o && Si() !== o ? ((n = ci()) === o && (n = null), n !== o && Si() !== o && (u = Zs()) !== o ? (s = n, a = u, t = e = {
                  type: e.toLowerCase(),
                  symbol: s,
                  expr: a
                }) : (fo = t, t = o)) : (fo = t, t = o), t === o && (t = fo, (e = ks()) !== o && Si() !== o && (n = ci()) !== o && Si() !== o ? ((u = Zs()) === o && (u = xs()), u !== o ? t = e = function (r, t, e) {
                  return {
                    type: r.toLowerCase(),
                    symbol: t,
                    expr: 'string' == typeof e && {
                      type: 'origin',
                      value: e
                    } || e
                  };
                }(e, n, u) : (fo = t, t = o)) : (fo = t, t = o), t === o && (t = Zo()) === o && (t = fo, 'with' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Pr)), e !== o && Si() !== o ? ('parser' === r.substr(fo, 6).toLowerCase() ? (n = r.substr(fo, 6), fo += 6) : (n = o, 0 === Co && Ao(Hr)), n !== o && Si() !== o && (u = ks()) !== o ? t = e = {
                  type: 'with parser',
                  expr: u
                } : (fo = t, t = o)) : (fo = t, t = o), t === o && (t = fo, 'visible' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(Gr)), e === o && ('invisible' === r.substr(fo, 9).toLowerCase() ? (e = r.substr(fo, 9), fo += 9) : (e = o, 0 === Co && Ao(jr))), e !== o && (e = function (r) {
                  return {
                    type: r.toLowerCase(),
                    expr: r.toLowerCase()
                  };
                }(e)), (t = e) === o && (t = Ri())))), t;
              }
              function Qo() {
                var r, t, e, n, u, s;
                if (r = fo, (t = ts()) !== o) {
                  for (e = [], n = rs(); n !== o;)
                    e.push(n), n = rs();
                  e !== o ? (u = t, (s = e).unshift(u), s.forEach(r => {
                    const {
                      table: t,
                      as: e
                    } = r;
                    nc[t] = t, e && (nc[e] = t);
                  }), r = t = s) : (fo = r, r = o);
                } else
                  fo = r, r = o;
                return r;
              }
              function rs() {
                var r, t, e;
                return r = fo, Si() !== o && (t = wi()) !== o && Si() !== o && (e = ts()) !== o ? r = e : (fo = r, r = o), r === o && (r = fo, Si() !== o && (t = function () {
                  var r, t, e, n, u, s, a, i, c, l, f;
                  if (r = fo, (t = es()) !== o)
                    if (Si() !== o)
                      if ((e = ts()) !== o)
                        if (Si() !== o)
                          if ((n = ma()) !== o)
                            if (Si() !== o)
                              if (hi() !== o)
                                if (Si() !== o)
                                  if ((u = ks()) !== o) {
                                    for (s = [], a = fo, (i = Si()) !== o && (c = wi()) !== o && (l = Si()) !== o && (f = ks()) !== o ? a = i = [
                                        i,
                                        c,
                                        l,
                                        f
                                      ] : (fo = a, a = o); a !== o;)
                                      s.push(a), a = fo, (i = Si()) !== o && (c = wi()) !== o && (l = Si()) !== o && (f = ks()) !== o ? a = i = [
                                        i,
                                        c,
                                        l,
                                        f
                                      ] : (fo = a, a = o);
                                    s !== o && (a = Si()) !== o && (i = Ai()) !== o ? (v = t, d = u, L = s, (b = e).join = v, b.using = qi(d, L), r = t = b) : (fo = r, r = o);
                                  } else
                                    fo = r, r = o;
                                else
                                  fo = r, r = o;
                              else
                                fo = r, r = o;
                            else
                              fo = r, r = o;
                          else
                            fo = r, r = o;
                        else
                          fo = r, r = o;
                      else
                        fo = r, r = o;
                    else
                      fo = r, r = o;
                  else
                    fo = r, r = o;
                  var v, b, d, L;
                  r === o && (r = fo, (t = es()) !== o && Si() !== o && (e = ts()) !== o && Si() !== o ? ((n = us()) === o && (n = null), n !== o ? (t = function (r, t, e) {
                    return t.join = r, t.on = e, t;
                  }(t, e, n), r = t) : (fo = r, r = o)) : (fo = r, r = o), r === o && (r = fo, (t = es()) !== o && Si() !== o && (e = hi()) !== o && Si() !== o && (n = Io()) !== o && Si() !== o && Ai() !== o && Si() !== o ? ((u = Vo()) === o && (u = null), u !== o && (s = Si()) !== o ? ((a = us()) === o && (a = null), a !== o ? (t = function (r, t, e, n) {
                    return t.parentheses = !0, {
                      expr: t,
                      as: e,
                      join: r,
                      on: n
                    };
                  }(t, n, u, a), r = t) : (fo = r, r = o)) : (fo = r, r = o)) : (fo = r, r = o)));
                  return r;
                }()) !== o ? r = t : (fo = r, r = o)), r;
              }
              function ts() {
                var t, e, n, u, s, a;
                return t = fo, (e = function () {
                  var t;
                  'dual' === r.substr(fo, 4).toLowerCase() ? (t = r.substr(fo, 4), fo += 4) : (t = o, 0 === Co && Ao(Uu));
                  return t;
                }()) !== o && (e = { type: 'dual' }), (t = e) === o && (t = fo, (e = ns()) !== o && Si() !== o ? ((n = Vo()) === o && (n = null), n !== o ? (a = n, t = e = 'var' === (s = e).type ? (s.as = a, s) : {
                  db: s.db,
                  table: s.table,
                  as: a
                }) : (fo = t, t = o)) : (fo = t, t = o), t === o && (t = fo, (e = hi()) !== o && Si() !== o && (n = Io()) !== o && Si() !== o && Ai() !== o && Si() !== o ? ((u = Vo()) === o && (u = null), u !== o ? t = e = function (r, t) {
                  return r.parentheses = !0, {
                    expr: r,
                    as: t
                  };
                }(n, u) : (fo = t, t = o)) : (fo = t, t = o))), t;
              }
              function es() {
                var t, e, n, u;
                return t = fo, (e = function () {
                  var t, e, n, u;
                  t = fo, 'left' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Ke));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()) !== o && (n = Si()) !== o ? ((u = ya()) === o && (u = null), u !== o && Si() !== o && Aa() !== o ? t = e = 'LEFT JOIN' : (fo = t, t = o)) : (fo = t, t = o), t === o && (t = fo, (e = function () {
                  var t, e, n, u;
                  t = fo, 'right' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(qe));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()) !== o && (n = Si()) !== o ? ((u = ya()) === o && (u = null), u !== o && Si() !== o && Aa() !== o ? t = e = 'RIGHT JOIN' : (fo = t, t = o)) : (fo = t, t = o), t === o && (t = fo, (e = function () {
                  var t, e, n, u;
                  t = fo, 'full' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Ze));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()) !== o && (n = Si()) !== o ? ((u = ya()) === o && (u = null), u !== o && Si() !== o && Aa() !== o ? t = e = 'FULL JOIN' : (fo = t, t = o)) : (fo = t, t = o), t === o && (t = fo, e = fo, (n = function () {
                  var t, e, n, u;
                  t = fo, 'inner' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(ze));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()) !== o && (u = Si()) !== o ? e = n = [
                  n,
                  u
                ] : (fo = e, e = o), e === o && (e = null), e !== o && (n = Aa()) !== o ? t = e = 'INNER JOIN' : (fo = t, t = o)))), t;
              }
              function ns() {
                var r, t, e, n, u, s, a, i, c, l;
                return r = fo, (t = xs()) !== o ? (e = fo, (n = Si()) !== o && (u = pi()) !== o && (s = Si()) !== o && (a = xs()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (fo = e, e = o), e !== o ? (n = fo, (u = Si()) !== o && (s = pi()) !== o && (a = Si()) !== o && (i = xs()) !== o ? n = u = [
                  u,
                  s,
                  a,
                  i
                ] : (fo = n, n = o), n !== o ? r = t = function (r, t, e) {
                  const n = {
                    db: null,
                    table: r
                  };
                  return null !== e && (n.db = `${ r }.${ t[3] }`, n.table = e[3]), n;
                }(t, e, n) : (fo = r, r = o)) : (fo = r, r = o)) : (fo = r, r = o), r === o && (r = fo, (t = xs()) !== o && (e = Si()) !== o && (n = pi()) !== o && (u = Si()) !== o && (s = Ei()) !== o ? (l = t, tc.add(`select::${ l }::(.*)`), r = t = {
                  db: l,
                  table: '*'
                }) : (fo = r, r = o), r === o && (r = fo, (t = xs()) !== o ? (e = fo, (n = Si()) !== o && (u = pi()) !== o && (s = Si()) !== o && (a = xs()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (fo = e, e = o), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  const e = {
                    db: null,
                    table: r
                  };
                  return null !== t && (e.db = r, e.table = t[3]), e;
                }(t, e) : (fo = r, r = o)) : (fo = r, r = o), r === o && (r = fo, (t = Gi()) !== o && ((c = t).db = null, c.table = c.name, t = c), r = t))), r;
              }
              function us() {
                var r, t;
                return r = fo, ha() !== o && Si() !== o && (t = As()) !== o ? r = t : (fo = r, r = o), r;
              }
              function os() {
                var t, e;
                return t = fo, function () {
                  var t, e, n, u;
                  t = fo, 'where' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(nn));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }() !== o && Si() !== o && (e = As()) !== o ? t = e : (fo = t, t = o), t;
              }
              function ss() {
                var r, t, e, n, u, s, a, i;
                if (r = fo, (t = Us()) !== o) {
                  for (e = [], n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Us()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o); n !== o;)
                    e.push(n), n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Us()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o);
                  e !== o ? r = t = qi(t, e) : (fo = r, r = o);
                } else
                  fo = r, r = o;
                return r;
              }
              function as() {
                var t, e;
                return t = fo, function () {
                  var t, e, n, u;
                  t = fo, 'order' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(sn));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }() !== o && Si() !== o && Ia() !== o && Si() !== o && (e = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = fo, (t = is()) !== o) {
                    for (e = [], n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = is()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (fo = n, n = o); n !== o;)
                      e.push(n), n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = is()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (fo = n, n = o);
                    e !== o ? (t = qi(t, e), r = t) : (fo = r, r = o);
                  } else
                    fo = r, r = o;
                  return r;
                }()) !== o ? t = e : (fo = t, t = o), t;
              }
              function is() {
                var r, t, e;
                return r = fo, (t = As()) !== o && Si() !== o ? ((e = Ra()) === o && (e = Na()), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  const e = {
                    expr: r,
                    type: 'ASC'
                  };
                  return 'DESC' === t && (e.type = 'DESC'), e;
                }(t, e) : (fo = r, r = o)) : (fo = r, r = o), r;
              }
              function cs() {
                var r;
                return (r = Zs()) === o && (r = Hs()), r;
              }
              function ls() {
                var t, e, n, u, s, a;
                return t = fo, function () {
                  var t, e, n, u;
                  t = fo, 'limit' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(cn));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }() !== o && Si() !== o ? ((e = cs()) === o && (e = _a()), e !== o && Si() !== o ? (n = fo, (u = function () {
                  var t, e, n, u;
                  t = fo, 'offset' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(ln));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'OFFSET' : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()) !== o && (s = Si()) !== o && (a = cs()) !== o ? n = u = [
                  u,
                  s,
                  a
                ] : (fo = n, n = o), n === o && (n = null), n !== o ? t = function (r, t) {
                  const e = [];
                  return 'string' == typeof r ? e.push({
                    type: 'origin',
                    value: 'all'
                  }) : e.push(r), t && e.push(t[2]), {
                    seperator: t && t[0] && t[0].toLowerCase() || '',
                    value: e
                  };
                }(e, n) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function fs() {
                var t, e, n, u, s, a, i, c;
                return t = fo, e = fo, (n = xs()) !== o && (u = Si()) !== o && (s = pi()) !== o ? e = n = [
                  n,
                  u,
                  s
                ] : (fo = e, e = o), e === o && (e = null), e !== o && (n = Si()) !== o && (u = Ds()) !== o && (s = Si()) !== o ? (61 === r.charCodeAt(fo) ? (a = '=', fo++) : (a = o, 0 === Co && Ao(Yr)), a !== o && Si() !== o && (i = Ns()) !== o ? t = e = {
                  column: u,
                  value: i,
                  table: (c = e) && c[0]
                } : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function vs() {
                var t, e, n, u, s;
                return t = fo, (e = function () {
                  var t, e, n, u;
                  t = fo, 'returning' === r.substr(fo, 9).toLowerCase() ? (e = r.substr(fo, 9), fo += 9) : (e = o, 0 === Co && Ao(Fe));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'RETURNING' : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()) !== o && Si() !== o && (n = ss()) !== o ? (s = n, t = e = {
                  type: (u = e) && u.toLowerCase() || 'returning',
                  columns: s
                }) : (fo = t, t = o), t;
              }
              function bs() {
                var t;
                return (t = function () {
                  var t, e;
                  t = fo, function () {
                    var t, e, n, u;
                    t = fo, 'values' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(tn));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }() !== o && Si() !== o && (e = function () {
                    var r, t, e, n, u, s, a, i;
                    if (r = fo, (t = Cs()) !== o) {
                      for (e = [], n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Cs()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o); n !== o;)
                        e.push(n), n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = Cs()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o);
                      e !== o ? (t = qi(t, e), r = t) : (fo = r, r = o);
                    } else
                      fo = r, r = o;
                    return r;
                  }()) !== o ? t = e : (fo = t, t = o);
                  return t;
                }()) === o && (t = Bo()), t;
              }
              function ds() {
                var r, t, e, n, u, s, a, i, c;
                if (r = fo, da() !== o)
                  if (Si() !== o)
                    if ((t = hi()) !== o)
                      if (Si() !== o)
                        if ((e = ks()) !== o) {
                          for (n = [], u = fo, (s = Si()) !== o && (a = wi()) !== o && (i = Si()) !== o && (c = ks()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (fo = u, u = o); u !== o;)
                            n.push(u), u = fo, (s = Si()) !== o && (a = wi()) !== o && (i = Si()) !== o && (c = ks()) !== o ? u = s = [
                              s,
                              a,
                              i,
                              c
                            ] : (fo = u, u = o);
                          n !== o && (u = Si()) !== o && (s = Ai()) !== o ? r = qi(e, n) : (fo = r, r = o);
                        } else
                          fo = r, r = o;
                      else
                        fo = r, r = o;
                    else
                      fo = r, r = o;
                  else
                    fo = r, r = o;
                else
                  fo = r, r = o;
                return r === o && (r = fo, da() !== o && Si() !== o && (t = Cs()) !== o ? r = t : (fo = r, r = o)), r;
              }
              function Ls() {
                var r, t;
                return r = fo, (t = fa()) !== o && (t = 'insert'), (r = t) === o && (r = fo, (t = va()) !== o && (t = 'replace'), r = t), r;
              }
              function Cs() {
                var r, t;
                return r = fo, hi() !== o && Si() !== o && (t = ps()) !== o && Si() !== o && Ai() !== o ? r = t : (fo = r, r = o), r;
              }
              function ps() {
                var r, t, e, n, u, s, a, i;
                if (r = fo, (t = As()) !== o) {
                  for (e = [], n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = As()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o); n !== o;)
                    e.push(n), n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = As()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o);
                  e !== o ? r = t = function (r, t) {
                    const e = { type: 'expr_list' };
                    return e.value = qi(r, t), e;
                  }(t, e) : (fo = r, r = o);
                } else
                  fo = r, r = o;
                return r;
              }
              function ws() {
                var t, e, n;
                return t = fo, oi() !== o && Si() !== o && (e = As()) !== o && Si() !== o && (n = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u;
                    t = fo, 'year' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Vt));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'YEAR' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = fo, 'month' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(Ht));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'MONTH' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = fo, 'day' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(Rt));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'DAY' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = fo, 'hour' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(xt));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'HOUR' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = fo, 'minute' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(Pt));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'MINUTE' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = fo, 'second' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(jt));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'SECOND' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }());
                  return t;
                }()) !== o ? t = {
                  type: 'interval',
                  expr: e,
                  unit: n.toLowerCase()
                } : (fo = t, t = o), t === o && (t = fo, oi() !== o && Si() !== o && (e = Ws()) !== o ? t = function (r) {
                  return {
                    type: 'interval',
                    expr: r,
                    unit: ''
                  };
                }(e) : (fo = t, t = o)), t;
              }
              function Es() {
                var t, e, n, u, s, a, i, c, l;
                if (t = fo, Pa() !== o)
                  if (Si() !== o)
                    if ((e = As()) === o && (e = null), e !== o)
                      if (Si() !== o) {
                        if (n = [], (u = hs()) !== o)
                          for (; u !== o;)
                            n.push(u), u = hs();
                        else
                          n = o;
                        n !== o && (u = Si()) !== o ? ((s = function () {
                          var t, e;
                          t = fo, function () {
                            var t, e, n, u;
                            t = fo, 'else' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(kn));
                            e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                              e,
                              n
                            ] : (fo = t, t = o)) : (fo = t, t = o);
                            return t;
                          }() !== o && Si() !== o && (e = As()) !== o ? t = {
                            type: 'else',
                            result: e
                          } : (fo = t, t = o);
                          return t;
                        }()) === o && (s = null), s !== o && Si() !== o && function () {
                          var t, e, n, u;
                          t = fo, 'end' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao($n));
                          e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                            e,
                            n
                          ] : (fo = t, t = o)) : (fo = t, t = o);
                          return t;
                        }() !== o && Si() !== o ? ((a = Pa()) === o && (a = null), a !== o ? (i = e, c = n, (l = s) && c.push(l), t = {
                          type: 'case',
                          expr: i || null,
                          args: c
                        }) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o);
                      } else
                        fo = t, t = o;
                    else
                      fo = t, t = o;
                  else
                    fo = t, t = o;
                else
                  fo = t, t = o;
                return t;
              }
              function hs() {
                var t, e, n;
                return t = fo, Ha() !== o && Si() !== o && (e = As()) !== o && Si() !== o && function () {
                  var t, e, n, u;
                  t = fo, 'then' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Dn));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }() !== o && Si() !== o && (n = As()) !== o ? t = {
                  type: 'when',
                  cond: e,
                  result: n
                } : (fo = t, t = o), t;
              }
              function As() {
                var r;
                return (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = fo, (t = Os()) !== o) {
                    if (e = [], n = fo, (u = Si()) !== o && (s = mi()) !== o && (a = Si()) !== o && (i = Os()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (fo = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = fo, (u = Si()) !== o && (s = mi()) !== o && (a = Si()) !== o && (i = Os()) !== o ? n = u = [
                          u,
                          s,
                          a,
                          i
                        ] : (fo = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = Zi(t, e), r = t) : (fo = r, r = o);
                  } else
                    fo = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s;
                  if (r = fo, (t = Rs()) !== o) {
                    if (e = [], n = fo, (u = Si()) !== o && (s = Os()) !== o ? n = u = [
                        u,
                        s
                      ] : (fo = n, n = o), n !== o)
                      for (; n !== o;)
                        e.push(n), n = fo, (u = Si()) !== o && (s = Os()) !== o ? n = u = [
                          u,
                          s
                        ] : (fo = n, n = o);
                    else
                      e = o;
                    e !== o ? (t = Wi(t, e[0][1]), r = t) : (fo = r, r = o);
                  } else
                    fo = r, r = o;
                  return r;
                }()) === o && (r = function () {
                  var r, t, e, n, u, s, a, i;
                  if (r = fo, (t = ys()) !== o) {
                    for (e = [], n = fo, (u = Ii()) !== o && (s = Fa()) !== o && (a = Si()) !== o && (i = ys()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (fo = n, n = o); n !== o;)
                      e.push(n), n = fo, (u = Ii()) !== o && (s = Fa()) !== o && (a = Si()) !== o && (i = ys()) !== o ? n = u = [
                        u,
                        s,
                        a,
                        i
                      ] : (fo = n, n = o);
                    e !== o ? (t = Br(t, e), r = t) : (fo = r, r = o);
                  } else
                    fo = r, r = o;
                  return r;
                }()) === o && (r = Ho()), r;
              }
              function ys() {
                var r, t, e, n, u, s, a, i;
                if (r = fo, (t = Ts()) !== o) {
                  for (e = [], n = fo, (u = Ii()) !== o && (s = $a()) !== o && (a = Si()) !== o && (i = Ts()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o); n !== o;)
                    e.push(n), n = fo, (u = Ii()) !== o && (s = $a()) !== o && (a = Si()) !== o && (i = Ts()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o);
                  e !== o ? r = t = Br(t, e) : (fo = r, r = o);
                } else
                  fo = r, r = o;
                return r;
              }
              function Ts() {
                var t, e, n, u, s;
                return (t = ms()) === o && (t = function () {
                  var r, t, e;
                  r = fo, (t = function () {
                    var r, t, e, n, u;
                    r = fo, t = fo, (e = ka()) !== o && (n = Si()) !== o && (u = Da()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (fo = t, t = o);
                    t !== o && (t = (s = t)[0] + ' ' + s[2]);
                    var s;
                    (r = t) === o && (r = Da());
                    return r;
                  }()) !== o && Si() !== o && hi() !== o && Si() !== o && (e = Io()) !== o && Si() !== o && Ai() !== o ? (n = t, (u = e).parentheses = !0, t = Wi(n, u), r = t) : (fo = r, r = o);
                  var n, u;
                  return r;
                }()) === o && (t = fo, (e = ka()) === o && (e = fo, 33 === r.charCodeAt(fo) ? (n = '!', fo++) : (n = o, 0 === Co && Ao(Xr)), n !== o ? (u = fo, Co++, 61 === r.charCodeAt(fo) ? (s = '=', fo++) : (s = o, 0 === Co && Ao(Yr)), Co--, s === o ? u = void 0 : (fo = u, u = o), u !== o ? e = n = [
                  n,
                  u
                ] : (fo = e, e = o)) : (fo = e, e = o)), e !== o && (n = Si()) !== o && (u = Ts()) !== o ? t = e = Wi('NOT', u) : (fo = t, t = o)), t;
              }
              function ms() {
                var t, e, n, u, s, a, i;
                return t = fo, (e = Ns()) !== o && Si() !== o ? (n = fo, Co++, u = $a(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o && (u = Si()) !== o ? ((s = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u, s, a;
                    t = [], e = fo, (n = Si()) !== o && (u = Ss()) !== o && (s = Si()) !== o && (a = Ns()) !== o ? e = n = [
                      n,
                      u,
                      s,
                      a
                    ] : (fo = e, e = o);
                    if (e !== o)
                      for (; e !== o;)
                        t.push(e), e = fo, (n = Si()) !== o && (u = Ss()) !== o && (s = Si()) !== o && (a = Ns()) !== o ? e = n = [
                          n,
                          u,
                          s,
                          a
                        ] : (fo = e, e = o);
                    else
                      t = o;
                    t !== o && (t = {
                      type: 'arithmetic',
                      tail: t
                    });
                    return t;
                  }()) === o && (t = function () {
                    var r, t, e, n;
                    r = fo, (t = Is()) !== o && Si() !== o && (e = hi()) !== o && Si() !== o && (n = ps()) !== o && Si() !== o && Ai() !== o ? r = t = {
                      op: t,
                      right: n
                    } : (fo = r, r = o);
                    r === o && (r = fo, (t = Is()) !== o && Si() !== o ? ((e = Gi()) === o && (e = Ws()), e !== o ? (t = function (r, t) {
                      return {
                        op: r,
                        right: t
                      };
                    }(t, e), r = t) : (fo = r, r = o)) : (fo = r, r = o));
                    return r;
                  }()) === o && (t = function () {
                    var r, t, e, n;
                    r = fo, (t = function () {
                      var r, t, e, n, u;
                      r = fo, t = fo, (e = ka()) !== o && (n = Si()) !== o && (u = Oa()) !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (fo = t, t = o);
                      t !== o && (t = (s = t)[0] + ' ' + s[2]);
                      var s;
                      (r = t) === o && (r = Oa());
                      return r;
                    }()) !== o && Si() !== o && (e = Ns()) !== o && Si() !== o && $a() !== o && Si() !== o && (n = Ns()) !== o ? r = t = {
                      op: t,
                      right: {
                        type: 'expr_list',
                        value: [
                          e,
                          n
                        ]
                      }
                    } : (fo = r, r = o);
                    return r;
                  }()) === o && (t = function () {
                    var r, t, e, n, u, s, a, i, c;
                    r = fo, (t = xa()) !== o && (e = Si()) !== o && (n = Ns()) !== o ? r = t = {
                      op: 'IS',
                      right: n
                    } : (fo = r, r = o);
                    r === o && (r = fo, (t = xa()) !== o && (e = Si()) !== o ? (n = fo, (u = ga()) !== o && (s = Si()) !== o && (a = Ca()) !== o && (i = Si()) !== o && (c = ns()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i,
                      c
                    ] : (fo = n, n = o), n !== o ? (t = function (r) {
                      const {
                          db: t,
                          table: e
                        } = r.pop(), n = '*' === e ? '*' : `"${ e }"`;
                      return {
                        op: 'IS',
                        right: {
                          type: 'origin',
                          value: 'DISTINCT FROM ' + (t ? `"${ t }".${ n }` : n)
                        }
                      };
                    }(n), r = t) : (fo = r, r = o)) : (fo = r, r = o), r === o && (r = fo, t = fo, (e = xa()) !== o && (n = Si()) !== o && (u = ka()) !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (fo = t, t = o), t !== o && (e = Si()) !== o && (n = Ns()) !== o ? (t = function (r) {
                      return {
                        op: 'IS NOT',
                        right: r
                      };
                    }(n), r = t) : (fo = r, r = o)));
                    return r;
                  }()) === o && (t = function () {
                    var r, t, e;
                    r = fo, (t = function () {
                      var r, t, e, n, u;
                      r = fo, t = fo, (e = ka()) !== o && (n = Si()) !== o && (u = Ma()) !== o ? t = e = [
                        e,
                        n,
                        u
                      ] : (fo = t, t = o);
                      t !== o && (t = (s = t)[0] + ' ' + s[2]);
                      var s;
                      (r = t) === o && (r = Ma());
                      return r;
                    }()) !== o && Si() !== o && (e = ms()) !== o ? r = t = {
                      op: t,
                      right: e
                    } : (fo = r, r = o);
                    return r;
                  }()) === o && (t = function () {
                    var t, e, n;
                    t = fo, '@>' === r.substr(fo, 2) ? (e = '@>', fo += 2) : (e = o, 0 === Co && Ao(Jr));
                    e === o && ('<@' === r.substr(fo, 2) ? (e = '<@', fo += 2) : (e = o, 0 === Co && Ao(Qr)), e === o && (e = Ti()) === o && (e = function () {
                      var t;
                      '#>>' === r.substr(fo, 3) ? (t = '#>>', fo += 3) : (t = o, 0 === Co && Ao(to));
                      return t;
                    }()) === o && (e = function () {
                      var t;
                      '#>' === r.substr(fo, 2) ? (t = '#>', fo += 2) : (t = o, 0 === Co && Ao(ro));
                      return t;
                    }()) === o && (63 === r.charCodeAt(fo) ? (e = '?', fo++) : (e = o, 0 === Co && Ao(rt)), e === o && ('?|' === r.substr(fo, 2) ? (e = '?|', fo += 2) : (e = o, 0 === Co && Ao(tt)), e === o && ('?&' === r.substr(fo, 2) ? (e = '?&', fo += 2) : (e = o, 0 === Co && Ao(et)), e === o && ('#-' === r.substr(fo, 2) ? (e = '#-', fo += 2) : (e = o, 0 === Co && Ao(nt)))))));
                    e !== o && Si() !== o && (n = Wo()) !== o ? (e = {
                      op: e,
                      right: (u = n) && u.expr || u
                    }, t = e) : (fo = t, t = o);
                    var u;
                    return t;
                  }());
                  return t;
                }()) === o && (s = null), s !== o ? (a = e, t = e = null === (i = s) ? a : 'arithmetic' === i.type ? Zi(a, i.tail) : Vi(i.op, a, i.right)) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o), t === o && (t = Ws()) === o && (t = Us()), t;
              }
              function Ss() {
                var t;
                return '>=' === r.substr(fo, 2) ? (t = '>=', fo += 2) : (t = o, 0 === Co && Ao(Wr)), t === o && (62 === r.charCodeAt(fo) ? (t = '>', fo++) : (t = o, 0 === Co && Ao(Vr)), t === o && ('<=' === r.substr(fo, 2) ? (t = '<=', fo += 2) : (t = o, 0 === Co && Ao(Kr)), t === o && ('<>' === r.substr(fo, 2) ? (t = '<>', fo += 2) : (t = o, 0 === Co && Ao(qr)), t === o && (60 === r.charCodeAt(fo) ? (t = '<', fo++) : (t = o, 0 === Co && Ao(Zr)), t === o && (61 === r.charCodeAt(fo) ? (t = '=', fo++) : (t = o, 0 === Co && Ao(Yr)), t === o && ('!=' === r.substr(fo, 2) ? (t = '!=', fo += 2) : (t = o, 0 === Co && Ao(zr)))))))), t;
              }
              function Is() {
                var r, t, e, n, u, s;
                return r = fo, t = fo, (e = ka()) !== o && (n = Si()) !== o && (u = Ua()) !== o ? t = e = [
                  e,
                  n,
                  u
                ] : (fo = t, t = o), t !== o && (t = (s = t)[0] + ' ' + s[2]), (r = t) === o && (r = Ua()), r;
              }
              function Ns() {
                var r, t, e, n, u, s, a, i;
                if (r = fo, (t = _s()) !== o) {
                  for (e = [], n = fo, (u = Si()) !== o && (s = Rs()) !== o && (a = Si()) !== o && (i = _s()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o); n !== o;)
                    e.push(n), n = fo, (u = Si()) !== o && (s = Rs()) !== o && (a = Si()) !== o && (i = _s()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o);
                  e !== o ? r = t = Br(t, e) : (fo = r, r = o);
                } else
                  fo = r, r = o;
                return r;
              }
              function Rs() {
                var t;
                return 43 === r.charCodeAt(fo) ? (t = '+', fo++) : (t = o, 0 === Co && Ao(ut)), t === o && (45 === r.charCodeAt(fo) ? (t = '-', fo++) : (t = o, 0 === Co && Ao(ot))), t;
              }
              function _s() {
                var r, t, e, n, u, s, a, i;
                if (r = fo, (t = Os()) !== o) {
                  for (e = [], n = fo, (u = Si()) !== o && (s = gs()) !== o && (a = Si()) !== o && (i = Os()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o); n !== o;)
                    e.push(n), n = fo, (u = Si()) !== o && (s = gs()) !== o && (a = Si()) !== o && (i = Os()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o);
                  e !== o ? r = t = Zi(t, e) : (fo = r, r = o);
                } else
                  fo = r, r = o;
                return r;
              }
              function gs() {
                var t;
                return 42 === r.charCodeAt(fo) ? (t = '*', fo++) : (t = o, 0 === Co && Ao(st)), t === o && (47 === r.charCodeAt(fo) ? (t = '/', fo++) : (t = o, 0 === Co && Ao(at)), t === o && (37 === r.charCodeAt(fo) ? (t = '%', fo++) : (t = o, 0 === Co && Ao(it)))), t;
              }
              function Os() {
                var t, e, n, u, s;
                return (t = function () {
                  var t, e, n, u, s, a, i, c;
                  t = fo, (e = Ys()) === o && (e = Gs()) === o && (e = js()) === o && (e = Es()) === o && (e = ws()) === o && (e = Us()) === o && (e = Hs());
                  e !== o && ii() !== o && (n = Yi()) !== o ? t = e = {
                    type: 'cast',
                    expr: e,
                    symbol: '::',
                    target: n
                  } : (fo = t, t = o);
                  t === o && (t = fo, (e = Ga()) !== o && Si() !== o && (n = hi()) !== o && Si() !== o && (u = As()) !== o && Si() !== o && wa() !== o && Si() !== o && (s = Yi()) !== o && Si() !== o && (a = Ai()) !== o ? (e = function (r, t) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: t
                    };
                  }(u, s), t = e) : (fo = t, t = o), t === o && (t = fo, (e = Ga()) !== o && Si() !== o && (n = hi()) !== o && Si() !== o && (u = As()) !== o && Si() !== o && wa() !== o && Si() !== o && (s = Xa()) !== o && Si() !== o && (a = hi()) !== o && Si() !== o && (i = zs()) !== o && Si() !== o && Ai() !== o && Si() !== o && (c = Ai()) !== o ? (e = function (r, t) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: 'DECIMAL(' + t + ')' }
                    };
                  }(u, i), t = e) : (fo = t, t = o), t === o && (t = fo, (e = Ga()) !== o && Si() !== o && (n = hi()) !== o && Si() !== o && (u = As()) !== o && Si() !== o && wa() !== o && Si() !== o && (s = Xa()) !== o && Si() !== o && (a = hi()) !== o && Si() !== o && (i = zs()) !== o && Si() !== o && wi() !== o && Si() !== o && (c = zs()) !== o && Si() !== o && Ai() !== o && Si() !== o && Ai() !== o ? (e = function (r, t, e) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: 'DECIMAL(' + t + ', ' + e + ')' }
                    };
                  }(u, i, c), t = e) : (fo = t, t = o), t === o && (t = fo, (e = Ga()) !== o && Si() !== o && (n = hi()) !== o && Si() !== o && (u = As()) !== o && Si() !== o && wa() !== o && Si() !== o && (s = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = fo, 'signed' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(Xn));
                      e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'SIGNED' : (fo = t, t = o)) : (fo = t, t = o);
                      return t;
                    }()) === o && (t = Wa());
                    return t;
                  }()) !== o && Si() !== o ? ((a = Ka()) === o && (a = null), a !== o && Si() !== o && (i = Ai()) !== o ? (e = function (r, t, e) {
                    return {
                      type: 'cast',
                      expr: r,
                      symbol: 'as',
                      target: { dataType: t + (e ? ' ' + e : '') }
                    };
                  }(u, s, a), t = e) : (fo = t, t = o)) : (fo = t, t = o)))));
                  return t;
                }()) === o && (t = Ys()) === o && (t = Gs()) === o && (t = js()) === o && (t = Es()) === o && (t = ws()) === o && (t = Us()) === o && (t = Hs()) === o && (t = fo, hi() !== o && (e = Si()) !== o && (n = As()) !== o && Si() !== o && Ai() !== o ? ((s = n).parentheses = !0, t = s) : (fo = t, t = o), t === o && (t = fo, hi() !== o && (e = Si()) !== o && (n = ps()) !== o && Si() !== o && Ai() !== o ? ((u = n).parentheses = !0, t = u) : (fo = t, t = o), t === o && (t = Gi()) === o && (t = fo, Si() !== o ? (36 === r.charCodeAt(fo) ? (e = '$', fo++) : (e = o, 0 === Co && Ao(ct)), e !== o && (n = Zs()) !== o ? t = {
                  type: 'origin',
                  value: '$' + n.value
                } : (fo = t, t = o)) : (fo = t, t = o)))), t;
              }
              function Us() {
                var t, e, n, u, s, a;
                return t = fo, (e = xs()) !== o && Si() !== o && (n = pi()) !== o && Si() !== o && (u = Ds()) !== o ? (s = e, a = u, ec.add(`select::${ s }::${ a }`), t = e = {
                  type: 'column_ref',
                  table: s,
                  column: a
                }) : (fo = t, t = o), t === o && (t = fo, (e = xs()) !== o && Si() !== o && (n = pi()) !== o && Si() !== o && (u = Ei()) !== o ? t = e = function (r) {
                  return ec.add(`select::${ r }::(.*)`), {
                    type: 'column_ref',
                    table: r,
                    column: '*'
                  };
                }(e) : (fo = t, t = o), t === o && (t = fo, (e = Ds()) !== o && Si() !== o ? ((n = function () {
                  var t;
                  '->>' === r.substr(fo, 3) ? (t = '->>', fo += 3) : (t = o, 0 === Co && Ao(Qu));
                  return t;
                }()) === o && (n = function () {
                  var t;
                  '->' === r.substr(fo, 2) ? (t = '->', fo += 2) : (t = o, 0 === Co && Ao(Ju));
                  return t;
                }()), n !== o && Si() !== o ? ((u = Ws()) === o && (u = Zs()), u !== o ? t = e = function (r, t, e) {
                  return ec.add('select::null::' + r), {
                    type: 'column_ref',
                    table: null,
                    column: r,
                    arrow: t,
                    property: e
                  };
                }(e, n, u) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o), t === o && (t = fo, (e = Ds()) !== o && (e = function (r) {
                  return ec.add('select::null::' + r), {
                    type: 'column_ref',
                    table: null,
                    column: r
                  };
                }(e)), t = e))), t;
              }
              function xs() {
                var r, t;
                return r = fo, (t = ks()) !== o ? (lt(t) ? o : void 0) !== o ? r = t = t : (fo = r, r = o) : (fo = r, r = o), r === o && (r = fo, (t = Ms()) !== o && (t = t), r = t), r;
              }
              function Ms() {
                var t;
                return (t = function () {
                  var t, e, n, u;
                  t = fo, 34 === r.charCodeAt(fo) ? (e = '"', fo++) : (e = o, 0 === Co && Ao(ft));
                  if (e !== o) {
                    if (n = [], vt.test(r.charAt(fo)) ? (u = r.charAt(fo), fo++) : (u = o, 0 === Co && Ao(bt)), u !== o)
                      for (; u !== o;)
                        n.push(u), vt.test(r.charAt(fo)) ? (u = r.charAt(fo), fo++) : (u = o, 0 === Co && Ao(bt));
                    else
                      n = o;
                    n !== o ? (34 === r.charCodeAt(fo) ? (u = '"', fo++) : (u = o, 0 === Co && Ao(ft)), u !== o ? (e = dt(n), t = e) : (fo = t, t = o)) : (fo = t, t = o);
                  } else
                    fo = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = fo, 39 === r.charCodeAt(fo) ? (e = '\'', fo++) : (e = o, 0 === Co && Ao(wr));
                  if (e !== o) {
                    if (n = [], Lt.test(r.charAt(fo)) ? (u = r.charAt(fo), fo++) : (u = o, 0 === Co && Ao(Ct)), u !== o)
                      for (; u !== o;)
                        n.push(u), Lt.test(r.charAt(fo)) ? (u = r.charAt(fo), fo++) : (u = o, 0 === Co && Ao(Ct));
                    else
                      n = o;
                    n !== o ? (39 === r.charCodeAt(fo) ? (u = '\'', fo++) : (u = o, 0 === Co && Ao(wr)), u !== o ? (e = dt(n), t = e) : (fo = t, t = o)) : (fo = t, t = o);
                  } else
                    fo = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = fo, 96 === r.charCodeAt(fo) ? (e = '`', fo++) : (e = o, 0 === Co && Ao(pt));
                  if (e !== o) {
                    if (n = [], wt.test(r.charAt(fo)) ? (u = r.charAt(fo), fo++) : (u = o, 0 === Co && Ao(Et)), u !== o)
                      for (; u !== o;)
                        n.push(u), wt.test(r.charAt(fo)) ? (u = r.charAt(fo), fo++) : (u = o, 0 === Co && Ao(Et));
                    else
                      n = o;
                    n !== o ? (96 === r.charCodeAt(fo) ? (u = '`', fo++) : (u = o, 0 === Co && Ao(pt)), u !== o ? (e = dt(n), t = e) : (fo = t, t = o)) : (fo = t, t = o);
                  } else
                    fo = t, t = o;
                  return t;
                }()), t;
              }
              function Ds() {
                var r, t;
                return r = fo, (t = function () {
                  var r, t, e, n;
                  if (r = fo, (t = $s()) !== o) {
                    for (e = [], n = Ps(); n !== o;)
                      e.push(n), n = Ps();
                    e !== o ? (t = t + e.join(''), r = t) : (fo = r, r = o);
                  } else
                    fo = r, r = o;
                  return r;
                }()) !== o ? (lt(t) ? o : void 0) !== o ? r = t = t : (fo = r, r = o) : (fo = r, r = o), r === o && (r = Ms()), r;
              }
              function ks() {
                var r, t, e, n;
                if (r = fo, (t = $s()) !== o) {
                  for (e = [], n = Fs(); n !== o;)
                    e.push(n), n = Fs();
                  e !== o ? r = t = t + e.join('') : (fo = r, r = o);
                } else
                  fo = r, r = o;
                return r;
              }
              function $s() {
                var t;
                return ht.test(r.charAt(fo)) ? (t = r.charAt(fo), fo++) : (t = o, 0 === Co && Ao(At)), t;
              }
              function Fs() {
                var t;
                return yt.test(r.charAt(fo)) ? (t = r.charAt(fo), fo++) : (t = o, 0 === Co && Ao(Tt)), t;
              }
              function Ps() {
                var t;
                return mt.test(r.charAt(fo)) ? (t = r.charAt(fo), fo++) : (t = o, 0 === Co && Ao(St)), t;
              }
              function Hs() {
                var e, n, u;
                return e = fo, 58 === r.charCodeAt(fo) ? (n = ':', fo++) : (n = o, 0 === Co && Ao(It)), n !== o && (u = ks()) !== o ? e = n = [
                  n,
                  u
                ] : (fo = e, e = o), e !== o && (e = {
                  type: 'param',
                  value: e[1]
                }), e;
              }
              function Gs() {
                var t;
                return (t = function () {
                  var t, e, n;
                  t = fo, (e = function () {
                    var t, e, n, u;
                    t = fo, 'count' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(An));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'COUNT' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) !== o && Si() !== o && hi() !== o && Si() !== o && (n = function () {
                    var t, e, n;
                    t = fo, (e = function () {
                      var e;
                      42 === r.charCodeAt(fo) ? (e = '*', fo++) : (e = o, 0 === Co && Ao(st));
                      e !== o && (e = {
                        type: 'star',
                        value: '*'
                      });
                      return e;
                    }()) !== o && (e = { expr: e });
                    (t = e) === o && (t = fo, (e = ga()) === o && (e = null), e !== o && Si() !== o && (n = Us()) !== o ? t = e = {
                      distinct: e,
                      expr: n
                    } : (fo = t, t = o));
                    return t;
                  }()) !== o && Si() !== o && Ai() !== o ? t = e = {
                    type: 'aggr_func',
                    name: e,
                    args: n
                  } : (fo = t, t = o);
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, i, c;
                  t = fo, (e = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = fo, 'sum' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(mn));
                      e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'SUM' : (fo = t, t = o)) : (fo = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = fo, 'max' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(yn));
                      e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'MAX' : (fo = t, t = o)) : (fo = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = fo, 'min' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(Tn));
                      e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'MIN' : (fo = t, t = o)) : (fo = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = fo, 'avg' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(Sn));
                      e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'AVG' : (fo = t, t = o)) : (fo = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = fo, 'collect' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(In));
                      e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'COLLECT' : (fo = t, t = o)) : (fo = t, t = o);
                      return t;
                    }());
                    return t;
                  }()) !== o && Si() !== o && hi() !== o && Si() !== o ? ((n = ga()) === o && (n = null), n !== o && (u = Si()) !== o && (s = Ns()) !== o && (a = Si()) !== o && (i = Ai()) !== o ? t = e = {
                    type: 'aggr_func',
                    name: e,
                    args: {
                      expr: s,
                      distinct: n
                    }
                  } : (fo = t, t = o)) : (fo = t, t = o);
                  t === o && (t = fo, (e = function () {
                    var t;
                    (t = function () {
                      var t, e, n, u;
                      t = fo, 'rank' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Nn));
                      e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'RANK' : (fo = t, t = o)) : (fo = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = fo, 'dense_rank' === r.substr(fo, 10).toLowerCase() ? (e = r.substr(fo, 10), fo += 10) : (e = o, 0 === Co && Ao(Rn));
                      e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'DENSE_RANK' : (fo = t, t = o)) : (fo = t, t = o);
                      return t;
                    }()) === o && (t = function () {
                      var t, e, n, u;
                      t = fo, 'row_number' === r.substr(fo, 10).toLowerCase() ? (e = r.substr(fo, 10), fo += 10) : (e = o, 0 === Co && Ao(gn));
                      e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'ROW_NUMBER' : (fo = t, t = o)) : (fo = t, t = o);
                      return t;
                    }());
                    return t;
                  }()) !== o && Si() !== o && hi() !== o && Si() !== o && (n = Ai()) !== o ? (e = function (r) {
                    return {
                      type: 'aggr_func',
                      name: r
                    };
                  }(e), t = e) : (fo = t, t = o), t === o && (t = fo, (e = function () {
                    var t, e, n, u;
                    t = fo, 'listagg' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(_n));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'LISTAGG' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) !== o && Si() !== o && hi() !== o && Si() !== o && (n = Ns()) !== o ? (u = fo, (s = Si()) !== o && (a = wi()) !== o && (i = Si()) !== o && (c = Ws()) !== o ? u = s = [
                    s,
                    a,
                    i,
                    c
                  ] : (fo = u, u = o), u === o && (u = null), u !== o && (s = Si()) !== o && (a = Ai()) !== o ? (e = function (r, t, e) {
                    return {
                      type: 'aggr_func',
                      name: r,
                      args: {
                        expr: t,
                        separator: e
                      }
                    };
                  }(e, n, u), t = e) : (fo = t, t = o)) : (fo = t, t = o)));
                  return t;
                }()), t;
              }
              function js() {
                var t, e, n;
                return t = fo, (e = Fi()) !== o && Si() !== o && hi() !== o && Si() !== o ? ((n = ps()) === o && (n = null), n !== o && Si() !== o && Ai() !== o ? t = e = {
                  type: 'function',
                  name: e,
                  args: n || {
                    type: 'expr_list',
                    value: []
                  }
                } : (fo = t, t = o)) : (fo = t, t = o), t === o && (t = fo, (e = function () {
                  var t;
                  (t = function () {
                    var t, e, n, u;
                    t = fo, 'current_date' === r.substr(fo, 12).toLowerCase() ? (e = r.substr(fo, 12), fo += 12) : (e = o, 0 === Co && Ao(Lu));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'CURRENT_DATE' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = fo, 'current_time' === r.substr(fo, 12).toLowerCase() ? (e = r.substr(fo, 12), fo += 12) : (e = o, 0 === Co && Ao(pu));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'CURRENT_TIME' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (t = si()) === o && (t = function () {
                    var t, e, n, u;
                    t = fo, 'current_user' === r.substr(fo, 12).toLowerCase() ? (e = r.substr(fo, 12), fo += 12) : (e = o, 0 === Co && Ao(Eu));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'CURRENT_USER' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = fo, 'user' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(bu));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'USER' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = fo, 'session_user' === r.substr(fo, 12).toLowerCase() ? (e = r.substr(fo, 12), fo += 12) : (e = o, 0 === Co && Ao(hu));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'SESSION_USER' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) === o && (t = function () {
                    var t, e, n, u;
                    t = fo, 'system_user' === r.substr(fo, 11).toLowerCase() ? (e = r.substr(fo, 11), fo += 11) : (e = o, 0 === Co && Ao(Au));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'SYSTEM_USER' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }());
                  return t;
                }()) !== o && Si() !== o && hi() !== o && Si() !== o && (n = Ai()) !== o ? t = e = function (r) {
                  return {
                    type: 'function',
                    name: r,
                    args: {
                      type: 'expr_list',
                      value: []
                    }
                  };
                }(e) : (fo = t, t = o), t === o && (t = function () {
                  var t, e, n, u, s;
                  t = fo, (e = function () {
                    var t, e, n, u;
                    t = fo, 'extract' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(On));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'EXTRACT' : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) !== o && Si() !== o && hi() !== o && Si() !== o && (n = function () {
                    var t, e;
                    'century' === r.substr(fo, 7).toLowerCase() ? (t = r.substr(fo, 7), fo += 7) : (t = o, 0 === Co && Ao(Nt));
                    t === o && ('day' === r.substr(fo, 3).toLowerCase() ? (t = r.substr(fo, 3), fo += 3) : (t = o, 0 === Co && Ao(Rt)), t === o && ('decade' === r.substr(fo, 6).toLowerCase() ? (t = r.substr(fo, 6), fo += 6) : (t = o, 0 === Co && Ao(_t)), t === o && ('dow' === r.substr(fo, 3).toLowerCase() ? (t = r.substr(fo, 3), fo += 3) : (t = o, 0 === Co && Ao(gt)), t === o && ('doy' === r.substr(fo, 3).toLowerCase() ? (t = r.substr(fo, 3), fo += 3) : (t = o, 0 === Co && Ao(Ot)), t === o && ('epoch' === r.substr(fo, 5).toLowerCase() ? (t = r.substr(fo, 5), fo += 5) : (t = o, 0 === Co && Ao(Ut)), t === o && ('hour' === r.substr(fo, 4).toLowerCase() ? (t = r.substr(fo, 4), fo += 4) : (t = o, 0 === Co && Ao(xt)), t === o && ('isodow' === r.substr(fo, 6).toLowerCase() ? (t = r.substr(fo, 6), fo += 6) : (t = o, 0 === Co && Ao(Mt)), t === o && ('isoyear' === r.substr(fo, 7).toLowerCase() ? (t = r.substr(fo, 7), fo += 7) : (t = o, 0 === Co && Ao(Dt)), t === o && ('microseconds' === r.substr(fo, 12).toLowerCase() ? (t = r.substr(fo, 12), fo += 12) : (t = o, 0 === Co && Ao(kt)), t === o && ('millennium' === r.substr(fo, 10).toLowerCase() ? (t = r.substr(fo, 10), fo += 10) : (t = o, 0 === Co && Ao($t)), t === o && ('milliseconds' === r.substr(fo, 12).toLowerCase() ? (t = r.substr(fo, 12), fo += 12) : (t = o, 0 === Co && Ao(Ft)), t === o && ('minute' === r.substr(fo, 6).toLowerCase() ? (t = r.substr(fo, 6), fo += 6) : (t = o, 0 === Co && Ao(Pt)), t === o && ('month' === r.substr(fo, 5).toLowerCase() ? (t = r.substr(fo, 5), fo += 5) : (t = o, 0 === Co && Ao(Ht)), t === o && ('quarter' === r.substr(fo, 7).toLowerCase() ? (t = r.substr(fo, 7), fo += 7) : (t = o, 0 === Co && Ao(Gt)), t === o && ('second' === r.substr(fo, 6).toLowerCase() ? (t = r.substr(fo, 6), fo += 6) : (t = o, 0 === Co && Ao(jt)), t === o && ('timezone' === r.substr(fo, 8).toLowerCase() ? (t = r.substr(fo, 8), fo += 8) : (t = o, 0 === Co && Ao(Yt)), t === o && ('timezone_hour' === r.substr(fo, 13).toLowerCase() ? (t = r.substr(fo, 13), fo += 13) : (t = o, 0 === Co && Ao(Bt)), t === o && ('timezone_minute' === r.substr(fo, 15).toLowerCase() ? (t = r.substr(fo, 15), fo += 15) : (t = o, 0 === Co && Ao(Xt)), t === o && ('week' === r.substr(fo, 4).toLowerCase() ? (t = r.substr(fo, 4), fo += 4) : (t = o, 0 === Co && Ao(Wt)), t === o && (t = fo, 'year' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Vt)), e !== o && (e = f), t = e))))))))))))))))))));
                    return t;
                  }()) !== o && Si() !== o && Ca() !== o && Si() !== o ? ((u = ni()) === o && (u = oi()) === o && (u = ei()), u === o && (u = null), u !== o && Si() !== o && (s = As()) !== o && Si() !== o && Ai() !== o ? (e = function (r, t, e, n) {
                    return {
                      type: r.toLowerCase(),
                      args: {
                        field: t,
                        cast_type: e,
                        source: n
                      }
                    };
                  }(e, n, u, s), t = e) : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }())), t;
              }
              function Ys() {
                var t;
                return (t = Ws()) === o && (t = Zs()) === o && (t = function () {
                  var t, e;
                  t = fo, (e = function () {
                    var t, e, n, u;
                    t = fo, 'true' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Te));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !0
                  });
                  (t = e) === o && (t = fo, (e = function () {
                    var t, e, n, u;
                    t = fo, 'false' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(Se));
                    e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                      e,
                      n
                    ] : (fo = t, t = o)) : (fo = t, t = o);
                    return t;
                  }()) !== o && (e = {
                    type: 'bool',
                    value: !1
                  }), t = e);
                  return t;
                }()) === o && (t = Bs()) === o && (t = function () {
                  var t, e, n, u, s, a, i;
                  t = fo, (e = ei()) === o && (e = ri()) === o && (e = ni()) === o && (e = ti());
                  if (e !== o)
                    if (Si() !== o) {
                      if (n = fo, 39 === r.charCodeAt(fo) ? (u = '\'', fo++) : (u = o, 0 === Co && Ao(wr)), u !== o) {
                        for (s = [], a = Ks(); a !== o;)
                          s.push(a), a = Ks();
                        s !== o ? (39 === r.charCodeAt(fo) ? (a = '\'', fo++) : (a = o, 0 === Co && Ao(wr)), a !== o ? n = u = [
                          u,
                          s,
                          a
                        ] : (fo = n, n = o)) : (fo = n, n = o);
                      } else
                        fo = n, n = o;
                      n !== o ? (c = n, e = {
                        type: e.toLowerCase(),
                        value: c[1].join('')
                      }, t = e) : (fo = t, t = o);
                    } else
                      fo = t, t = o;
                  else
                    fo = t, t = o;
                  var c;
                  t === o && (t = fo, (e = si()) !== o && Si() !== o ? ((n = hi()) === o && (n = null), n !== o && (u = Si()) !== o ? ((s = Ai()) === o && (s = null), s !== o ? (a = (a = function (r, t, e) {
                    if (t && e)
                      return !0;
                  }(0, n, s)) ? o : void 0) !== o && Si() !== o ? ('on update current_timestamp' === r.substr(fo, 27).toLowerCase() ? (i = r.substr(fo, 27), fo += 27) : (i = o, 0 === Co && Ao(Kt)), i === o && (i = null), i !== o ? (e = function (r, t, e, n) {
                    return {
                      type: 'origin',
                      value: (n ? `${ r } ${ n }` : r).toLowerCase()
                    };
                  }(e, 0, 0, i), t = e) : (fo = t, t = o)) : (fo = t, t = o) : (fo = t, t = o)) : (fo = t, t = o)) : (fo = t, t = o));
                  return t;
                }()), t;
              }
              function Bs() {
                var e;
                return (e = function () {
                  var t, e, n, u;
                  t = fo, 'null' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Ae));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()) !== o && (e = {
                  type: 'null',
                  value: null
                }), e;
              }
              function Xs() {
                var e;
                return (e = function () {
                  var t, e, n, u;
                  t = fo, 'not null' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(ye));
                  e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                    e,
                    n
                  ] : (fo = t, t = o)) : (fo = t, t = o);
                  return t;
                }()) !== o && (e = {
                  type: 'not null',
                  value: 'not null'
                }), e;
              }
              function Ws() {
                var t, e, n, u, s;
                if (t = fo, e = fo, 39 === r.charCodeAt(fo) ? (n = '\'', fo++) : (n = o, 0 === Co && Ao(wr)), n !== o) {
                  for (u = [], s = Ks(); s !== o;)
                    u.push(s), s = Ks();
                  u !== o ? (39 === r.charCodeAt(fo) ? (s = '\'', fo++) : (s = o, 0 === Co && Ao(wr)), s !== o ? e = n = [
                    n,
                    u,
                    s
                  ] : (fo = e, e = o)) : (fo = e, e = o);
                } else
                  fo = e, e = o;
                if (e !== o && (e = {
                    type: 'single_quote_string',
                    value: e[1].join('')
                  }), (t = e) === o) {
                  if (t = fo, e = fo, 34 === r.charCodeAt(fo) ? (n = '"', fo++) : (n = o, 0 === Co && Ao(ft)), n !== o) {
                    for (u = [], s = Vs(); s !== o;)
                      u.push(s), s = Vs();
                    u !== o ? (34 === r.charCodeAt(fo) ? (s = '"', fo++) : (s = o, 0 === Co && Ao(ft)), s !== o ? e = n = [
                      n,
                      u,
                      s
                    ] : (fo = e, e = o)) : (fo = e, e = o);
                  } else
                    fo = e, e = o;
                  e !== o ? (n = fo, Co++, u = pi(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = function (r) {
                    return {
                      type: 'string',
                      value: r[1].join('')
                    };
                  }(e) : (fo = t, t = o)) : (fo = t, t = o);
                }
                return t;
              }
              function Vs() {
                var t;
                return qt.test(r.charAt(fo)) ? (t = r.charAt(fo), fo++) : (t = o, 0 === Co && Ao(Zt)), t === o && (t = qs()), t;
              }
              function Ks() {
                var t;
                return zt.test(r.charAt(fo)) ? (t = r.charAt(fo), fo++) : (t = o, 0 === Co && Ao(Jt)), t === o && (t = qs()), t;
              }
              function qs() {
                var t, e, n, u, s, a, i, c, l, f;
                return t = fo, '\\\'' === r.substr(fo, 2) ? (e = '\\\'', fo += 2) : (e = o, 0 === Co && Ao(Qt)), e !== o && (e = '\''), (t = e) === o && (t = fo, '\\"' === r.substr(fo, 2) ? (e = '\\"', fo += 2) : (e = o, 0 === Co && Ao(re)), e !== o && (e = '"'), (t = e) === o && (t = fo, '\\\\' === r.substr(fo, 2) ? (e = '\\\\', fo += 2) : (e = o, 0 === Co && Ao(te)), e !== o && (e = '\\'), (t = e) === o && (t = fo, '\\/' === r.substr(fo, 2) ? (e = '\\/', fo += 2) : (e = o, 0 === Co && Ao(ee)), e !== o && (e = '/'), (t = e) === o && (t = fo, '\\b' === r.substr(fo, 2) ? (e = '\\b', fo += 2) : (e = o, 0 === Co && Ao(ne)), e !== o && (e = '\b'), (t = e) === o && (t = fo, '\\f' === r.substr(fo, 2) ? (e = '\\f', fo += 2) : (e = o, 0 === Co && Ao(ue)), e !== o && (e = '\f'), (t = e) === o && (t = fo, '\\n' === r.substr(fo, 2) ? (e = '\\n', fo += 2) : (e = o, 0 === Co && Ao(oe)), e !== o && (e = '\n'), (t = e) === o && (t = fo, '\\r' === r.substr(fo, 2) ? (e = '\\r', fo += 2) : (e = o, 0 === Co && Ao(se)), e !== o && (e = '\r'), (t = e) === o && (t = fo, '\\t' === r.substr(fo, 2) ? (e = '\\t', fo += 2) : (e = o, 0 === Co && Ao(ae)), e !== o && (e = '\t'), (t = e) === o && (t = fo, '\\u' === r.substr(fo, 2) ? (e = '\\u', fo += 2) : (e = o, 0 === Co && Ao(ie)), e !== o && (n = ea()) !== o && (u = ea()) !== o && (s = ea()) !== o && (a = ea()) !== o ? (i = n, c = u, l = s, f = a, t = e = String.fromCharCode(parseInt('0x' + i + c + l + f))) : (fo = t, t = o), t === o && (t = fo, 92 === r.charCodeAt(fo) ? (e = '\\', fo++) : (e = o, 0 === Co && Ao(ce)), e !== o && (e = '\\'), t = e)))))))))), t;
              }
              function Zs() {
                var t, e;
                return (t = function () {
                  var r, t, e, n;
                  r = fo, (t = zs()) !== o && (e = Js()) !== o && (n = Qs()) !== o ? r = t = {
                    type: 'bigint',
                    value: t + e + n
                  } : (fo = r, r = o);
                  r === o && (r = fo, (t = zs()) !== o && (e = Js()) !== o ? (t = function (r, t) {
                    const e = r + t;
                    return Ki(r) ? {
                      type: 'bigint',
                      value: e
                    } : parseFloat(e);
                  }(t, e), r = t) : (fo = r, r = o), r === o && (r = fo, (t = zs()) !== o && (e = Qs()) !== o ? (t = function (r, t) {
                    return {
                      type: 'bigint',
                      value: r + t
                    };
                  }(t, e), r = t) : (fo = r, r = o), r === o && (r = fo, (t = zs()) !== o && (t = function (r) {
                    return Ki(r) ? {
                      type: 'bigint',
                      value: r
                    } : parseFloat(r);
                  }(t)), r = t)));
                  return r;
                }()) !== o && (t = (e = t) && 'bigint' === e.type ? e : {
                  type: 'number',
                  value: e
                }), t;
              }
              function zs() {
                var t, e, n;
                return (t = ra()) === o && (t = ta()) === o && (t = fo, 45 === r.charCodeAt(fo) ? (e = '-', fo++) : (e = o, 0 === Co && Ao(ot)), e === o && (43 === r.charCodeAt(fo) ? (e = '+', fo++) : (e = o, 0 === Co && Ao(ut))), e !== o && (n = ra()) !== o ? t = e = '-' + n : (fo = t, t = o), t === o && (t = fo, 45 === r.charCodeAt(fo) ? (e = '-', fo++) : (e = o, 0 === Co && Ao(ot)), e === o && (43 === r.charCodeAt(fo) ? (e = '+', fo++) : (e = o, 0 === Co && Ao(ut))), e !== o && (n = ta()) !== o ? t = e = '-' + n : (fo = t, t = o))), t;
              }
              function Js() {
                var t, e, n;
                return t = fo, 46 === r.charCodeAt(fo) ? (e = '.', fo++) : (e = o, 0 === Co && Ao(ve)), e !== o && (n = ra()) !== o ? t = e = '.' + n : (fo = t, t = o), t;
              }
              function Qs() {
                var t, e, n;
                return t = fo, (e = function () {
                  var t, e, n;
                  t = fo, pe.test(r.charAt(fo)) ? (e = r.charAt(fo), fo++) : (e = o, 0 === Co && Ao(we));
                  e !== o ? (Ee.test(r.charAt(fo)) ? (n = r.charAt(fo), fo++) : (n = o, 0 === Co && Ao(he)), n === o && (n = null), n !== o ? t = e = e + (null !== (u = n) ? u : '') : (fo = t, t = o)) : (fo = t, t = o);
                  var u;
                  return t;
                }()) !== o && (n = ra()) !== o ? t = e = e + n : (fo = t, t = o), t;
              }
              function ra() {
                var t, e;
                if (t = [], (e = ta()) !== o)
                  for (; e !== o;)
                    t.push(e), e = ta();
                else
                  t = o;
                return t !== o && (t = t.join('')), t;
              }
              function ta() {
                var t;
                return be.test(r.charAt(fo)) ? (t = r.charAt(fo), fo++) : (t = o, 0 === Co && Ao(de)), t;
              }
              function ea() {
                var t;
                return Le.test(r.charAt(fo)) ? (t = r.charAt(fo), fo++) : (t = o, 0 === Co && Ao(Ce)), t;
              }
              function na() {
                var t, e, n, u;
                return t = fo, 'default' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(y)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ua() {
                var t, e, n, u;
                return t = fo, 'to' === r.substr(fo, 2).toLowerCase() ? (e = r.substr(fo, 2), fo += 2) : (e = o, 0 === Co && Ao(me)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function oa() {
                var t, e, n, u;
                return t = fo, 'drop' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Ie)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'DROP' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function sa() {
                var t, e, n, u;
                return t = fo, 'update' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(ge)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function aa() {
                var t, e, n, u;
                return t = fo, 'create' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(Oe)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ia() {
                var t, e, n, u;
                return t = fo, 'temporary' === r.substr(fo, 9).toLowerCase() ? (e = r.substr(fo, 9), fo += 9) : (e = o, 0 === Co && Ao(Ue)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ca() {
                var t, e, n, u;
                return t = fo, 'if not exists' === r.substr(fo, 13).toLowerCase() ? (e = r.substr(fo, 13), fo += 13) : (e = o, 0 === Co && Ao(xe)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function la() {
                var t, e, n, u;
                return t = fo, 'delete' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(Me)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function fa() {
                var t, e, n, u;
                return t = fo, 'insert' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(De)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function va() {
                var t, e, n, u;
                return t = fo, 'replace' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao($e)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ba() {
                var t, e, n, u;
                return t = fo, 'rename' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(Pe)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function da() {
                var t, e, n, u;
                return t = fo, 'partition' === r.substr(fo, 9).toLowerCase() ? (e = r.substr(fo, 9), fo += 9) : (e = o, 0 === Co && Ao(Ge)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'PARTITION' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function La() {
                var t, e, n, u;
                return t = fo, 'into' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(je)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Ca() {
                var t, e, n, u;
                return t = fo, 'from' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Ye)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function pa() {
                var t, e, n, u;
                return t = fo, 'set' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(Be)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function wa() {
                var t, e, n, u;
                return t = fo, 'as' === r.substr(fo, 2).toLowerCase() ? (e = r.substr(fo, 2), fo += 2) : (e = o, 0 === Co && Ao(Xe)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Ea() {
                var t, e, n, u;
                return t = fo, 'table' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(We)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'TABLE' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ha() {
                var t, e, n, u;
                return t = fo, 'on' === r.substr(fo, 2).toLowerCase() ? (e = r.substr(fo, 2), fo += 2) : (e = o, 0 === Co && Ao(Z)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Aa() {
                var t, e, n, u;
                return t = fo, 'join' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Je)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ya() {
                var t, e, n, u;
                return t = fo, 'outer' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(Qe)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Ta() {
                var t, e, n, u;
                return t = fo, 'union' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(rn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ma() {
                var t, e, n, u;
                return t = fo, 'using' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(en)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Sa() {
                var t, e, n, u;
                return t = fo, 'with' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Pr)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Ia() {
                var t, e, n, u;
                return t = fo, 'by' === r.substr(fo, 2).toLowerCase() ? (e = r.substr(fo, 2), fo += 2) : (e = o, 0 === Co && Ao(on)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Na() {
                var t, e, n, u;
                return t = fo, 'asc' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(fn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'ASC' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Ra() {
                var t, e, n, u;
                return t = fo, 'desc' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(vn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'DESC' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function _a() {
                var t, e, n, u;
                return t = fo, 'all' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(bn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'ALL' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ga() {
                var t, e, n, u;
                return t = fo, 'distinct' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(dn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'DISTINCT' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Oa() {
                var t, e, n, u;
                return t = fo, 'between' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(Ln)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'BETWEEN' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Ua() {
                var t, e, n, u;
                return t = fo, 'in' === r.substr(fo, 2).toLowerCase() ? (e = r.substr(fo, 2), fo += 2) : (e = o, 0 === Co && Ao(yr)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'IN' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function xa() {
                var t, e, n, u;
                return t = fo, 'is' === r.substr(fo, 2).toLowerCase() ? (e = r.substr(fo, 2), fo += 2) : (e = o, 0 === Co && Ao(Cn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'IS' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Ma() {
                var t, e, n, u;
                return t = fo, 'like' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(pn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'LIKE' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Da() {
                var t, e, n, u;
                return t = fo, 'exists' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(wn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'EXISTS' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ka() {
                var t, e, n, u;
                return t = fo, 'not' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(rr)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'NOT' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function $a() {
                var t, e, n, u;
                return t = fo, 'and' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(En)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'AND' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Fa() {
                var t, e, n, u;
                return t = fo, 'or' === r.substr(fo, 2).toLowerCase() ? (e = r.substr(fo, 2), fo += 2) : (e = o, 0 === Co && Ao(hn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'OR' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Pa() {
                var t, e, n, u;
                return t = fo, 'case' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(xn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Ha() {
                var t, e, n, u;
                return t = fo, 'when' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Mn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Ga() {
                var t, e, n, u;
                return t = fo, 'cast' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Fn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = [
                  e,
                  n
                ] : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ja() {
                var t, e, n, u;
                return t = fo, 'char' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Gn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'CHAR' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Ya() {
                var t, e, n, u;
                return t = fo, 'varchar' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(jn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'VARCHAR' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Ba() {
                var t, e, n, u;
                return t = fo, 'numeric' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(Yn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'NUMERIC' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Xa() {
                var t, e, n, u;
                return t = fo, 'decimal' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(Bn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'DECIMAL' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Wa() {
                var t, e, n, u;
                return t = fo, 'unsigned' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(Wn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'UNSIGNED' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Va() {
                var t, e, n, u;
                return t = fo, 'int' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(Vn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'INT' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Ka() {
                var t, e, n, u;
                return t = fo, 'integer' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(qn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'INTEGER' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function qa() {
                var t, e, n, u;
                return t = fo, 'smallint' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(Qn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'SMALLINT' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Za() {
                var t, e, n, u;
                return t = fo, 'tinyint' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(ru)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'TINYINT' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function za() {
                var t, e, n, u;
                return t = fo, 'bigint' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(ou)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'BIGINT' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Ja() {
                var t, e, n, u;
                return t = fo, 'float' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(su)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'FLOAT' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Qa() {
                var t, e, n, u;
                return t = fo, 'double' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(au)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'DOUBLE' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ri() {
                var t, e, n, u;
                return t = fo, 'date' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(iu)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'DATE' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ti() {
                var t, e, n, u;
                return t = fo, 'datetime' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(cu)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'DATETIME' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ei() {
                var t, e, n, u;
                return t = fo, 'time' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(lu)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'TIME' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ni() {
                var t, e, n, u;
                return t = fo, 'timestamp' === r.substr(fo, 9).toLowerCase() ? (e = r.substr(fo, 9), fo += 9) : (e = o, 0 === Co && Ao(fu)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'TIMESTAMP' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ui() {
                var t, e, n, u;
                return t = fo, 'truncate' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(vu)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'TRUNCATE' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function oi() {
                var t, e, n, u;
                return t = fo, 'interval' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(Cu)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'INTERVAL' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function si() {
                var t, e, n, u;
                return t = fo, 'current_timestamp' === r.substr(fo, 17).toLowerCase() ? (e = r.substr(fo, 17), fo += 17) : (e = o, 0 === Co && Ao(wu)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'CURRENT_TIMESTAMP' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function ai() {
                var t;
                return (t = function () {
                  var t;
                  return '@@' === r.substr(fo, 2) ? (t = '@@', fo += 2) : (t = o, 0 === Co && Ao(Ru)), t;
                }()) === o && (t = function () {
                  var t;
                  return 64 === r.charCodeAt(fo) ? (t = '@', fo++) : (t = o, 0 === Co && Ao(Nu)), t;
                }()) === o && (t = function () {
                  var t;
                  return 36 === r.charCodeAt(fo) ? (t = '$', fo++) : (t = o, 0 === Co && Ao(ct)), t;
                }()), t;
              }
              function ii() {
                var t;
                return '::' === r.substr(fo, 2) ? (t = '::', fo += 2) : (t = o, 0 === Co && Ao(Ou)), t;
              }
              function ci() {
                var t;
                return 61 === r.charCodeAt(fo) ? (t = '=', fo++) : (t = o, 0 === Co && Ao(Yr)), t;
              }
              function li() {
                var t, e, n, u;
                return t = fo, 'add' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(xu)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'ADD' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function fi() {
                var t, e, n, u;
                return t = fo, 'column' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(Mu)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'COLUMN' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function vi() {
                var t, e, n, u;
                return t = fo, 'index' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(Du)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'INDEX' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function bi() {
                var t, e, n, u;
                return t = fo, 'key' === r.substr(fo, 3).toLowerCase() ? (e = r.substr(fo, 3), fo += 3) : (e = o, 0 === Co && Ao(w)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'KEY' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function di() {
                var t, e, n, u;
                return t = fo, 'unique' === r.substr(fo, 6).toLowerCase() ? (e = r.substr(fo, 6), fo += 6) : (e = o, 0 === Co && Ao(C)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'UNIQUE' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Li() {
                var t, e, n, u;
                return t = fo, 'comment' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(Fu)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'COMMENT' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Ci() {
                var t, e, n, u;
                return t = fo, 'constraint' === r.substr(fo, 10).toLowerCase() ? (e = r.substr(fo, 10), fo += 10) : (e = o, 0 === Co && Ao(Pu)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'CONSTRAINT' : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function pi() {
                var t;
                return 46 === r.charCodeAt(fo) ? (t = '.', fo++) : (t = o, 0 === Co && Ao(ve)), t;
              }
              function wi() {
                var t;
                return 44 === r.charCodeAt(fo) ? (t = ',', fo++) : (t = o, 0 === Co && Ao(Ku)), t;
              }
              function Ei() {
                var t;
                return 42 === r.charCodeAt(fo) ? (t = '*', fo++) : (t = o, 0 === Co && Ao(st)), t;
              }
              function hi() {
                var t;
                return 40 === r.charCodeAt(fo) ? (t = '(', fo++) : (t = o, 0 === Co && Ao(Ur)), t;
              }
              function Ai() {
                var t;
                return 41 === r.charCodeAt(fo) ? (t = ')', fo++) : (t = o, 0 === Co && Ao(xr)), t;
              }
              function yi() {
                var t;
                return 59 === r.charCodeAt(fo) ? (t = ';', fo++) : (t = o, 0 === Co && Ao(zu)), t;
              }
              function Ti() {
                var t;
                return '||' === r.substr(fo, 2) ? (t = '||', fo += 2) : (t = o, 0 === Co && Ao(eo)), t;
              }
              function mi() {
                var t;
                return (t = Ti()) === o && (t = function () {
                  var t;
                  return '&&' === r.substr(fo, 2) ? (t = '&&', fo += 2) : (t = o, 0 === Co && Ao(no)), t;
                }()), t;
              }
              function Si() {
                var r, t;
                for (r = [], (t = gi()) === o && (t = Ni()); t !== o;)
                  r.push(t), (t = gi()) === o && (t = Ni());
                return r;
              }
              function Ii() {
                var r, t;
                if (r = [], (t = gi()) === o && (t = Ni()), t !== o)
                  for (; t !== o;)
                    r.push(t), (t = gi()) === o && (t = Ni());
                else
                  r = o;
                return r;
              }
              function Ni() {
                var t;
                return (t = function () {
                  var t, e, n, u, s, a;
                  t = fo, '/*' === r.substr(fo, 2) ? (e = '/*', fo += 2) : (e = o, 0 === Co && Ao(uo));
                  if (e !== o) {
                    for (n = [], u = fo, s = fo, Co++, '*/' === r.substr(fo, 2) ? (a = '*/', fo += 2) : (a = o, 0 === Co && Ao(oo)), Co--, a === o ? s = void 0 : (fo = s, s = o), s !== o && (a = _i()) !== o ? u = s = [
                        s,
                        a
                      ] : (fo = u, u = o); u !== o;)
                      n.push(u), u = fo, s = fo, Co++, '*/' === r.substr(fo, 2) ? (a = '*/', fo += 2) : (a = o, 0 === Co && Ao(oo)), Co--, a === o ? s = void 0 : (fo = s, s = o), s !== o && (a = _i()) !== o ? u = s = [
                        s,
                        a
                      ] : (fo = u, u = o);
                    n !== o ? ('*/' === r.substr(fo, 2) ? (u = '*/', fo += 2) : (u = o, 0 === Co && Ao(oo)), u !== o ? t = e = [
                      e,
                      n,
                      u
                    ] : (fo = t, t = o)) : (fo = t, t = o);
                  } else
                    fo = t, t = o;
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a;
                  t = fo, '--' === r.substr(fo, 2) ? (e = '--', fo += 2) : (e = o, 0 === Co && Ao(so));
                  if (e !== o) {
                    for (n = [], u = fo, s = fo, Co++, a = Oi(), Co--, a === o ? s = void 0 : (fo = s, s = o), s !== o && (a = _i()) !== o ? u = s = [
                        s,
                        a
                      ] : (fo = u, u = o); u !== o;)
                      n.push(u), u = fo, s = fo, Co++, a = Oi(), Co--, a === o ? s = void 0 : (fo = s, s = o), s !== o && (a = _i()) !== o ? u = s = [
                        s,
                        a
                      ] : (fo = u, u = o);
                    n !== o ? t = e = [
                      e,
                      n
                    ] : (fo = t, t = o);
                  } else
                    fo = t, t = o;
                  return t;
                }()), t;
              }
              function Ri() {
                var r, t, e, n, u, s, a;
                return r = fo, (t = Li()) !== o && Si() !== o ? ((e = ci()) === o && (e = null), e !== o && Si() !== o && (n = Ws()) !== o ? (s = e, a = n, r = t = {
                  type: (u = t).toLowerCase(),
                  keyword: u.toLowerCase(),
                  symbol: s,
                  value: a
                }) : (fo = r, r = o)) : (fo = r, r = o), r;
              }
              function _i() {
                var t;
                return r.length > fo ? (t = r.charAt(fo), fo++) : (t = o, 0 === Co && Ao(ao)), t;
              }
              function gi() {
                var t;
                return io.test(r.charAt(fo)) ? (t = r.charAt(fo), fo++) : (t = o, 0 === Co && Ao(co)), t;
              }
              function Oi() {
                var t, e;
                if ((t = function () {
                    var t, e;
                    t = fo, Co++, r.length > fo ? (e = r.charAt(fo), fo++) : (e = o, 0 === Co && Ao(ao));
                    Co--, e === o ? t = void 0 : (fo = t, t = o);
                    return t;
                  }()) === o)
                  if (t = [], le.test(r.charAt(fo)) ? (e = r.charAt(fo), fo++) : (e = o, 0 === Co && Ao(fe)), e !== o)
                    for (; e !== o;)
                      t.push(e), le.test(r.charAt(fo)) ? (e = r.charAt(fo), fo++) : (e = o, 0 === Co && Ao(fe));
                  else
                    t = o;
                return t;
              }
              function Ui() {
                var t, e;
                return t = fo, rc = [], void 0 !== o && Si() !== o ? ((e = xi()) === o && (e = function () {
                  var t, e;
                  t = fo, function () {
                    var t;
                    return 'return' === r.substr(fo, 6).toLowerCase() ? (t = r.substr(fo, 6), fo += 6) : (t = o, 0 === Co && Ao(_u)), t;
                  }() !== o && Si() !== o && (e = Mi()) !== o ? t = {
                    type: 'return',
                    expr: e
                  } : (fo = t, t = o);
                  return t;
                }()), e !== o ? t = {
                  type: 'proc',
                  stmt: e,
                  vars: rc
                } : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function xi() {
                var t, e, n, u;
                return t = fo, (e = Gi()) === o && (e = ji()), e !== o && Si() !== o ? ((n = function () {
                  var t;
                  return ':=' === r.substr(fo, 2) ? (t = ':=', fo += 2) : (t = o, 0 === Co && Ao(gu)), t;
                }()) === o && (n = ci()), n !== o && Si() !== o && (u = Mi()) !== o ? t = e = {
                  type: 'assign',
                  left: e,
                  symbol: n,
                  right: u
                } : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              function Mi() {
                var t;
                return (t = Ho()) === o && (t = function () {
                  var r, t, e, n, u;
                  r = fo, (t = Gi()) !== o && Si() !== o && (e = es()) !== o && Si() !== o && (n = Gi()) !== o && Si() !== o && (u = us()) !== o ? r = t = {
                    type: 'join',
                    ltable: t,
                    rtable: n,
                    op: e,
                    on: u
                  } : (fo = r, r = o);
                  return r;
                }()) === o && (t = Di()) === o && (t = function () {
                  var t, e;
                  t = fo, function () {
                    var t;
                    return 91 === r.charCodeAt(fo) ? (t = '[', fo++) : (t = o, 0 === Co && Ao(qu)), t;
                  }() !== o && Si() !== o && (e = Hi()) !== o && Si() !== o && function () {
                    var t;
                    return 93 === r.charCodeAt(fo) ? (t = ']', fo++) : (t = o, 0 === Co && Ao(Zu)), t;
                  }() !== o ? t = {
                    type: 'array',
                    value: e
                  } : (fo = t, t = o);
                  return t;
                }()), t;
              }
              function Di() {
                var r, t, e, n, u, s, a, i;
                if (r = fo, (t = ki()) !== o) {
                  for (e = [], n = fo, (u = Si()) !== o && (s = Rs()) !== o && (a = Si()) !== o && (i = ki()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o); n !== o;)
                    e.push(n), n = fo, (u = Si()) !== o && (s = Rs()) !== o && (a = Si()) !== o && (i = ki()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o);
                  e !== o ? r = t = Br(t, e) : (fo = r, r = o);
                } else
                  fo = r, r = o;
                return r;
              }
              function ki() {
                var r, t, e, n, u, s, a, i;
                if (r = fo, (t = $i()) !== o) {
                  for (e = [], n = fo, (u = Si()) !== o && (s = gs()) !== o && (a = Si()) !== o && (i = $i()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o); n !== o;)
                    e.push(n), n = fo, (u = Si()) !== o && (s = gs()) !== o && (a = Si()) !== o && (i = $i()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o);
                  e !== o ? r = t = Br(t, e) : (fo = r, r = o);
                } else
                  fo = r, r = o;
                return r;
              }
              function $i() {
                var r, t, e;
                return (r = Ys()) === o && (r = Gi()) === o && (r = Pi()) === o && (r = Hs()) === o && (r = fo, hi() !== o && Si() !== o && (t = Di()) !== o && Si() !== o && Ai() !== o ? ((e = t).parentheses = !0, r = e) : (fo = r, r = o)), r;
              }
              function Fi() {
                var r, t, e, n, u, s, a;
                return r = fo, (t = xs()) !== o ? (e = fo, (n = Si()) !== o && (u = pi()) !== o && (s = Si()) !== o && (a = xs()) !== o ? e = n = [
                  n,
                  u,
                  s,
                  a
                ] : (fo = e, e = o), e === o && (e = null), e !== o ? r = t = function (r, t) {
                  let e = r;
                  return null !== t && (e = `${ r }.${ t[3] }`), e;
                }(t, e) : (fo = r, r = o)) : (fo = r, r = o), r;
              }
              function Pi() {
                var r, t, e;
                return r = fo, (t = Fi()) !== o && Si() !== o && hi() !== o && Si() !== o ? ((e = Hi()) === o && (e = null), e !== o && Si() !== o && Ai() !== o ? r = t = {
                  type: 'function',
                  name: t,
                  args: {
                    type: 'expr_list',
                    value: e
                  }
                } : (fo = r, r = o)) : (fo = r, r = o), r === o && (r = fo, (t = Fi()) !== o && (t = function (r) {
                  return {
                    type: 'function',
                    name: r,
                    args: null
                  };
                }(t)), r = t), r;
              }
              function Hi() {
                var r, t, e, n, u, s, a, i;
                if (r = fo, (t = $i()) !== o) {
                  for (e = [], n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = $i()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o); n !== o;)
                    e.push(n), n = fo, (u = Si()) !== o && (s = wi()) !== o && (a = Si()) !== o && (i = $i()) !== o ? n = u = [
                      u,
                      s,
                      a,
                      i
                    ] : (fo = n, n = o);
                  e !== o ? r = t = qi(t, e) : (fo = r, r = o);
                } else
                  fo = r, r = o;
                return r;
              }
              function Gi() {
                var r, t, e, n, u;
                return r = fo, (t = ai()) !== o && (e = ji()) !== o ? (n = t, u = e, r = t = {
                  type: 'var',
                  ...u,
                  prefix: n
                }) : (fo = r, r = o), r;
              }
              function ji() {
                var t, e, n, u, s;
                return t = fo, (e = ks()) !== o && (n = function () {
                  var e, n, u, s;
                  e = [], n = fo, 46 === r.charCodeAt(fo) ? (u = '.', fo++) : (u = o, 0 === Co && Ao(ve));
                  u !== o && (s = ks()) !== o ? n = u = [
                    u,
                    s
                  ] : (fo = n, n = o);
                  for (; n !== o;)
                    e.push(n), n = fo, 46 === r.charCodeAt(fo) ? (u = '.', fo++) : (u = o, 0 === Co && Ao(ve)), u !== o && (s = ks()) !== o ? n = u = [
                      u,
                      s
                    ] : (fo = n, n = o);
                  e !== o && (e = function (r) {
                    const t = [];
                    for (let e = 0; e < r.length; e++)
                      t.push(r[e][1]);
                    return t;
                  }(e));
                  return e;
                }()) !== o ? (u = e, s = n, rc.push(u), t = e = {
                  type: 'var',
                  name: u,
                  members: s,
                  prefix: null
                }) : (fo = t, t = o), t;
              }
              function Yi() {
                var t;
                return (t = function () {
                  var t, e, n, u;
                  t = fo, (e = ja()) === o && (e = Ya());
                  if (e !== o)
                    if (Si() !== o)
                      if (hi() !== o)
                        if (Si() !== o) {
                          if (n = [], be.test(r.charAt(fo)) ? (u = r.charAt(fo), fo++) : (u = o, 0 === Co && Ao(de)), u !== o)
                            for (; u !== o;)
                              n.push(u), be.test(r.charAt(fo)) ? (u = r.charAt(fo), fo++) : (u = o, 0 === Co && Ao(de));
                          else
                            n = o;
                          n !== o && (u = Si()) !== o && Ai() !== o ? (e = {
                            dataType: e,
                            length: parseInt(n.join(''), 10)
                          }, t = e) : (fo = t, t = o);
                        } else
                          fo = t, t = o;
                      else
                        fo = t, t = o;
                    else
                      fo = t, t = o;
                  else
                    fo = t, t = o;
                  t === o && (t = fo, (e = ja()) !== o && (e = function (r) {
                    return { dataType: r };
                  }(e)), (t = e) === o && (t = fo, (e = Ya()) !== o && (e = lo(e)), t = e));
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u, s, a, i, c, l, f, v, b;
                  t = fo, (e = Ba()) === o && (e = Xa()) === o && (e = Va()) === o && (e = Ka()) === o && (e = qa()) === o && (e = Za()) === o && (e = za()) === o && (e = Ja()) === o && (e = Qa());
                  if (e !== o)
                    if ((n = Si()) !== o)
                      if ((u = hi()) !== o)
                        if ((s = Si()) !== o) {
                          if (a = [], be.test(r.charAt(fo)) ? (i = r.charAt(fo), fo++) : (i = o, 0 === Co && Ao(de)), i !== o)
                            for (; i !== o;)
                              a.push(i), be.test(r.charAt(fo)) ? (i = r.charAt(fo), fo++) : (i = o, 0 === Co && Ao(de));
                          else
                            a = o;
                          if (a !== o)
                            if ((i = Si()) !== o) {
                              if (c = fo, (l = wi()) !== o)
                                if ((f = Si()) !== o) {
                                  if (v = [], be.test(r.charAt(fo)) ? (b = r.charAt(fo), fo++) : (b = o, 0 === Co && Ao(de)), b !== o)
                                    for (; b !== o;)
                                      v.push(b), be.test(r.charAt(fo)) ? (b = r.charAt(fo), fo++) : (b = o, 0 === Co && Ao(de));
                                  else
                                    v = o;
                                  v !== o ? c = l = [
                                    l,
                                    f,
                                    v
                                  ] : (fo = c, c = o);
                                } else
                                  fo = c, c = o;
                              else
                                fo = c, c = o;
                              c === o && (c = null), c !== o && (l = Si()) !== o && (f = Ai()) !== o && (v = Si()) !== o ? ((b = Bi()) === o && (b = null), b !== o ? (d = c, L = b, e = {
                                dataType: e,
                                length: parseInt(a.join(''), 10),
                                scale: d && parseInt(d[2].join(''), 10),
                                parentheses: !0,
                                suffix: L
                              }, t = e) : (fo = t, t = o)) : (fo = t, t = o);
                            } else
                              fo = t, t = o;
                          else
                            fo = t, t = o;
                        } else
                          fo = t, t = o;
                      else
                        fo = t, t = o;
                    else
                      fo = t, t = o;
                  else
                    fo = t, t = o;
                  var d, L;
                  if (t === o) {
                    if (t = fo, (e = Ba()) === o && (e = Xa()) === o && (e = Va()) === o && (e = Ka()) === o && (e = qa()) === o && (e = Za()) === o && (e = za()) === o && (e = Ja()) === o && (e = Qa()), e !== o) {
                      if (n = [], be.test(r.charAt(fo)) ? (u = r.charAt(fo), fo++) : (u = o, 0 === Co && Ao(de)), u !== o)
                        for (; u !== o;)
                          n.push(u), be.test(r.charAt(fo)) ? (u = r.charAt(fo), fo++) : (u = o, 0 === Co && Ao(de));
                      else
                        n = o;
                      n !== o && (u = Si()) !== o ? ((s = Bi()) === o && (s = null), s !== o ? (e = function (r, t, e) {
                        return {
                          dataType: r,
                          length: parseInt(t.join(''), 10),
                          suffix: e
                        };
                      }(e, n, s), t = e) : (fo = t, t = o)) : (fo = t, t = o);
                    } else
                      fo = t, t = o;
                    t === o && (t = fo, (e = Ba()) === o && (e = Xa()) === o && (e = Va()) === o && (e = Ka()) === o && (e = qa()) === o && (e = Za()) === o && (e = za()) === o && (e = Ja()) === o && (e = Qa()), e !== o && (n = Si()) !== o ? ((u = Bi()) === o && (u = null), u !== o && (s = Si()) !== o ? (e = function (r, t) {
                      return {
                        dataType: r,
                        suffix: t
                      };
                    }(e, u), t = e) : (fo = t, t = o)) : (fo = t, t = o));
                  }
                  return t;
                }()) === o && (t = function () {
                  var t, e, n, u;
                  t = fo, (e = ri()) === o && (e = ti()) === o && (e = ei()) === o && (e = ni());
                  if (e !== o)
                    if (Si() !== o)
                      if (hi() !== o)
                        if (Si() !== o) {
                          if (n = [], be.test(r.charAt(fo)) ? (u = r.charAt(fo), fo++) : (u = o, 0 === Co && Ao(de)), u !== o)
                            for (; u !== o;)
                              n.push(u), be.test(r.charAt(fo)) ? (u = r.charAt(fo), fo++) : (u = o, 0 === Co && Ao(de));
                          else
                            n = o;
                          n !== o && (u = Si()) !== o && Ai() !== o ? (e = {
                            dataType: e,
                            length: parseInt(n.join(''), 10)
                          }, t = e) : (fo = t, t = o);
                        } else
                          fo = t, t = o;
                      else
                        fo = t, t = o;
                    else
                      fo = t, t = o;
                  else
                    fo = t, t = o;
                  t === o && (t = fo, (e = ri()) === o && (e = ti()) === o && (e = ei()) === o && (e = ni()), e !== o && (e = lo(e)), t = e);
                  return t;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = fo, 'json' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Zn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'JSON' : (fo = t, t = o)) : (fo = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = fo, 'jsonb' === r.substr(fo, 5).toLowerCase() ? (e = r.substr(fo, 5), fo += 5) : (e = o, 0 === Co && Ao(zn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'JSONB' : (fo = t, t = o)) : (fo = t, t = o), t;
                  }());
                  e !== o && (e = lo(e));
                  return e;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = fo, 'geometry' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(Jn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'GEOMETRY' : (fo = t, t = o)) : (fo = t, t = o), t;
                  }()) !== o && (e = { dataType: e });
                  return e;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = fo, 'tinytext' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(tu)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'TINYTEXT' : (fo = t, t = o)) : (fo = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = fo, 'text' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(eu)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'TEXT' : (fo = t, t = o)) : (fo = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = fo, 'mediumtext' === r.substr(fo, 10).toLowerCase() ? (e = r.substr(fo, 10), fo += 10) : (e = o, 0 === Co && Ao(nu)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'MEDIUMTEXT' : (fo = t, t = o)) : (fo = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = fo, 'longtext' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(uu)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'LONGTEXT' : (fo = t, t = o)) : (fo = t, t = o), t;
                  }());
                  e !== o && (e = { dataType: e });
                  return e;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = fo, 'uuid' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(du)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'UUID' : (fo = t, t = o)) : (fo = t, t = o), t;
                  }()) !== o && (e = { dataType: e });
                  return e;
                }()) === o && (t = function () {
                  var e;
                  (e = function () {
                    var t, e, n, u;
                    return t = fo, 'bool' === r.substr(fo, 4).toLowerCase() ? (e = r.substr(fo, 4), fo += 4) : (e = o, 0 === Co && Ao(Pn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'BOOL' : (fo = t, t = o)) : (fo = t, t = o), t;
                  }()) === o && (e = function () {
                    var t, e, n, u;
                    return t = fo, 'boolean' === r.substr(fo, 7).toLowerCase() ? (e = r.substr(fo, 7), fo += 7) : (e = o, 0 === Co && Ao(Hn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'BOOLEAN' : (fo = t, t = o)) : (fo = t, t = o), t;
                  }());
                  e !== o && (e = { dataType: e });
                  return e;
                }()), t;
              }
              function Bi() {
                var t, e, n;
                return t = fo, (e = Wa()) === o && (e = null), e !== o && Si() !== o ? ((n = function () {
                  var t, e, n, u;
                  return t = fo, 'zerofill' === r.substr(fo, 8).toLowerCase() ? (e = r.substr(fo, 8), fo += 8) : (e = o, 0 === Co && Ao(Kn)), e !== o ? (n = fo, Co++, u = $s(), Co--, u === o ? n = void 0 : (fo = n, n = o), n !== o ? t = e = 'ZEROFILL' : (fo = t, t = o)) : (fo = t, t = o), t;
                }()) === o && (n = null), n !== o ? t = e = function (r, t) {
                  const e = [];
                  return r && e.push(r), t && e.push(t), e;
                }(e, n) : (fo = t, t = o)) : (fo = t, t = o), t;
              }
              const Xi = {
                ALTER: !0,
                ALL: !0,
                ADD: !0,
                AND: !0,
                AS: !0,
                ASC: !0,
                BETWEEN: !0,
                BY: !0,
                CALL: !0,
                CASE: !0,
                CREATE: !0,
                CONTAINS: !0,
                CURRENT_DATE: !0,
                CURRENT_TIME: !0,
                CURRENT_TIMESTAMP: !0,
                CURRENT_USER: !0,
                DELETE: !0,
                DESC: !0,
                DISTINCT: !0,
                DROP: !0,
                ELSE: !0,
                END: !0,
                EXISTS: !0,
                EXPLAIN: !0,
                FALSE: !0,
                FROM: !0,
                FULL: !0,
                GROUP: !0,
                HAVING: !0,
                IN: !0,
                INNER: !0,
                INSERT: !0,
                INTO: !0,
                INTERVAL: !0,
                IS: !0,
                JOIN: !0,
                JSON: !0,
                KEY: !0,
                LEFT: !0,
                LIKE: !0,
                LIMIT: !0,
                NOT: !0,
                NULL: !0,
                NULLS: !0,
                ON: !0,
                OR: !0,
                ORDER: !0,
                OUTER: !0,
                RECURSIVE: !0,
                RENAME: !0,
                RIGHT: !0,
                SELECT: !0,
                SESSION_USER: !0,
                SET: !0,
                SHOW: !0,
                STATUS: !0,
                SYSTEM_USER: !0,
                TABLE: !0,
                THEN: !0,
                TRUE: !0,
                TRUNCATE: !0,
                TYPE: !0,
                UNION: !0,
                UPDATE: !0,
                USING: !0,
                VALUES: !0,
                WITH: !0,
                WHEN: !0,
                WHERE: !0,
                GLOBAL: !0,
                SESSION: !0,
                LOCAL: !0,
                PERSIST: !0,
                PERSIST_ONLY: !0
              };
              function Wi(r, t) {
                return {
                  type: 'unary_expr',
                  operator: r,
                  expr: t
                };
              }
              function Vi(r, t, e) {
                return {
                  type: 'binary_expr',
                  operator: r,
                  left: t,
                  right: e
                };
              }
              function Ki(r) {
                const t = n(Number.MAX_SAFE_INTEGER);
                return !(n(r) < t);
              }
              function qi(r, t) {
                const e = [r];
                for (let r = 0; r < t.length; r++)
                  e.push(t[r][3]);
                return e;
              }
              function Zi(r, t) {
                let e = r;
                for (let r = 0; r < t.length; r++)
                  e = Vi(t[r][1], e, t[r][3]);
                return e;
              }
              function zi(r) {
                const t = nc[r];
                return t || (r || null);
              }
              function Ji(r) {
                const t = [];
                for (let e of r.keys()) {
                  const r = e.split('::');
                  if (!r) {
                    t.push(e);
                    break;
                  }
                  r && r[1] && (r[1] = zi(r[1])), t.push(r.join('::'));
                }
                return t;
              }
              function Qi(r) {
                return 'string' == typeof r ? {
                  type: 'same',
                  value: r
                } : r;
              }
              let rc = [];
              const tc = new Set(), ec = new Set(), nc = {};
              if ((e = a()) !== o && fo === r.length)
                return e;
              throw e !== o && fo < r.length && Ao({ type: 'end' }), yo(Lo, bo < r.length ? r.charAt(bo) : null, bo < r.length ? ho(bo, bo + 1) : ho(bo, bo));
            }
          };
        },
        function (r, t, e) {
          r.exports = e(10);
        },
        function (r, t, e) {
          e.r(t), e.d(t, 'Parser', function () {
            return Kr;
          }), e.d(t, 'util', function () {
            return n;
          });
          var n = {};
          e.r(n), e.d(n, 'arrayStructTypeToSQL', function () {
            return Q;
          }), e.d(n, 'autoIncreatementToSQL', function () {
            return ur;
          }), e.d(n, 'columnOrderListToSQL', function () {
            return or;
          }), e.d(n, 'commonKeywordArgsToSQL', function () {
            return nr;
          }), e.d(n, 'commonOptionConnector', function () {
            return $;
          }), e.d(n, 'connector', function () {
            return F;
          }), e.d(n, 'commonTypeValue', function () {
            return q;
          }), e.d(n, 'commentToSQL', function () {
            return rr;
          }), e.d(n, 'createBinaryExpr', function () {
            return H;
          }), e.d(n, 'createValueExpr', function () {
            return P;
          }), e.d(n, 'DEFAULT_OPT', function () {
            return D;
          }), e.d(n, 'escape', function () {
            return G;
          }), e.d(n, 'literalToSQL', function () {
            return V;
          }), e.d(n, 'columnIdentifierToSql', function () {
            return X;
          }), e.d(n, 'identifierToSql', function () {
            return W;
          }), e.d(n, 'onPartitionsToSQL', function () {
            return J;
          }), e.d(n, 'replaceParams', function () {
            return K;
          }), e.d(n, 'returningToSQL', function () {
            return er;
          }), e.d(n, 'hasVal', function () {
            return z;
          }), e.d(n, 'setParserOpt', function () {
            return Y;
          }), e.d(n, 'toUpper', function () {
            return Z;
          }), e.d(n, 'topToSQL', function () {
            return B;
          }), e.d(n, 'triggerEventToSQL', function () {
            return tr;
          });
          var u = e(1), o = e(2), s = e(3), a = e(4), i = e(5), c = e(6), l = e(7), f = e(8), v = {
              bigquery: u.parse,
              db2: o.parse,
              hive: s.parse,
              mysql: a.parse,
              mariadb: i.parse,
              postgresql: c.parse,
              transactsql: l.parse,
              flinksql: f.parse
            };
          function b(r) {
            return function (r) {
              if (Array.isArray(r))
                return d(r);
            }(r) || function (r) {
              if ('undefined' != typeof Symbol && Symbol.iterator in Object(r))
                return Array.from(r);
            }(r) || function (r, t) {
              if (!r)
                return;
              if ('string' == typeof r)
                return d(r, t);
              var e = Object.prototype.toString.call(r).slice(8, -1);
              'Object' === e && r.constructor && (e = r.constructor.name);
              if ('Map' === e || 'Set' === e)
                return Array.from(r);
              if ('Arguments' === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
                return d(r, t);
            }(r) || function () {
              throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
            }();
          }
          function d(r, t) {
            (null == t || t > r.length) && (t = r.length);
            for (var e = 0, n = new Array(t); e < t; e++)
              n[e] = r[e];
            return n;
          }
          function L(r) {
            if (!r)
              return [];
            var t = r.keyword, e = r.type;
            return [
              t.toUpperCase(),
              e.toUpperCase()
            ];
          }
          function C(r) {
            if (r) {
              var t = r.type, e = r.expr, n = r.symbol, u = t.toUpperCase(), o = [];
              switch (o.push(u), u) {
              case 'KEY_BLOCK_SIZE':
                n && o.push(n), o.push(V(e));
                break;
              case 'BTREE':
              case 'HASH':
                o.length = 0, o.push.apply(o, b(L(r)));
                break;
              case 'WITH PARSER':
                o.push(e);
                break;
              case 'VISIBLE':
              case 'INVISIBLE':
                break;
              case 'COMMENT':
                o.shift(), o.push(rr(r));
                break;
              case 'DATA_COMPRESSION':
                o.push(n, Z(e.value), J(e.on));
                break;
              default:
                o.push(n, V(e));
              }
              return o.filter(z).join(' ');
            }
          }
          function p(r) {
            return r ? r.map(C) : [];
          }
          function w(r) {
            var t = r.constraint_type, e = r.index_type, n = r.index_options, u = void 0 === n ? [] : n, o = r.definition, s = [];
            if (s.push.apply(s, b(L(e))), o && o.length) {
              var a = 'CHECK' === Z(t) ? '('.concat(Tr(o[0]), ')') : '('.concat(o.map(function (r) {
                return W(r);
              }).join(', '), ')');
              s.push(a);
            }
            return s.push(p(u).join(' ')), s;
          }
          function E(r) {
            return function (r) {
              if (Array.isArray(r))
                return h(r);
            }(r) || function (r) {
              if ('undefined' != typeof Symbol && Symbol.iterator in Object(r))
                return Array.from(r);
            }(r) || function (r, t) {
              if (!r)
                return;
              if ('string' == typeof r)
                return h(r, t);
              var e = Object.prototype.toString.call(r).slice(8, -1);
              'Object' === e && r.constructor && (e = r.constructor.name);
              if ('Map' === e || 'Set' === e)
                return Array.from(r);
              if ('Arguments' === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
                return h(r, t);
            }(r) || function () {
              throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
            }();
          }
          function h(r, t) {
            (null == t || t > r.length) && (t = r.length);
            for (var e = 0, n = new Array(t); e < t; e++)
              n[e] = r[e];
            return n;
          }
          function A(r) {
            if (r) {
              var t = r.constraint, e = r.constraint_type, n = r.index, u = r.keyword, o = r.reference_definition, s = [];
              return s.push(Z(u)), s.push(W(t)), s.push(Z(e)), s.push(W(n)), s.push.apply(s, E(w(r))), s.push.apply(s, E(_(o))), s.filter(z).join(' ');
            }
          }
          function y(r) {
            var t = r.table, e = r.db, n = r.as, u = r.expr, o = W(e), s = t ? W(t) : Tr(u), a = o ? ''.concat(o, '.').concat(s) : s;
            return n ? ''.concat(a, ' AS ').concat(W(n)) : a;
          }
          function T(r) {
            if ('UNNEST' === Z(r.type))
              return function (r) {
                var t = r.type, e = r.as, n = r.expr, u = r.with_offset;
                return [
                  Z(t),
                  '('.concat(n && Tr(n) || ' ', ')'),
                  $('AS', W, e),
                  $(Z(u && u.keyword), W, u && u.as)
                ].filter(z).join(' ');
              }(r);
            var t = r[0], e = [];
            if ('dual' === t.type)
              return 'DUAL';
            e.push(y(t));
            for (var n = 1; n < r.length; ++n) {
              var u = r[n], o = u.on, s = u.using, a = u.join, i = [];
              i.push(a ? ' '.concat(a) : ','), i.push(y(u)), i.push($('ON', Tr, o)), s && i.push('USING ('.concat(s.map(W).join(', '), ')')), e.push(i.filter(z).join(' '));
            }
            return e.filter(z).join('');
          }
          function m(r) {
            var t = r.keyword, e = r.symbol, n = r.value, u = [t.toUpperCase()];
            return e && u.push(e), u.push(n), u.join(' ');
          }
          function S(r) {
            return function (r) {
              if (Array.isArray(r))
                return I(r);
            }(r) || function (r) {
              if ('undefined' != typeof Symbol && Symbol.iterator in Object(r))
                return Array.from(r);
            }(r) || function (r, t) {
              if (!r)
                return;
              if ('string' == typeof r)
                return I(r, t);
              var e = Object.prototype.toString.call(r).slice(8, -1);
              'Object' === e && r.constructor && (e = r.constructor.name);
              if ('Map' === e || 'Set' === e)
                return Array.from(r);
              if ('Arguments' === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
                return I(r, t);
            }(r) || function () {
              throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
            }();
          }
          function I(r, t) {
            (null == t || t > r.length) && (t = r.length);
            for (var e = 0, n = new Array(t); e < t; e++)
              n[e] = r[e];
            return n;
          }
          function N(r) {
            var t = r.arrow, e = r.as, n = r.collate, u = r.column, o = r.isDual, s = r.table, a = r.parentheses, i = r.property, c = '*' === u ? '*' : W(u, o);
            s && (c = ''.concat(W(s), '.').concat(c));
            var l = [
              c,
              $('AS', Tr, e),
              $(t, V, i)
            ];
            n && l.push(q(n).join(' '));
            var f = l.filter(z).join(' ');
            return a ? '('.concat(f, ')') : f;
          }
          function R(r) {
            var t = r || {}, e = t.dataType, n = t.length, u = t.suffix, o = t.scale, s = e;
            return n && (s += '('.concat([
              n,
              o
            ].filter(z).join(', '), ')')), u && u.length && (s += ' '.concat(u.join(' '))), s;
          }
          function _(r) {
            var t = [];
            if (!r)
              return t;
            var e = r.definition, n = r.keyword, u = r.match, o = r.table, s = r.on_delete, a = r.on_update;
            return t.push(n.toUpperCase()), t.push(T(o)), t.push('('.concat(e.map(W).join(', '), ')')), t.push(Z(u)), t.push.apply(t, S(q(s))), t.push.apply(t, S(q(a))), t.filter(z);
          }
          function g(r) {
            var t = r.column, e = r.collate, n = r.nulls, u = r.opclass, o = r.order;
            return [
              Tr(t),
              $(e && e.type, W, e && e.value),
              u,
              Z(o),
              Z(n)
            ].filter(z).join(' ');
          }
          function O(r) {
            var t = [], e = N(r.column), n = R(r.definition);
            t.push(e), t.push(n);
            var u = function (r) {
              var t = [], e = r.nullable, n = r.check, u = r.comment, o = r.collate, s = r.storage, a = r.default_val, i = r.auto_increment, c = r.unique_or_primary, l = r.column_format, f = r.reference_definition;
              if (t.push(Z(e && e.value)), a) {
                var v = a.type, b = a.value;
                t.push(v.toUpperCase(), Tr(b));
              }
              return t.push(A(n)), t.push(ur(i), Z(c), rr(u)), t.push.apply(t, S(q(o))), t.push.apply(t, S(q(l))), t.push.apply(t, S(q(s))), t.push.apply(t, S(_(f))), t.filter(z).join(' ');
            }(r);
            return t.push(u), t.filter(z).join(' ');
          }
          function U(r, t) {
            if (!r || '*' === r)
              return r;
            var e = function (r) {
                var t = Array.isArray(r) && r[0];
                return !(!t || 'dual' !== t.type);
              }(t), n = [], u = r.expr_list, o = r.star, s = r.type;
            n.push(o, Z(s));
            var a = (u || r).map(function (r) {
              return function (r, t) {
                var e = r.expr;
                t && (e.isDual = t);
                var n = Tr(e);
                return null !== r.as && (n = ''.concat(n, ' AS '), n = r.as.match(/^[a-z_][0-9a-z_]*$/i) ? ''.concat(n).concat(W(r.as)) : ''.concat(n).concat(X(r.as))), n;
              }(r, e);
            }).join(', ');
            return n.push([
              s && '(',
              a,
              s && ')'
            ].filter(z).join('')), n.filter(z).join(' ');
          }
          function x(r) {
            return (x = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (r) {
              return typeof r;
            } : function (r) {
              return r && 'function' == typeof Symbol && r.constructor === Symbol && r !== Symbol.prototype ? 'symbol' : typeof r;
            })(r);
          }
          var M = {
              '\0': '\\0',
              '\'': '\\\'',
              '"': '\\"',
              '\b': '\\b',
              '\n': '\\n',
              '\r': '\\r',
              '\t': '\\t',
              '\x1A': '\\Z'
            }, D = {
              database: 'mysql',
              type: 'table'
            }, k = D;
          function $(r, t, e) {
            if (e)
              return r ? ''.concat(r.toUpperCase(), ' ').concat(t(e)) : t(e);
          }
          function F(r, t) {
            if (t)
              return ''.concat(r.toUpperCase(), ' ').concat(t);
          }
          function P(r) {
            var t = x(r);
            if (Array.isArray(r))
              return {
                type: 'expr_list',
                value: r.map(P)
              };
            if (null === r)
              return {
                type: 'null',
                value: null
              };
            switch (t) {
            case 'boolean':
              return {
                type: 'bool',
                value: r
              };
            case 'string':
              return {
                type: 'string',
                value: r
              };
            case 'number':
              return {
                type: 'number',
                value: r
              };
            default:
              throw new Error('Cannot convert value "'.concat(t, '" to SQL'));
            }
          }
          function H(r, t, e) {
            var n = {
              operator: r,
              type: 'binary_expr'
            };
            return n.left = t.type ? t : P(t), 'BETWEEN' === r || 'NOT BETWEEN' === r ? (n.right = {
              type: 'expr_list',
              value: [
                P(e[0]),
                P(e[1])
              ]
            }, n) : (n.right = e.type ? e : P(e), n);
          }
          function G(r) {
            for (var t = [], e = 0, n = r.length; e < n; ++e) {
              var u = r[e], o = M[u];
              o && (u = o), t.push(u);
            }
            return t.join('');
          }
          function j() {
            return k;
          }
          function Y(r) {
            k = r;
          }
          function B(r) {
            if (r) {
              var t = r.value, e = r.percent, n = 'TOP '.concat(t);
              return e ? ''.concat(n, ' ').concat(e.toUpperCase()) : n;
            }
          }
          function X(r) {
            var t = j().database;
            if (r)
              switch (t && t.toLowerCase()) {
              case 'postgresql':
              case 'db2':
                return '"'.concat(r, '"');
              case 'transactsql':
                return '['.concat(r, ']');
              case 'mysql':
              case 'mariadb':
              case 'bigquery':
              default:
                return '`'.concat(r, '`');
              }
          }
          function W(r, t) {
            var e = j().database;
            if (!0 === t)
              return '\''.concat(r, '\'');
            if (r)
              switch (e && e.toLowerCase()) {
              case 'mysql':
              case 'mariadb':
                return '`'.concat(r, '`');
              case 'postgresql':
                return '"'.concat(r, '"');
              case 'transactsql':
                return '['.concat(r, ']');
              case 'bigquery':
              case 'db2':
                return r;
              default:
                return '`'.concat(r, '`');
              }
          }
          function V(r) {
            if (r) {
              var t = r.type, e = r.parentheses, n = r.value, u = n;
              switch (t) {
              case 'string':
                u = '\''.concat(G(n), '\'');
                break;
              case 'double_quote_string':
                u = '"'.concat(G(n), '"');
                break;
              case 'single_quote_string':
                u = '\''.concat(n, '\'');
                break;
              case 'boolean':
              case 'bool':
                u = n ? 'TRUE' : 'FALSE';
                break;
              case 'null':
                u = 'NULL';
                break;
              case 'star':
                u = '*';
                break;
              case 'param':
                u = ':'.concat(n);
                break;
              case 'origin':
                u = n.toUpperCase();
                break;
              case 'time':
              case 'date':
              case 'timestamp':
                u = ''.concat(t.toUpperCase(), ' \'').concat(n, '\'');
              }
              return e ? '('.concat(u, ')') : u;
            }
          }
          function K(r, t) {
            return function r(t, e) {
              return Object.keys(t).filter(function (r) {
                var e = t[r];
                return Array.isArray(e) || 'object' === x(e) && null !== e;
              }).forEach(function (n) {
                var u = t[n];
                if ('object' !== x(u) || 'param' !== u.type)
                  return r(u, e);
                if (void 0 === e[u.value])
                  throw new Error('no value for parameter :'.concat(u.value, ' found'));
                return t[n] = P(e[u.value]), null;
              }), t;
            }(JSON.parse(JSON.stringify(r)), t);
          }
          function q(r) {
            var t = [];
            if (!r)
              return t;
            var e = r.type, n = r.value;
            return t.push(e.toUpperCase()), t.push(n.toUpperCase()), t;
          }
          function Z(r) {
            if (r)
              return r.toUpperCase();
          }
          function z(r) {
            return r;
          }
          function J(r) {
            var t = r.type, e = r.partitions;
            return [
              Z(t),
              '('.concat(e.map(function (r) {
                if ('range' !== r.type)
                  return V(r);
                var t = r.start, e = r.end, n = r.symbol;
                return ''.concat(V(t), ' ').concat(Z(n), ' ').concat(V(e));
              }).join(', '), ')')
            ].join(' ');
          }
          function Q(r) {
            if (r) {
              var t = r.dataType, e = r.definition, n = r.anglebracket, u = Z(t);
              if ('ARRAY' !== u && 'STRUCT' !== u)
                return u;
              var o = e && e.map(function (r) {
                return [
                  r.field_name,
                  Q(r.field_type)
                ].filter(z).join(' ');
              }).join(', ');
              return n ? ''.concat(u, '<').concat(o, '>') : ''.concat(u, ' ').concat(o);
            }
          }
          function rr(r) {
            if (r) {
              var t = [], e = r.keyword, n = r.symbol, u = r.value;
              return t.push(e.toUpperCase()), n && t.push(n), t.push(V(u)), t.join(' ');
            }
          }
          function tr(r) {
            return r.map(function (r) {
              var t = r.keyword, e = r.args, n = [Z(t)];
              if (e) {
                var u = e.keyword, o = e.columns;
                n.push(Z(u), o.map(N).join(', '));
              }
              return n.join(' ');
            }).join(' OR ');
          }
          function er(r) {
            return r ? [
              'RETURNING',
              r.columns.map(N).filter(z).join(', ')
            ].join(' ') : '';
          }
          function nr(r) {
            return r ? [
              Z(r.keyword),
              Z(r.args)
            ] : [];
          }
          function ur(r) {
            if (!r || 'string' == typeof r)
              return Z(r);
            var t = r.keyword, e = r.seed, n = r.increment, u = r.parentheses, o = Z(t);
            return u && (o += '('.concat(V(e), ', ').concat(V(n), ')')), o;
          }
          function or(r) {
            if (r)
              return r.map(g).filter(z).join(', ');
          }
          function sr(r) {
            return function (r) {
              if (Array.isArray(r))
                return ar(r);
            }(r) || function (r) {
              if ('undefined' != typeof Symbol && Symbol.iterator in Object(r))
                return Array.from(r);
            }(r) || function (r, t) {
              if (!r)
                return;
              if ('string' == typeof r)
                return ar(r, t);
              var e = Object.prototype.toString.call(r).slice(8, -1);
              'Object' === e && r.constructor && (e = r.constructor.name);
              if ('Map' === e || 'Set' === e)
                return Array.from(r);
              if ('Arguments' === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
                return ar(r, t);
            }(r) || function () {
              throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
            }();
          }
          function ar(r, t) {
            (null == t || t > r.length) && (t = r.length);
            for (var e = 0, n = new Array(t); e < t; e++)
              n[e] = r[e];
            return n;
          }
          function ir(r) {
            if ('string' == typeof r)
              return r;
            var t = r.window_specification;
            return '('.concat(function (r) {
              var t = r.name, e = r.partitionby, n = r.orderby, u = r.window_frame_clause;
              return [
                t,
                Sr(e, 'partition by'),
                Sr(n, 'order by'),
                Z(u)
              ].filter(z).join(' ');
            }(t), ')');
          }
          function cr(r) {
            var t = r.name, e = r.as_window_specification;
            return ''.concat(t, ' AS ').concat(ir(e));
          }
          function lr(r) {
            if (r) {
              var t = r.as_window_specification, e = r.orderby, n = r.partitionby;
              if ('WINDOW' === Z(r.type)) {
                var u = ir(t);
                return 'OVER '.concat(u);
              }
              var o = Sr(n, 'partition by'), s = Sr(e, 'order by');
              return 'OVER ('.concat([
                o,
                s
              ].filter(z).join(' '), ')');
            }
          }
          function fr(r) {
            var t = r.args, e = r.name;
            if (!t)
              return e;
            var n = r.parentheses, u = r.over, o = ''.concat(e, '(').concat(Tr(t).join(', '), ')'), s = lr(u);
            return [
              n ? '('.concat(o, ')') : o,
              s
            ].filter(z).join(' ');
          }
          function vr(r) {
            return function (r) {
              if (Array.isArray(r))
                return br(r);
            }(r) || function (r) {
              if ('undefined' != typeof Symbol && Symbol.iterator in Object(r))
                return Array.from(r);
            }(r) || function (r, t) {
              if (!r)
                return;
              if ('string' == typeof r)
                return br(r, t);
              var e = Object.prototype.toString.call(r).slice(8, -1);
              'Object' === e && r.constructor && (e = r.constructor.name);
              if ('Map' === e || 'Set' === e)
                return Array.from(r);
              if ('Arguments' === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
                return br(r, t);
            }(r) || function () {
              throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
            }();
          }
          function br(r, t) {
            (null == t || t > r.length) && (t = r.length);
            for (var e = 0, n = new Array(t); e < t; e++)
              n[e] = r[e];
            return n;
          }
          function dr(r) {
            return r ? [
              Z(r.prefix),
              Tr(r.value),
              Z(r.suffix)
            ] : [];
          }
          function Lr(r) {
            return r ? r.fetch ? (e = (t = r).fetch, n = t.offset, [].concat(vr(dr(n)), vr(dr(e))).filter(z).join(' ')) : function (r) {
              var t = r.seperator;
              return F('LIMIT', r.value.map(Tr).join(''.concat('offset' === t ? ' ' : '').concat(Z(t), ' ')));
            }(r) : '';
            var t, e, n;
          }
          function Cr(r) {
            if (r && 0 !== r.length) {
              var t = r[0].recursive ? 'RECURSIVE ' : '', e = r.map(function (r) {
                  var t = r.name, e = r.stmt, n = r.columns, u = Array.isArray(n) ? '('.concat(n.join(', '), ')') : '';
                  return ''.concat(t).concat(u, ' AS (').concat(Tr(e), ')');
                }).join(', ');
              return 'WITH '.concat(t).concat(e);
            }
          }
          function pr(r) {
            var t = r.as_struct_val, e = r.columns, n = r.distinct, u = r.from, o = r.for_sys_time_as_of, s = void 0 === o ? {} : o, a = r.for_update, i = r.groupby, c = r.having, l = r.limit, f = r.options, v = r.orderby, b = r.parentheses_symbol, d = r.top, L = r.window, C = r.with, p = r.where, w = [
                Cr(C),
                'SELECT',
                Z(t)
              ];
            w.push(B(d)), Array.isArray(f) && w.push(f.join(' ')), w.push(n, U(e, u)), w.push($('FROM', T, u));
            var E = s || {}, h = E.keyword, A = E.expr;
            w.push($(h, Tr, A)), w.push($('WHERE', Tr, p)), w.push(F('GROUP BY', mr(i).join(', '))), w.push($('HAVING', Tr, c)), w.push($('WINDOW', Tr, L)), w.push(Sr(v, 'order by')), w.push(Lr(l)), w.push(Z(a));
            var y = w.filter(z).join(' ');
            return b ? '('.concat(y, ')') : y;
          }
          function wr(r) {
            return (wr = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (r) {
              return typeof r;
            } : function (r) {
              return r && 'function' == typeof Symbol && r.constructor === Symbol && r !== Symbol.prototype ? 'symbol' : typeof r;
            })(r);
          }
          function Er(r) {
            var t = r.expr_list;
            switch (Z(r.type)) {
            case 'STRUCT':
              return '('.concat(U(t), ')');
            case 'ARRAY':
              return function (r) {
                var t = r.array_path, e = r.expr_list, n = r.parentheses;
                if (!e)
                  return '['.concat(U(t), ']');
                if (Array.isArray(e))
                  return '['.concat(e.map(function (r) {
                    return '('.concat(U(r), ')');
                  }).filter(z).join(', '), ']');
                var u = Tr(e);
                return n ? '('.concat(u, ')') : u;
              }(r);
            default:
              return '';
            }
          }
          function hr(r) {
            var t = r.definition, e = [Z(r.keyword)];
            return t && 'object' === wr(t) && (e.length = 0, e.push(Q(t))), e.push(Er(r)), e.filter(z).join('');
          }
          function Ar(r) {
            return (Ar = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (r) {
              return typeof r;
            } : function (r) {
              return r && 'function' == typeof Symbol && r.constructor === Symbol && r !== Symbol.prototype ? 'symbol' : typeof r;
            })(r);
          }
          var yr = {
            alter: function (r) {
              var t = r.action, e = r.constraint_type, n = r.if_not_exists, u = r.keyword, o = r.resource, s = '', a = [];
              switch (o) {
              case 'column':
                a = [O(r)];
                break;
              case 'index':
                a = w(r), s = r[o];
                break;
              case 'table':
                s = W(r[o]);
                break;
              case 'algorithm':
              case 'lock':
                s = '= '.concat(r[o]);
                break;
              case 'constraint':
                s = W(r[o]), a = [Z(e)].concat(sr(w(r)));
              }
              return [
                Z(t),
                Z(u),
                Z(n),
                s,
                a.filter(z).join(' ')
              ].filter(z).join(' ');
            },
            aggr_func: function (r) {
              var t = r.args, e = r.over, n = r.orderby, u = Tr(t.expr), o = r.name, s = lr(e);
              return t.distinct && (u = 'DISTINCT '.concat(u)), n && (u = ''.concat(u, ' ').concat(Sr(n, 'order by'))), [
                ''.concat(o, '(').concat(u, ')'),
                s
              ].filter(z).join(' ');
            },
            array: hr,
            assign: function (r) {
              var t = r.left, e = r.right, n = r.symbol, u = r.keyword;
              t.keyword = u;
              var o = Tr(t), s = Tr(e);
              return ''.concat(o, ' ').concat(n, ' ').concat(s);
            },
            extract: function (r) {
              var t = r.args, e = r.type, n = t.field, u = t.cast_type, o = t.source, s = [
                  ''.concat(Z(e), '(').concat(Z(n)),
                  'FROM',
                  Z(u),
                  Tr(o)
                ];
              return ''.concat(s.filter(z).join(' '), ')');
            },
            binary_expr: function (r) {
              var t = r.operator, e = Tr(r.right), n = !1;
              if (Array.isArray(e)) {
                switch (t) {
                case '=':
                  t = 'IN';
                  break;
                case '!=':
                  t = 'NOT IN';
                  break;
                case 'BETWEEN':
                case 'NOT BETWEEN':
                  n = !0, e = ''.concat(e[0], ' AND ').concat(e[1]);
                }
                n || (e = '('.concat(e.join(', '), ')'));
              }
              var u = ''.concat(Tr(r.left), ' ').concat(t, ' ').concat(e);
              return r.parentheses ? '('.concat(u, ')') : u;
            },
            case: function (r) {
              var t = ['CASE'], e = r.args;
              r.expr && t.push(Tr(r.expr));
              for (var n = 0, u = e.length; n < u; ++n)
                t.push(e[n].type.toUpperCase()), e[n].cond && (t.push(Tr(e[n].cond)), t.push('THEN')), t.push(Tr(e[n].result));
              return t.push('END'), t.join(' ');
            },
            cast: function (r) {
              var t = r.target, e = r.expr, n = r.symbol, u = t.length, o = t.dataType, s = t.parentheses, a = t.scale, i = '';
              u && (i = a ? ''.concat(u, ', ').concat(a) : u), s && (i = '('.concat(i, ')'));
              var c = Tr(e), l = '::', f = '';
              return 'as' === n && (c = 'CAST('.concat(c), f = ')', l = ' '.concat(n.toUpperCase(), ' ')), ''.concat(c).concat(l).concat(o).concat(i).concat(f);
            },
            column_ref: N,
            function: fr,
            interval: function (r) {
              var t = r.expr, e = r.unit;
              return [
                'INTERVAL',
                Tr(t),
                Z(e)
              ].filter(z).join(' ');
            },
            struct: hr,
            window: function (r) {
              return r.expr.map(cr).join(', ');
            }
          };
          function Tr(r) {
            var t = r;
            if (r.ast) {
              var e = t.ast;
              Reflect.deleteProperty(t, e);
              for (var n = 0, u = Object.keys(e); n < u.length; n++) {
                var o = u[n];
                t[o] = e[o];
              }
            }
            return yr[t.type] ? yr[t.type](t) : V(t);
          }
          function mr(r) {
            return r ? r.map(Tr) : [];
          }
          function Sr(r, t) {
            if (!Array.isArray(r))
              return '';
            var e = [], n = Z(t);
            switch (n) {
            case 'ORDER BY':
              e = r.map(function (r) {
                return ''.concat(Tr(r.expr), ' ').concat(r.type);
              });
              break;
            case 'PARTITION BY':
            default:
              e = r.map(function (r) {
                return ''.concat(N(r.expr));
              });
            }
            return F(n, e.join(', '));
          }
          function Ir(r) {
            return function (r) {
              if (Array.isArray(r))
                return Nr(r);
            }(r) || function (r) {
              if ('undefined' != typeof Symbol && Symbol.iterator in Object(r))
                return Array.from(r);
            }(r) || function (r, t) {
              if (!r)
                return;
              if ('string' == typeof r)
                return Nr(r, t);
              var e = Object.prototype.toString.call(r).slice(8, -1);
              'Object' === e && r.constructor && (e = r.constructor.name);
              if ('Map' === e || 'Set' === e)
                return Array.from(r);
              if ('Arguments' === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
                return Nr(r, t);
            }(r) || function () {
              throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
            }();
          }
          function Nr(r, t) {
            (null == t || t > r.length) && (t = r.length);
            for (var e = 0, n = new Array(t); e < t; e++)
              n[e] = r[e];
            return n;
          }
          function Rr(r) {
            if (!r)
              return [];
            var t, e, n, u, o = r.resource;
            switch (o) {
            case 'column':
              return O(r);
            case 'index':
              return e = [], n = (t = r).keyword, u = t.index, e.push(Z(n)), e.push(u), e.push.apply(e, b(w(t))), e.filter(z).join(' ');
            case 'constraint':
              return A(r);
            default:
              throw new Error('unknow resource = '.concat(o, ' type'));
            }
          }
          function _r(r, t) {
            var e;
            if ('undefined' == typeof Symbol || null == r[Symbol.iterator]) {
              if (Array.isArray(r) || (e = function (r, t) {
                  if (!r)
                    return;
                  if ('string' == typeof r)
                    return gr(r, t);
                  var e = Object.prototype.toString.call(r).slice(8, -1);
                  'Object' === e && r.constructor && (e = r.constructor.name);
                  if ('Map' === e || 'Set' === e)
                    return Array.from(r);
                  if ('Arguments' === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
                    return gr(r, t);
                }(r)) || t && r && 'number' == typeof r.length) {
                e && (r = e);
                var n = 0, u = function () {
                  };
                return {
                  s: u,
                  n: function () {
                    return n >= r.length ? { done: !0 } : {
                      done: !1,
                      value: r[n++]
                    };
                  },
                  e: function (r) {
                    throw r;
                  },
                  f: u
                };
              }
              throw new TypeError('Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
            }
            var o, s = !0, a = !1;
            return {
              s: function () {
                e = r[Symbol.iterator]();
              },
              n: function () {
                var r = e.next();
                return s = r.done, r;
              },
              e: function (r) {
                a = !0, o = r;
              },
              f: function () {
                try {
                  s || null == e.return || e.return();
                } finally {
                  if (a)
                    throw o;
                }
              }
            };
          }
          function gr(r, t) {
            (null == t || t > r.length) && (t = r.length);
            for (var e = 0, n = new Array(t); e < t; e++)
              n[e] = r[e];
            return n;
          }
          function Or(r) {
            if (!r || 0 === r.length)
              return '';
            var t, e = [], n = _r(r);
            try {
              for (n.s(); !(t = n.n()).done;) {
                var u = t.value, o = '', s = u.table, a = u.column, i = u.value;
                o = [
                  s,
                  a
                ].filter(z).map(function (r) {
                  return W(r);
                }).join('.'), i && (o = ''.concat(o, ' = ').concat(Tr(i))), e.push(o);
              }
            } catch (r) {
              n.e(r);
            } finally {
              n.f();
            }
            return e.join(', ');
          }
          function Ur(r) {
            if ('select' === r.type)
              return pr(r);
            var t = r.map(Tr);
            return '('.concat(t.join('),('), ')');
          }
          function xr(r) {
            if (!r)
              return '';
            var t = [
              'PARTITION',
              '('
            ];
            if (Array.isArray(r))
              t.push(r.map(W).join(', '));
            else {
              var e = r.value;
              t.push(e.map(Tr).join(', '));
            }
            return t.push(')'), t.filter(z).join('');
          }
          function Mr(r) {
            return function (r) {
              if (Array.isArray(r))
                return $r(r);
            }(r) || function (r) {
              if ('undefined' != typeof Symbol && Symbol.iterator in Object(r))
                return Array.from(r);
            }(r) || kr(r) || function () {
              throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
            }();
          }
          function Dr(r, t) {
            var e;
            if ('undefined' == typeof Symbol || null == r[Symbol.iterator]) {
              if (Array.isArray(r) || (e = kr(r)) || t && r && 'number' == typeof r.length) {
                e && (r = e);
                var n = 0, u = function () {
                  };
                return {
                  s: u,
                  n: function () {
                    return n >= r.length ? { done: !0 } : {
                      done: !1,
                      value: r[n++]
                    };
                  },
                  e: function (r) {
                    throw r;
                  },
                  f: u
                };
              }
              throw new TypeError('Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
            }
            var o, s = !0, a = !1;
            return {
              s: function () {
                e = r[Symbol.iterator]();
              },
              n: function () {
                var r = e.next();
                return s = r.done, r;
              },
              e: function (r) {
                a = !0, o = r;
              },
              f: function () {
                try {
                  s || null == e.return || e.return();
                } finally {
                  if (a)
                    throw o;
                }
              }
            };
          }
          function kr(r, t) {
            if (r) {
              if ('string' == typeof r)
                return $r(r, t);
              var e = Object.prototype.toString.call(r).slice(8, -1);
              return 'Object' === e && r.constructor && (e = r.constructor.name), 'Map' === e || 'Set' === e ? Array.from(r) : 'Arguments' === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e) ? $r(r, t) : void 0;
            }
          }
          function $r(r, t) {
            (null == t || t > r.length) && (t = r.length);
            for (var e = 0, n = new Array(t); e < t; e++)
              n[e] = r[e];
            return n;
          }
          function Fr(r) {
            var t = r.type, e = r.keyword, n = r.name, u = [
                Z(t),
                Z(e)
              ];
            switch (e) {
            case 'table':
              u.push(T(n));
              break;
            case 'procedure':
              u.push(W(n));
            }
            return u.filter(z).join(' ');
          }
          function Pr(r) {
            var t = r.type, e = r.keyword, n = r.tables, u = [
                t.toUpperCase(),
                Z(e)
              ];
            if ('UNLOCK' === t.toUpperCase())
              return u.join(' ');
            var o, s = [], a = Dr(n);
            try {
              var i = function () {
                var r = o.value, t = r.table, e = r.lock_type, n = [y(t)];
                if (e) {
                  n.push([
                    'prefix',
                    'type',
                    'suffix'
                  ].map(function (r) {
                    return Z(e[r]);
                  }).filter(z).join(' '));
                }
                s.push(n.join(' '));
              };
              for (a.s(); !(o = a.n()).done;)
                i();
            } catch (r) {
              a.e(r);
            } finally {
              a.f();
            }
            return u.push.apply(u, [s.join(', ')].concat(Mr(function (r) {
              var t = r.lock_mode, e = r.nowait, n = [];
              if (t) {
                var u = t.mode;
                n.push(u.toUpperCase());
              }
              return e && n.push(e.toUpperCase()), n;
            }(r)))), u.filter(z).join(' ');
          }
          yr.var = function (r) {
            var t = r.prefix, e = void 0 === t ? '@' : t, n = r.name, u = r.members, o = r.keyword, s = [];
            o && s.push(o);
            var a = u && u.length > 0 ? ''.concat(n, '.').concat(u.join('.')) : n;
            return s.push(''.concat(e || '').concat(a)), s.join(' ');
          }, yr.expr_list = function (r) {
            var t = mr(r.value);
            return r.parentheses ? '('.concat(t, ')') : t;
          }, yr.select = function (r) {
            var t = 'object' === Ar(r._next) ? Gr(r) : pr(r);
            return r.parentheses ? '('.concat(t, ')') : t;
          }, yr.unary_expr = function (r) {
            var t = ''.concat(r.operator, ' ').concat(Tr(r.expr));
            return r.parentheses ? '('.concat(t, ')') : t;
          };
          var Hr = {
            alter: function (r) {
              var t = r.type, e = r.table, n = r.expr, u = void 0 === n ? [] : n;
              return [
                Z(t),
                'TABLE',
                T(e),
                u.map(Tr).join(', ')
              ].filter(z).join(' ');
            },
            create: function (r) {
              var t = r.keyword, e = '';
              switch (t.toLowerCase()) {
              case 'table':
                e = function (r) {
                  var t = r.type, e = r.keyword, n = r.table, u = r.like, o = r.as, s = r.temporary, a = r.if_not_exists, i = r.create_definitions, c = r.table_options, l = r.ignore_replace, f = r.query_expr, v = [
                      Z(t),
                      Z(s),
                      Z(e),
                      Z(a),
                      T(n)
                    ];
                  if (u) {
                    var b = u.type, d = T(u.table);
                    return v.push(Z(b), d), v.filter(z).join(' ');
                  }
                  return i && v.push('('.concat(i.map(Rr).join(', '), ')')), c && v.push(c.map(m).join(' ')), v.push(Z(l), Z(o)), f && v.push(Gr(f)), v.filter(z).join(' ');
                }(r);
                break;
              case 'trigger':
                e = function (r) {
                  var t = r.constraint, e = r.constraint_kw, n = r.deferrable, u = r.events, o = r.execute, s = r.for_each, a = r.from, i = r.location, c = r.keyword, l = r.type, f = r.table, v = r.when, b = [
                      Z(l),
                      Z(e),
                      Z(c),
                      W(t),
                      Z(i)
                    ], d = tr(u);
                  return b.push(d, 'ON', y(f)), a && b.push('FROM', y(a)), b.push.apply(b, Ir(nr(n)).concat(Ir(nr(s)))), v && b.push(Z(v.type), Tr(v.cond)), b.push(Z(o.keyword), fr(o.expr)), b.filter(z).join(' ');
                }(r);
                break;
              case 'extension':
                e = function (r) {
                  var t = r.extension, e = r.from, n = r.if_not_exists, u = r.keyword, o = r.schema, s = r.type, a = r.with, i = r.version;
                  return [
                    Z(s),
                    Z(u),
                    Z(n),
                    V(t),
                    Z(a),
                    $('SCHEMA', V, o),
                    $('VERSION', V, i),
                    $('FROM', V, e)
                  ].filter(z).join(' ');
                }(r);
                break;
              case 'index':
                e = function (r) {
                  var t = r.concurrently, e = r.filestream_on, n = r.keyword, u = r.include, o = r.index_columns, s = r.index_type, a = r.index_using, i = r.index, c = r.on, l = r.on_kw, f = r.table, v = r.tablespace, b = r.type, d = r.where, C = r.with, w = r.with_before_where, E = C && 'WITH ('.concat(p(C).join(', '), ')'), h = u && ''.concat(Z(u.keyword), ' (').concat(u.columns.map(function (r) {
                      return W(r);
                    }).join(', '), ')'), A = [
                      Z(b),
                      Z(s),
                      Z(n),
                      Z(t),
                      W(i),
                      Z(l),
                      y(f)
                    ].concat(Ir(L(a)), [
                      '('.concat(or(o), ')'),
                      h,
                      $('TABLESPACE', V, v)
                    ]);
                  return w ? A.push(E, $('WHERE', Tr, d)) : A.push($('WHERE', Tr, d), E), A.push($('ON', Tr, c), $('FILESTREAM_ON', V, e)), A.filter(z).join(' ');
                }(r);
                break;
              default:
                throw new Error('unknow create resource '.concat(t));
              }
              return e;
            },
            select: pr,
            delete: function (r) {
              var t = ['DELETE'], e = r.columns, n = r.from, u = r.table, o = r.where, s = r.orderby, a = r.limit, i = U(e, n);
              return t.push(i), Array.isArray(u) && (1 === u.length && !0 === u[0].addition || t.push(T(u))), t.push($('FROM', T, n)), t.push($('WHERE', Tr, o)), t.push(Sr(s, 'order by')), t.push(Lr(a)), t.filter(z).join(' ');
            },
            update: function (r) {
              var t = r.table, e = r.set, n = r.where, u = r.orderby, o = r.limit, s = r.returning;
              return [
                'UPDATE',
                T(t),
                $('SET', Or, e),
                $('WHERE', Tr, n),
                Sr(u, 'order by'),
                Lr(o),
                er(s)
              ].filter(z).join(' ');
            },
            insert: function (r) {
              var t = r.table, e = r.prefix, n = void 0 === e ? 'into' : e, u = r.columns, o = r.values, s = r.where, a = r.on_duplicate_update, i = r.partition, c = r.returning, l = r.set, f = [
                  'INSERT',
                  Z(n),
                  T(t),
                  xr(i)
                ];
              return Array.isArray(u) && f.push('('.concat(u.map(W).join(', '), ')')), f.push($(Array.isArray(o) ? 'VALUES' : '', Ur, o)), f.push($('SET', Or, l)), f.push($('WHERE', Tr, s)), f.push(er(c)), f.push($(a && a.keyword, Or, a && a.set)), f.filter(z).join(' ');
            },
            drop: Fr,
            truncate: Fr,
            declare: function (r) {
              var t = r.type, e = r.declare, n = [Z(t)], u = e.map(function (r) {
                  var t = r.at, e = r.name, n = r.as, u = r.prefix, o = r.definition, s = r.keyword, a = [
                      ''.concat(t).concat(e),
                      Z(n)
                    ];
                  switch (s) {
                  case 'variable':
                    a.push(R(u)), o && a.push('=', Tr(o));
                    break;
                  case 'cursor':
                    a.push(Z(u));
                    break;
                  case 'table':
                    a.push(Z(u), '('.concat(o.map(Rr).join(', '), ')'));
                  }
                  return a.filter(z).join(' ');
                }).join(', ');
              return n.push(u), n.join(' ');
            },
            use: function (r) {
              var t = r.type, e = r.db, n = Z(t), u = W(e);
              return ''.concat(n, ' ').concat(u);
            },
            rename: function (r) {
              var t = r.type, e = r.table, n = [], u = ''.concat(t && t.toUpperCase(), ' TABLE');
              if (e) {
                var o, s = Dr(e);
                try {
                  for (s.s(); !(o = s.n()).done;) {
                    var a = o.value.map(y);
                    n.push(a.join(' TO '));
                  }
                } catch (r) {
                  s.e(r);
                } finally {
                  s.f();
                }
              }
              return ''.concat(u, ' ').concat(n.join(', '));
            },
            call: function (r) {
              var t = Tr(r.expr);
              return ''.concat('CALL', ' ').concat(t);
            },
            set: function (r) {
              var t = Tr(r.expr);
              return ''.concat('SET', ' ').concat(t);
            },
            lock: Pr,
            unlock: Pr
          };
          function Gr(r) {
            for (var t = Hr[r.type], e = [t(r)], n = r, u = n._orderby, o = n._limit; r._next;) {
              var s = (r.union || 'union').toUpperCase();
              e.push(s, t(r._next)), r = r._next;
            }
            return e.push(Sr(u, 'order by'), Lr(o)), e.filter(z).join(' ');
          }
          var jr = [
            'select',
            'delete',
            'update',
            'insert',
            'drop',
            'rename',
            'truncate',
            'call',
            'use',
            'alter',
            'set',
            'create',
            'lock',
            'unlock',
            'bigquery',
            'declare'
          ];
          function Yr(r) {
            var t = r && r.ast ? r.ast : r;
            if (!jr.includes(t.type))
              throw new Error(''.concat(t.type, ' statements not supported at the moment'));
          }
          function Br(r) {
            return Array.isArray(r) ? (r.forEach(Yr), function (r) {
              for (var t = [], e = 0, n = r.length; e < n; ++e) {
                var u = r[e] && r[e].ast;
                u || (u = r[e]), t.push(Gr(u));
              }
              return t.join(' ; ');
            }(r)) : (Yr(r), 'bigquery' === r.type ? (e = (t = r).with, n = t.parentheses, u = t.select, o = t.orderby, s = t.limit, (a = [
              Cr(e),
              n && '(',
              Gr(u),
              n && ')'
            ]).push(Sr(o, 'order by'), Lr(s)), a.filter(function (r) {
              return r;
            }).join(' ')) : Gr(r));
            var t, e, n, u, o, s, a;
          }
          function Xr(r, t) {
            var e;
            if ('undefined' == typeof Symbol || null == r[Symbol.iterator]) {
              if (Array.isArray(r) || (e = function (r, t) {
                  if (!r)
                    return;
                  if ('string' == typeof r)
                    return Wr(r, t);
                  var e = Object.prototype.toString.call(r).slice(8, -1);
                  'Object' === e && r.constructor && (e = r.constructor.name);
                  if ('Map' === e || 'Set' === e)
                    return Array.from(r);
                  if ('Arguments' === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))
                    return Wr(r, t);
                }(r)) || t && r && 'number' == typeof r.length) {
                e && (r = e);
                var n = 0, u = function () {
                  };
                return {
                  s: u,
                  n: function () {
                    return n >= r.length ? { done: !0 } : {
                      done: !1,
                      value: r[n++]
                    };
                  },
                  e: function (r) {
                    throw r;
                  },
                  f: u
                };
              }
              throw new TypeError('Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
            }
            var o, s = !0, a = !1;
            return {
              s: function () {
                e = r[Symbol.iterator]();
              },
              n: function () {
                var r = e.next();
                return s = r.done, r;
              },
              e: function (r) {
                a = !0, o = r;
              },
              f: function () {
                try {
                  s || null == e.return || e.return();
                } finally {
                  if (a)
                    throw o;
                }
              }
            };
          }
          function Wr(r, t) {
            (null == t || t > r.length) && (t = r.length);
            for (var e = 0, n = new Array(t); e < t; e++)
              n[e] = r[e];
            return n;
          }
          function Vr(r, t) {
            for (var e = 0; e < t.length; e++) {
              var n = t[e];
              n.enumerable = n.enumerable || !1, n.configurable = !0, 'value' in n && (n.writable = !0), Object.defineProperty(r, n.key, n);
            }
          }
          var Kr = function () {
            function r() {
              !function (r, t) {
                if (!(r instanceof t))
                  throw new TypeError('Cannot call a class as a function');
              }(this, r);
            }
            var t, e;
            return t = r, (e = [
              {
                key: 'astify',
                value: function (r) {
                  var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : D, e = this.parse(r, t);
                  return e && e.ast;
                }
              },
              {
                key: 'sqlify',
                value: function (r) {
                  var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : D;
                  return Y(t), Br(r);
                }
              },
              {
                key: 'parse',
                value: function (r) {
                  var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : D, e = t.database, n = void 0 === e ? 'mysql' : e;
                  Y(t);
                  var u = n.toLowerCase();
                  if (v[u])
                    return v[u](r.trim());
                  throw new Error(''.concat(n, ' is not supported currently'));
                }
              },
              {
                key: 'whiteListCheck',
                value: function (r, t) {
                  var e = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : D;
                  if (t && 0 !== t.length) {
                    var n = e.type, u = void 0 === n ? 'table' : n;
                    if (!this[''.concat(u, 'List')] || 'function' != typeof this[''.concat(u, 'List')])
                      throw new Error(''.concat(u, ' is not valid check mode'));
                    var o, s = this[''.concat(u, 'List')].bind(this), a = s(r, e), i = !0, c = '', l = Xr(a);
                    try {
                      for (l.s(); !(o = l.n()).done;) {
                        var f, v = o.value, b = !1, d = Xr(t);
                        try {
                          for (d.s(); !(f = d.n()).done;) {
                            var L = f.value, C = new RegExp(L, 'i');
                            if (C.test(v)) {
                              b = !0;
                              break;
                            }
                          }
                        } catch (r) {
                          d.e(r);
                        } finally {
                          d.f();
                        }
                        if (!b) {
                          c = v, i = !1;
                          break;
                        }
                      }
                    } catch (r) {
                      l.e(r);
                    } finally {
                      l.f();
                    }
                    if (!i)
                      throw new Error('authority = \''.concat(c, '\' is required in ').concat(u, ' whiteList to execute SQL = \'').concat(r, '\''));
                  }
                }
              },
              {
                key: 'tableList',
                value: function (r, t) {
                  var e = this.parse(r, t);
                  return e && e.tableList;
                }
              },
              {
                key: 'columnList',
                value: function (r, t) {
                  var e = this.parse(r, t);
                  return e && e.columnList;
                }
              }
            ]) && Vr(t.prototype, e), r;
          }();
          commonjsGlobal && commonjsGlobal.window && (commonjsGlobal.window.NodeSQLParser = {
            Parser: Kr,
            util: n
          });
        }
      ]));
    });
    var _brrp_nodeSqlParser = nodeSqlParser;

    const typeofs = [
      'string',
      'number',
      'bigint',
      'symbol'
    ];
    const objectTypeNames = [
      'Function',
      'Generator',
      'AsyncGenerator',
      'GeneratorFunction',
      'AsyncGeneratorFunction',
      'AsyncFunction',
      'Observable',
      'Array',
      'Buffer',
      'Object',
      'RegExp',
      'Date',
      'Error',
      'Map',
      'Set',
      'WeakMap',
      'WeakSet',
      'ArrayBuffer',
      'SharedArrayBuffer',
      'DataView',
      'Promise',
      'URL',
      'HTMLElement',
      'Int8Array',
      'Uint8Array',
      'Uint8ClampedArray',
      'Int16Array',
      'Uint16Array',
      'Int32Array',
      'Uint32Array',
      'Float32Array',
      'Float64Array',
      'BigInt64Array',
      'BigUint64Array'
    ];
    function is(value) {
      if (value === null) {
        return 'null';
      }
      if (value === undefined) {
        return 'undefined';
      }
      if (value === true || value === false) {
        return 'boolean';
      }
      const typeOf = typeof value;
      if (typeofs.includes(typeOf)) {
        return typeOf;
      }
      if (typeOf === 'function') {
        return 'Function';
      }
      if (Array.isArray(value)) {
        return 'Array';
      }
      if (isBuffer(value)) {
        return 'Buffer';
      }
      const objectType = getObjectType(value);
      if (objectType) {
        return objectType;
      }
      return 'Object';
    }
    function isBuffer(value) {
      return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value);
    }
    function getObjectType(value) {
      const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);
      if (objectTypeNames.includes(objectTypeName)) {
        return objectTypeName;
      }
      return undefined;
    }

    class Type {
      constructor(major, name, terminal) {
        this.major = major;
        this.majorEncoded = major << 5;
        this.name = name;
        this.terminal = terminal;
      }
      toString() {
        return `Type[${ this.major }].${ this.name }`;
      }
      compare(typ) {
        return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;
      }
    }
    Type.uint = new Type(0, 'uint', true);
    Type.negint = new Type(1, 'negint', true);
    Type.bytes = new Type(2, 'bytes', true);
    Type.string = new Type(3, 'string', true);
    Type.array = new Type(4, 'array', false);
    Type.map = new Type(5, 'map', false);
    Type.tag = new Type(6, 'tag', false);
    Type.float = new Type(7, 'float', true);
    Type.false = new Type(7, 'false', true);
    Type.true = new Type(7, 'true', true);
    Type.null = new Type(7, 'null', true);
    Type.undefined = new Type(7, 'undefined', true);
    Type.break = new Type(7, 'break', true);
    class Token {
      constructor(type, value, encodedLength) {
        this.type = type;
        this.value = value;
        this.encodedLength = encodedLength;
      }
      toString() {
        return `Token[${ this.type }].${ this.value }`;
      }
    }

    // shim for using process in browser
    // based off https://github.com/defunctzombie/node-process/blob/master/browser.js

    function defaultSetTimout() {
        throw new Error('setTimeout has not been defined');
    }
    function defaultClearTimeout () {
        throw new Error('clearTimeout has not been defined');
    }
    var cachedSetTimeout = defaultSetTimout;
    var cachedClearTimeout = defaultClearTimeout;
    if (typeof global$1.setTimeout === 'function') {
        cachedSetTimeout = setTimeout;
    }
    if (typeof global$1.clearTimeout === 'function') {
        cachedClearTimeout = clearTimeout;
    }

    function runTimeout(fun) {
        if (cachedSetTimeout === setTimeout) {
            //normal enviroments in sane situations
            return setTimeout(fun, 0);
        }
        // if setTimeout wasn't available but was latter defined
        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
            cachedSetTimeout = setTimeout;
            return setTimeout(fun, 0);
        }
        try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedSetTimeout(fun, 0);
        } catch(e){
            try {
                // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                return cachedSetTimeout.call(null, fun, 0);
            } catch(e){
                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                return cachedSetTimeout.call(this, fun, 0);
            }
        }


    }
    function runClearTimeout(marker) {
        if (cachedClearTimeout === clearTimeout) {
            //normal enviroments in sane situations
            return clearTimeout(marker);
        }
        // if clearTimeout wasn't available but was latter defined
        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
            cachedClearTimeout = clearTimeout;
            return clearTimeout(marker);
        }
        try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedClearTimeout(marker);
        } catch (e){
            try {
                // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                return cachedClearTimeout.call(null, marker);
            } catch (e){
                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                return cachedClearTimeout.call(this, marker);
            }
        }



    }
    var queue = [];
    var draining = false;
    var currentQueue;
    var queueIndex = -1;

    function cleanUpNextTick() {
        if (!draining || !currentQueue) {
            return;
        }
        draining = false;
        if (currentQueue.length) {
            queue = currentQueue.concat(queue);
        } else {
            queueIndex = -1;
        }
        if (queue.length) {
            drainQueue();
        }
    }

    function drainQueue() {
        if (draining) {
            return;
        }
        var timeout = runTimeout(cleanUpNextTick);
        draining = true;

        var len = queue.length;
        while(len) {
            currentQueue = queue;
            queue = [];
            while (++queueIndex < len) {
                if (currentQueue) {
                    currentQueue[queueIndex].run();
                }
            }
            queueIndex = -1;
            len = queue.length;
        }
        currentQueue = null;
        draining = false;
        runClearTimeout(timeout);
    }
    function nextTick(fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
                args[i - 1] = arguments[i];
            }
        }
        queue.push(new Item$1(fun, args));
        if (queue.length === 1 && !draining) {
            runTimeout(drainQueue);
        }
    }
    // v8 likes predictible objects
    function Item$1(fun, array) {
        this.fun = fun;
        this.array = array;
    }
    Item$1.prototype.run = function () {
        this.fun.apply(null, this.array);
    };
    var title = 'browser';
    var platform = 'browser';
    var browser = true;
    var env = {};
    var argv = [];
    var version$1 = ''; // empty string to avoid regexp issues
    var versions = {};
    var release = {};
    var config = {};

    function noop$1() {}

    var on = noop$1;
    var addListener = noop$1;
    var once = noop$1;
    var off = noop$1;
    var removeListener = noop$1;
    var removeAllListeners = noop$1;
    var emit = noop$1;

    function binding(name) {
        throw new Error('process.binding is not supported');
    }

    function cwd () { return '/' }
    function chdir (dir) {
        throw new Error('process.chdir is not supported');
    }function umask() { return 0; }

    // from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js
    var performance = global$1.performance || {};
    var performanceNow =
      performance.now        ||
      performance.mozNow     ||
      performance.msNow      ||
      performance.oNow       ||
      performance.webkitNow  ||
      function(){ return (new Date()).getTime() };

    // generate timestamp or delta
    // see http://nodejs.org/api/process.html#process_process_hrtime
    function hrtime(previousTimestamp){
      var clocktime = performanceNow.call(performance)*1e-3;
      var seconds = Math.floor(clocktime);
      var nanoseconds = Math.floor((clocktime%1)*1e9);
      if (previousTimestamp) {
        seconds = seconds - previousTimestamp[0];
        nanoseconds = nanoseconds - previousTimestamp[1];
        if (nanoseconds<0) {
          seconds--;
          nanoseconds += 1e9;
        }
      }
      return [seconds,nanoseconds]
    }

    var startTime = new Date();
    function uptime() {
      var currentTime = new Date();
      var dif = currentTime - startTime;
      return dif / 1000;
    }

    var browser$1 = {
      nextTick: nextTick,
      title: title,
      browser: browser,
      env: env,
      argv: argv,
      version: version$1,
      versions: versions,
      on: on,
      addListener: addListener,
      once: once,
      off: off,
      removeListener: removeListener,
      removeAllListeners: removeAllListeners,
      emit: emit,
      binding: binding,
      cwd: cwd,
      chdir: chdir,
      umask: umask,
      hrtime: hrtime,
      platform: platform,
      release: release,
      config: config,
      uptime: uptime
    };

    const useBuffer = typeof browser$1 !== 'undefined' && !browser$1.browser && global$1.Buffer && typeof global$1.Buffer.isBuffer === 'function';
    const textDecoder = new TextDecoder();
    const textEncoder = new TextEncoder();
    function isBuffer$1(buf) {
      return useBuffer && global$1.Buffer.isBuffer(buf);
    }
    function asU8A(buf) {
      if (!(buf instanceof Uint8Array)) {
        return Uint8Array.from(buf);
      }
      return isBuffer$1(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf;
    }
    const toString = useBuffer ? (bytes, start, end) => {
      return end - start > 64 ? global$1.Buffer.from(bytes.subarray(start, end)).toString('utf8') : utf8Slice(bytes, start, end);
    } : (bytes, start, end) => {
      return end - start > 64 ? textDecoder.decode(bytes.subarray(start, end)) : utf8Slice(bytes, start, end);
    };
    const fromString = useBuffer ? string => {
      return string.length > 64 ? global$1.Buffer.from(string) : utf8ToBytes(string);
    } : string => {
      return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string);
    };
    const fromArray = arr => {
      return Uint8Array.from(arr);
    };
    const slice = useBuffer ? (bytes, start, end) => {
      if (isBuffer$1(bytes)) {
        return new Uint8Array(bytes.subarray(start, end));
      }
      return bytes.slice(start, end);
    } : (bytes, start, end) => {
      return bytes.slice(start, end);
    };
    const concat = useBuffer ? (chunks, length) => {
      chunks = chunks.map(c => c instanceof Uint8Array ? c : global$1.Buffer.from(c));
      return asU8A(global$1.Buffer.concat(chunks, length));
    } : (chunks, length) => {
      const out = new Uint8Array(length);
      let off = 0;
      for (let b of chunks) {
        if (off + b.length > out.length) {
          b = b.subarray(0, out.length - off);
        }
        out.set(b, off);
        off += b.length;
      }
      return out;
    };
    const alloc = useBuffer ? size => {
      return global$1.Buffer.allocUnsafe(size);
    } : size => {
      return new Uint8Array(size);
    };
    function compare(b1, b2) {
      if (isBuffer$1(b1) && isBuffer$1(b2)) {
        return b1.compare(b2);
      }
      for (let i = 0; i < b1.length; i++) {
        if (b1[i] === b2[i]) {
          continue;
        }
        return b1[i] < b2[i] ? -1 : 1;
      }
      return 0;
    }
    function utf8ToBytes(string, units = Infinity) {
      let codePoint;
      const length = string.length;
      let leadSurrogate = null;
      const bytes = [];
      for (let i = 0; i < length; ++i) {
        codePoint = string.charCodeAt(i);
        if (codePoint > 55295 && codePoint < 57344) {
          if (!leadSurrogate) {
            if (codePoint > 56319) {
              if ((units -= 3) > -1)
                bytes.push(239, 191, 189);
              continue;
            } else if (i + 1 === length) {
              if ((units -= 3) > -1)
                bytes.push(239, 191, 189);
              continue;
            }
            leadSurrogate = codePoint;
            continue;
          }
          if (codePoint < 56320) {
            if ((units -= 3) > -1)
              bytes.push(239, 191, 189);
            leadSurrogate = codePoint;
            continue;
          }
          codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
        } else if (leadSurrogate) {
          if ((units -= 3) > -1)
            bytes.push(239, 191, 189);
        }
        leadSurrogate = null;
        if (codePoint < 128) {
          if ((units -= 1) < 0)
            break;
          bytes.push(codePoint);
        } else if (codePoint < 2048) {
          if ((units -= 2) < 0)
            break;
          bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);
        } else if (codePoint < 65536) {
          if ((units -= 3) < 0)
            break;
          bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
        } else if (codePoint < 1114112) {
          if ((units -= 4) < 0)
            break;
          bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
        } else {
          throw new Error('Invalid code point');
        }
      }
      return bytes;
    }
    function utf8Slice(buf, offset, end) {
      const res = [];
      while (offset < end) {
        const firstByte = buf[offset];
        let codePoint = null;
        let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
        if (offset + bytesPerSequence <= end) {
          let secondByte, thirdByte, fourthByte, tempCodePoint;
          switch (bytesPerSequence) {
          case 1:
            if (firstByte < 128) {
              codePoint = firstByte;
            }
            break;
          case 2:
            secondByte = buf[offset + 1];
            if ((secondByte & 192) === 128) {
              tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
              if (tempCodePoint > 127) {
                codePoint = tempCodePoint;
              }
            }
            break;
          case 3:
            secondByte = buf[offset + 1];
            thirdByte = buf[offset + 2];
            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
              tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
              if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {
                codePoint = tempCodePoint;
              }
            }
            break;
          case 4:
            secondByte = buf[offset + 1];
            thirdByte = buf[offset + 2];
            fourthByte = buf[offset + 3];
            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
              tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
              if (tempCodePoint > 65535 && tempCodePoint < 1114112) {
                codePoint = tempCodePoint;
              }
            }
          }
        }
        if (codePoint === null) {
          codePoint = 65533;
          bytesPerSequence = 1;
        } else if (codePoint > 65535) {
          codePoint -= 65536;
          res.push(codePoint >>> 10 & 1023 | 55296);
          codePoint = 56320 | codePoint & 1023;
        }
        res.push(codePoint);
        offset += bytesPerSequence;
      }
      return decodeCodePointsArray(res);
    }
    const MAX_ARGUMENTS_LENGTH = 4096;
    function decodeCodePointsArray(codePoints) {
      const len = codePoints.length;
      if (len <= MAX_ARGUMENTS_LENGTH) {
        return String.fromCharCode.apply(String, codePoints);
      }
      let res = '';
      let i = 0;
      while (i < len) {
        res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
      }
      return res;
    }

    const defaultChunkSize = 256;
    class Bl {
      constructor(chunkSize = defaultChunkSize) {
        this.chunkSize = chunkSize;
        this.cursor = 0;
        this.maxCursor = -1;
        this.chunks = [];
        this._initReuseChunk = null;
      }
      reset() {
        this.chunks = [];
        this.cursor = 0;
        this.maxCursor = -1;
        if (this._initReuseChunk !== null) {
          this.chunks.push(this._initReuseChunk);
          this.maxCursor = this._initReuseChunk.length - 1;
        }
      }
      push(bytes) {
        let topChunk = this.chunks[this.chunks.length - 1];
        const newMax = this.cursor + bytes.length;
        if (newMax <= this.maxCursor + 1) {
          const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;
          topChunk.set(bytes, chunkPos);
        } else {
          if (topChunk) {
            const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;
            if (chunkPos < topChunk.length) {
              this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);
              this.maxCursor = this.cursor - 1;
            }
          }
          if (bytes.length < 64 && bytes.length < this.chunkSize) {
            topChunk = alloc(this.chunkSize);
            this.chunks.push(topChunk);
            this.maxCursor += topChunk.length;
            if (this._initReuseChunk === null) {
              this._initReuseChunk = topChunk;
            }
            topChunk.set(bytes, 0);
          } else {
            this.chunks.push(bytes);
            this.maxCursor += bytes.length;
          }
        }
        this.cursor += bytes.length;
      }
      toBytes(reset = false) {
        let byts;
        if (this.chunks.length === 1) {
          const chunk = this.chunks[0];
          if (reset && this.cursor > chunk.length / 2) {
            byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);
            this._initReuseChunk = null;
            this.chunks = [];
          } else {
            byts = slice(chunk, 0, this.cursor);
          }
        } else {
          byts = concat(this.chunks, this.cursor);
        }
        if (reset) {
          this.reset();
        }
        return byts;
      }
    }

    const decodeErrPrefix = 'CBOR decode error:';
    const encodeErrPrefix = 'CBOR encode error:';
    const uintMinorPrefixBytes = [];
    uintMinorPrefixBytes[23] = 1;
    uintMinorPrefixBytes[24] = 2;
    uintMinorPrefixBytes[25] = 3;
    uintMinorPrefixBytes[26] = 5;
    uintMinorPrefixBytes[27] = 9;
    function assertEnoughData(data, pos, need) {
      if (data.length - pos < need) {
        throw new Error(`${ decodeErrPrefix } not enough data for type`);
      }
    }

    const uintBoundaries = [
      24,
      2 ** 8,
      2 ** 16,
      2 ** 32,
      BigInt(2) ** BigInt(64)
    ];
    function readUint8(data, pos, options) {
      assertEnoughData(data, pos, 1);
      const value = data[pos];
      if (options.strict === true && value < uintBoundaries[0]) {
        throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);
      }
      return value;
    }
    function readUint16(data, offset, options) {
      assertEnoughData(data, offset, 2);
      const value = data[offset] << 8 | data[offset + 1];
      if (options.strict === true && value < uintBoundaries[1]) {
        throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);
      }
      return value;
    }
    function readUint32(data, offset, options) {
      assertEnoughData(data, offset, 4);
      const value = data[offset] * 2 ** 24 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];
      if (options.strict === true && value < uintBoundaries[2]) {
        throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);
      }
      return value;
    }
    function readUint64(data, offset, options) {
      assertEnoughData(data, offset, 8);
      const hi = data[offset] * 2 ** 24 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];
      const lo = data[offset + 4] * 2 ** 24 + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7];
      const value = (BigInt(hi) << BigInt(32)) + BigInt(lo);
      if (options.strict === true && value < uintBoundaries[3]) {
        throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);
      }
      if (value <= Number.MAX_SAFE_INTEGER) {
        return Number(value);
      }
      if (options.allowBigInt === true) {
        return value;
      }
      throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);
    }
    function decodeUint8(data, pos, minor, options) {
      return new Token(Type.uint, readUint8(data, pos + 1, options), 2);
    }
    function decodeUint16(data, pos, minor, options) {
      return new Token(Type.uint, readUint16(data, pos + 1, options), 3);
    }
    function decodeUint32(data, pos, minor, options) {
      return new Token(Type.uint, readUint32(data, pos + 1, options), 5);
    }
    function decodeUint64(data, pos, minor, options) {
      return new Token(Type.uint, readUint64(data, pos + 1, options), 9);
    }
    function encodeUint(buf, token) {
      return encodeUintValue(buf, 0, token.value);
    }
    function encodeUintValue(buf, major, uint) {
      if (uint < uintBoundaries[0]) {
        const nuint = Number(uint);
        buf.push([major | nuint]);
      } else if (uint < uintBoundaries[1]) {
        const nuint = Number(uint);
        buf.push([
          major | 24,
          nuint
        ]);
      } else if (uint < uintBoundaries[2]) {
        const nuint = Number(uint);
        buf.push([
          major | 25,
          nuint >>> 8,
          nuint & 255
        ]);
      } else if (uint < uintBoundaries[3]) {
        const nuint = Number(uint);
        buf.push([
          major | 26,
          nuint >>> 24 & 255,
          nuint >>> 16 & 255,
          nuint >>> 8 & 255,
          nuint & 255
        ]);
      } else {
        const buint = BigInt(uint);
        if (buint < uintBoundaries[4]) {
          const set = [
            major | 27,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ];
          let lo = Number(buint & BigInt(4294967295));
          let hi = Number(buint >> BigInt(32) & BigInt(4294967295));
          set[8] = lo & 255;
          lo = lo >> 8;
          set[7] = lo & 255;
          lo = lo >> 8;
          set[6] = lo & 255;
          lo = lo >> 8;
          set[5] = lo & 255;
          set[4] = hi & 255;
          hi = hi >> 8;
          set[3] = hi & 255;
          hi = hi >> 8;
          set[2] = hi & 255;
          hi = hi >> 8;
          set[1] = hi & 255;
          buf.push(set);
        } else {
          throw new Error(`${ decodeErrPrefix } encountered BigInt larger than allowable range`);
        }
      }
    }
    encodeUint.encodedSize = function encodedSize(token) {
      return encodeUintValue.encodedSize(token.value);
    };
    encodeUintValue.encodedSize = function encodedSize(uint) {
      if (uint < uintBoundaries[0]) {
        return 1;
      }
      if (uint < uintBoundaries[1]) {
        return 2;
      }
      if (uint < uintBoundaries[2]) {
        return 3;
      }
      if (uint < uintBoundaries[3]) {
        return 5;
      }
      return 9;
    };
    encodeUint.compareTokens = function compareTokens(tok1, tok2) {
      return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : 0;
    };

    function decodeNegint8(data, pos, minor, options) {
      return new Token(Type.negint, -1 - readUint8(data, pos + 1, options), 2);
    }
    function decodeNegint16(data, pos, minor, options) {
      return new Token(Type.negint, -1 - readUint16(data, pos + 1, options), 3);
    }
    function decodeNegint32(data, pos, minor, options) {
      return new Token(Type.negint, -1 - readUint32(data, pos + 1, options), 5);
    }
    const neg1b = BigInt(-1);
    const pos1b = BigInt(1);
    function decodeNegint64(data, pos, minor, options) {
      const int = readUint64(data, pos + 1, options);
      if (typeof int !== 'bigint') {
        const value = -1 - int;
        if (value >= Number.MIN_SAFE_INTEGER) {
          return new Token(Type.negint, value, 9);
        }
      }
      if (options.allowBigInt !== true) {
        throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);
      }
      return new Token(Type.negint, neg1b - BigInt(int), 9);
    }
    function encodeNegint(buf, token) {
      const negint = token.value;
      const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;
      encodeUintValue(buf, token.type.majorEncoded, unsigned);
    }
    encodeNegint.encodedSize = function encodedSize(token) {
      const negint = token.value;
      const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;
      if (unsigned < uintBoundaries[0]) {
        return 1;
      }
      if (unsigned < uintBoundaries[1]) {
        return 2;
      }
      if (unsigned < uintBoundaries[2]) {
        return 3;
      }
      if (unsigned < uintBoundaries[3]) {
        return 5;
      }
      return 9;
    };
    encodeNegint.compareTokens = function compareTokens(tok1, tok2) {
      return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;
    };

    function toToken(data, pos, prefix, length) {
      assertEnoughData(data, pos, prefix + length);
      const buf = slice(data, pos + prefix, pos + prefix + length);
      return new Token(Type.bytes, buf, prefix + length);
    }
    function decodeBytesCompact(data, pos, minor, options) {
      return toToken(data, pos, 1, minor);
    }
    function decodeBytes8(data, pos, minor, options) {
      return toToken(data, pos, 2, readUint8(data, pos + 1, options));
    }
    function decodeBytes16(data, pos, minor, options) {
      return toToken(data, pos, 3, readUint16(data, pos + 1, options));
    }
    function decodeBytes32(data, pos, minor, options) {
      return toToken(data, pos, 5, readUint32(data, pos + 1, options));
    }
    function decodeBytes64(data, pos, minor, options) {
      return toToken(data, pos, 9, readUint64(data, pos + 1, options));
    }
    function tokenBytes(token) {
      if (token.encodedBytes === undefined) {
        token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value;
      }
      return token.encodedBytes;
    }
    function encodeBytes(buf, token) {
      const bytes = tokenBytes(token);
      encodeUintValue(buf, token.type.majorEncoded, bytes.length);
      buf.push(bytes);
    }
    encodeBytes.encodedSize = function encodedSize(token) {
      const bytes = tokenBytes(token);
      return encodeUintValue.encodedSize(bytes.length) + bytes.length;
    };
    encodeBytes.compareTokens = function compareTokens(tok1, tok2) {
      return compareBytes(tokenBytes(tok1), tokenBytes(tok2));
    };
    function compareBytes(b1, b2) {
      return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2);
    }

    function toToken$1(data, pos, prefix, length) {
      const totLength = prefix + length;
      assertEnoughData(data, pos, totLength);
      return new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength);
    }
    function decodeStringCompact(data, pos, minor, options) {
      return toToken$1(data, pos, 1, minor);
    }
    function decodeString8(data, pos, minor, options) {
      return toToken$1(data, pos, 2, readUint8(data, pos + 1, options));
    }
    function decodeString16(data, pos, minor, options) {
      return toToken$1(data, pos, 3, readUint16(data, pos + 1, options));
    }
    function decodeString32(data, pos, minor, options) {
      return toToken$1(data, pos, 5, readUint32(data, pos + 1, options));
    }
    function decodeString64(data, pos, minor, options) {
      return toToken$1(data, pos, 9, readUint64(data, pos + 1, options));
    }
    const encodeString = encodeBytes;

    function toToken$2(data, pos, prefix, length) {
      return new Token(Type.array, length, prefix);
    }
    function decodeArrayCompact(data, pos, minor, options) {
      return toToken$2(data, pos, 1, minor);
    }
    function decodeArray8(data, pos, minor, options) {
      return toToken$2(data, pos, 2, readUint8(data, pos + 1, options));
    }
    function decodeArray16(data, pos, minor, options) {
      return toToken$2(data, pos, 3, readUint16(data, pos + 1, options));
    }
    function decodeArray32(data, pos, minor, options) {
      return toToken$2(data, pos, 5, readUint32(data, pos + 1, options));
    }
    function decodeArray64(data, pos, minor, options) {
      return toToken$2(data, pos, 9, readUint64(data, pos + 1, options));
    }
    function decodeArrayIndefinite(data, pos, minor, options) {
      if (options.allowIndefinite === false) {
        throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);
      }
      return toToken$2(data, pos, 1, Infinity);
    }
    function encodeArray(buf, token) {
      encodeUintValue(buf, Type.array.majorEncoded, token.value);
    }
    encodeArray.compareTokens = encodeUint.compareTokens;

    function toToken$3(data, pos, prefix, length) {
      return new Token(Type.map, length, prefix);
    }
    function decodeMapCompact(data, pos, minor, options) {
      return toToken$3(data, pos, 1, minor);
    }
    function decodeMap8(data, pos, minor, options) {
      return toToken$3(data, pos, 2, readUint8(data, pos + 1, options));
    }
    function decodeMap16(data, pos, minor, options) {
      return toToken$3(data, pos, 3, readUint16(data, pos + 1, options));
    }
    function decodeMap32(data, pos, minor, options) {
      return toToken$3(data, pos, 5, readUint32(data, pos + 1, options));
    }
    function decodeMap64(data, pos, minor, options) {
      return toToken$3(data, pos, 9, readUint64(data, pos + 1, options));
    }
    function decodeMapIndefinite(data, pos, minor, options) {
      if (options.allowIndefinite === false) {
        throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);
      }
      return toToken$3(data, pos, 1, Infinity);
    }
    function encodeMap(buf, token) {
      encodeUintValue(buf, Type.map.majorEncoded, token.value);
    }
    encodeMap.compareTokens = encodeUint.compareTokens;

    function decodeTagCompact(data, pos, minor, options) {
      return new Token(Type.tag, minor, 1);
    }
    function decodeTag8(data, pos, minor, options) {
      return new Token(Type.tag, readUint8(data, pos + 1, options), 2);
    }
    function decodeTag16(data, pos, minor, options) {
      return new Token(Type.tag, readUint16(data, pos + 1, options), 3);
    }
    function decodeTag32(data, pos, minor, options) {
      return new Token(Type.tag, readUint32(data, pos + 1, options), 5);
    }
    function decodeTag64(data, pos, minor, options) {
      return new Token(Type.tag, readUint64(data, pos + 1, options), 9);
    }
    function encodeTag(buf, token) {
      encodeUintValue(buf, Type.tag.majorEncoded, token.value);
    }
    encodeTag.compareTokens = encodeUint.compareTokens;

    const MINOR_FALSE = 20;
    const MINOR_TRUE = 21;
    const MINOR_NULL = 22;
    const MINOR_UNDEFINED = 23;
    function decodeUndefined(data, pos, minor, options) {
      if (options.allowUndefined === false) {
        throw new Error(`${ decodeErrPrefix } undefined values are not supported`);
      }
      return new Token(Type.undefined, undefined, 1);
    }
    function decodeBreak(data, pos, minor, options) {
      if (options.allowIndefinite === false) {
        throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);
      }
      return new Token(Type.break, undefined, 1);
    }
    function createToken(value, bytes, options) {
      if (options) {
        if (options.allowNaN === false && Number.isNaN(value)) {
          throw new Error(`${ decodeErrPrefix } NaN values are not supported`);
        }
        if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {
          throw new Error(`${ decodeErrPrefix } Infinity values are not supported`);
        }
      }
      return new Token(Type.float, value, bytes);
    }
    function decodeFloat16(data, pos, minor, options) {
      return createToken(readFloat16(data, pos + 1), 3, options);
    }
    function decodeFloat32(data, pos, minor, options) {
      return createToken(readFloat32(data, pos + 1), 5, options);
    }
    function decodeFloat64(data, pos, minor, options) {
      return createToken(readFloat64(data, pos + 1), 9, options);
    }
    function encodeFloat(buf, token, options) {
      const float = token.value;
      if (float === false) {
        buf.push([Type.float.majorEncoded | MINOR_FALSE]);
      } else if (float === true) {
        buf.push([Type.float.majorEncoded | MINOR_TRUE]);
      } else if (float === null) {
        buf.push([Type.float.majorEncoded | MINOR_NULL]);
      } else if (float === undefined) {
        buf.push([Type.float.majorEncoded | MINOR_UNDEFINED]);
      } else {
        let decoded;
        let success = false;
        if (!options || options.float64 !== true) {
          encodeFloat16(float);
          decoded = readFloat16(ui8a, 1);
          if (float === decoded || Number.isNaN(float)) {
            ui8a[0] = 249;
            buf.push(ui8a.slice(0, 3));
            success = true;
          } else {
            encodeFloat32(float);
            decoded = readFloat32(ui8a, 1);
            if (float === decoded) {
              ui8a[0] = 250;
              buf.push(ui8a.slice(0, 5));
              success = true;
            }
          }
        }
        if (!success) {
          encodeFloat64(float);
          decoded = readFloat64(ui8a, 1);
          ui8a[0] = 251;
          buf.push(ui8a.slice(0, 9));
        }
      }
    }
    encodeFloat.encodedSize = function encodedSize(token, options) {
      const float = token.value;
      if (float === false || float === true || float === null || float === undefined) {
        return 1;
      }
      let decoded;
      if (!options || options.float64 !== true) {
        encodeFloat16(float);
        decoded = readFloat16(ui8a, 1);
        if (float === decoded || Number.isNaN(float)) {
          return 3;
        }
        encodeFloat32(float);
        decoded = readFloat32(ui8a, 1);
        if (float === decoded) {
          return 5;
        }
      }
      return 9;
    };
    const buffer = new ArrayBuffer(9);
    const dataView = new DataView(buffer, 1);
    const ui8a = new Uint8Array(buffer, 0);
    function encodeFloat16(inp) {
      if (inp === Infinity) {
        dataView.setUint16(0, 31744, false);
      } else if (inp === -Infinity) {
        dataView.setUint16(0, 64512, false);
      } else if (Number.isNaN(inp)) {
        dataView.setUint16(0, 32256, false);
      } else {
        dataView.setFloat32(0, inp);
        const valu32 = dataView.getUint32(0);
        const exponent = (valu32 & 2139095040) >> 23;
        const mantissa = valu32 & 8388607;
        if (exponent === 255) {
          dataView.setUint16(0, 31744, false);
        } else if (exponent === 0) {
          dataView.setUint16(0, (inp & 2147483648) >> 16 | mantissa >> 13, false);
        } else {
          const logicalExponent = exponent - 127;
          if (logicalExponent < -24) {
            dataView.setUint16(0, 0);
          } else if (logicalExponent < -14) {
            dataView.setUint16(0, (valu32 & 2147483648) >> 16 | 1 << 24 + logicalExponent, false);
          } else {
            dataView.setUint16(0, (valu32 & 2147483648) >> 16 | logicalExponent + 15 << 10 | mantissa >> 13, false);
          }
        }
      }
    }
    function readFloat16(ui8a, pos) {
      if (ui8a.length - pos < 2) {
        throw new Error(`${ decodeErrPrefix } not enough data for float16`);
      }
      const half = (ui8a[pos] << 8) + ui8a[pos + 1];
      if (half === 31744) {
        return Infinity;
      }
      if (half === 64512) {
        return -Infinity;
      }
      if (half === 32256) {
        return NaN;
      }
      const exp = half >> 10 & 31;
      const mant = half & 1023;
      let val;
      if (exp === 0) {
        val = mant * 2 ** -24;
      } else if (exp !== 31) {
        val = (mant + 1024) * 2 ** (exp - 25);
      } else {
        val = mant === 0 ? Infinity : NaN;
      }
      return half & 32768 ? -val : val;
    }
    function encodeFloat32(inp) {
      dataView.setFloat32(0, inp, false);
    }
    function readFloat32(ui8a, pos) {
      if (ui8a.length - pos < 4) {
        throw new Error(`${ decodeErrPrefix } not enough data for float32`);
      }
      const offset = (ui8a.byteOffset || 0) + pos;
      return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false);
    }
    function encodeFloat64(inp) {
      dataView.setFloat64(0, inp, false);
    }
    function readFloat64(ui8a, pos) {
      if (ui8a.length - pos < 8) {
        throw new Error(`${ decodeErrPrefix } not enough data for float64`);
      }
      const offset = (ui8a.byteOffset || 0) + pos;
      return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false);
    }

    function invalidMinor(data, pos, minor) {
      throw new Error(`${ decodeErrPrefix } encountered invalid minor (${ minor }) for major ${ data[pos] >>> 5 }`);
    }
    function errorer(msg) {
      return () => {
        throw new Error(`${ decodeErrPrefix } ${ msg }`);
      };
    }
    const jump = [];
    for (let i = 0; i <= 23; i++) {
      jump[i] = invalidMinor;
    }
    jump[24] = decodeUint8;
    jump[25] = decodeUint16;
    jump[26] = decodeUint32;
    jump[27] = decodeUint64;
    jump[28] = invalidMinor;
    jump[29] = invalidMinor;
    jump[30] = invalidMinor;
    jump[31] = invalidMinor;
    for (let i = 32; i <= 55; i++) {
      jump[i] = invalidMinor;
    }
    jump[56] = decodeNegint8;
    jump[57] = decodeNegint16;
    jump[58] = decodeNegint32;
    jump[59] = decodeNegint64;
    jump[60] = invalidMinor;
    jump[61] = invalidMinor;
    jump[62] = invalidMinor;
    jump[63] = invalidMinor;
    for (let i = 64; i <= 87; i++) {
      jump[i] = decodeBytesCompact;
    }
    jump[88] = decodeBytes8;
    jump[89] = decodeBytes16;
    jump[90] = decodeBytes32;
    jump[91] = decodeBytes64;
    jump[92] = invalidMinor;
    jump[93] = invalidMinor;
    jump[94] = invalidMinor;
    jump[95] = errorer('indefinite length bytes/strings are not supported');
    for (let i = 96; i <= 119; i++) {
      jump[i] = decodeStringCompact;
    }
    jump[120] = decodeString8;
    jump[121] = decodeString16;
    jump[122] = decodeString32;
    jump[123] = decodeString64;
    jump[124] = invalidMinor;
    jump[125] = invalidMinor;
    jump[126] = invalidMinor;
    jump[127] = errorer('indefinite length bytes/strings are not supported');
    for (let i = 128; i <= 151; i++) {
      jump[i] = decodeArrayCompact;
    }
    jump[152] = decodeArray8;
    jump[153] = decodeArray16;
    jump[154] = decodeArray32;
    jump[155] = decodeArray64;
    jump[156] = invalidMinor;
    jump[157] = invalidMinor;
    jump[158] = invalidMinor;
    jump[159] = decodeArrayIndefinite;
    for (let i = 160; i <= 183; i++) {
      jump[i] = decodeMapCompact;
    }
    jump[184] = decodeMap8;
    jump[185] = decodeMap16;
    jump[186] = decodeMap32;
    jump[187] = decodeMap64;
    jump[188] = invalidMinor;
    jump[189] = invalidMinor;
    jump[190] = invalidMinor;
    jump[191] = decodeMapIndefinite;
    for (let i = 192; i <= 215; i++) {
      jump[i] = decodeTagCompact;
    }
    jump[216] = decodeTag8;
    jump[217] = decodeTag16;
    jump[218] = decodeTag32;
    jump[219] = decodeTag64;
    jump[220] = invalidMinor;
    jump[221] = invalidMinor;
    jump[222] = invalidMinor;
    jump[223] = invalidMinor;
    for (let i = 224; i <= 243; i++) {
      jump[i] = errorer('simple values are not supported');
    }
    jump[244] = invalidMinor;
    jump[245] = invalidMinor;
    jump[246] = invalidMinor;
    jump[247] = decodeUndefined;
    jump[248] = errorer('simple values are not supported');
    jump[249] = decodeFloat16;
    jump[250] = decodeFloat32;
    jump[251] = decodeFloat64;
    jump[252] = invalidMinor;
    jump[253] = invalidMinor;
    jump[254] = invalidMinor;
    jump[255] = decodeBreak;
    const quick = [];
    for (let i = 0; i < 24; i++) {
      quick[i] = new Token(Type.uint, i, 1);
    }
    for (let i = -1; i >= -24; i--) {
      quick[31 - i] = new Token(Type.negint, i, 1);
    }
    quick[64] = new Token(Type.bytes, new Uint8Array(0), 1);
    quick[96] = new Token(Type.string, '', 1);
    quick[128] = new Token(Type.array, 0, 1);
    quick[160] = new Token(Type.map, 0, 1);
    quick[244] = new Token(Type.false, false, 1);
    quick[245] = new Token(Type.true, true, 1);
    quick[246] = new Token(Type.null, null, 1);
    function quickEncodeToken(token) {
      switch (token.type) {
      case Type.false:
        return fromArray([244]);
      case Type.true:
        return fromArray([245]);
      case Type.null:
        return fromArray([246]);
      case Type.bytes:
        if (!token.value.length) {
          return fromArray([64]);
        }
        return;
      case Type.string:
        if (token.value === '') {
          return fromArray([96]);
        }
        return;
      case Type.array:
        if (token.value === 0) {
          return fromArray([128]);
        }
        return;
      case Type.map:
        if (token.value === 0) {
          return fromArray([160]);
        }
        return;
      case Type.uint:
        if (token.value < 24) {
          return fromArray([Number(token.value)]);
        }
        return;
      case Type.negint:
        if (token.value >= -24) {
          return fromArray([31 - Number(token.value)]);
        }
      }
    }

    const defaultEncodeOptions = { float64: false };
    const encoders = [];
    encoders[Type.uint.major] = encodeUint;
    encoders[Type.negint.major] = encodeNegint;
    encoders[Type.bytes.major] = encodeBytes;
    encoders[Type.string.major] = encodeString;
    encoders[Type.array.major] = encodeArray;
    encoders[Type.map.major] = encodeMap;
    encoders[Type.tag.major] = encodeTag;
    encoders[Type.float.major] = encodeFloat;
    const buf = new Bl();
    class Ref {
      constructor(obj, parent) {
        this.obj = obj;
        this.parent = parent;
      }
      includes(obj) {
        let p = this;
        do {
          if (p.obj === obj) {
            return true;
          }
        } while (p = p.parent);
        return false;
      }
      static createCheck(stack, obj) {
        if (stack && stack.includes(obj)) {
          throw new Error(`${ encodeErrPrefix } object contains circular references`);
        }
        return new Ref(obj, stack);
      }
    }
    const simpleTokens = {
      null: new Token(Type.null, null),
      undefined: new Token(Type.undefined, undefined),
      true: new Token(Type.true, true),
      false: new Token(Type.false, false),
      emptyArray: new Token(Type.array, 0),
      emptyMap: new Token(Type.map, 0)
    };
    const typeEncoders = {
      number(obj) {
        if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {
          return new Token(Type.float, obj);
        } else if (obj >= 0) {
          return new Token(Type.uint, obj);
        } else {
          return new Token(Type.negint, obj);
        }
      },
      bigint(obj) {
        if (obj >= BigInt(0)) {
          return new Token(Type.uint, obj);
        } else {
          return new Token(Type.negint, obj);
        }
      },
      Uint8Array(obj) {
        return new Token(Type.bytes, obj);
      },
      string(obj) {
        return new Token(Type.string, obj);
      },
      boolean(obj) {
        return obj ? simpleTokens.true : simpleTokens.false;
      },
      null() {
        return simpleTokens.null;
      },
      undefined() {
        return simpleTokens.undefined;
      },
      ArrayBuffer(obj) {
        return new Token(Type.bytes, new Uint8Array(obj));
      },
      DataView(obj) {
        return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));
      },
      Array(obj, _, options, refStack) {
        if (!obj.length) {
          return simpleTokens.emptyArray;
        }
        refStack = Ref.createCheck(refStack, obj);
        const entries = [];
        let i = 0;
        for (const e of obj) {
          entries[i++] = objectToTokens(e, options, refStack);
        }
        return [
          new Token(Type.array, obj.length),
          entries
        ];
      },
      Object(obj, typ, options, refStack) {
        const isMap = typ !== 'Object';
        const keys = isMap ? obj.keys() : Object.keys(obj);
        const length = isMap ? obj.size : keys.length;
        if (!length) {
          return simpleTokens.emptyMap;
        }
        refStack = Ref.createCheck(refStack, obj);
        const entries = [];
        let i = 0;
        for (const key of keys) {
          entries[i++] = [
            objectToTokens(key, options, refStack),
            objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)
          ];
        }
        entries.sort(mapSorter);
        return [
          new Token(Type.map, length),
          entries
        ];
      }
    };
    typeEncoders.Map = typeEncoders.Object;
    typeEncoders.Buffer = typeEncoders.Uint8Array;
    for (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {
      typeEncoders[`${ typ }Array`] = typeEncoders.DataView;
    }
    function objectToTokens(obj, options = {}, refStack) {
      const typ = is(obj);
      const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];
      if (typeof customTypeEncoder === 'function') {
        const tokens = customTypeEncoder(obj, typ, options, refStack);
        if (tokens != null) {
          return tokens;
        }
      }
      const typeEncoder = typeEncoders[typ];
      if (!typeEncoder) {
        throw new Error(`${ encodeErrPrefix } unsupported type: ${ typ }`);
      }
      return typeEncoder(obj, typ, options, refStack);
    }
    function mapSorter(e1, e2) {
      const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];
      const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];
      if (keyToken1.type !== keyToken2.type) {
        return keyToken1.type.compare(keyToken2.type);
      }
      const major = keyToken1.type.major;
      const tcmp = encoders[major].compareTokens(keyToken1, keyToken2);
      if (tcmp === 0) {
        console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');
      }
      return tcmp;
    }
    function tokensToEncoded(buf, tokens, options) {
      if (Array.isArray(tokens)) {
        for (const token of tokens) {
          tokensToEncoded(buf, token, options);
        }
      } else {
        encoders[tokens.type.major](buf, tokens, options);
      }
    }
    function encode$2(data, options) {
      options = Object.assign({}, defaultEncodeOptions, options);
      const tokens = objectToTokens(data, options);
      if (!Array.isArray(tokens)) {
        const quickBytes = quickEncodeToken(tokens);
        if (quickBytes) {
          return quickBytes;
        }
        const encoder = encoders[tokens.type.major];
        if (encoder.encodedSize) {
          const size = encoder.encodedSize(tokens, options);
          const buf = new Bl(size);
          encoder(buf, tokens, options);
          if (buf.chunks.length !== 1) {
            throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);
          }
          return asU8A(buf.chunks[0]);
        }
      }
      tokensToEncoded(buf, tokens, options);
      return buf.toBytes(true);
    }

    const defaultDecodeOptions = {
      strict: false,
      allowIndefinite: true,
      allowUndefined: true,
      allowBigInt: true
    };
    class Tokeniser {
      constructor(data, options = {}) {
        this.pos = 0;
        this.data = data;
        this.options = options;
      }
      done() {
        return this.pos >= this.data.length;
      }
      next() {
        const byt = this.data[this.pos];
        let token = quick[byt];
        if (token === undefined) {
          const decoder = jump[byt];
          if (!decoder) {
            throw new Error(`${ decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);
          }
          const minor = byt & 31;
          token = decoder(this.data, this.pos, minor, this.options);
        }
        this.pos += token.encodedLength;
        return token;
      }
    }
    const DONE = Symbol.for('DONE');
    const BREAK = Symbol.for('BREAK');
    function tokenToArray(token, tokeniser, options) {
      const arr = [];
      for (let i = 0; i < token.value; i++) {
        const value = tokensToObject(tokeniser, options);
        if (value === BREAK) {
          if (token.value === Infinity) {
            break;
          }
          throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed array`);
        }
        if (value === DONE) {
          throw new Error(`${ decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);
        }
        arr[i] = value;
      }
      return arr;
    }
    function tokenToMap(token, tokeniser, options) {
      const useMaps = options.useMaps === true;
      const obj = useMaps ? undefined : {};
      const m = useMaps ? new Map() : undefined;
      for (let i = 0; i < token.value; i++) {
        const key = tokensToObject(tokeniser, options);
        if (key === DONE) {
          throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);
        }
        if (key === BREAK) {
          if (token.value === Infinity) {
            break;
          }
          throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed map`);
        }
        if (useMaps !== true && typeof key !== 'string') {
          throw new Error(`${ decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);
        }
        const value = tokensToObject(tokeniser, options);
        if (value === DONE) {
          throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);
        }
        if (useMaps) {
          m.set(key, value);
        } else {
          obj[key] = value;
        }
      }
      return useMaps ? m : obj;
    }
    function tokensToObject(tokeniser, options) {
      if (tokeniser.done()) {
        return DONE;
      }
      const token = tokeniser.next();
      if (token.type === Type.break) {
        return BREAK;
      }
      if (token.type.terminal) {
        return token.value;
      }
      if (token.type === Type.array) {
        return tokenToArray(token, tokeniser, options);
      }
      if (token.type === Type.map) {
        return tokenToMap(token, tokeniser, options);
      }
      if (token.type === Type.tag) {
        if (options.tags && typeof options.tags[token.value] === 'function') {
          const tagged = tokensToObject(tokeniser, options);
          return options.tags[token.value](tagged);
        }
        throw new Error(`${ decodeErrPrefix } tag not supported (${ token.value })`);
      }
      throw new Error('unsupported');
    }
    function decode$4(data, options) {
      if (!(data instanceof Uint8Array)) {
        throw new Error(`${ decodeErrPrefix } data to decode must be a Uint8Array`);
      }
      options = Object.assign({}, defaultDecodeOptions, options);
      const tokeniser = new Tokeniser(data, options);
      const decoded = tokensToObject(tokeniser, options);
      if (decoded === DONE) {
        throw new Error(`${ decodeErrPrefix } did not find any content to decode`);
      }
      if (decoded === BREAK) {
        throw new Error(`${ decodeErrPrefix } got unexpected break`);
      }
      if (!tokeniser.done()) {
        throw new Error(`${ decodeErrPrefix } too many terminals, data makes no sense`);
      }
      return decoded;
    }

    const CID_CBOR_TAG = 42;
    const code = 113;
    const name = 'dag-cbor';
    function cidEncoder(obj) {
      if (obj.asCID !== obj) {
        return null;
      }
      const cid = CID.asCID(obj);
      if (!cid) {
        return null;
      }
      const bytes = new Uint8Array(cid.bytes.byteLength + 1);
      bytes.set(cid.bytes, 1);
      return [
        new Token(Type.tag, CID_CBOR_TAG),
        new Token(Type.bytes, bytes)
      ];
    }
    function undefinedEncoder() {
      throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');
    }
    function numberEncoder(num) {
      if (Number.isNaN(num)) {
        throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');
      }
      if (num === Infinity || num === -Infinity) {
        throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');
      }
    }
    const encodeOptions = {
      float64: true,
      typeEncoders: {
        Object: cidEncoder,
        undefined: undefinedEncoder,
        number: numberEncoder
      }
    };
    function encode$3(node) {
      return encode$2(node, encodeOptions);
    }
    function cidDecoder(bytes) {
      if (bytes[0] !== 0) {
        throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');
      }
      return CID.decode(bytes.subarray(1));
    }
    const decodeOptions = {
      allowIndefinite: false,
      allowUndefined: false,
      allowNaN: false,
      allowInfinity: false,
      allowBigInt: true,
      strict: true,
      useMaps: false,
      tags: []
    };
    decodeOptions.tags[CID_CBOR_TAG] = cidDecoder;
    function decode$5(data) {
      return decode$4(data, decodeOptions);
    }

    var codec$1 = /*#__PURE__*/Object.freeze({
        __proto__: null,
        name: name,
        code: code,
        encode: encode$3,
        decode: decode$5
    });

    const sha = name => async data => new Uint8Array(await window.crypto.subtle.digest(name, data));
    const sha256 = from$1({
      name: 'sha2-256',
      code: 18,
      encode: sha('SHA-256')
    });

    const readonly$1 = ({enumerable = true, configurable = false} = {}) => ({
      enumerable,
      configurable,
      writable: false
    });
    const links = function* (source, base) {
      if (source == null)
        return;
      for (const [key, value] of Object.entries(source)) {
        const path = [
          ...base,
          key
        ];
        if (value != null && typeof value === 'object') {
          if (Array.isArray(value)) {
            for (const [index, element] of value.entries()) {
              const elementPath = [
                ...path,
                index
              ];
              const cid = CID.asCID(element);
              if (cid) {
                yield [
                  elementPath.join('/'),
                  cid
                ];
              } else if (typeof element === 'object') {
                yield* links(element, elementPath);
              }
            }
          } else {
            const cid = CID.asCID(value);
            if (cid) {
              yield [
                path.join('/'),
                cid
              ];
            } else {
              yield* links(value, path);
            }
          }
        }
      }
    };
    const tree = function* (source, base) {
      if (source == null)
        return;
      for (const [key, value] of Object.entries(source)) {
        const path = [
          ...base,
          key
        ];
        yield path.join('/');
        if (value != null && typeof value === 'object' && !CID.asCID(value)) {
          if (Array.isArray(value)) {
            for (const [index, element] of value.entries()) {
              const elementPath = [
                ...path,
                index
              ];
              yield elementPath.join('/');
              if (typeof element === 'object' && !CID.asCID(element)) {
                yield* tree(element, elementPath);
              }
            }
          } else {
            yield* tree(value, path);
          }
        }
      }
    };
    const get = (source, path) => {
      let node = source;
      for (const [index, key] of path.entries()) {
        node = node[key];
        if (node == null) {
          throw new Error(`Object has no property at ${ path.slice(0, index + 1).map(part => `[${ JSON.stringify(part) }]`).join('') }`);
        }
        const cid = CID.asCID(node);
        if (cid) {
          return {
            value: cid,
            remaining: path.slice(index + 1).join('/')
          };
        }
      }
      return { value: node };
    };
    class Block {
      constructor({cid, bytes, value}) {
        if (!cid || !bytes || typeof value === 'undefined')
          throw new Error('Missing required argument');
        this.cid = cid;
        this.bytes = bytes;
        this.value = value;
        this.asBlock = this;
        Object.defineProperties(this, {
          cid: readonly$1(),
          bytes: readonly$1(),
          value: readonly$1(),
          asBlock: readonly$1()
        });
      }
      links() {
        return links(this.value, []);
      }
      tree() {
        return tree(this.value, []);
      }
      get(path = '/') {
        return get(this.value, path.split('/').filter(Boolean));
      }
    }
    const encode$4 = async ({value, codec, hasher}) => {
      if (typeof value === 'undefined')
        throw new Error('Missing required argument "value"');
      if (!codec || !hasher)
        throw new Error('Missing required argument: codec or hasher');
      const bytes = codec.encode(value);
      const hash = await hasher.digest(bytes);
      const cid = CID.create(1, codec.code, hash);
      return new Block({
        value,
        bytes,
        cid
      });
    };

    const raw = bytes => coerce(bytes);
    var raw$1 = codec({
      name: 'raw',
      code: 85,
      decode: raw,
      encode: raw
    });

    var json = codec({
      name: 'json',
      code: 512,
      encode: json => new TextEncoder().encode(JSON.stringify(json)),
      decode: bytes => JSON.parse(new TextDecoder().decode(bytes))
    });

    const mf = {
      hasher: sha256,
      codec: codec$1
    };
    const encoder = value => encode$4({
      value,
      ...mf
    });
    const codeMap = new Map();
    for (const c of [
        codec$1,
        raw$1,
        json,
        sha256
      ]) {
      codeMap.set(c.code, c);
    }

    const immediate = () => new Promise(resolve => setTimeout(resolve, 0));
    const getNode = async (cid, get, cache, create) => {
      if (cache.has(cid)) {
        return cache.get(cid);
      }
      const block = await get(cid);
      const node = await create(block);
      if (node.address)
        cache.set(node);
      return node;
    };
    class SQLBase {
      constructor({block, get}) {
        this.block = block || this.encode();
        this.address = this.block.then ? this.block.then(b => b.cid) : this.block.cid;
      }
      async encode() {
        if (this.block)
          return this.block;
        await immediate();
        const node = await this.encodeNode();
        return encoder(node);
      }
    }
    const immutable = (obj, props) => {
      const writes = {};
      for (const [key, value] of Object.entries(props)) {
        writes[key] = {
          value,
          writable: false,
          enumerable: true
        };
      }
      Object.defineProperties(obj, writes);
    };

    const readUInt32LE = buffer => {
      const offset = buffer.byteLength - 4;
      return (buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16) + buffer[offset + 3] * 16777216;
    };
    const MAX_UINT32 = 4294967295;
    const bf = factor => {
      const threshold = Math.floor(MAX_UINT32 / factor);
      return async entry => {
        const identity = await entry.identity();
        if (typeof identity !== 'number') {
          throw new Error('Identity must be a number');
        }
        if (identity <= threshold) {
          return true;
        }
        return false;
      };
    };
    const simpleCompare = (a, b) => {
      if (a === b)
        return 0;
      if (a > b)
        return 1;
      return -1;
    };
    class CIDCounter {
      constructor() {
        this._cids = new Set();
      }
      add(node) {
        if (!node.address) {
          throw new Error('Cannot add node without address');
        }
        if (node.address.then) {
          const p = node.address.then(cid => this._cids.add(cid.toString()));
          this._cids.add(p);
          p.then(() => this._cids.delete(p));
        } else {
          this._cids.add(node.address.toString());
        }
      }
      async all() {
        await Promise.all([...this._cids]);
        return this._cids;
      }
    }

    var lookup = [];
    var revLookup = [];
    var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
    var inited = false;
    function init$1 () {
      inited = true;
      var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
      for (var i = 0, len = code.length; i < len; ++i) {
        lookup[i] = code[i];
        revLookup[code.charCodeAt(i)] = i;
      }

      revLookup['-'.charCodeAt(0)] = 62;
      revLookup['_'.charCodeAt(0)] = 63;
    }

    function toByteArray (b64) {
      if (!inited) {
        init$1();
      }
      var i, j, l, tmp, placeHolders, arr;
      var len = b64.length;

      if (len % 4 > 0) {
        throw new Error('Invalid string. Length must be a multiple of 4')
      }

      // the number of equal signs (place holders)
      // if there are two placeholders, than the two characters before it
      // represent one byte
      // if there is only one, then the three characters before it represent 2 bytes
      // this is just a cheap hack to not do indexOf twice
      placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;

      // base64 is 4/3 + up to two characters of the original data
      arr = new Arr(len * 3 / 4 - placeHolders);

      // if there are placeholders, only get up to the last complete 4 chars
      l = placeHolders > 0 ? len - 4 : len;

      var L = 0;

      for (i = 0, j = 0; i < l; i += 4, j += 3) {
        tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];
        arr[L++] = (tmp >> 16) & 0xFF;
        arr[L++] = (tmp >> 8) & 0xFF;
        arr[L++] = tmp & 0xFF;
      }

      if (placeHolders === 2) {
        tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);
        arr[L++] = tmp & 0xFF;
      } else if (placeHolders === 1) {
        tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);
        arr[L++] = (tmp >> 8) & 0xFF;
        arr[L++] = tmp & 0xFF;
      }

      return arr
    }

    function tripletToBase64 (num) {
      return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
    }

    function encodeChunk (uint8, start, end) {
      var tmp;
      var output = [];
      for (var i = start; i < end; i += 3) {
        tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);
        output.push(tripletToBase64(tmp));
      }
      return output.join('')
    }

    function fromByteArray (uint8) {
      if (!inited) {
        init$1();
      }
      var tmp;
      var len = uint8.length;
      var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
      var output = '';
      var parts = [];
      var maxChunkLength = 16383; // must be multiple of 3

      // go through the array every three bytes, we'll deal with trailing stuff later
      for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
        parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));
      }

      // pad the end with zeros, but make sure to not forget the extra bytes
      if (extraBytes === 1) {
        tmp = uint8[len - 1];
        output += lookup[tmp >> 2];
        output += lookup[(tmp << 4) & 0x3F];
        output += '==';
      } else if (extraBytes === 2) {
        tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);
        output += lookup[tmp >> 10];
        output += lookup[(tmp >> 4) & 0x3F];
        output += lookup[(tmp << 2) & 0x3F];
        output += '=';
      }

      parts.push(output);

      return parts.join('')
    }

    function read$1 (buffer, offset, isLE, mLen, nBytes) {
      var e, m;
      var eLen = nBytes * 8 - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var nBits = -7;
      var i = isLE ? (nBytes - 1) : 0;
      var d = isLE ? -1 : 1;
      var s = buffer[offset + i];

      i += d;

      e = s & ((1 << (-nBits)) - 1);
      s >>= (-nBits);
      nBits += eLen;
      for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

      m = e & ((1 << (-nBits)) - 1);
      e >>= (-nBits);
      nBits += mLen;
      for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

      if (e === 0) {
        e = 1 - eBias;
      } else if (e === eMax) {
        return m ? NaN : ((s ? -1 : 1) * Infinity)
      } else {
        m = m + Math.pow(2, mLen);
        e = e - eBias;
      }
      return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
    }

    function write (buffer, value, offset, isLE, mLen, nBytes) {
      var e, m, c;
      var eLen = nBytes * 8 - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);
      var i = isLE ? 0 : (nBytes - 1);
      var d = isLE ? 1 : -1;
      var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

      value = Math.abs(value);

      if (isNaN(value) || value === Infinity) {
        m = isNaN(value) ? 1 : 0;
        e = eMax;
      } else {
        e = Math.floor(Math.log(value) / Math.LN2);
        if (value * (c = Math.pow(2, -e)) < 1) {
          e--;
          c *= 2;
        }
        if (e + eBias >= 1) {
          value += rt / c;
        } else {
          value += rt * Math.pow(2, 1 - eBias);
        }
        if (value * c >= 2) {
          e++;
          c /= 2;
        }

        if (e + eBias >= eMax) {
          m = 0;
          e = eMax;
        } else if (e + eBias >= 1) {
          m = (value * c - 1) * Math.pow(2, mLen);
          e = e + eBias;
        } else {
          m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
          e = 0;
        }
      }

      for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

      e = (e << mLen) | m;
      eLen += mLen;
      for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

      buffer[offset + i - d] |= s * 128;
    }

    var toString$1 = {}.toString;

    var isArray = Array.isArray || function (arr) {
      return toString$1.call(arr) == '[object Array]';
    };

    /*!
     * The buffer module from node.js, for the browser.
     *
     * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
     * @license  MIT
     */

    var INSPECT_MAX_BYTES = 50;

    /**
     * If `Buffer.TYPED_ARRAY_SUPPORT`:
     *   === true    Use Uint8Array implementation (fastest)
     *   === false   Use Object implementation (most compatible, even IE6)
     *
     * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
     * Opera 11.6+, iOS 4.2+.
     *
     * Due to various browser bugs, sometimes the Object implementation will be used even
     * when the browser supports typed arrays.
     *
     * Note:
     *
     *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
     *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
     *
     *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
     *
     *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
     *     incorrect length in some situations.

     * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
     * get the Object implementation, which is slower but behaves correctly.
     */
    Buffer.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined
      ? global$1.TYPED_ARRAY_SUPPORT
      : true;

    function kMaxLength () {
      return Buffer.TYPED_ARRAY_SUPPORT
        ? 0x7fffffff
        : 0x3fffffff
    }

    function createBuffer (that, length) {
      if (kMaxLength() < length) {
        throw new RangeError('Invalid typed array length')
      }
      if (Buffer.TYPED_ARRAY_SUPPORT) {
        // Return an augmented `Uint8Array` instance, for best performance
        that = new Uint8Array(length);
        that.__proto__ = Buffer.prototype;
      } else {
        // Fallback: Return an object instance of the Buffer class
        if (that === null) {
          that = new Buffer(length);
        }
        that.length = length;
      }

      return that
    }

    /**
     * The Buffer constructor returns instances of `Uint8Array` that have their
     * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
     * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
     * and the `Uint8Array` methods. Square bracket notation works as expected -- it
     * returns a single octet.
     *
     * The `Uint8Array` prototype remains unmodified.
     */

    function Buffer (arg, encodingOrOffset, length) {
      if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
        return new Buffer(arg, encodingOrOffset, length)
      }

      // Common case.
      if (typeof arg === 'number') {
        if (typeof encodingOrOffset === 'string') {
          throw new Error(
            'If encoding is specified then the first argument must be a string'
          )
        }
        return allocUnsafe(this, arg)
      }
      return from$2(this, arg, encodingOrOffset, length)
    }

    Buffer.poolSize = 8192; // not used by this implementation

    // TODO: Legacy, not needed anymore. Remove in next major version.
    Buffer._augment = function (arr) {
      arr.__proto__ = Buffer.prototype;
      return arr
    };

    function from$2 (that, value, encodingOrOffset, length) {
      if (typeof value === 'number') {
        throw new TypeError('"value" argument must not be a number')
      }

      if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
        return fromArrayBuffer(that, value, encodingOrOffset, length)
      }

      if (typeof value === 'string') {
        return fromString$1(that, value, encodingOrOffset)
      }

      return fromObject(that, value)
    }

    /**
     * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
     * if value is a number.
     * Buffer.from(str[, encoding])
     * Buffer.from(array)
     * Buffer.from(buffer)
     * Buffer.from(arrayBuffer[, byteOffset[, length]])
     **/
    Buffer.from = function (value, encodingOrOffset, length) {
      return from$2(null, value, encodingOrOffset, length)
    };

    if (Buffer.TYPED_ARRAY_SUPPORT) {
      Buffer.prototype.__proto__ = Uint8Array.prototype;
      Buffer.__proto__ = Uint8Array;
    }

    function assertSize (size) {
      if (typeof size !== 'number') {
        throw new TypeError('"size" argument must be a number')
      } else if (size < 0) {
        throw new RangeError('"size" argument must not be negative')
      }
    }

    function alloc$1 (that, size, fill, encoding) {
      assertSize(size);
      if (size <= 0) {
        return createBuffer(that, size)
      }
      if (fill !== undefined) {
        // Only pay attention to encoding if it's a string. This
        // prevents accidentally sending in a number that would
        // be interpretted as a start offset.
        return typeof encoding === 'string'
          ? createBuffer(that, size).fill(fill, encoding)
          : createBuffer(that, size).fill(fill)
      }
      return createBuffer(that, size)
    }

    /**
     * Creates a new filled Buffer instance.
     * alloc(size[, fill[, encoding]])
     **/
    Buffer.alloc = function (size, fill, encoding) {
      return alloc$1(null, size, fill, encoding)
    };

    function allocUnsafe (that, size) {
      assertSize(size);
      that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
      if (!Buffer.TYPED_ARRAY_SUPPORT) {
        for (var i = 0; i < size; ++i) {
          that[i] = 0;
        }
      }
      return that
    }

    /**
     * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
     * */
    Buffer.allocUnsafe = function (size) {
      return allocUnsafe(null, size)
    };
    /**
     * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
     */
    Buffer.allocUnsafeSlow = function (size) {
      return allocUnsafe(null, size)
    };

    function fromString$1 (that, string, encoding) {
      if (typeof encoding !== 'string' || encoding === '') {
        encoding = 'utf8';
      }

      if (!Buffer.isEncoding(encoding)) {
        throw new TypeError('"encoding" must be a valid string encoding')
      }

      var length = byteLength(string, encoding) | 0;
      that = createBuffer(that, length);

      var actual = that.write(string, encoding);

      if (actual !== length) {
        // Writing a hex string, for example, that contains invalid characters will
        // cause everything after the first invalid character to be ignored. (e.g.
        // 'abxxcd' will be treated as 'ab')
        that = that.slice(0, actual);
      }

      return that
    }

    function fromArrayLike (that, array) {
      var length = array.length < 0 ? 0 : checked(array.length) | 0;
      that = createBuffer(that, length);
      for (var i = 0; i < length; i += 1) {
        that[i] = array[i] & 255;
      }
      return that
    }

    function fromArrayBuffer (that, array, byteOffset, length) {
      array.byteLength; // this throws if `array` is not a valid ArrayBuffer

      if (byteOffset < 0 || array.byteLength < byteOffset) {
        throw new RangeError('\'offset\' is out of bounds')
      }

      if (array.byteLength < byteOffset + (length || 0)) {
        throw new RangeError('\'length\' is out of bounds')
      }

      if (byteOffset === undefined && length === undefined) {
        array = new Uint8Array(array);
      } else if (length === undefined) {
        array = new Uint8Array(array, byteOffset);
      } else {
        array = new Uint8Array(array, byteOffset, length);
      }

      if (Buffer.TYPED_ARRAY_SUPPORT) {
        // Return an augmented `Uint8Array` instance, for best performance
        that = array;
        that.__proto__ = Buffer.prototype;
      } else {
        // Fallback: Return an object instance of the Buffer class
        that = fromArrayLike(that, array);
      }
      return that
    }

    function fromObject (that, obj) {
      if (internalIsBuffer(obj)) {
        var len = checked(obj.length) | 0;
        that = createBuffer(that, len);

        if (that.length === 0) {
          return that
        }

        obj.copy(that, 0, 0, len);
        return that
      }

      if (obj) {
        if ((typeof ArrayBuffer !== 'undefined' &&
            obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
          if (typeof obj.length !== 'number' || isnan(obj.length)) {
            return createBuffer(that, 0)
          }
          return fromArrayLike(that, obj)
        }

        if (obj.type === 'Buffer' && isArray(obj.data)) {
          return fromArrayLike(that, obj.data)
        }
      }

      throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
    }

    function checked (length) {
      // Note: cannot use `length < kMaxLength()` here because that fails when
      // length is NaN (which is otherwise coerced to zero.)
      if (length >= kMaxLength()) {
        throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                             'size: 0x' + kMaxLength().toString(16) + ' bytes')
      }
      return length | 0
    }
    Buffer.isBuffer = isBuffer$2;
    function internalIsBuffer (b) {
      return !!(b != null && b._isBuffer)
    }

    Buffer.compare = function compare (a, b) {
      if (!internalIsBuffer(a) || !internalIsBuffer(b)) {
        throw new TypeError('Arguments must be Buffers')
      }

      if (a === b) return 0

      var x = a.length;
      var y = b.length;

      for (var i = 0, len = Math.min(x, y); i < len; ++i) {
        if (a[i] !== b[i]) {
          x = a[i];
          y = b[i];
          break
        }
      }

      if (x < y) return -1
      if (y < x) return 1
      return 0
    };

    Buffer.isEncoding = function isEncoding (encoding) {
      switch (String(encoding).toLowerCase()) {
        case 'hex':
        case 'utf8':
        case 'utf-8':
        case 'ascii':
        case 'latin1':
        case 'binary':
        case 'base64':
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return true
        default:
          return false
      }
    };

    Buffer.concat = function concat (list, length) {
      if (!isArray(list)) {
        throw new TypeError('"list" argument must be an Array of Buffers')
      }

      if (list.length === 0) {
        return Buffer.alloc(0)
      }

      var i;
      if (length === undefined) {
        length = 0;
        for (i = 0; i < list.length; ++i) {
          length += list[i].length;
        }
      }

      var buffer = Buffer.allocUnsafe(length);
      var pos = 0;
      for (i = 0; i < list.length; ++i) {
        var buf = list[i];
        if (!internalIsBuffer(buf)) {
          throw new TypeError('"list" argument must be an Array of Buffers')
        }
        buf.copy(buffer, pos);
        pos += buf.length;
      }
      return buffer
    };

    function byteLength (string, encoding) {
      if (internalIsBuffer(string)) {
        return string.length
      }
      if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
          (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
        return string.byteLength
      }
      if (typeof string !== 'string') {
        string = '' + string;
      }

      var len = string.length;
      if (len === 0) return 0

      // Use a for loop to avoid recursion
      var loweredCase = false;
      for (;;) {
        switch (encoding) {
          case 'ascii':
          case 'latin1':
          case 'binary':
            return len
          case 'utf8':
          case 'utf-8':
          case undefined:
            return utf8ToBytes$1(string).length
          case 'ucs2':
          case 'ucs-2':
          case 'utf16le':
          case 'utf-16le':
            return len * 2
          case 'hex':
            return len >>> 1
          case 'base64':
            return base64ToBytes(string).length
          default:
            if (loweredCase) return utf8ToBytes$1(string).length // assume utf8
            encoding = ('' + encoding).toLowerCase();
            loweredCase = true;
        }
      }
    }
    Buffer.byteLength = byteLength;

    function slowToString (encoding, start, end) {
      var loweredCase = false;

      // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
      // property of a typed array.

      // This behaves neither like String nor Uint8Array in that we set start/end
      // to their upper/lower bounds if the value passed is out of range.
      // undefined is handled specially as per ECMA-262 6th Edition,
      // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
      if (start === undefined || start < 0) {
        start = 0;
      }
      // Return early if start > this.length. Done here to prevent potential uint32
      // coercion fail below.
      if (start > this.length) {
        return ''
      }

      if (end === undefined || end > this.length) {
        end = this.length;
      }

      if (end <= 0) {
        return ''
      }

      // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
      end >>>= 0;
      start >>>= 0;

      if (end <= start) {
        return ''
      }

      if (!encoding) encoding = 'utf8';

      while (true) {
        switch (encoding) {
          case 'hex':
            return hexSlice(this, start, end)

          case 'utf8':
          case 'utf-8':
            return utf8Slice$1(this, start, end)

          case 'ascii':
            return asciiSlice(this, start, end)

          case 'latin1':
          case 'binary':
            return latin1Slice(this, start, end)

          case 'base64':
            return base64Slice(this, start, end)

          case 'ucs2':
          case 'ucs-2':
          case 'utf16le':
          case 'utf-16le':
            return utf16leSlice(this, start, end)

          default:
            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
            encoding = (encoding + '').toLowerCase();
            loweredCase = true;
        }
      }
    }

    // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
    // Buffer instances.
    Buffer.prototype._isBuffer = true;

    function swap (b, n, m) {
      var i = b[n];
      b[n] = b[m];
      b[m] = i;
    }

    Buffer.prototype.swap16 = function swap16 () {
      var len = this.length;
      if (len % 2 !== 0) {
        throw new RangeError('Buffer size must be a multiple of 16-bits')
      }
      for (var i = 0; i < len; i += 2) {
        swap(this, i, i + 1);
      }
      return this
    };

    Buffer.prototype.swap32 = function swap32 () {
      var len = this.length;
      if (len % 4 !== 0) {
        throw new RangeError('Buffer size must be a multiple of 32-bits')
      }
      for (var i = 0; i < len; i += 4) {
        swap(this, i, i + 3);
        swap(this, i + 1, i + 2);
      }
      return this
    };

    Buffer.prototype.swap64 = function swap64 () {
      var len = this.length;
      if (len % 8 !== 0) {
        throw new RangeError('Buffer size must be a multiple of 64-bits')
      }
      for (var i = 0; i < len; i += 8) {
        swap(this, i, i + 7);
        swap(this, i + 1, i + 6);
        swap(this, i + 2, i + 5);
        swap(this, i + 3, i + 4);
      }
      return this
    };

    Buffer.prototype.toString = function toString () {
      var length = this.length | 0;
      if (length === 0) return ''
      if (arguments.length === 0) return utf8Slice$1(this, 0, length)
      return slowToString.apply(this, arguments)
    };

    Buffer.prototype.equals = function equals (b) {
      if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')
      if (this === b) return true
      return Buffer.compare(this, b) === 0
    };

    Buffer.prototype.inspect = function inspect () {
      var str = '';
      var max = INSPECT_MAX_BYTES;
      if (this.length > 0) {
        str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
        if (this.length > max) str += ' ... ';
      }
      return '<Buffer ' + str + '>'
    };

    Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
      if (!internalIsBuffer(target)) {
        throw new TypeError('Argument must be a Buffer')
      }

      if (start === undefined) {
        start = 0;
      }
      if (end === undefined) {
        end = target ? target.length : 0;
      }
      if (thisStart === undefined) {
        thisStart = 0;
      }
      if (thisEnd === undefined) {
        thisEnd = this.length;
      }

      if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
        throw new RangeError('out of range index')
      }

      if (thisStart >= thisEnd && start >= end) {
        return 0
      }
      if (thisStart >= thisEnd) {
        return -1
      }
      if (start >= end) {
        return 1
      }

      start >>>= 0;
      end >>>= 0;
      thisStart >>>= 0;
      thisEnd >>>= 0;

      if (this === target) return 0

      var x = thisEnd - thisStart;
      var y = end - start;
      var len = Math.min(x, y);

      var thisCopy = this.slice(thisStart, thisEnd);
      var targetCopy = target.slice(start, end);

      for (var i = 0; i < len; ++i) {
        if (thisCopy[i] !== targetCopy[i]) {
          x = thisCopy[i];
          y = targetCopy[i];
          break
        }
      }

      if (x < y) return -1
      if (y < x) return 1
      return 0
    };

    // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
    // OR the last index of `val` in `buffer` at offset <= `byteOffset`.
    //
    // Arguments:
    // - buffer - a Buffer to search
    // - val - a string, Buffer, or number
    // - byteOffset - an index into `buffer`; will be clamped to an int32
    // - encoding - an optional encoding, relevant is val is a string
    // - dir - true for indexOf, false for lastIndexOf
    function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
      // Empty buffer means no match
      if (buffer.length === 0) return -1

      // Normalize byteOffset
      if (typeof byteOffset === 'string') {
        encoding = byteOffset;
        byteOffset = 0;
      } else if (byteOffset > 0x7fffffff) {
        byteOffset = 0x7fffffff;
      } else if (byteOffset < -0x80000000) {
        byteOffset = -0x80000000;
      }
      byteOffset = +byteOffset;  // Coerce to Number.
      if (isNaN(byteOffset)) {
        // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
        byteOffset = dir ? 0 : (buffer.length - 1);
      }

      // Normalize byteOffset: negative offsets start from the end of the buffer
      if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
      if (byteOffset >= buffer.length) {
        if (dir) return -1
        else byteOffset = buffer.length - 1;
      } else if (byteOffset < 0) {
        if (dir) byteOffset = 0;
        else return -1
      }

      // Normalize val
      if (typeof val === 'string') {
        val = Buffer.from(val, encoding);
      }

      // Finally, search either indexOf (if dir is true) or lastIndexOf
      if (internalIsBuffer(val)) {
        // Special case: looking for empty string/buffer always fails
        if (val.length === 0) {
          return -1
        }
        return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
      } else if (typeof val === 'number') {
        val = val & 0xFF; // Search for a byte value [0-255]
        if (Buffer.TYPED_ARRAY_SUPPORT &&
            typeof Uint8Array.prototype.indexOf === 'function') {
          if (dir) {
            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
          } else {
            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
          }
        }
        return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
      }

      throw new TypeError('val must be string, number or Buffer')
    }

    function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
      var indexSize = 1;
      var arrLength = arr.length;
      var valLength = val.length;

      if (encoding !== undefined) {
        encoding = String(encoding).toLowerCase();
        if (encoding === 'ucs2' || encoding === 'ucs-2' ||
            encoding === 'utf16le' || encoding === 'utf-16le') {
          if (arr.length < 2 || val.length < 2) {
            return -1
          }
          indexSize = 2;
          arrLength /= 2;
          valLength /= 2;
          byteOffset /= 2;
        }
      }

      function read (buf, i) {
        if (indexSize === 1) {
          return buf[i]
        } else {
          return buf.readUInt16BE(i * indexSize)
        }
      }

      var i;
      if (dir) {
        var foundIndex = -1;
        for (i = byteOffset; i < arrLength; i++) {
          if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
            if (foundIndex === -1) foundIndex = i;
            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
          } else {
            if (foundIndex !== -1) i -= i - foundIndex;
            foundIndex = -1;
          }
        }
      } else {
        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
        for (i = byteOffset; i >= 0; i--) {
          var found = true;
          for (var j = 0; j < valLength; j++) {
            if (read(arr, i + j) !== read(val, j)) {
              found = false;
              break
            }
          }
          if (found) return i
        }
      }

      return -1
    }

    Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
      return this.indexOf(val, byteOffset, encoding) !== -1
    };

    Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
      return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
    };

    Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
      return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
    };

    function hexWrite (buf, string, offset, length) {
      offset = Number(offset) || 0;
      var remaining = buf.length - offset;
      if (!length) {
        length = remaining;
      } else {
        length = Number(length);
        if (length > remaining) {
          length = remaining;
        }
      }

      // must be an even number of digits
      var strLen = string.length;
      if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

      if (length > strLen / 2) {
        length = strLen / 2;
      }
      for (var i = 0; i < length; ++i) {
        var parsed = parseInt(string.substr(i * 2, 2), 16);
        if (isNaN(parsed)) return i
        buf[offset + i] = parsed;
      }
      return i
    }

    function utf8Write (buf, string, offset, length) {
      return blitBuffer(utf8ToBytes$1(string, buf.length - offset), buf, offset, length)
    }

    function asciiWrite (buf, string, offset, length) {
      return blitBuffer(asciiToBytes(string), buf, offset, length)
    }

    function latin1Write (buf, string, offset, length) {
      return asciiWrite(buf, string, offset, length)
    }

    function base64Write (buf, string, offset, length) {
      return blitBuffer(base64ToBytes(string), buf, offset, length)
    }

    function ucs2Write (buf, string, offset, length) {
      return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
    }

    Buffer.prototype.write = function write (string, offset, length, encoding) {
      // Buffer#write(string)
      if (offset === undefined) {
        encoding = 'utf8';
        length = this.length;
        offset = 0;
      // Buffer#write(string, encoding)
      } else if (length === undefined && typeof offset === 'string') {
        encoding = offset;
        length = this.length;
        offset = 0;
      // Buffer#write(string, offset[, length][, encoding])
      } else if (isFinite(offset)) {
        offset = offset | 0;
        if (isFinite(length)) {
          length = length | 0;
          if (encoding === undefined) encoding = 'utf8';
        } else {
          encoding = length;
          length = undefined;
        }
      // legacy write(string, encoding, offset, length) - remove in v0.13
      } else {
        throw new Error(
          'Buffer.write(string, encoding, offset[, length]) is no longer supported'
        )
      }

      var remaining = this.length - offset;
      if (length === undefined || length > remaining) length = remaining;

      if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
        throw new RangeError('Attempt to write outside buffer bounds')
      }

      if (!encoding) encoding = 'utf8';

      var loweredCase = false;
      for (;;) {
        switch (encoding) {
          case 'hex':
            return hexWrite(this, string, offset, length)

          case 'utf8':
          case 'utf-8':
            return utf8Write(this, string, offset, length)

          case 'ascii':
            return asciiWrite(this, string, offset, length)

          case 'latin1':
          case 'binary':
            return latin1Write(this, string, offset, length)

          case 'base64':
            // Warning: maxLength not taken into account in base64Write
            return base64Write(this, string, offset, length)

          case 'ucs2':
          case 'ucs-2':
          case 'utf16le':
          case 'utf-16le':
            return ucs2Write(this, string, offset, length)

          default:
            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
            encoding = ('' + encoding).toLowerCase();
            loweredCase = true;
        }
      }
    };

    Buffer.prototype.toJSON = function toJSON () {
      return {
        type: 'Buffer',
        data: Array.prototype.slice.call(this._arr || this, 0)
      }
    };

    function base64Slice (buf, start, end) {
      if (start === 0 && end === buf.length) {
        return fromByteArray(buf)
      } else {
        return fromByteArray(buf.slice(start, end))
      }
    }

    function utf8Slice$1 (buf, start, end) {
      end = Math.min(buf.length, end);
      var res = [];

      var i = start;
      while (i < end) {
        var firstByte = buf[i];
        var codePoint = null;
        var bytesPerSequence = (firstByte > 0xEF) ? 4
          : (firstByte > 0xDF) ? 3
          : (firstByte > 0xBF) ? 2
          : 1;

        if (i + bytesPerSequence <= end) {
          var secondByte, thirdByte, fourthByte, tempCodePoint;

          switch (bytesPerSequence) {
            case 1:
              if (firstByte < 0x80) {
                codePoint = firstByte;
              }
              break
            case 2:
              secondByte = buf[i + 1];
              if ((secondByte & 0xC0) === 0x80) {
                tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);
                if (tempCodePoint > 0x7F) {
                  codePoint = tempCodePoint;
                }
              }
              break
            case 3:
              secondByte = buf[i + 1];
              thirdByte = buf[i + 2];
              if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
                tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);
                if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                  codePoint = tempCodePoint;
                }
              }
              break
            case 4:
              secondByte = buf[i + 1];
              thirdByte = buf[i + 2];
              fourthByte = buf[i + 3];
              if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
                tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);
                if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                  codePoint = tempCodePoint;
                }
              }
          }
        }

        if (codePoint === null) {
          // we did not generate a valid codePoint so insert a
          // replacement char (U+FFFD) and advance only 1 byte
          codePoint = 0xFFFD;
          bytesPerSequence = 1;
        } else if (codePoint > 0xFFFF) {
          // encode to utf16 (surrogate pair dance)
          codePoint -= 0x10000;
          res.push(codePoint >>> 10 & 0x3FF | 0xD800);
          codePoint = 0xDC00 | codePoint & 0x3FF;
        }

        res.push(codePoint);
        i += bytesPerSequence;
      }

      return decodeCodePointsArray$1(res)
    }

    // Based on http://stackoverflow.com/a/22747272/680742, the browser with
    // the lowest limit is Chrome, with 0x10000 args.
    // We go 1 magnitude less, for safety
    var MAX_ARGUMENTS_LENGTH$1 = 0x1000;

    function decodeCodePointsArray$1 (codePoints) {
      var len = codePoints.length;
      if (len <= MAX_ARGUMENTS_LENGTH$1) {
        return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
      }

      // Decode in chunks to avoid "call stack size exceeded".
      var res = '';
      var i = 0;
      while (i < len) {
        res += String.fromCharCode.apply(
          String,
          codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH$1)
        );
      }
      return res
    }

    function asciiSlice (buf, start, end) {
      var ret = '';
      end = Math.min(buf.length, end);

      for (var i = start; i < end; ++i) {
        ret += String.fromCharCode(buf[i] & 0x7F);
      }
      return ret
    }

    function latin1Slice (buf, start, end) {
      var ret = '';
      end = Math.min(buf.length, end);

      for (var i = start; i < end; ++i) {
        ret += String.fromCharCode(buf[i]);
      }
      return ret
    }

    function hexSlice (buf, start, end) {
      var len = buf.length;

      if (!start || start < 0) start = 0;
      if (!end || end < 0 || end > len) end = len;

      var out = '';
      for (var i = start; i < end; ++i) {
        out += toHex(buf[i]);
      }
      return out
    }

    function utf16leSlice (buf, start, end) {
      var bytes = buf.slice(start, end);
      var res = '';
      for (var i = 0; i < bytes.length; i += 2) {
        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
      }
      return res
    }

    Buffer.prototype.slice = function slice (start, end) {
      var len = this.length;
      start = ~~start;
      end = end === undefined ? len : ~~end;

      if (start < 0) {
        start += len;
        if (start < 0) start = 0;
      } else if (start > len) {
        start = len;
      }

      if (end < 0) {
        end += len;
        if (end < 0) end = 0;
      } else if (end > len) {
        end = len;
      }

      if (end < start) end = start;

      var newBuf;
      if (Buffer.TYPED_ARRAY_SUPPORT) {
        newBuf = this.subarray(start, end);
        newBuf.__proto__ = Buffer.prototype;
      } else {
        var sliceLen = end - start;
        newBuf = new Buffer(sliceLen, undefined);
        for (var i = 0; i < sliceLen; ++i) {
          newBuf[i] = this[i + start];
        }
      }

      return newBuf
    };

    /*
     * Need to make sure that buffer isn't trying to write out of bounds.
     */
    function checkOffset (offset, ext, length) {
      if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
      if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
    }

    Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
      offset = offset | 0;
      byteLength = byteLength | 0;
      if (!noAssert) checkOffset(offset, byteLength, this.length);

      var val = this[offset];
      var mul = 1;
      var i = 0;
      while (++i < byteLength && (mul *= 0x100)) {
        val += this[offset + i] * mul;
      }

      return val
    };

    Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
      offset = offset | 0;
      byteLength = byteLength | 0;
      if (!noAssert) {
        checkOffset(offset, byteLength, this.length);
      }

      var val = this[offset + --byteLength];
      var mul = 1;
      while (byteLength > 0 && (mul *= 0x100)) {
        val += this[offset + --byteLength] * mul;
      }

      return val
    };

    Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
      if (!noAssert) checkOffset(offset, 1, this.length);
      return this[offset]
    };

    Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
      if (!noAssert) checkOffset(offset, 2, this.length);
      return this[offset] | (this[offset + 1] << 8)
    };

    Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
      if (!noAssert) checkOffset(offset, 2, this.length);
      return (this[offset] << 8) | this[offset + 1]
    };

    Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
      if (!noAssert) checkOffset(offset, 4, this.length);

      return ((this[offset]) |
          (this[offset + 1] << 8) |
          (this[offset + 2] << 16)) +
          (this[offset + 3] * 0x1000000)
    };

    Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
      if (!noAssert) checkOffset(offset, 4, this.length);

      return (this[offset] * 0x1000000) +
        ((this[offset + 1] << 16) |
        (this[offset + 2] << 8) |
        this[offset + 3])
    };

    Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
      offset = offset | 0;
      byteLength = byteLength | 0;
      if (!noAssert) checkOffset(offset, byteLength, this.length);

      var val = this[offset];
      var mul = 1;
      var i = 0;
      while (++i < byteLength && (mul *= 0x100)) {
        val += this[offset + i] * mul;
      }
      mul *= 0x80;

      if (val >= mul) val -= Math.pow(2, 8 * byteLength);

      return val
    };

    Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
      offset = offset | 0;
      byteLength = byteLength | 0;
      if (!noAssert) checkOffset(offset, byteLength, this.length);

      var i = byteLength;
      var mul = 1;
      var val = this[offset + --i];
      while (i > 0 && (mul *= 0x100)) {
        val += this[offset + --i] * mul;
      }
      mul *= 0x80;

      if (val >= mul) val -= Math.pow(2, 8 * byteLength);

      return val
    };

    Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
      if (!noAssert) checkOffset(offset, 1, this.length);
      if (!(this[offset] & 0x80)) return (this[offset])
      return ((0xff - this[offset] + 1) * -1)
    };

    Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
      if (!noAssert) checkOffset(offset, 2, this.length);
      var val = this[offset] | (this[offset + 1] << 8);
      return (val & 0x8000) ? val | 0xFFFF0000 : val
    };

    Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
      if (!noAssert) checkOffset(offset, 2, this.length);
      var val = this[offset + 1] | (this[offset] << 8);
      return (val & 0x8000) ? val | 0xFFFF0000 : val
    };

    Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
      if (!noAssert) checkOffset(offset, 4, this.length);

      return (this[offset]) |
        (this[offset + 1] << 8) |
        (this[offset + 2] << 16) |
        (this[offset + 3] << 24)
    };

    Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
      if (!noAssert) checkOffset(offset, 4, this.length);

      return (this[offset] << 24) |
        (this[offset + 1] << 16) |
        (this[offset + 2] << 8) |
        (this[offset + 3])
    };

    Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
      if (!noAssert) checkOffset(offset, 4, this.length);
      return read$1(this, offset, true, 23, 4)
    };

    Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
      if (!noAssert) checkOffset(offset, 4, this.length);
      return read$1(this, offset, false, 23, 4)
    };

    Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
      if (!noAssert) checkOffset(offset, 8, this.length);
      return read$1(this, offset, true, 52, 8)
    };

    Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
      if (!noAssert) checkOffset(offset, 8, this.length);
      return read$1(this, offset, false, 52, 8)
    };

    function checkInt (buf, value, offset, ext, max, min) {
      if (!internalIsBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
      if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
      if (offset + ext > buf.length) throw new RangeError('Index out of range')
    }

    Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
      value = +value;
      offset = offset | 0;
      byteLength = byteLength | 0;
      if (!noAssert) {
        var maxBytes = Math.pow(2, 8 * byteLength) - 1;
        checkInt(this, value, offset, byteLength, maxBytes, 0);
      }

      var mul = 1;
      var i = 0;
      this[offset] = value & 0xFF;
      while (++i < byteLength && (mul *= 0x100)) {
        this[offset + i] = (value / mul) & 0xFF;
      }

      return offset + byteLength
    };

    Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
      value = +value;
      offset = offset | 0;
      byteLength = byteLength | 0;
      if (!noAssert) {
        var maxBytes = Math.pow(2, 8 * byteLength) - 1;
        checkInt(this, value, offset, byteLength, maxBytes, 0);
      }

      var i = byteLength - 1;
      var mul = 1;
      this[offset + i] = value & 0xFF;
      while (--i >= 0 && (mul *= 0x100)) {
        this[offset + i] = (value / mul) & 0xFF;
      }

      return offset + byteLength
    };

    Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
      if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
      this[offset] = (value & 0xff);
      return offset + 1
    };

    function objectWriteUInt16 (buf, value, offset, littleEndian) {
      if (value < 0) value = 0xffff + value + 1;
      for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
        buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
          (littleEndian ? i : 1 - i) * 8;
      }
    }

    Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset] = (value & 0xff);
        this[offset + 1] = (value >>> 8);
      } else {
        objectWriteUInt16(this, value, offset, true);
      }
      return offset + 2
    };

    Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset] = (value >>> 8);
        this[offset + 1] = (value & 0xff);
      } else {
        objectWriteUInt16(this, value, offset, false);
      }
      return offset + 2
    };

    function objectWriteUInt32 (buf, value, offset, littleEndian) {
      if (value < 0) value = 0xffffffff + value + 1;
      for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
        buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;
      }
    }

    Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset + 3] = (value >>> 24);
        this[offset + 2] = (value >>> 16);
        this[offset + 1] = (value >>> 8);
        this[offset] = (value & 0xff);
      } else {
        objectWriteUInt32(this, value, offset, true);
      }
      return offset + 4
    };

    Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset] = (value >>> 24);
        this[offset + 1] = (value >>> 16);
        this[offset + 2] = (value >>> 8);
        this[offset + 3] = (value & 0xff);
      } else {
        objectWriteUInt32(this, value, offset, false);
      }
      return offset + 4
    };

    Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) {
        var limit = Math.pow(2, 8 * byteLength - 1);

        checkInt(this, value, offset, byteLength, limit - 1, -limit);
      }

      var i = 0;
      var mul = 1;
      var sub = 0;
      this[offset] = value & 0xFF;
      while (++i < byteLength && (mul *= 0x100)) {
        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
          sub = 1;
        }
        this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
      }

      return offset + byteLength
    };

    Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) {
        var limit = Math.pow(2, 8 * byteLength - 1);

        checkInt(this, value, offset, byteLength, limit - 1, -limit);
      }

      var i = byteLength - 1;
      var mul = 1;
      var sub = 0;
      this[offset + i] = value & 0xFF;
      while (--i >= 0 && (mul *= 0x100)) {
        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
          sub = 1;
        }
        this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
      }

      return offset + byteLength
    };

    Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
      if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
      if (value < 0) value = 0xff + value + 1;
      this[offset] = (value & 0xff);
      return offset + 1
    };

    Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset] = (value & 0xff);
        this[offset + 1] = (value >>> 8);
      } else {
        objectWriteUInt16(this, value, offset, true);
      }
      return offset + 2
    };

    Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset] = (value >>> 8);
        this[offset + 1] = (value & 0xff);
      } else {
        objectWriteUInt16(this, value, offset, false);
      }
      return offset + 2
    };

    Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset] = (value & 0xff);
        this[offset + 1] = (value >>> 8);
        this[offset + 2] = (value >>> 16);
        this[offset + 3] = (value >>> 24);
      } else {
        objectWriteUInt32(this, value, offset, true);
      }
      return offset + 4
    };

    Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
      value = +value;
      offset = offset | 0;
      if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
      if (value < 0) value = 0xffffffff + value + 1;
      if (Buffer.TYPED_ARRAY_SUPPORT) {
        this[offset] = (value >>> 24);
        this[offset + 1] = (value >>> 16);
        this[offset + 2] = (value >>> 8);
        this[offset + 3] = (value & 0xff);
      } else {
        objectWriteUInt32(this, value, offset, false);
      }
      return offset + 4
    };

    function checkIEEE754 (buf, value, offset, ext, max, min) {
      if (offset + ext > buf.length) throw new RangeError('Index out of range')
      if (offset < 0) throw new RangeError('Index out of range')
    }

    function writeFloat (buf, value, offset, littleEndian, noAssert) {
      if (!noAssert) {
        checkIEEE754(buf, value, offset, 4);
      }
      write(buf, value, offset, littleEndian, 23, 4);
      return offset + 4
    }

    Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
      return writeFloat(this, value, offset, true, noAssert)
    };

    Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
      return writeFloat(this, value, offset, false, noAssert)
    };

    function writeDouble (buf, value, offset, littleEndian, noAssert) {
      if (!noAssert) {
        checkIEEE754(buf, value, offset, 8);
      }
      write(buf, value, offset, littleEndian, 52, 8);
      return offset + 8
    }

    Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
      return writeDouble(this, value, offset, true, noAssert)
    };

    Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
      return writeDouble(this, value, offset, false, noAssert)
    };

    // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
    Buffer.prototype.copy = function copy (target, targetStart, start, end) {
      if (!start) start = 0;
      if (!end && end !== 0) end = this.length;
      if (targetStart >= target.length) targetStart = target.length;
      if (!targetStart) targetStart = 0;
      if (end > 0 && end < start) end = start;

      // Copy 0 bytes; we're done
      if (end === start) return 0
      if (target.length === 0 || this.length === 0) return 0

      // Fatal error conditions
      if (targetStart < 0) {
        throw new RangeError('targetStart out of bounds')
      }
      if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
      if (end < 0) throw new RangeError('sourceEnd out of bounds')

      // Are we oob?
      if (end > this.length) end = this.length;
      if (target.length - targetStart < end - start) {
        end = target.length - targetStart + start;
      }

      var len = end - start;
      var i;

      if (this === target && start < targetStart && targetStart < end) {
        // descending copy from end
        for (i = len - 1; i >= 0; --i) {
          target[i + targetStart] = this[i + start];
        }
      } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
        // ascending copy from start
        for (i = 0; i < len; ++i) {
          target[i + targetStart] = this[i + start];
        }
      } else {
        Uint8Array.prototype.set.call(
          target,
          this.subarray(start, start + len),
          targetStart
        );
      }

      return len
    };

    // Usage:
    //    buffer.fill(number[, offset[, end]])
    //    buffer.fill(buffer[, offset[, end]])
    //    buffer.fill(string[, offset[, end]][, encoding])
    Buffer.prototype.fill = function fill (val, start, end, encoding) {
      // Handle string cases:
      if (typeof val === 'string') {
        if (typeof start === 'string') {
          encoding = start;
          start = 0;
          end = this.length;
        } else if (typeof end === 'string') {
          encoding = end;
          end = this.length;
        }
        if (val.length === 1) {
          var code = val.charCodeAt(0);
          if (code < 256) {
            val = code;
          }
        }
        if (encoding !== undefined && typeof encoding !== 'string') {
          throw new TypeError('encoding must be a string')
        }
        if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
          throw new TypeError('Unknown encoding: ' + encoding)
        }
      } else if (typeof val === 'number') {
        val = val & 255;
      }

      // Invalid ranges are not set to a default, so can range check early.
      if (start < 0 || this.length < start || this.length < end) {
        throw new RangeError('Out of range index')
      }

      if (end <= start) {
        return this
      }

      start = start >>> 0;
      end = end === undefined ? this.length : end >>> 0;

      if (!val) val = 0;

      var i;
      if (typeof val === 'number') {
        for (i = start; i < end; ++i) {
          this[i] = val;
        }
      } else {
        var bytes = internalIsBuffer(val)
          ? val
          : utf8ToBytes$1(new Buffer(val, encoding).toString());
        var len = bytes.length;
        for (i = 0; i < end - start; ++i) {
          this[i + start] = bytes[i % len];
        }
      }

      return this
    };

    // HELPER FUNCTIONS
    // ================

    var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;

    function base64clean (str) {
      // Node strips out invalid characters like \n and \t from the string, base64-js does not
      str = stringtrim(str).replace(INVALID_BASE64_RE, '');
      // Node converts strings with length < 2 to ''
      if (str.length < 2) return ''
      // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
      while (str.length % 4 !== 0) {
        str = str + '=';
      }
      return str
    }

    function stringtrim (str) {
      if (str.trim) return str.trim()
      return str.replace(/^\s+|\s+$/g, '')
    }

    function toHex (n) {
      if (n < 16) return '0' + n.toString(16)
      return n.toString(16)
    }

    function utf8ToBytes$1 (string, units) {
      units = units || Infinity;
      var codePoint;
      var length = string.length;
      var leadSurrogate = null;
      var bytes = [];

      for (var i = 0; i < length; ++i) {
        codePoint = string.charCodeAt(i);

        // is surrogate component
        if (codePoint > 0xD7FF && codePoint < 0xE000) {
          // last char was a lead
          if (!leadSurrogate) {
            // no lead yet
            if (codePoint > 0xDBFF) {
              // unexpected trail
              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
              continue
            } else if (i + 1 === length) {
              // unpaired lead
              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
              continue
            }

            // valid lead
            leadSurrogate = codePoint;

            continue
          }

          // 2 leads in a row
          if (codePoint < 0xDC00) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            leadSurrogate = codePoint;
            continue
          }

          // valid surrogate pair
          codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
        } else if (leadSurrogate) {
          // valid bmp char, but last char was a lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
        }

        leadSurrogate = null;

        // encode utf8
        if (codePoint < 0x80) {
          if ((units -= 1) < 0) break
          bytes.push(codePoint);
        } else if (codePoint < 0x800) {
          if ((units -= 2) < 0) break
          bytes.push(
            codePoint >> 0x6 | 0xC0,
            codePoint & 0x3F | 0x80
          );
        } else if (codePoint < 0x10000) {
          if ((units -= 3) < 0) break
          bytes.push(
            codePoint >> 0xC | 0xE0,
            codePoint >> 0x6 & 0x3F | 0x80,
            codePoint & 0x3F | 0x80
          );
        } else if (codePoint < 0x110000) {
          if ((units -= 4) < 0) break
          bytes.push(
            codePoint >> 0x12 | 0xF0,
            codePoint >> 0xC & 0x3F | 0x80,
            codePoint >> 0x6 & 0x3F | 0x80,
            codePoint & 0x3F | 0x80
          );
        } else {
          throw new Error('Invalid code point')
        }
      }

      return bytes
    }

    function asciiToBytes (str) {
      var byteArray = [];
      for (var i = 0; i < str.length; ++i) {
        // Node's code seems to be doing this and not & 0x7F..
        byteArray.push(str.charCodeAt(i) & 0xFF);
      }
      return byteArray
    }

    function utf16leToBytes (str, units) {
      var c, hi, lo;
      var byteArray = [];
      for (var i = 0; i < str.length; ++i) {
        if ((units -= 2) < 0) break

        c = str.charCodeAt(i);
        hi = c >> 8;
        lo = c % 256;
        byteArray.push(lo);
        byteArray.push(hi);
      }

      return byteArray
    }


    function base64ToBytes (str) {
      return toByteArray(base64clean(str))
    }

    function blitBuffer (src, dst, offset, length) {
      for (var i = 0; i < length; ++i) {
        if ((i + offset >= dst.length) || (i >= src.length)) break
        dst[i + offset] = src[i];
      }
      return i
    }

    function isnan (val) {
      return val !== val // eslint-disable-line no-self-compare
    }


    // the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence
    // The _isBuffer check is for Safari 5-7 support, because it's missing
    // Object.prototype.constructor. Remove this eventually
    function isBuffer$2(obj) {
      return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))
    }

    function isFastBuffer (obj) {
      return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
    }

    // For Node v0.10 support. Remove this eventually.
    function isSlowBuffer (obj) {
      return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))
    }

    class Entry {
      constructor({key, address}, opts = {}) {
        this.key = key;
        this.address = address;
        this.codec = opts.codec;
        this.hasher = opts.hasher;
      }
      get isEntry() {
        return true;
      }
    }
    class EntryList {
      constructor({entries, closed}) {
        if (typeof closed !== 'boolean')
          throw new Error('Missing required argument "closed"');
        this.entries = entries;
        this.closed = closed;
        this.startKey = entries[0].key;
      }
      find(key, compare) {
        const {entries} = this;
        for (let i = entries.length - 1; i > -1; i--) {
          const entry = entries[i];
          const comp = compare(key, entry.key);
          if (comp > -1) {
            return [
              i,
              entry
            ];
          }
        }
        return null;
      }
      findMany(keys, compare, sorted = false, strict = false) {
        const {entries} = this;
        const results = new Map();
        if (!sorted) {
          keys = keys.sort(compare);
        } else {
          keys = [...keys];
        }
        for (let i = entries.length - 1; i > -1; i--) {
          if (!keys.length)
            break;
          const entry = entries[i];
          const found = [];
          while (keys.length) {
            let key = keys[keys.length - 1];
            key = key.key ? key.key : key;
            const comp = compare(key, entry.key);
            if (!strict) {
              if (comp > -1) {
                found.push(keys.pop());
              } else {
                break;
              }
            } else {
              if (comp === 0) {
                found.push(keys.pop());
              } else if (comp > 0) {
                keys.pop();
              } else {
                break;
              }
            }
          }
          if (found.length) {
            results.set(i, [
              entry,
              found
            ]);
          }
        }
        return results;
      }
      findRange(start, end, compare) {
        const {entries} = this;
        let last;
        let first = 0;
        for (let i = entries.length - 1; i > -1; i--) {
          const entry = entries[i];
          const comp = compare(end, entry.key);
          if (comp > 0) {
            last = i;
            break;
          }
        }
        for (let i = 0; i < entries.length; i++) {
          const entry = entries[i];
          const comp = compare(start, entry.key);
          if (comp === 0) {
            first = i;
            break;
          } else if (comp < 0) {
            break;
          }
          first = i;
        }
        return {
          first,
          last,
          entries: entries.slice(first, last + 1)
        };
      }
    }
    const stringKey = key => typeof key === 'string' ? key : JSON.stringify(key);
    class Node {
      constructor({entryList, chunker, distance, getNode, compare, cache}) {
        this.entryList = entryList;
        this.chunker = chunker;
        this.distance = distance;
        this.getNode = getNode;
        this.compare = compare;
        this.cache = cache;
      }
      get closed() {
        return this.entryList.closed;
      }
      get key() {
        return this.entryList.startKey;
      }
      async getEntry(key, cids = new CIDCounter()) {
        const result = await this._getEntry(key, cids);
        return {
          result,
          cids
        };
      }
      async _getEntry(key, cids) {
        cids.add(this);
        let node = this;
        while (!node.isLeaf) {
          const result = node.entryList.find(key, this.compare);
          if (result === null)
            throw new Error('Not found');
          const [, entry] = result;
          node = await this.getNode(await entry.address);
          cids.add(node);
        }
        const result = node.entryList.find(key, this.compare);
        if (result === null)
          throw new Error('Not found');
        const [, entry] = result;
        return entry;
      }
      async getAllEntries(cids = new CIDCounter()) {
        const result = await this._getAllEntries(cids);
        return {
          result,
          cids
        };
      }
      _getAllEntries(cids) {
        cids.add(this);
        if (this.isLeaf) {
          return this.entryList.entries;
        } else {
          const {entries} = this.entryList;
          const mapper = async entry => this.getNode(await entry.address).then(node => node._getAllEntries(cids));
          return Promise.all(entries.map(mapper)).then(results => results.flat());
        }
      }
      async getEntries(keys, sorted = false, cids = new CIDCounter()) {
        const result = await this._getEntries(keys, sorted, cids);
        return {
          result,
          cids
        };
      }
      async _getEntries(keys, sorted, cids) {
        cids.add(this);
        if (!sorted)
          keys = keys.sort(this.compare);
        const results = this.entryList.findMany(keys, this.compare, true, this.isLeaf);
        if (this.isLeaf) {
          return [...results.values()].map(([entry]) => entry);
        }
        let entries = [];
        for (const [entry, keys] of [...results.values()].reverse()) {
          const p = this.getNode(await entry.address);
          entries.push(p.then(node => node._getEntries(keys.reverse(), true, cids)));
        }
        entries = await Promise.all(entries);
        return entries.flat();
      }
      async getRangeEntries(start, end, cids = new CIDCounter()) {
        const result = await this._getRangeEntries(start, end, cids);
        return {
          result,
          cids
        };
      }
      _getRangeEntries(start, end, cids) {
        cids.add(this);
        const {entries} = this.entryList.findRange(start, end, this.compare);
        if (this.isLeaf) {
          return entries.filter(entry => {
            const s = this.compare(start, entry.key);
            const e = this.compare(end, entry.key);
            if (s <= 0 && e >= 0)
              return true;
            return false;
          });
        }
        if (!entries.length)
          return [];
        const thenRange = async entry => this.getNode(await entry.address).then(node => {
          return node._getRangeEntries(start, end, cids);
        });
        const results = [thenRange(entries.shift())];
        if (!entries.length)
          return results[0];
        const last = thenRange(entries.pop());
        while (entries.length) {
          const thenAll = async entry => this.getNode(await entry.address).then(async node => {
            return node._getAllEntries(cids);
          });
          results.push(thenAll(entries.shift()));
        }
        results.push(last);
        return Promise.all(results).then(results => results.flat());
      }
      async transaction(bulk, opts = {}) {
        const {sorted, LeafClass, LeafEntryClass, BranchClass, BranchEntryClass} = opts;
        const entryOptions = {
          codec: this.codec,
          hasher: this.hasher,
          getNode: this.getNode,
          compare: this.compare,
          cache: this.cache,
          ...opts
        };
        const nodeOptions = {
          chunker: this.chunker,
          opts: entryOptions
        };
        if (!sorted)
          bulk = bulk.sort(({key: a}, {key: b}) => this.compare(a, b));
        const results = this.entryList.findMany(bulk, this.compare, true, this.isLeaf);
        let entries = [];
        if (this.isLeaf) {
          const previous = [];
          const changes = {};
          const deletes = new Map();
          for (const {key, del, value} of bulk) {
            const skey = stringKey(key);
            if (del) {
              if (typeof changes[skey] === 'undefined')
                deletes.set(skey, null);
            } else {
              changes[skey] = {
                key,
                value
              };
              deletes.delete(skey);
            }
          }
          entries = [...this.entryList.entries];
          for (const [i, [entry]] of results) {
            previous.push(entry);
            const skey = stringKey(entry.key);
            if (deletes.has(skey)) {
              deletes.set(skey, i);
            } else {
              entries[i] = new LeafEntryClass(changes[skey], entryOptions);
              delete changes[skey];
            }
          }
          let count = 0;
          for (const [, i] of deletes) {
            entries.splice(i - count++, 1);
          }
          const appends = Object.values(changes).map(obj => new LeafEntryClass(obj, entryOptions));
          entries = entries.concat(appends).sort(({key: a}, {key: b}) => this.compare(a, b));
          const _opts = {
            entries,
            NodeClass: LeafClass,
            distance: 0,
            ...nodeOptions
          };
          const nodes = await Node.from(_opts);
          return {
            nodes,
            previous,
            blocks: [],
            distance: 0
          };
        } else {
          for (const [i, [entry, keys]] of results) {
            const p = this.getNode(await entry.address).then(node => node.transaction(keys.reverse(), {
              ...opts,
              sorted: true
            })).then(r => ({
              entry,
              keys,
              distance,
              ...r
            }));
            results.set(i, p);
          }
          entries = [...this.entryList.entries];
          const final = {
            previous: [],
            blocks: []
          };
          let distance;
          for (const [i, p] of results) {
            const {
              nodes,
              previous,
              blocks,
              distance: _distance
            } = await p;
            distance = _distance;
            entries[i] = nodes;
            if (previous.length)
              final.previous = final.previous.concat(previous);
            if (blocks.length)
              final.blocks = final.blocks.concat(blocks);
          }
          entries = entries.flat();
          let newEntries = [];
          let prepend = null;
          for (let entry of entries) {
            if (prepend) {
              if (entry.isEntry)
                entry = await this.getNode(await entry.address);
              const entries = prepend.entryList.entries.concat(entry.entryList.entries);
              prepend = null;
              const NodeClass = distance === 0 ? LeafClass : BranchClass;
              const _opts = {
                entries,
                NodeClass,
                distance,
                ...nodeOptions
              };
              const nodes = await Node.from(_opts);
              if (!nodes[nodes.length - 1].closed) {
                prepend = nodes.pop();
              }
              if (nodes.length) {
                newEntries = newEntries.concat(nodes);
              }
            } else {
              if (!entry.isEntry && !entry.closed) {
                prepend = entry;
              } else {
                newEntries.push(entry);
              }
            }
          }
          if (prepend) {
            newEntries.push(prepend);
          }
          distance++;
          const toEntry = async branch => {
            if (branch.isEntry)
              return branch;
            const block = await branch.encode();
            final.blocks.push(block);
            this.cache.set(branch);
            return new BranchEntryClass(branch, entryOptions);
          };
          entries = await Promise.all(newEntries.map(toEntry));
          const _opts = {
            entries,
            NodeClass: BranchClass,
            distance,
            ...nodeOptions
          };
          return {
            nodes: await Node.from(_opts),
            ...final,
            distance
          };
        }
      }
      async bulk(bulk, opts = {}) {
        const {BranchClass, BranchEntryClass} = opts;
        const entryOptions = {
          codec: this.codec,
          hasher: this.hasher,
          getNode: this.getNode,
          compare: this.compare,
          cache: this.cache,
          ...opts
        };
        const nodeOptions = {
          chunker: this.chunker,
          opts: entryOptions
        };
        const results = await this.transaction(bulk, opts);
        const onBranch = async branch => {
          const block = await branch.encode();
          results.blocks.push(block);
          this.cache.set(branch);
        };
        while (results.nodes.length > 1) {
          const distance = results.nodes[0].distance + 1;
          const mapper = async node => {
            await onBranch(node);
            return new BranchEntryClass(node, entryOptions);
          };
          const entries = await Promise.all(results.nodes.map(mapper));
          results.nodes = await Node.from({
            entries,
            NodeClass: BranchClass,
            distance,
            ...nodeOptions
          });
          const promises = results.nodes.map(node => node.encode());
          (await Promise.all(promises)).forEach(b => results.blocks.push(b));
        }
        const [root] = results.nodes;
        await onBranch(root);
        return {
          ...results,
          root
        };
      }
      static async from({entries, chunker, NodeClass, distance, opts}) {
        const parts = [];
        let chunk = [];
        for (const entry of entries) {
          chunk.push(entry);
          if (await chunker(entry, distance)) {
            parts.push(new EntryList({
              entries: chunk,
              closed: true
            }));
            chunk = [];
          }
        }
        if (chunk.length) {
          parts.push(new EntryList({
            entries: chunk,
            closed: false
          }));
        }
        return parts.map(entryList => new NodeClass({
          entryList,
          chunker,
          distance,
          ...opts
        }));
      }
    }
    class IPLDNode extends Node {
      constructor({codec, hasher, block, ...opts}) {
        super(opts);
        this.codec = codec;
        this.hasher = hasher;
        if (!block) {
          this.block = this.encode();
          this.address = this.block.then(block => block.cid);
        } else {
          this.block = block;
          this.address = block.cid;
        }
      }
      async get(key) {
        const {
          result: entry,
          cids
        } = await this.getEntry(key);
        return {
          result: entry.key,
          cids
        };
      }
      async encode() {
        if (this.block)
          return this.block;
        const value = await this.encodeNode();
        const opts = {
          codec: this.codec,
          hasher: this.hasher,
          value
        };
        this.block = await encode$4(opts);
        return this.block;
      }
    }
    class IPLDBranch extends IPLDNode {
      async encodeNode() {
        const {entries} = this.entryList;
        const mapper = async entry => [
          entry.key,
          await entry.address
        ];
        const list = await Promise.all(entries.map(mapper));
        return {
          branch: [
            this.distance,
            list
          ],
          closed: this.closed
        };
      }
      get isBranch() {
        return true;
      }
    }
    class IPLDLeaf extends IPLDNode {
      encodeNode() {
        const list = this.entryList.entries.map(entry => entry.encodeNode());
        return {
          leaf: list,
          closed: this.closed
        };
      }
      get isLeaf() {
        return true;
      }
    }
    const create$1 = async function* (obj) {
      let {LeafClass, LeafEntryClass, BranchClass, BranchEntryClass, list, chunker, compare, ...opts} = obj;
      list = list.map(value => new LeafEntryClass(value, opts));
      opts.compare = compare;
      let nodes = await Node.from({
        entries: list,
        chunker,
        NodeClass: LeafClass,
        distance: 0,
        opts
      });
      yield* nodes;
      let distance = 1;
      while (nodes.length > 1) {
        const mapper = async node => new BranchEntryClass({
          key: node.key,
          address: await node.address
        }, opts);
        const entries = await Promise.all(nodes.map(mapper));
        nodes = await Node.from({
          entries,
          chunker,
          NodeClass: BranchClass,
          distance,
          opts
        });
        yield* nodes;
        distance++;
      }
    };

    class MapEntry extends Entry {
      async identity() {
        const encoded = await this.codec.encode(await this.encodeNode());
        const hash = await this.hasher.encode(encoded);
        return readUInt32LE(hash);
      }
    }
    class MapLeafEntry extends MapEntry {
      constructor(node, opts) {
        super(node, opts);
        this.value = node.value;
      }
      encodeNode() {
        return [
          this.key,
          this.value
        ];
      }
    }
    class MapBranchEntry extends MapEntry {
      async encodeNode() {
        return [
          this.key,
          await this.address
        ];
      }
    }
    const getValue = async (node, key) => {
      const {
        result: entry,
        cids
      } = await node.getEntry(key);
      return {
        result: entry.value,
        cids
      };
    };
    const getManyValues = async (node, keys) => {
      const {
        result: entries,
        cids
      } = await node.getEntries(keys);
      return {
        result: entries.map(entry => entry.value),
        cids
      };
    };
    class MapLeaf extends IPLDLeaf {
      get(key) {
        return getValue(this, key);
      }
      getMany(keys) {
        return getManyValues(this, keys);
      }
      bulk(bulk, opts = {}) {
        return super.bulk(bulk, {
          ...classes,
          ...opts
        });
      }
    }
    class MapBranch extends IPLDBranch {
      get(key) {
        return getValue(this, key);
      }
      getMany(keys) {
        return getManyValues(this, keys);
      }
      bulk(bulk, opts = {}) {
        return super.bulk(bulk, {
          ...classes,
          ...opts
        });
      }
    }
    const classes = {
      LeafClass: MapLeaf,
      LeafEntryClass: MapLeafEntry,
      BranchClass: MapBranch,
      BranchEntryClass: MapBranchEntry
    };
    const createGetNode = (get, cache, chunker, codec, hasher, compare, opts) => {
      const LeafClass = opts.LeafClass || MapLeaf;
      const LeafEntryClass = opts.LeafEntryClass || MapLeafEntry;
      const BranchClass = opts.BranchClass || MapBranch;
      const BranchEntryClass = opts.BranchEntryClass || MapBranchEntry;
      const entryOpts = {
        codec,
        hasher
      };
      const decoder = block => {
        const {value} = block;
        const opts = {
          chunker,
          cache,
          block,
          getNode,
          codec,
          hasher,
          compare
        };
        let entries;
        let CLS;
        if (value.leaf) {
          entries = value.leaf.map(([key, value]) => new LeafEntryClass({
            key,
            value
          }, entryOpts));
          CLS = LeafClass;
        } else if (value.branch) {
          const [distance, _entries] = value.branch;
          opts.distance = distance;
          entries = _entries.map(([key, address]) => new BranchEntryClass({
            key,
            address
          }, entryOpts));
          CLS = BranchClass;
        } else {
          throw new Error('Unknown block data, does not match schema');
        }
        const entryList = new EntryList({
          entries,
          closed: value.closed
        });
        const node = new CLS({
          entryList,
          ...opts
        });
        cache.set(node);
        return node;
      };
      const getNode = async cid => {
        if (cache.has(cid))
          return cache.get(cid);
        return get(cid).then(block => decoder(block));
      };
      return getNode;
    };
    const create$2 = ({get, cache, chunker, list, codec, hasher, sorted, compare, ...opts}) => {
      if (!sorted)
        list = list.sort(({key: a}, {key: b}) => compare(a, b));
      const getNode = createGetNode(get, cache, chunker, codec, hasher, compare, opts);
      const _opts = {
        list,
        codec,
        hasher,
        chunker,
        getNode,
        sorted,
        compare,
        cache,
        LeafClass: opts.LeafClass || MapLeaf,
        LeafEntryClass: opts.LeafEntryClass || MapLeafEntry,
        BranchClass: opts.BranchClass || MapBranch,
        BranchEntryClass: opts.BranchEntryClass || MapBranchEntry
      };
      return create$1(_opts);
    };
    const load = ({cid, get, cache, chunker, codec, hasher, compare, ...opts}) => {
      const getNode = createGetNode(get, cache, chunker, codec, hasher, compare, opts);
      return getNode(cid);
    };

    const compare$1 = simpleCompare;
    const getLength = async node => {
      while (!node.isLeaf) {
        const {entries} = node.entryList;
        const last = entries[entries.length - 1];
        node = await node.getNode(await last.address);
      }
      const {entries} = node.entryList;
      const last = entries[entries.length - 1];
      return last.key + 1;
    };
    class SparseArrayLeaf extends MapLeaf {
      bulk(bulk, opts = {}) {
        return super.bulk(bulk, {
          ...classes$1,
          ...opts
        });
      }
      getLength() {
        return getLength(this);
      }
    }
    class SparseArrayBranch extends MapBranch {
      bulk(bulk, opts = {}) {
        return super.bulk(bulk, {
          ...classes$1,
          ...opts
        });
      }
      getLength() {
        return getLength(this);
      }
    }
    const LeafClass = SparseArrayLeaf;
    const BranchClass = SparseArrayBranch;
    const classes$1 = {
      LeafClass,
      BranchClass,
      LeafEntryClass: MapLeafEntry,
      BranchEntryClass: MapBranchEntry
    };
    const defaults = {
      ...classes$1,
      compare: compare$1
    };
    const create$3 = opts => {
      opts = {
        ...defaults,
        ...opts
      };
      return create$2(opts);
    };
    const load$1 = opts => {
      opts = {
        ...defaults,
        ...opts
      };
      return load(opts);
    };

    const compare$2 = (a, b) => {
      const [aKey, aRef] = a;
      const [bKey, bRef] = b;
      const comp = simpleCompare(aKey, bKey);
      if (comp !== 0)
        return comp;
      return simpleCompare(aRef, bRef);
    };
    const getIndex = async (node, key) => {
      const start = [
        key,
        0
      ];
      const end = [
        key,
        Infinity
      ];
      const {
        result: entries,
        cids
      } = await node.getRangeEntries(start, end);
      return {
        result: entries.map(entry => ({
          id: entry.key[1],
          row: entry.value
        })),
        cids
      };
    };
    const getRange = async (node, start, end) => {
      start = [
        start,
        0
      ];
      end = [
        end,
        Infinity
      ];
      const {
        result: entries,
        cids
      } = await node.getRangeEntries(start, end);
      const result = entries.map(entry => {
        const [id, key] = entry.key;
        return {
          id,
          key,
          row: entry.value
        };
      });
      return {
        result,
        cids
      };
    };
    class DBIndexLeaf extends MapLeaf {
      get(key) {
        return getIndex(this, key);
      }
      range(start, end) {
        return getRange(this, start, end);
      }
      bulk(bulk, opts = {}) {
        return super.bulk(bulk, {
          ...classes$2,
          ...opts
        });
      }
    }
    class DBIndexBranch extends MapBranch {
      get(key) {
        return getIndex(this, key);
      }
      range(start, end) {
        return getRange(this, start, end);
      }
      bulk(bulk, opts = {}) {
        return super.bulk(bulk, {
          ...classes$2,
          ...opts
        });
      }
    }
    const LeafClass$1 = DBIndexLeaf;
    const BranchClass$1 = DBIndexBranch;
    const classes$2 = {
      LeafClass: LeafClass$1,
      BranchClass: BranchClass$1,
      LeafEntryClass: MapLeafEntry,
      BranchEntryClass: MapBranchEntry
    };
    const defaults$1 = {
      ...classes$2,
      compare: compare$2
    };
    const create$4 = opts => {
      opts = {
        ...defaults$1,
        ...opts
      };
      return create$2(opts);
    };
    const load$2 = opts => {
      opts = {
        ...defaults$1,
        ...opts
      };
      return load(opts);
    };

    const pluck = node => node.result;
    const registry = {};
    const getColumnChunkerTarget = schema => {
      let {dataType, length} = schema.definition;
      if (!length) {
        if (dataType === 'INTEGER') {
          length = integerEstimate;
        } else if (dataType === 'FLOAT') {
          length = floatEstimate;
        } else {
          throw new Error(`Not Implemented, do not have estimate for ${ dataType } branching factor`);
        }
      }
      length += cidEstimate;
      length += tokenEstimate + 1;
      length += integerEstimate;
      const target = Math.floor(500000 / length);
      return target;
    };
    class Column extends SQLBase {
      constructor({schema, index, ...opts}) {
        super(opts);
        const name = schema.column.column;
        if (name.startsWith('/') || name.endsWith('/')) {
          throw new Error('Column name must not begin in or end in \'/\'');
        }
        this.name = name;
        this.definition = schema.definition;
        this.schema = schema;
        this.index = index;
      }
      async encodeNode() {
        const index = this.index === null ? null : await this.index.address;
        return {
          schema: this.schema,
          index
        };
      }
      get chunkerTarget() {
        return getColumnChunkerTarget(this.schema);
      }
      static create(schema) {
        if (schema.definition.dataType === 'INT') {
          schema.definition.dataType = 'INTEGER';
        }
        schema.chunkerTarget = getColumnChunkerTarget(schema);
        return new Column({
          schema,
          index: null
        });
      }
      static from(cid, {get, cache}) {
        const create = async block => {
          let {schema, index} = block.value;
          if (index !== null) {
            if (!schema.chunkerTarget)
              throw new Error('No chunker target size');
            const chunker = bf(schema.chunkerTarget);
            index = await load$2({
              cid: index,
              get,
              chunker,
              cache,
              ...mf
            });
          }
          return new Column({
            index,
            schema,
            get,
            cache,
            block
          });
        };
        return getNode(cid, get, cache, create);
      }
    }
    const isInt = n => n % 1 === 0;
    const validate = (schema, val) => {
      const {dataType, length} = schema.definition;
      const {type, value} = val;
      if (schema.nullable !== null)
        throw new Error('Not implemented');
      if (value === null)
        return true;
      if (dataType === 'VARCHAR') {
        if (value.length > length)
          throw new Error('Schema validation: value too long');
        if (type === 'string')
          return true;
        throw new Error(`Invalid VARCHAR type ${ type }`);
      }
      if (dataType === 'INT' || dataType === 'INTEGER') {
        if (type === 'number' && isInt(value))
          return true;
        throw new Error(`Invalid INT type ${ type } ${ value }`);
      }
      if (dataType === 'FLOAT') {
        if (type === 'number')
          return true;
        throw new Error('Invalid FLOAT type');
      }
      throw new Error('Not Implemented');
    };
    class Row$1 {
      constructor({block, table}) {
        this.block = block;
        this.value = block.value;
        this.table = table;
      }
      get isRow() {
        return true;
      }
      get props() {
        return this.table.columns.map(col => col.schema);
      }
      async update(ast) {
        let obj = this.toObject();
        for (const change of ast.set) {
          const schema = this.props.find(c => c.column.column === change.column);
          if (!schema)
            throw new Error(`No column named ${ change.column }`);
          validate(schema, change.value);
          obj[change.column] = change.value.value;
        }
        let block;
        for (const {
              column: {column}
            } of this.props) {
          if (typeof column === 'undefined') {
            block = await encoder(obj);
            break;
          }
        }
        if (!block) {
          obj = this.allColumnNames().map(name => obj[name]);
          block = await encoder(obj);
        }
        return this.table.createRow({ block });
      }
      async rdiff(cid, get, cache) {
        let block;
        if (cache.has(cid)) {
          block = cache.get(cid).block;
        } else {
          block = await get(cid);
        }
        const row = this.table.createRow({ block });
        const changes = {};
        for (const name of this.allColumnNames()) {
          const [a, b] = [
            this.get(name),
            row.get(name)
          ];
          if (a !== b)
            changes[name] = b;
        }
        return changes;
      }
      allColumnNames() {
        return this.props.map(column => column.column.column);
      }
      getIndex(i) {
        if (!Array.isArray(this.value)) {
          const columnName = this.allColumnNames()[i];
          return this.value[columnName];
        }
        return this.value[i];
      }
      get(columnName) {
        if (Array.isArray(this.value)) {
          const i = this.props.findIndex(p => p.column.column === columnName);
          if (i === -1)
            throw new Error(`No column named "${ columnName }"`);
          return this.value[i];
        } else {
          return this.value[columnName];
        }
      }
      columns(query) {
        const expression = obj => {
          let {expr, as} = obj;
          if (as)
            throw new Error('Not Implemented');
          if (expr.table)
            throw new Error('Not Implemented');
          if (expr.type === 'aggr_func')
            expr = expr.args.expr;
          if (expr.type === 'column_ref') {
            return this.get(expr.column);
          }
          if (expr.type === 'binary_expr') {
            return [
              expression({ expr: expr.left }),
              expression({ expr: expr.right })
            ];
          }
          if (expr.type === 'number') {
            return expr.value;
          }
          throw new Error('Not Implemented');
        };
        if (query === '*') {
          return this.toArray();
        } else if (Array.isArray(query)) {
          const result = [];
          for (const obj of query) {
            result.push(expression(obj));
          }
          return result;
        } else {
          throw new Error('Not Implemented');
        }
      }
      toArray(columns) {
        if (Array.isArray(this.value)) {
          return this.value;
        } else {
          if (!columns) {
            columns = this.allColumnNames();
          }
          return columns.map(name => this.value[name]);
        }
      }
      toObject() {
        if (Array.isArray(this.value)) {
          const values = [...this.value];
          const entries = this.allColumnNames().map(k => [
            k,
            values.shift()
          ]);
          return Object.fromEntries(entries);
        } else {
          return this.value;
        }
      }
    }
    const tableInsert = async function* (table, ast, {database}) {
      const cids = new CIDCounter();
      const {get, cache} = database;
      const {values} = ast;
      const inserts = [];
      const schemas = table.columns.map(col => col.schema);
      if (ast.type === 'update') {
        let entries;
        if (ast.where) {
          const where = new Where(database, ast.where, table);
          const all = await where.asMap(cids);
          entries = [...all.entries()].map(([key, value]) => ({
            key,
            value
          }));
        } else {
          entries = await table.rows.getAllEntries(cids).then(pluck);
        }
        const blocks = [];
        const _doEntry = async entry => {
          let row = await table.getRow(entry.value, get, cache);
          row = await row.update(ast);
          if (!entry.value.equals(row.block.cid)) {
            cache.set(row);
            blocks.push(row.block);
            inserts.push({
              block: row.block,
              row,
              rowid: entry.key
            });
          }
        };
        await Promise.all(entries.map(_doEntry));
        yield* blocks;
      } else {
        for (const {type, value} of values) {
          let row;
          if (ast.columns) {
            row = {};
          } else {
            row = [];
          }
          if (type !== 'expr_list')
            throw new Error('Not implemented');
          for (let i = 0; i < value.length; i++) {
            const schema = schemas[i];
            if (!schema)
              throw new Error('Incorrect number of values, does not match columns in schema');
            let val = value[i];
            if (val.type === 'unary_expr' && val.operator === '-') {
              val = {
                type: 'number',
                value: -val.expr.value
              };
            }
            validate(schema, val);
            if (ast.columns) {
              const columnName = ast.columns[i];
              row[columnName] = val.value;
            } else {
              row.push(val.value);
            }
          }
          const block = await encoder(row);
          yield block;
          const _row = table.createRow({ block });
          inserts.push({
            block,
            row: _row
          });
        }
      }
      const opts = {
        get,
        cache,
        ...mf
      };
      yield* table._insert({
        opts,
        table,
        inserts,
        get,
        cache,
        database
      });
    };
    const rangeOperators = new Set([
      '<',
      '>',
      '<=',
      '>='
    ]);
    const getRangeQuery = ({operator, value, right}, column) => {
      const {dataType} = column.schema.definition;
      let incr;
      if (dataType === 'INT' || dataType === 'INTEGER' || dataType === 'FLOAT') {
        incr = 1e-13;
      } else if (dataType === 'VARCHAR') {
        incr = '\0';
      } else {
        throw new Error('Not Implmented');
      }
      if (typeof value === 'undefined')
        value = right.value;
      if (operator === '>=') {
        return { start: value };
      } else if (operator === '<=') {
        return { end: value + incr };
      } else if (operator === '>') {
        return { start: value + incr };
      } else if (operator === '<') {
        return { end: value };
      } else {
        throw new Error('Internal Error: invalid operator');
      }
    };
    const absoluteStart = ({
      schema: {
        definition: {dataType, length}
      }
    }) => {
      if (dataType === 'INT' || dataType === 'INTEGER')
        return -1;
      if (dataType === 'VARCHAR') {
        return [...Array(length).keys()].map(() => '\0').join('');
      }
      throw new Error('Not Implemented');
    };
    const absoluteEnd = ({
      schema: {
        definition: {dataType, length}
      }
    }) => {
      if (dataType === 'INT' || dataType === 'INTEGER')
        return Infinity;
      if (dataType === 'VARCHAR') {
        return Buffer.from([...Array(length + 1).keys()].map(() => 255)).toString();
      }
      throw new Error('Not Implemented');
    };
    class Where {
      constructor(db, ast, table) {
        this.db = db;
        this.ast = ast;
        this.table = table;
      }
      async all(cids) {
        if (!cids)
          throw new Error('missing cids');
        const where = this.ast;
        const {table, db} = this;
        if (where.type !== 'binary_expr')
          throw new Error('Not Implemented');
        if (where.left.table)
          throw new Error('Not Implemented');
        const pluck = node => node.result;
        let results;
        if (where.operator === 'AND' || where.operator === 'OR') {
          if (where.left.left.column && where.left.left.column === where.right.left.column) {
            if (!rangeOperators.has(where.left.operator) || !rangeOperators.has(where.right.operator)) {
              throw new Error('Invalid SQL, must compare same column using >, <, >=, or <=');
            }
            const column = table.getColumn(where.left.left.column);
            const query = {
              ...getRangeQuery(where.left, column),
              ...getRangeQuery(where.right, column)
            };
            const {start, end} = query;
            if (typeof start === 'undefined' || typeof end === 'undefined') {
              throw new Error('Invalid operator combination, missing start or end');
            }
            return column.index.getRangeEntries([
              start,
              0
            ], [
              end,
              0
            ], cids).then(pluck);
          }
          const left = new Where(db, where.left, table);
          const right = new Where(db, where.right, table);
          const [ll, rr] = await Promise.all([
            left.asMap(cids),
            right.asMap(cids)
          ]);
          if (where.operator === 'OR') {
            const all = new Map([
              ...ll.entries(),
              ...rr.entries()
            ]);
            results = [...all.keys()].sort().map(k => ({
              key: k,
              value: all.get(k)
            }));
          } else {
            results = [...ll.keys()].filter(k => rr.has(k)).map(k => {
              return {
                key: k,
                value: ll.get(k)
              };
            });
          }
        } else if (where.operator === '=') {
          const {index} = table.getColumn(where.left.column);
          const {value} = where.right;
          results = await index.getRangeEntries([
            value,
            0
          ], [
            value,
            Infinity
          ], cids).then(pluck);
        } else if (rangeOperators.has(where.operator)) {
          const column = table.getColumn(where.left.column);
          let {start, end} = getRangeQuery(where, column);
          if (typeof start === 'undefined')
            start = absoluteStart(column);
          if (typeof end === 'undefined')
            end = absoluteEnd(column);
          results = await column.index.getRangeEntries([
            start,
            0
          ], [
            end,
            0
          ], cids).then(pluck);
        } else {
          throw new Error('Not Implemented');
        }
        return results;
      }
      async asMap(cids) {
        const results = await this.all(cids);
        return new Map(results.map(r => {
          if (Array.isArray(r.key))
            return [
              r.key[1],
              r.value
            ];
          return [
            r.key,
            r.value
          ];
        }));
      }
    }
    const tokenEstimate = 3;
    const integerEstimate = 4;
    const floatEstimate = 8;
    const cidEstimate = 36;
    const tableChunkerTarget = Math.floor(500000 / (tokenEstimate + integerEstimate + cidEstimate));
    class Table extends SQLBase {
      constructor({name, rows, columns, ...opts}) {
        super(opts);
        this.name = name;
        this.rows = rows;
        this.columns = columns;
      }
      async get(i, get) {
        if (typeof i !== 'number')
          throw new Error('ROWID must be integer');
        if (!this.rows)
          throw new Error('No rows in this table');
        const {
          result: {value},
          cids
        } = await this.rows.getEntry(i);
        const block = await get(value);
        const result = this.createRow({
          block,
          table: this
        });
        return {
          result,
          cids
        };
      }
      createRow(opts) {
        return new Row$1({
          ...opts,
          table: this
        });
      }
      get tableType() {
        return 'table';
      }
      getColumn(columnName) {
        const column = this.columns.find(c => c.name === columnName);
        if (!column)
          throw new Error(`No column named "${ columnName }"`);
        return column;
      }
      async getRow(cid, get, cache) {
        const create = block => this.createRow({ block });
        return getNode(cid, get, cache, create);
      }
      async encodeNode() {
        const columns = await Promise.all(this.columns.map(column => column.address));
        const rows = this.rows === null ? null : await this.rows.address;
        const type = this.tableType;
        return {
          columns,
          rows,
          type
        };
      }
      insert(ast, opts) {
        return tableInsert(this, ast, opts);
      }
      get chunkerTarget() {
        return tableChunkerTarget;
      }
      async *_insert({opts, table, inserts, get, cache, database}) {
        if (!get)
          throw new Error('no get');
        let rows;
        let list;
        let blocks = [];
        let i = 1;
        if (table.rows !== null) {
          i = await table.rows.getLength();
        }
        list = inserts.map(({
          block: {cid},
          row,
          rowid
        }) => ({
          key: rowid || i++,
          value: cid,
          row
        }));
        if (table.rows === null) {
          const chunker = bf(this.chunkerTarget);
          if (opts.chunker)
            throw new Error('opts should not have chunker');
          for await (const node of create$3({
              ...opts,
              list,
              chunker
            })) {
            yield node.block;
            rows = node;
          }
        } else {
          const {
            blocks: __blocks,
            root,
            previous
          } = await table.rows.bulk(list);
          rows = root;
          yield* __blocks;
          const prev = new Map(previous.map(({key, value}) => [
            key,
            value
          ]));
          list = await Promise.all(list.map(async ({key, row, value}) => {
            let changes;
            if (prev.get(key)) {
              changes = await row.rdiff(prev.get(key), get, cache);
            }
            return {
              key,
              row,
              value,
              changes
            };
          }));
        }
        const writeIndex = async (column, i) => {
          const entries = [];
          for (let {key, row, changes} of list) {
            if (changes && typeof changes[column.name] !== 'undefined') {
              entries.push({
                key: [
                  changes[column.name],
                  key
                ],
                del: true
              });
            }
            const value = row.block.cid;
            let val = row.getIndex(i);
            let path;
            while (val && typeof val === 'object') {
              path = val.path;
              const block = await get(val.link);
              row = await this.createRow({ block });
              val = row.get(path);
            }
            if (typeof val !== 'undefined') {
              entries.push({
                key: [
                  val,
                  key
                ],
                row,
                value
              });
            }
          }
          if (!entries.length)
            return column.index ? column.index : null;
          if (!column.index) {
            let index = null;
            const chunker = bf(column.chunkerTarget);
            for await (const node of create$4({
                ...opts,
                chunker,
                list: entries
              })) {
              blocks.push(node.block);
              index = node;
            }
            return index;
          } else {
            const {
              blocks: _blocks,
              root
            } = await column.index.bulk(entries);
            _blocks.forEach(b => blocks.push(b));
            return root;
          }
        };
        const promises = table.columns.map((...args) => writeIndex(...args));
        const pending = new Set(promises);
        promises.forEach(p => p.then(() => pending.delete(p)));
        while (pending.size) {
          await Promise.race([...pending]);
          yield* blocks;
          blocks = [];
        }
        const indexes = await Promise.all(promises.map(p => p.then(index => {
          if (index === null)
            return null;
          if (index.address)
            return index.address;
          throw new Error('here');
        })));
        const node = await table.encodeNode();
        node.rows = await rows.address;
        node.columns = [];
        const columns = await Promise.all(table.columns.map(c => c.encodeNode()));
        while (columns.length) {
          const col = columns.shift();
          col.index = await indexes.shift();
          if (typeof col.index === 'undefined')
            throw new Error('here');
          const block = await encoder(col);
          yield block;
          node.columns.push(block.cid);
        }
        const newTable = await encoder(node);
        yield newTable;
        const dbNode = await database.encodeNode();
        dbNode.tables = { ...dbNode.tables };
        dbNode.tables[table.name] = newTable.cid;
        yield encoder(dbNode);
      }
      static create(columnSchemas) {
        const columns = columnSchemas.map(schema => Column.create(schema));
        const table = new Table({
          rows: null,
          columns
        });
        return table;
      }
      static from(cid, name, {get, cache}) {
        const chunker = bf(tableChunkerTarget);
        const create = async block => {
          let {columns, rows, type} = block.value;
          const promises = columns.map(cid => Column.from(cid, {
            get,
            cache
          }));
          if (rows !== null) {
            rows = load$1({
              cid: rows,
              cache,
              get,
              chunker,
              ...mf
            });
          }
          columns = await Promise.all(promises);
          rows = await rows;
          const CLS = registry[type];
          if (!CLS)
            throw new Error('Unknown table type');
          return new CLS({
            name,
            columns,
            rows,
            get,
            cache,
            block
          });
        };
        return getNode(cid, get, cache, create);
      }
    }
    registry.table = Table;
    const createTable = async function* (database, ast) {
      const [{table: name}] = ast.table;
      const table = Table.create(ast.create_definitions);
      const columns = await Promise.all(table.columns.map(column => column.encode()));
      yield* columns;
      const tableBlock = await table.encode();
      yield tableBlock;
      const node = await database.encodeNode();
      node.tables[name] = tableBlock.cid;
      yield encoder(node);
    };

    const {entries, fromEntries} = Object;
    class Database extends SQLBase {
      constructor({tables, get, cache, ...opts}) {
        super(opts);
        this.get = get;
        this.cache = cache;
        this.tables = tables;
      }
      async cids() {
        const cids = new Set();
        const recurse = async cid => {
          const key = cid.toString();
          if (cids.has(key))
            return;
          cids.add(key);
          const block = await this.get(cid);
          const promises = [];
          for (const [, link] of block.links()) {
            promises.push(recurse(link));
          }
          return Promise.all(promises);
        };
        await recurse(await this.address);
        return cids;
      }
      createTable(ast) {
        return createTable(this, ast);
      }
      async encodeNode() {
        const promises = entries(this.tables).map(async ([key, value]) => {
          return [
            key,
            await value.address
          ];
        });
        const tables = fromEntries(await Promise.all(promises));
        return { tables };
      }
      static create(opts) {
        return new Database({
          tables: {},
          ...opts
        });
      }
      static async from(cid, {get, cache}) {
        const create = async block => {
          let {tables} = block.value;
          const promises = entries(tables).map(async ([key, cid]) => {
            return [
              key,
              await Table.from(cid, key, {
                get,
                cache
              })
            ];
          });
          tables = fromEntries(await Promise.all(promises));
          return new Database({
            tables,
            get,
            cache,
            block
          });
        };
        return getNode(cid, get, cache, create);
      }
      sql(q, opts) {
        return sqlQuery(q, {
          ...opts,
          database: this
        });
      }
    }
    const parse = query => new _brrp_nodeSqlParser.Parser().astify(query);
    const notsupported = select => {
      const keys = [
        'options',
        'distinct',
        'groupby',
        'having',
        'limit',
        'for_update'
      ];
      keys.forEach(key => {
        if (select[key] !== null)
          throw new Error(`Not supported "${ key }"`);
      });
    };
    const runSelect = async function* (select, cids) {
      for await (const {entry, table, context} of select.where(cids)) {
        if (context) {
          yield { context };
          continue;
        }
        cids.add({ address: entry.value });
        const result = await select.columns(entry, table);
        const _traverse = async row => {
          const block = await select.db.get(row.link);
          return traverse(table.createRow({ block }).get(row.path));
        };
        const traverse = row => {
          if (!row || typeof row !== 'object' || Array.isArray(row))
            return row;
          return _traverse(row);
        };
        result.columns = await Promise.all(result.columns.map(traverse));
        yield {
          entry,
          table,
          ...result
        };
      }
    };
    const {keys} = Object;
    const {stringify} = JSON;
    const runWhere = async function* (select, cids) {
      const tables = [];
      const context = {};
      for (const obj of select.ast.from) {
        const {table, ast, expr} = obj;
        if (expr) {
          const results = await exec(expr.ast, { database: select.db });
          if (!(results instanceof Select)) {
            throw new Error('Not implemented, can only use WHERE with sub SELECT');
          }
          const all = await results.all(cids);
          if (!obj.as)
            throw new Error('Not implemented, must use AS syntax in sub-queries');
          context[obj.as] = all.result;
          continue;
        }
        if (ast) {
          console.log(ast);
          throw new Error('Not Implemented');
        }
        const _table = select.db.tables[table];
        if (!_table) {
          throw new Error(`No table named ${ table }. Only ${ stringify(keys(select.db.tables)) }`);
        }
        tables.push(_table);
      }
      cids.add(select.db);
      if (tables.length) {
        tables.forEach(t => cids.add(t));
        if (select.ast.where === null) {
          for (const table of tables) {
            if (!table.rows)
              continue;
            const {result: iter} = await table.rows.getAllEntries(cids);
            for (const entry of iter) {
              yield {
                entry,
                table
              };
            }
          }
        } else {
          for (const table of tables) {
            if (!table.rows)
              continue;
            const w = new Where(select.db, select.ast.where, table);
            const results = await w.all(cids);
            yield* results.map(entry => ({
              entry,
              table
            }));
          }
        }
      } else {
        yield { context };
      }
    };
    class Select {
      constructor(db, ast) {
        notsupported(ast);
        this.db = db;
        this.ast = ast;
      }
      async columns(entry, table) {
        const {value} = entry;
        const {get, cache} = this.db;
        const create = block => table.createRow({ block });
        const row = await getNode(value, get, cache, create);
        return {
          row,
          columns: row.columns(this.ast.columns)
        };
      }
      where(cids = new CIDCounter()) {
        return runWhere(this, cids);
      }
      run(cids) {
        return runSelect(this, cids);
      }
      async _all(cids) {
        let results = [];
        for await (const result of this.run(cids)) {
          results.push(result);
        }
        if (this.ast.orderby) {
          results = results.sort((a, b) => {
            for (const order of this.ast.orderby) {
              if (order.expr.type !== 'column_ref')
                throw new Error('Not Implemented');
              const {column} = order.expr;
              const [aa, bb] = [
                a.row.get(column),
                b.row.get(column)
              ];
              if (aa < bb)
                return order.type === 'ASC' ? -1 : 1;
              if (aa > bb)
                return order.type === 'ASC' ? 1 : -1;
            }
            return 0;
          });
        }
        return results;
      }
      async all(full, cids = new CIDCounter()) {
        const results = await this._all(cids);
        const ret = data => full ? {
          result: data,
          cids
        } : data;
        const _run = () => {
          let context;
          for (const result of results) {
            if (result.context)
              context = result.context;
          }
          const localKeys = new Set(context ? Object.keys(context) : []);
          let data = results.map(r => r.columns);
          if (!this.ast.columns || this.ast.columns === '*') {
            return data;
          } else {
            const expression = (ex, result) => {
              const {name, type, value, operator} = ex;
              if (type === 'number')
                return Number(value);
              if (type === 'binary_expr') {
                const left = expression(ex.left);
                const right = expression(ex.right);
                if (operator === '+') {
                  return left + right;
                }
              }
              if (type === 'column_ref') {
                if (ex.as)
                  throw new Error('Not implemented');
                const key = ex.column;
                if (localKeys.has(key)) {
                  return context[ex.column];
                } else {
                  return result.row.get(key);
                }
              }
              if (name === 'COUNT')
                return data.length;
              data = data.map(([i]) => i);
              if (name === 'MIN' || name === 'MAX') {
                data = data.sort();
                if (name === 'MIN')
                  return data[0];
                if (name === 'MAX')
                  return data[data.length - 1];
              }
              const reduced = data.reduce((a, b) => a + b, 0);
              if (name === 'SUM')
                return reduced;
              if (name === 'AVG')
                return reduced / data.length;
              throw new Error('Not Implemented');
            };
            if (this.ast.columns.length === 1 && this.ast.columns[0].expr.type === 'aggr_func') {
              return expression(this.ast.columns[0].expr);
            }
            if (!context && this.ast.columns.filter(({
                expr: {type}
              }) => type !== 'column_ref').length === 0) {
              return data;
            }
            if (this.ast.columns.length > 1) {
              throw new Error('Not implemented, cannot do complex column expressions over many rows');
            }
            const {
              expr: {type}
            } = this.ast.columns[0];
            if (this.ast.columns.length === 1 && (type === 'aggr_func' || type === 'binary_expr')) {
              return expression(this.ast.columns[0].expr);
            }
            const ret = [];
            for (const result of results) {
              const line = [];
              for (const col of this.ast.columns) {
                const {expr, as} = col;
                if (as)
                  throw new Error('Not Implemented');
                line.push(expression(expr, result));
              }
              ret.push(line);
            }
            return ret;
          }
        };
        return ret(_run());
      }
    }
    const exec = (ast, {database}) => {
      const {keyword, type} = ast;
      if (keyword === 'table') {
        if (type === 'create') {
          if (!database)
            throw new Error('No database to create table in');
          return database.createTable(ast);
        }
        throw new Error('Not implemented');
      }
      if (type === 'insert' || type === 'update') {
        if (!database)
          throw new Error('No database to create table in');
        const [{
            db,
            table: name
          }] = ast.table;
        if (db !== null)
          throw new Error('Not implemented');
        const table = database.tables[name];
        if (!table)
          throw new Error(`Missing table '${ name }'`);
        return table.insert(ast, { database });
      }
      if (type === 'select') {
        return new Select(database, ast);
      }
      throw new Error('Not implemented');
    };
    const sqlQuery = (q, opts) => exec(parse(q), opts);

    const nocache = {
      has: () => false,
      get: () => {
        throw new Error('Cannot ask for entries from nocache');
      },
      set: () => {
      }
    };

    const parse$1 = query => new _brrp_nodeSqlParser.Parser().astify(query);
    class DAGTable extends Table {
      get tableType() {
        return 'dag';
      }
      createRow(opts) {
        return new DAGRow({
          ...opts,
          table: this
        });
      }
      static create(columnSchemas) {
        const columns = columnSchemas.map(schema => Column.create(schema));
        const table = new DAGTable({
          rows: null,
          columns,
          type: 'dag'
        });
        return table;
      }
    }
    class DAGRow extends Row$1 {
      getIndex(i) {
        const columnName = this.allColumnNames()[i];
        return this.get(columnName);
      }
      get(columnName) {
        if (columnName.includes('/')) {
          const props = columnName.split('/').filter(x => x);
          let {value} = this;
          while (props.length) {
            if (value.asCID === value)
              return {
                link: value,
                path: props
              };
            if (typeof value !== 'object')
              return undefined;
            let key = props.shift();
            if (props.length === 0 && key === '*' && Array.isArray(value))
              return value;
            if (Array.isArray(value)) {
              key = parseInt(key);
            }
            value = value[key];
            if (typeof value === 'undefined')
              return value;
          }
          if (typeof value === 'object')
            return undefined;
          return value;
        }
        return this.value[columnName];
      }
      toObject() {
        return this.value;
      }
    }
    registry.dag = DAGTable;
    class DAGAPI {
      constructor(ipsql) {
        this.ipsql = ipsql;
      }
      async get(name, i, full) {
        const db = await this.ipsql.db;
        const table = db.tables[name];
        if (!table)
          throw new Error(`No table named ${ name }`);
        const {result, cids} = await table.get(i, this.ipsql.getBlock);
        if (full)
          return {
            result,
            cids
          };
        return result.block.value;
      }
      insert(name, inserts) {
        if (!Array.isArray(inserts))
          inserts = [inserts];
        return this.ipsql.write({
          dt: {
            insert: {
              name,
              inserts
            }
          }
        });
      }
      async *write({create, insert}) {
        let {
          getBlock: get,
          db
        } = this.ipsql;
        db = await db;
        const {chunker, cache} = db;
        if (create) {
          const {
            name,
            columns: columnString
          } = create;
          const rand = Math.random().toString();
          const sql = `CREATE TABLE STUB ( \`${ rand }\` VARCHAR(255)${ columnString ? ', ' + columnString : ' ' })`;
          const ast = parse$1(sql);
          const columns = [];
          ast.create_definitions.shift();
          for (const schema of ast.create_definitions) {
            const column = Column.create(schema);
            yield column.encode();
            columns.push(column);
          }
          const table = new DAGTable({
            rows: null,
            columns
          });
          const tableBlock = await table.encode();
          yield tableBlock;
          const obj = await db.encodeNode();
          obj.tables = { ...obj.tables };
          obj.tables[name] = tableBlock.cid;
          yield encoder(obj);
          return;
        }
        if (insert) {
          const {name, inserts} = insert;
          const db = await this.ipsql.db;
          const table = db.tables[name];
          if (!table)
            throw new Error(`No table named ${ name }`);
          const _inserts = [];
          for await (const insert of inserts) {
            if (insert.row && insert.row.isRow)
              return _inserts.push(insert);
            let block;
            if (insert.asBlock === insert) {
              block = insert;
            } else {
              block = await encoder(insert);
              yield block;
            }
            _inserts.push({
              block,
              row: new DAGRow({
                block,
                table
              })
            });
          }
          const opts = {
            chunker,
            get,
            cache,
            ...mf
          };
          yield* table._insert({
            opts,
            table,
            get,
            cache,
            inserts: _inserts,
            database: db
          });
          return;
        }
        throw new Error('Not implemented');
      }
    }

    const defaults$2 = { cache: nocache };
    const cache = new WeakMap();
    const layerStorage = ({get, put}) => {
      const getBlock = async cid => {
        let block = cache.get(cid);
        if (!block)
          block = await get(cid);
        cache.set(cid, block);
        return block;
      };
      const putBlock = async block => {
        const ret = await put(block);
        cache.set(block.cid, block);
        return ret;
      };
      return {
        getBlock,
        putBlock
      };
    };
    const limiter = (concurrency = 100) => {
      const promises = new Set();
      const limit = async p => {
        p.then(() => promises.delete(p));
        promises.add(p);
        while (promises.size > concurrency) {
          await Promise.race([...promises]);
        }
      };
      limit.flush = async () => {
        while (promises.size) {
          await Promise.all([...promises]);
        }
      };
      return limit;
    };
    class IPSQL {
      constructor({cid, get, put, cache}) {
        if (!cache)
          throw new Error('missing cache');
        if (this.get)
          get = this.get.bind(this);
        if (this.put)
          put = this.put.bind(this);
        if (!cid)
          throw new Error('Missing required argument');
        const dt = new DAGAPI(this);
        const props = {
          cid,
          dt,
          get,
          put,
          ...layerStorage({
            get,
            put
          }),
          cache
        };
        if (cid !== 'headless') {
          props.db = Database.from(cid, {
            ...props,
            get: props.getBlock,
            put: props.putBlock
          });
        }
        immutable(this, props);
      }
      async cids() {
        const db = await this.db;
        return db.cids();
      }
      get id() {
        return this.cid.toString();
      }
      async write(q) {
        const db = await this.db;
        let iter;
        if (typeof q === 'object') {
          if (q.dt)
            iter = this.dt.write(q.dt);
          else {
            throw new Error('Don\'t understand query');
          }
        } else {
          iter = db.sql(q);
        }
        let last;
        const limit = limiter();
        for await (const block of iter) {
          await limit(this.putBlock(block));
          last = block;
        }
        await limit.flush();
        return this.constructor.from(last.cid, { ...this });
      }
      async read(q, full) {
        const db = await this.db;
        const result = db.sql(q);
        const data = await result.all(full);
        if (full) {
          for (const table of Object.values(db.tables)) {
            data.cids.add(table);
            if (table.rows)
              data.cids.add(table.rows);
            for (const column of table.columns) {
              data.cids.add(column);
              if (column.index)
                data.cids.add(column.index);
            }
          }
          await data.cids.all();
        }
        return data;
      }
      async transaction(trans) {
        if (trans.asCID === trans) {
          trans = await this.getBlock(trans);
        }
        if (trans.asBlock !== trans) {
          if (typeof trans === 'string') {
            trans = {
              sql: trans,
              db: this.cid ? this.cid : null
            };
          }
          trans = await encoder(trans);
          await this.putBlock(trans);
        }
        const {
          sql,
          db: cid
        } = trans.value;
        let db;
        if (cid) {
          if (cid.equals(this.cid))
            db = await this.db;
          else
            db = await Database.from(cid, {
              ...this,
              get: this.getBlock,
              put: this.putBlock
            });
        } else if (cid === null) {
          db = await Database.create({
            ...this,
            get: this.getBlock,
            put: this.putBlock
          });
        } else {
          throw new Error('Invalid CID in transaction input');
        }
        const results = await db.sql(sql);
        if (results.all) {
          const data = await results.all(true);
          for (const table of Object.values(db.tables)) {
            data.cids.add(table);
            if (table.rows)
              data.cids.add(table.rows);
            for (const column of table.columns) {
              data.cids.add(column);
              if (column.index)
                data.cids.add(column.index);
            }
          }
          const reads = [...await data.cids.all()].map(str => CID.parse(str));
          const result = await encoder(data.result);
          await this.putBlock(result);
          const block = await encoder({
            result: result.cid,
            db: await db.address,
            reads,
            writes: [result.cid]
          });
          await this.putBlock(block);
          return block;
        } else {
          let last;
          const limit = limiter();
          const writes = new Map();
          for await (const block of results) {
            await limit(this.putBlock(block));
            writes.set(block.cid.toString(), block.cid);
            last = block;
          }
          await limit.flush();
          const db = last.cid;
          const writesBlock = await encoder([...writes.values()]);
          this.putBlock(writesBlock);
          const block = await encoder({
            input: trans.cid,
            db,
            writes: writesBlock.cid
          });
          await this.putBlock(block);
          return block;
        }
      }
      static create(q, {...opts} = {}) {
        opts.cache = opts.cache || defaults$2.cache;
        const db = new this({
          ...opts,
          cid: 'headless'
        });
        db.db = Database.create({ ...db });
        return db.write(q);
      }
      static async from(cid, {...opts} = {}) {
        if (typeof cid === 'string')
          cid = CID.parse(cid);
        opts.cache = opts.cache || defaults$2.cache;
        const db = new this({
          ...opts,
          cid
        });
        await db.db;
        return db;
      }
    }
    IPSQL.defaults = defaults$2;

    class IPSQLStore extends IPSQL {
    }

    class Missing extends Error {
      get statusCode() {
        return 404;
      }
    }
    class InMemory extends IPSQLStore {
      constructor(opts) {
        super(opts);
        immutable(this, { storage: opts.storage || new Map() });
      }
      async put(block) {
        this.storage.set(block.cid.toString(), block);
      }
      async has(cid) {
        return this.storage.has(cid.toString());
      }
      async get(cid) {
        const key = cid.toString();
        const value = this.storage.get(key);
        if (!value)
          throw new Missing(`Do not have ${ key } in store`);
        return value;
      }
      static headless() {
        return new InMemory({
          cid: 'headless',
          cache: IPSQL.defaults.cache
        });
      }
    }

    /* playground.svelte generated by Svelte v3.32.1 */

    const { console: console_1 } = globals;
    const file$n = "playground.svelte";

    function get_each_context(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[10] = list[i];
    	return child_ctx;
    }

    function get_each_context_1(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[13] = list[i];
    	return child_ctx;
    }

    function get_each_context_2(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[16] = list[i];
    	return child_ctx;
    }

    // (60:8) <Cell>
    function create_default_slot_17(ctx) {
    	let code;
    	let t0_value = /*trans*/ ctx[10].sql + "";
    	let t0;
    	let t1;

    	let t2_value = (/*trans*/ ctx[10].db
    	? /*trans*/ ctx[10].db.toString().slice(0, 12) + "..."
    	: null) + "";

    	let t2;

    	const block = {
    		c: function create() {
    			code = element("code");
    			t0 = text(t0_value);
    			t1 = text(" on ");
    			t2 = text(t2_value);
    			add_location(code, file$n, 59, 14, 1710);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, code, anchor);
    			append_dev(code, t0);
    			insert_dev(target, t1, anchor);
    			insert_dev(target, t2, anchor);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*transactions*/ 2 && t0_value !== (t0_value = /*trans*/ ctx[10].sql + "")) set_data_dev(t0, t0_value);

    			if (dirty & /*transactions*/ 2 && t2_value !== (t2_value = (/*trans*/ ctx[10].db
    			? /*trans*/ ctx[10].db.toString().slice(0, 12) + "..."
    			: null) + "")) set_data_dev(t2, t2_value);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(code);
    			if (detaching) detach_dev(t1);
    			if (detaching) detach_dev(t2);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_17.name,
    		type: "slot",
    		source: "(60:8) <Cell>",
    		ctx
    	});

    	return block;
    }

    // (61:8) <Cell>
    function create_default_slot_16(ctx) {
    	let t0;
    	let t1_value = /*trans*/ ctx[10].writes + "";
    	let t1;
    	let t2;

    	const block = {
    		c: function create() {
    			t0 = text("(BlockWrites: ");
    			t1 = text(t1_value);
    			t2 = text(")");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, t0, anchor);
    			insert_dev(target, t1, anchor);
    			insert_dev(target, t2, anchor);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*transactions*/ 2 && t1_value !== (t1_value = /*trans*/ ctx[10].writes + "")) set_data_dev(t1, t1_value);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(t0);
    			if (detaching) detach_dev(t1);
    			if (detaching) detach_dev(t2);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_16.name,
    		type: "slot",
    		source: "(61:8) <Cell>",
    		ctx
    	});

    	return block;
    }

    // (59:6) <Row>
    function create_default_slot_15(ctx) {
    	let cell0;
    	let t;
    	let cell1;
    	let current;

    	cell0 = new Cell({
    			props: {
    				$$slots: { default: [create_default_slot_17] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	cell1 = new Cell({
    			props: {
    				$$slots: { default: [create_default_slot_16] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(cell0.$$.fragment);
    			t = space();
    			create_component(cell1.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(cell0, target, anchor);
    			insert_dev(target, t, anchor);
    			mount_component(cell1, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const cell0_changes = {};

    			if (dirty & /*$$scope, transactions*/ 524290) {
    				cell0_changes.$$scope = { dirty, ctx };
    			}

    			cell0.$set(cell0_changes);
    			const cell1_changes = {};

    			if (dirty & /*$$scope, transactions*/ 524290) {
    				cell1_changes.$$scope = { dirty, ctx };
    			}

    			cell1.$set(cell1_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(cell0.$$.fragment, local);
    			transition_in(cell1.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(cell0.$$.fragment, local);
    			transition_out(cell1.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(cell0, detaching);
    			if (detaching) detach_dev(t);
    			destroy_component(cell1, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_15.name,
    		type: "slot",
    		source: "(59:6) <Row>",
    		ctx
    	});

    	return block;
    }

    // (63:6) {#if trans.result}
    function create_if_block_1$2(ctx) {
    	let row;
    	let current;

    	row = new Row({
    			props: {
    				$$slots: { default: [create_default_slot_10] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(row.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(row, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const row_changes = {};

    			if (dirty & /*$$scope, transactions*/ 524290) {
    				row_changes.$$scope = { dirty, ctx };
    			}

    			row.$set(row_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(row.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(row.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(row, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1$2.name,
    		type: "if",
    		source: "(63:6) {#if trans.result}",
    		ctx
    	});

    	return block;
    }

    // (70:14) <Cell>
    function create_default_slot_14(ctx) {
    	let t_value = /*column*/ ctx[16] + "";
    	let t;

    	const block = {
    		c: function create() {
    			t = text(t_value);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, t, anchor);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*transactions*/ 2 && t_value !== (t_value = /*column*/ ctx[16] + "")) set_data_dev(t, t_value);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(t);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_14.name,
    		type: "slot",
    		source: "(70:14) <Cell>",
    		ctx
    	});

    	return block;
    }

    // (69:14) {#each row as column}
    function create_each_block_2(ctx) {
    	let cell;
    	let current;

    	cell = new Cell({
    			props: {
    				$$slots: { default: [create_default_slot_14] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(cell.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(cell, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const cell_changes = {};

    			if (dirty & /*$$scope, transactions*/ 524290) {
    				cell_changes.$$scope = { dirty, ctx };
    			}

    			cell.$set(cell_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(cell.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(cell.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(cell, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_2.name,
    		type: "each",
    		source: "(69:14) {#each row as column}",
    		ctx
    	});

    	return block;
    }

    // (68:12) <Row>
    function create_default_slot_13(ctx) {
    	let t;
    	let current;
    	let each_value_2 = /*row*/ ctx[13];
    	validate_each_argument(each_value_2);
    	let each_blocks = [];

    	for (let i = 0; i < each_value_2.length; i += 1) {
    		each_blocks[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));
    	}

    	const out = i => transition_out(each_blocks[i], 1, 1, () => {
    		each_blocks[i] = null;
    	});

    	const block = {
    		c: function create() {
    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			t = space();
    		},
    		m: function mount(target, anchor) {
    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(target, anchor);
    			}

    			insert_dev(target, t, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*transactions*/ 2) {
    				each_value_2 = /*row*/ ctx[13];
    				validate_each_argument(each_value_2);
    				let i;

    				for (i = 0; i < each_value_2.length; i += 1) {
    					const child_ctx = get_each_context_2(ctx, each_value_2, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    						transition_in(each_blocks[i], 1);
    					} else {
    						each_blocks[i] = create_each_block_2(child_ctx);
    						each_blocks[i].c();
    						transition_in(each_blocks[i], 1);
    						each_blocks[i].m(t.parentNode, t);
    					}
    				}

    				group_outros();

    				for (i = each_value_2.length; i < each_blocks.length; i += 1) {
    					out(i);
    				}

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;

    			for (let i = 0; i < each_value_2.length; i += 1) {
    				transition_in(each_blocks[i]);
    			}

    			current = true;
    		},
    		o: function outro(local) {
    			each_blocks = each_blocks.filter(Boolean);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				transition_out(each_blocks[i]);
    			}

    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_each(each_blocks, detaching);
    			if (detaching) detach_dev(t);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_13.name,
    		type: "slot",
    		source: "(68:12) <Row>",
    		ctx
    	});

    	return block;
    }

    // (67:12) {#each trans.result as row}
    function create_each_block_1(ctx) {
    	let row;
    	let current;

    	row = new Row({
    			props: {
    				$$slots: { default: [create_default_slot_13] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(row.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(row, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const row_changes = {};

    			if (dirty & /*$$scope, transactions*/ 524290) {
    				row_changes.$$scope = { dirty, ctx };
    			}

    			row.$set(row_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(row.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(row.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(row, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_1.name,
    		type: "each",
    		source: "(67:12) {#each trans.result as row}",
    		ctx
    	});

    	return block;
    }

    // (66:10) <Body>
    function create_default_slot_12(ctx) {
    	let each_1_anchor;
    	let current;
    	let each_value_1 = /*trans*/ ctx[10].result;
    	validate_each_argument(each_value_1);
    	let each_blocks = [];

    	for (let i = 0; i < each_value_1.length; i += 1) {
    		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
    	}

    	const out = i => transition_out(each_blocks[i], 1, 1, () => {
    		each_blocks[i] = null;
    	});

    	const block = {
    		c: function create() {
    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			each_1_anchor = empty();
    		},
    		m: function mount(target, anchor) {
    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(target, anchor);
    			}

    			insert_dev(target, each_1_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*transactions*/ 2) {
    				each_value_1 = /*trans*/ ctx[10].result;
    				validate_each_argument(each_value_1);
    				let i;

    				for (i = 0; i < each_value_1.length; i += 1) {
    					const child_ctx = get_each_context_1(ctx, each_value_1, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    						transition_in(each_blocks[i], 1);
    					} else {
    						each_blocks[i] = create_each_block_1(child_ctx);
    						each_blocks[i].c();
    						transition_in(each_blocks[i], 1);
    						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
    					}
    				}

    				group_outros();

    				for (i = each_value_1.length; i < each_blocks.length; i += 1) {
    					out(i);
    				}

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;

    			for (let i = 0; i < each_value_1.length; i += 1) {
    				transition_in(each_blocks[i]);
    			}

    			current = true;
    		},
    		o: function outro(local) {
    			each_blocks = each_blocks.filter(Boolean);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				transition_out(each_blocks[i]);
    			}

    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_each(each_blocks, detaching);
    			if (detaching) detach_dev(each_1_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_12.name,
    		type: "slot",
    		source: "(66:10) <Body>",
    		ctx
    	});

    	return block;
    }

    // (65:8) <DataTable table$aria-label="results">
    function create_default_slot_11(ctx) {
    	let body;
    	let current;

    	body = new Body({
    			props: {
    				$$slots: { default: [create_default_slot_12] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(body.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(body, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const body_changes = {};

    			if (dirty & /*$$scope, transactions*/ 524290) {
    				body_changes.$$scope = { dirty, ctx };
    			}

    			body.$set(body_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(body.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(body.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(body, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_11.name,
    		type: "slot",
    		source: "(65:8) <DataTable table$aria-label=\\\"results\\\">",
    		ctx
    	});

    	return block;
    }

    // (64:6) <Row>
    function create_default_slot_10(ctx) {
    	let datatable;
    	let t;
    	let current;

    	datatable = new DataTable({
    			props: {
    				"table$aria-label": "results",
    				$$slots: { default: [create_default_slot_11] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(datatable.$$.fragment);
    			t = space();
    		},
    		m: function mount(target, anchor) {
    			mount_component(datatable, target, anchor);
    			insert_dev(target, t, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const datatable_changes = {};

    			if (dirty & /*$$scope, transactions*/ 524290) {
    				datatable_changes.$$scope = { dirty, ctx };
    			}

    			datatable.$set(datatable_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(datatable.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(datatable.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(datatable, detaching);
    			if (detaching) detach_dev(t);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_10.name,
    		type: "slot",
    		source: "(64:6) <Row>",
    		ctx
    	});

    	return block;
    }

    // (58:4) {#each transactions as trans}
    function create_each_block(ctx) {
    	let row;
    	let t;
    	let if_block_anchor;
    	let current;

    	row = new Row({
    			props: {
    				$$slots: { default: [create_default_slot_15] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	let if_block = /*trans*/ ctx[10].result && create_if_block_1$2(ctx);

    	const block = {
    		c: function create() {
    			create_component(row.$$.fragment);
    			t = space();
    			if (if_block) if_block.c();
    			if_block_anchor = empty();
    		},
    		m: function mount(target, anchor) {
    			mount_component(row, target, anchor);
    			insert_dev(target, t, anchor);
    			if (if_block) if_block.m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const row_changes = {};

    			if (dirty & /*$$scope, transactions*/ 524290) {
    				row_changes.$$scope = { dirty, ctx };
    			}

    			row.$set(row_changes);

    			if (/*trans*/ ctx[10].result) {
    				if (if_block) {
    					if_block.p(ctx, dirty);

    					if (dirty & /*transactions*/ 2) {
    						transition_in(if_block, 1);
    					}
    				} else {
    					if_block = create_if_block_1$2(ctx);
    					if_block.c();
    					transition_in(if_block, 1);
    					if_block.m(if_block_anchor.parentNode, if_block_anchor);
    				}
    			} else if (if_block) {
    				group_outros();

    				transition_out(if_block, 1, 1, () => {
    					if_block = null;
    				});

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(row.$$.fragment, local);
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(row.$$.fragment, local);
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(row, detaching);
    			if (detaching) detach_dev(t);
    			if (if_block) if_block.d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block.name,
    		type: "each",
    		source: "(58:4) {#each transactions as trans}",
    		ctx
    	});

    	return block;
    }

    // (57:4) <Body>
    function create_default_slot_9(ctx) {
    	let each_1_anchor;
    	let current;
    	let each_value = /*transactions*/ ctx[1];
    	validate_each_argument(each_value);
    	let each_blocks = [];

    	for (let i = 0; i < each_value.length; i += 1) {
    		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
    	}

    	const out = i => transition_out(each_blocks[i], 1, 1, () => {
    		each_blocks[i] = null;
    	});

    	const block = {
    		c: function create() {
    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			each_1_anchor = empty();
    		},
    		m: function mount(target, anchor) {
    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(target, anchor);
    			}

    			insert_dev(target, each_1_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*transactions*/ 2) {
    				each_value = /*transactions*/ ctx[1];
    				validate_each_argument(each_value);
    				let i;

    				for (i = 0; i < each_value.length; i += 1) {
    					const child_ctx = get_each_context(ctx, each_value, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    						transition_in(each_blocks[i], 1);
    					} else {
    						each_blocks[i] = create_each_block(child_ctx);
    						each_blocks[i].c();
    						transition_in(each_blocks[i], 1);
    						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
    					}
    				}

    				group_outros();

    				for (i = each_value.length; i < each_blocks.length; i += 1) {
    					out(i);
    				}

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;

    			for (let i = 0; i < each_value.length; i += 1) {
    				transition_in(each_blocks[i]);
    			}

    			current = true;
    		},
    		o: function outro(local) {
    			each_blocks = each_blocks.filter(Boolean);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				transition_out(each_blocks[i]);
    			}

    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_each(each_blocks, detaching);
    			if (detaching) detach_dev(each_1_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_9.name,
    		type: "slot",
    		source: "(57:4) <Body>",
    		ctx
    	});

    	return block;
    }

    // (56:2) <DataTable table$aria-label="transactions">
    function create_default_slot_8(ctx) {
    	let body;
    	let current;

    	body = new Body({
    			props: {
    				$$slots: { default: [create_default_slot_9] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(body.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(body, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const body_changes = {};

    			if (dirty & /*$$scope, transactions*/ 524290) {
    				body_changes.$$scope = { dirty, ctx };
    			}

    			body.$set(body_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(body.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(body.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(body, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_8.name,
    		type: "slot",
    		source: "(56:2) <DataTable table$aria-label=\\\"transactions\\\">",
    		ctx
    	});

    	return block;
    }

    // (81:2) {#if error}
    function create_if_block$6(ctx) {
    	let error_1;
    	let h3;
    	let t0_value = /*error*/ ctx[2].message + "";
    	let t0;
    	let t1;
    	let pre;
    	let t2_value = /*error*/ ctx[2].stack + "";
    	let t2;

    	const block = {
    		c: function create() {
    			error_1 = element("error");
    			h3 = element("h3");
    			t0 = text(t0_value);
    			t1 = space();
    			pre = element("pre");
    			t2 = text(t2_value);
    			add_location(h3, file$n, 82, 4, 2301);
    			add_location(pre, file$n, 83, 4, 2330);
    			attr_dev(error_1, "class", "svelte-k5wir6");
    			add_location(error_1, file$n, 81, 2, 2289);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, error_1, anchor);
    			append_dev(error_1, h3);
    			append_dev(h3, t0);
    			append_dev(error_1, t1);
    			append_dev(error_1, pre);
    			append_dev(pre, t2);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*error*/ 4 && t0_value !== (t0_value = /*error*/ ctx[2].message + "")) set_data_dev(t0, t0_value);
    			if (dirty & /*error*/ 4 && t2_value !== (t2_value = /*error*/ ctx[2].stack + "")) set_data_dev(t2, t2_value);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(error_1);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$6.name,
    		type: "if",
    		source: "(81:2) {#if error}",
    		ctx
    	});

    	return block;
    }

    // (89:4) <Title>
    function create_default_slot_7(ctx) {
    	let t;

    	const block = {
    		c: function create() {
    			t = text("Execute SQL statement");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, t, anchor);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(t);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_7.name,
    		type: "slot",
    		source: "(89:4) <Title>",
    		ctx
    	});

    	return block;
    }

    // (93:8) <Label>
    function create_default_slot_6(ctx) {
    	let t;

    	const block = {
    		c: function create() {
    			t = text("Run");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, t, anchor);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(t);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_6.name,
    		type: "slot",
    		source: "(93:8) <Label>",
    		ctx
    	});

    	return block;
    }

    // (92:6) <Button on:click={runSQL}>
    function create_default_slot_5(ctx) {
    	let label;
    	let current;

    	label = new Label({
    			props: {
    				$$slots: { default: [create_default_slot_6] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(label.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(label, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const label_changes = {};

    			if (dirty & /*$$scope*/ 524288) {
    				label_changes.$$scope = { dirty, ctx };
    			}

    			label.$set(label_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(label.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(label.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(label, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_5.name,
    		type: "slot",
    		source: "(92:6) <Button on:click={runSQL}>",
    		ctx
    	});

    	return block;
    }

    // (90:4) <Content>
    function create_default_slot_4(ctx) {
    	let textfield;
    	let updating_value;
    	let t;
    	let button;
    	let current;

    	function textfield_value_binding(value) {
    		/*textfield_value_binding*/ ctx[5].call(null, value);
    	}

    	let textfield_props = {
    		fullwidth: true,
    		textarea: true,
    		label: "Enter SQL Statement"
    	};

    	if (/*sqlStatement*/ ctx[0] !== void 0) {
    		textfield_props.value = /*sqlStatement*/ ctx[0];
    	}

    	textfield = new Textfield({ props: textfield_props, $$inline: true });
    	binding_callbacks.push(() => bind(textfield, "value", textfield_value_binding));

    	button = new Button_1({
    			props: {
    				$$slots: { default: [create_default_slot_5] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	button.$on("click", /*runSQL*/ ctx[3]);

    	const block = {
    		c: function create() {
    			create_component(textfield.$$.fragment);
    			t = space();
    			create_component(button.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(textfield, target, anchor);
    			insert_dev(target, t, anchor);
    			mount_component(button, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const textfield_changes = {};

    			if (!updating_value && dirty & /*sqlStatement*/ 1) {
    				updating_value = true;
    				textfield_changes.value = /*sqlStatement*/ ctx[0];
    				add_flush_callback(() => updating_value = false);
    			}

    			textfield.$set(textfield_changes);
    			const button_changes = {};

    			if (dirty & /*$$scope*/ 524288) {
    				button_changes.$$scope = { dirty, ctx };
    			}

    			button.$set(button_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(textfield.$$.fragment, local);
    			transition_in(button.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(textfield.$$.fragment, local);
    			transition_out(button.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(textfield, detaching);
    			if (detaching) detach_dev(t);
    			destroy_component(button, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_4.name,
    		type: "slot",
    		source: "(90:4) <Content>",
    		ctx
    	});

    	return block;
    }

    // (88:2) <Paper square class="paper-demo">
    function create_default_slot_3(ctx) {
    	let title;
    	let t;
    	let content;
    	let current;

    	title = new Title({
    			props: {
    				$$slots: { default: [create_default_slot_7] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	content = new Content({
    			props: {
    				$$slots: { default: [create_default_slot_4] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(title.$$.fragment);
    			t = space();
    			create_component(content.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(title, target, anchor);
    			insert_dev(target, t, anchor);
    			mount_component(content, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const title_changes = {};

    			if (dirty & /*$$scope*/ 524288) {
    				title_changes.$$scope = { dirty, ctx };
    			}

    			title.$set(title_changes);
    			const content_changes = {};

    			if (dirty & /*$$scope, sqlStatement*/ 524289) {
    				content_changes.$$scope = { dirty, ctx };
    			}

    			content.$set(content_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(title.$$.fragment, local);
    			transition_in(content.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(title.$$.fragment, local);
    			transition_out(content.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(title, detaching);
    			if (detaching) detach_dev(t);
    			destroy_component(content, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_3.name,
    		type: "slot",
    		source: "(88:2) <Paper square class=\\\"paper-demo\\\">",
    		ctx
    	});

    	return block;
    }

    // (99:5) <Title>
    function create_default_slot_2$1(ctx) {
    	let t;

    	const block = {
    		c: function create() {
    			t = text("Example:");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, t, anchor);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(t);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_2$1.name,
    		type: "slot",
    		source: "(99:5) <Title>",
    		ctx
    	});

    	return block;
    }

    // (100:5) <Content>
    function create_default_slot_1$1(ctx) {
    	let t0;
    	let code1;
    	let t1;
    	let code0;

    	const block = {
    		c: function create() {
    			t0 = text("Example: ");
    			code1 = element("code");
    			t1 = text("CREATE TABLE People (Age INT, Name: VARCHAR(256))");
    			code0 = element("code");
    			add_location(code0, file$n, 99, 78, 2805);
    			add_location(code1, file$n, 99, 23, 2750);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, t0, anchor);
    			insert_dev(target, code1, anchor);
    			append_dev(code1, t1);
    			append_dev(code1, code0);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(t0);
    			if (detaching) detach_dev(code1);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_1$1.name,
    		type: "slot",
    		source: "(100:5) <Content>",
    		ctx
    	});

    	return block;
    }

    // (98:2) <Paper square class="paper-demo">
    function create_default_slot$4(ctx) {
    	let title;
    	let t;
    	let content;
    	let current;

    	title = new Title({
    			props: {
    				$$slots: { default: [create_default_slot_2$1] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	content = new Content({
    			props: {
    				$$slots: { default: [create_default_slot_1$1] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(title.$$.fragment);
    			t = space();
    			create_component(content.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(title, target, anchor);
    			insert_dev(target, t, anchor);
    			mount_component(content, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const title_changes = {};

    			if (dirty & /*$$scope*/ 524288) {
    				title_changes.$$scope = { dirty, ctx };
    			}

    			title.$set(title_changes);
    			const content_changes = {};

    			if (dirty & /*$$scope*/ 524288) {
    				content_changes.$$scope = { dirty, ctx };
    			}

    			content.$set(content_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(title.$$.fragment, local);
    			transition_in(content.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(title.$$.fragment, local);
    			transition_out(content.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(title, detaching);
    			if (detaching) detach_dev(t);
    			destroy_component(content, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot$4.name,
    		type: "slot",
    		source: "(98:2) <Paper square class=\\\"paper-demo\\\">",
    		ctx
    	});

    	return block;
    }

    function create_fragment$p(ctx) {
    	let ipsql_docs;
    	let datatable;
    	let t0;
    	let t1;
    	let paper0;
    	let t2;
    	let paper1;
    	let current;

    	datatable = new DataTable({
    			props: {
    				"table$aria-label": "transactions",
    				$$slots: { default: [create_default_slot_8] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	let if_block = /*error*/ ctx[2] && create_if_block$6(ctx);

    	paper0 = new Paper({
    			props: {
    				square: true,
    				class: "paper-demo",
    				$$slots: { default: [create_default_slot_3] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	paper1 = new Paper({
    			props: {
    				square: true,
    				class: "paper-demo",
    				$$slots: { default: [create_default_slot$4] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			ipsql_docs = element("ipsql-docs");
    			create_component(datatable.$$.fragment);
    			t0 = space();
    			if (if_block) if_block.c();
    			t1 = space();
    			create_component(paper0.$$.fragment);
    			t2 = space();
    			create_component(paper1.$$.fragment);
    			add_location(ipsql_docs, file$n, 54, 0, 1580);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, ipsql_docs, anchor);
    			mount_component(datatable, ipsql_docs, null);
    			append_dev(ipsql_docs, t0);
    			if (if_block) if_block.m(ipsql_docs, null);
    			append_dev(ipsql_docs, t1);
    			mount_component(paper0, ipsql_docs, null);
    			append_dev(ipsql_docs, t2);
    			mount_component(paper1, ipsql_docs, null);
    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			const datatable_changes = {};

    			if (dirty & /*$$scope, transactions*/ 524290) {
    				datatable_changes.$$scope = { dirty, ctx };
    			}

    			datatable.$set(datatable_changes);

    			if (/*error*/ ctx[2]) {
    				if (if_block) {
    					if_block.p(ctx, dirty);
    				} else {
    					if_block = create_if_block$6(ctx);
    					if_block.c();
    					if_block.m(ipsql_docs, t1);
    				}
    			} else if (if_block) {
    				if_block.d(1);
    				if_block = null;
    			}

    			const paper0_changes = {};

    			if (dirty & /*$$scope, sqlStatement*/ 524289) {
    				paper0_changes.$$scope = { dirty, ctx };
    			}

    			paper0.$set(paper0_changes);
    			const paper1_changes = {};

    			if (dirty & /*$$scope*/ 524288) {
    				paper1_changes.$$scope = { dirty, ctx };
    			}

    			paper1.$set(paper1_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(datatable.$$.fragment, local);
    			transition_in(paper0.$$.fragment, local);
    			transition_in(paper1.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(datatable.$$.fragment, local);
    			transition_out(paper0.$$.fragment, local);
    			transition_out(paper1.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(ipsql_docs);
    			destroy_component(datatable);
    			if (if_block) if_block.d();
    			destroy_component(paper0);
    			destroy_component(paper1);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$p.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$p($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Playground", slots, []);
    	console.log(InMemory);
    	let ipsql = InMemory.headless();

    	let { statements = [
    		"CREATE TABLE playground (id INT, text: VARCHAR(256))",
    		"INSERT INTO playground VALUES (10, \"hello world\"), (20, \"world hello\")",
    		"SELECT * from playground"
    	] } = $$props;

    	let { sqlStatement = "" } = $$props;
    	let transactions = [];
    	let db = null;
    	let error;

    	const run = async () => {
    		if (!statements.length) return;
    		const sql = statements.shift();
    		const proof = await ipsql.transaction({ db, sql });
    		let { writes } = proof.value;
    		if (writes && writes.length) writes = writes.length;
    		if (writes.asCID === writes) writes = (await ipsql.getBlock(writes)).value.length;
    		let result = null;

    		if (proof.value.result) {
    			result = (await ipsql.getBlock(proof.value.result)).value;
    		}

    		transactions.push({
    			sql,
    			db,
    			writes: writes ? writes : 0,
    			result
    		});

    		$$invalidate(1, transactions);
    		db = proof.value.db;

    		run().catch(e => {
    			$$invalidate(2, error = e);
    		});
    	};

    	run().catch(e => {
    		$$invalidate(2, error = e);
    	});

    	let _runSQL = async () => {
    		const sql = sqlStatement;
    		$$invalidate(0, sqlStatement = "");
    		statements.push(sql);
    		return run();
    	};

    	let runSQL = () => {
    		$$invalidate(2, error = null);

    		_runSQL().catch(e => {
    			$$invalidate(2, error = e);
    		});
    	};

    	const writable_props = ["statements", "sqlStatement"];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Playground> was created with unknown prop '${key}'`);
    	});

    	function textfield_value_binding(value) {
    		sqlStatement = value;
    		$$invalidate(0, sqlStatement);
    	}

    	$$self.$$set = $$props => {
    		if ("statements" in $$props) $$invalidate(4, statements = $$props.statements);
    		if ("sqlStatement" in $$props) $$invalidate(0, sqlStatement = $$props.sqlStatement);
    	};

    	$$self.$capture_state = () => ({
    		Paper,
    		Title,
    		Subtitle,
    		Content,
    		Button: Button_1,
    		Label,
    		Textfield,
    		DataTable,
    		Head,
    		Body,
    		Row,
    		Cell,
    		List,
    		Item,
    		Text,
    		IPSQL: InMemory,
    		ipsql,
    		statements,
    		sqlStatement,
    		transactions,
    		db,
    		error,
    		run,
    		_runSQL,
    		runSQL
    	});

    	$$self.$inject_state = $$props => {
    		if ("ipsql" in $$props) ipsql = $$props.ipsql;
    		if ("statements" in $$props) $$invalidate(4, statements = $$props.statements);
    		if ("sqlStatement" in $$props) $$invalidate(0, sqlStatement = $$props.sqlStatement);
    		if ("transactions" in $$props) $$invalidate(1, transactions = $$props.transactions);
    		if ("db" in $$props) db = $$props.db;
    		if ("error" in $$props) $$invalidate(2, error = $$props.error);
    		if ("_runSQL" in $$props) _runSQL = $$props._runSQL;
    		if ("runSQL" in $$props) $$invalidate(3, runSQL = $$props.runSQL);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [sqlStatement, transactions, error, runSQL, statements, textfield_value_binding];
    }

    class Playground extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$p, create_fragment$p, safe_not_equal, { statements: 4, sqlStatement: 0 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Playground",
    			options,
    			id: create_fragment$p.name
    		});
    	}

    	get statements() {
    		throw new Error("<Playground>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set statements(value) {
    		throw new Error("<Playground>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get sqlStatement() {
    		throw new Error("<Playground>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set sqlStatement(value) {
    		throw new Error("<Playground>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    const app = new Playground({
      target: document.body
    });

    return app;

}());
//# sourceMappingURL=bundle.js.map
